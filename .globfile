FCoqlib
R177 Coq.Init.Logic "x = y" type_scope
R165 Coq.Init.Logic "x = y" type_scope
R242 Coq.Init.Logic "x = y" type_scope
R394 Coq.Init.Logic.refl_equal
R490 Coq.Init.Logic.refl_equal
R607 Coq.Init.Logic "x = y" type_scope
R600 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R609 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R709 Coq.Init.Logic "x = y" type_scope
R699 Coq.Init.Datatypes.Some
R712 Coq.Init.Datatypes.Some
R800 Coq.Init.Logic "x = y" type_scope
R884 Coq.Init.Logic "x = y" type_scope
R964 Coq.Init.Logic "x = y" type_scope
R1040 Coq.Init.Logic "x = y" type_scope
R1112 Coq.Init.Logic "x = y" type_scope
R1182 Coq.Init.Logic "x <> y" type_scope
R1210 Coq.Init.Logic "x <> y" type_scope
R1138 Coq.Init.Logic.f_equal
R1068 Coq.Init.Logic.f_equal2
R994 Coq.Init.Logic.f_equal3
R916 Coq.Init.Logic.f_equal4
R834 Coq.Init.Logic.f_equal5
R741 Coq.Init.Logic.f_equal
R751 Coq.Init.Datatypes.Some
R633 Coq.Init.Datatypes.injective_projections
R1294 Coq.Init.Logic.False
R1358 Coq.Init.Logic.False
R1443 Coq.Init.Specif "{ A } + { B }" type_scope
R1446 Coq.Init.Logic "x = y" type_scope
R1456 Coq.Init.Logic "x <> y" type_scope
R1432 Coq.NArith.BinPos.positive
R1432 Coq.NArith.BinPos.positive
R1488 Coq.NArith.BinPos.Pcompare
R1501 Coq.Init.Datatypes.Eq
R1488 Coq.NArith.BinPos.Pcompare
R1501 Coq.Init.Datatypes.Eq
R1527 Coq.NArith.BinPos.Pcompare_Eq_eq
R1527 Coq.NArith.BinPos.Pcompare_Eq_eq
R1595 Coq.NArith.BinPos.Pcompare_refl
R1595 Coq.NArith.BinPos.Pcompare_refl
R1678 Coq.NArith.BinPos.Pcompare_refl
R1678 Coq.NArith.BinPos.Pcompare_refl
R1804 Coq.Init.Logic "x = y" type_scope
R1783 Coqlib.peq
R1759 Coq.NArith.BinPos.positive
R1834 Coqlib.peq
R1834 Coqlib.peq
R1978 Coq.Init.Logic "x = y" type_scope
R1957 Coqlib.peq
R1945 Coq.Init.Logic "x <> y" type_scope
R1923 Coq.NArith.BinPos.positive
R1923 Coq.NArith.BinPos.positive
R2008 Coqlib.peq
R2008 Coqlib.peq
R2098 Coq.ZArith.BinInt.Zlt
R2112 Coq.ZArith.BinInt.Zpos
R2103 Coq.ZArith.BinInt.Zpos
R2079 Coq.NArith.BinPos.positive
R2079 Coq.NArith.BinPos.positive
R2175 Coq.Init.Logic "x <> y" type_scope
R2162 Coqlib.Plt
R2151 Coq.NArith.BinPos.positive
R2151 Coq.NArith.BinPos.positive
R2256 Coqlib.Plt_ne
R2340 Coqlib.Plt
R2329 Coqlib.Plt
R2318 Coqlib.Plt
R2307 Coq.NArith.BinPos.positive
R2307 Coq.NArith.BinPos.positive
R2307 Coq.NArith.BinPos.positive
R2450 Coq.Init.Logic "x = y" type_scope
R2435 Coq.ZArith.BinInt.Zpos
R2441 Coq.NArith.BinPos.Psucc
R2452 Coq.ZArith.BinInt.Zsucc
R2459 Coq.ZArith.BinInt.Zpos
R2424 Coq.NArith.BinPos.positive
R2493 Coq.NArith.BinPos.Pplus_one_succ_r
R2493 Coq.NArith.BinPos.Pplus_one_succ_r
R2573 Coqlib.Plt
R2580 Coq.NArith.BinPos.Psucc
R2562 Coq.NArith.BinPos.positive
R2626 Coqlib.Psucc_Zsucc
R2626 Coqlib.Psucc_Zsucc
R2664 Coqlib.Plt_succ
R2742 Coqlib.Plt
R2749 Coq.NArith.BinPos.Psucc
R2731 Coqlib.Plt
R2720 Coq.NArith.BinPos.positive
R2720 Coq.NArith.BinPos.positive
R2782 Coqlib.Plt_trans
R2782 Coqlib.Plt_trans
R2818 Coqlib.Plt_succ
R2818 Coqlib.Plt_succ
R2846 Coqlib.Plt_succ
R2938 Coq.Init.Logic "A \/ B" type_scope
R2930 Coqlib.Plt
R2943 Coq.Init.Logic "x = y" type_scope
R2911 Coqlib.Plt
R2918 Coq.NArith.BinPos.Psucc
R2900 Coq.NArith.BinPos.positive
R2900 Coq.NArith.BinPos.positive
R2989 Coqlib.Psucc_Zsucc
R2989 Coqlib.Psucc_Zsucc
R3043 Coq.Init.Logic "A \/ B" type_scope
R3031 Coq.ZArith.BinInt "x < y" Z_scope
R3024 Coq.ZArith.BinInt.Zpos
R3033 Coq.ZArith.BinInt.Zpos
R3053 Coq.Init.Logic "x = y" type_scope
R3046 Coq.ZArith.BinInt.Zpos
R3055 Coq.ZArith.BinInt.Zpos
R3043 Coq.Init.Logic "A \/ B" type_scope
R3031 Coq.ZArith.BinInt "x < y" Z_scope
R3024 Coq.ZArith.BinInt.Zpos
R3033 Coq.ZArith.BinInt.Zpos
R3053 Coq.Init.Logic "x = y" type_scope
R3046 Coq.ZArith.BinInt.Zpos
R3055 Coq.ZArith.BinInt.Zpos
R3166 Coq.Init.Specif "{ A } + { B }" type_scope
R3167 Coqlib.Plt
R3179 Coq.Init.Logic "~ x" type_scope
R3181 Coqlib.Plt
R3154 Coq.NArith.BinPos.positive
R3154 Coq.NArith.BinPos.positive
R3225 Coq.ZArith.ZArith_dec.Z_lt_dec
R3225 Coq.ZArith.ZArith_dec.Z_lt_dec
R3275 Coq.ZArith.BinInt.Zle
R3289 Coq.ZArith.BinInt.Zpos
R3280 Coq.ZArith.BinInt.Zpos
R3262 Coq.NArith.BinPos.positive
R3262 Coq.NArith.BinPos.positive
R3337 Coqlib.Ple
R3326 Coq.NArith.BinPos.positive
R3453 Coqlib.Ple
R3442 Coqlib.Ple
R3431 Coqlib.Ple
R3420 Coq.NArith.BinPos.positive
R3420 Coq.NArith.BinPos.positive
R3420 Coq.NArith.BinPos.positive
R3554 Coqlib.Ple
R3543 Coqlib.Plt
R3532 Coq.NArith.BinPos.positive
R3532 Coq.NArith.BinPos.positive
R3648 Coqlib.Ple
R3655 Coq.NArith.BinPos.Psucc
R3637 Coq.NArith.BinPos.positive
R3688 Coqlib.Plt_Ple
R3688 Coqlib.Plt_Ple
R3703 Coqlib.Plt_succ
R3703 Coqlib.Plt_succ
R3790 Coqlib.Plt
R3779 Coqlib.Ple
R3768 Coqlib.Plt
R3757 Coq.NArith.BinPos.positive
R3757 Coq.NArith.BinPos.positive
R3757 Coq.NArith.BinPos.positive
R3874 Coq.Init.Logic "~ x" type_scope
R3876 Coqlib.Plt
R3940 Coqlib.Ple_refl
R3949 Coqlib.Plt_Ple
R3957 Coqlib.Ple_succ
R3966 Coqlib.Plt_strict
R4067 Coq.Init.Wf.well_founded
R4080 Coqlib.Plt
R4128 Coq.NArith.BinPos.nat_of_P
R4100 Coq.Arith.Wf_nat.well_founded_lt_compat
R4128 Coq.NArith.BinPos.nat_of_P
R4100 Coq.Arith.Wf_nat.well_founded_lt_compat
R4154 Coq.NArith.Pnat.nat_of_P_lt_Lt_compare_morphism
R4154 Coq.NArith.Pnat.nat_of_P_lt_Lt_compare_morphism
R4247 Coq.NArith.BinPos.positive
R4308 Coqlib.Plt
R4313 Coq.NArith.BinPos.Ppred
R4299 Coq.Init.Logic "x <> y" type_scope
R4302 Coq.NArith.BinPos.xH
R4348 Coq.NArith.BinPos.Psucc_pred
R4348 Coq.NArith.BinPos.Psucc_pred
R4397 Coq.NArith.BinPos.Ppred
R4397 Coq.NArith.BinPos.Ppred
R4433 Coqlib.Plt_succ
R4433 Coqlib.Plt_succ
R4515 Coqlib.peq
R4521 Coq.NArith.BinPos.xH
R4533 Coq.Init.Specif.left
R4551 Coq.Init.Specif.right
R4592 Coqlib.Ppred_Plt
R4582 Coq.NArith.BinPos.Ppred
R4569 Coq.NArith.BinPos.Ppred
R4486 Coqlib.Plt
R4462 Coq.NArith.BinPos.positive
R4646 Coq.NArith.BinPos.positive
R4665 Coq.Init.Wf.Fix
R4669 Coqlib.Plt_wf
R4752 Coq.Init.Logic "x = y" type_scope
R4737 Coqlib.positive_rec
R4773 Coqlib.positive_rec
R4827 Coq.Init.Wf.Fix_eq
R4834 Coqlib.Plt_wf
R4827 Coq.Init.Wf.Fix_eq
R4834 Coqlib.Plt_wf
R4890 Coqlib.peq
R4890 Coqlib.peq
R4986 Coq.Init.Logic "x = y" type_scope
R4962 Coqlib.positive_rec
R5009 Coqlib.unroll_positive_rec
R5009 Coqlib.unroll_positive_rec
R5049 Coqlib.peq
R5049 Coqlib.peq
R5154 Coq.Init.Logic "x = y" type_scope
R5131 Coqlib.positive_rec
R5145 Coq.NArith.BinPos.Psucc
R5161 Coqlib.positive_rec
R5202 Coqlib.unroll_positive_rec
R5202 Coqlib.unroll_positive_rec
R5244 Coqlib.peq
R5249 Coq.NArith.BinPos.Psucc
R5244 Coqlib.peq
R5249 Coq.NArith.BinPos.Psucc
R5319 Coq.NArith.BinPos.Ppred_succ
R5319 Coq.NArith.BinPos.Ppred_succ
R5434 Coq.NArith.BinPos.Psucc
R5405 Coq.NArith.BinPos.xH
R5382 Coq.NArith.BinPos.positive
R5490 Coq.Init.Wf.well_founded_ind
R5507 Coqlib.Plt_wf
R5490 Coq.Init.Wf.well_founded_ind
R5507 Coqlib.Plt_wf
R5537 Coqlib.peq
R5544 Coq.NArith.BinPos.xH
R5537 Coqlib.peq
R5544 Coq.NArith.BinPos.xH
R5582 Coq.NArith.BinPos.Psucc_pred
R5582 Coq.NArith.BinPos.Psucc_pred
R5663 Coqlib.Ppred_Plt
R5663 Coqlib.Ppred_Plt
R5760 Coq.Init.Specif "{ A } + { B }" type_scope
R5763 Coq.Init.Logic "x = y" type_scope
R5773 Coq.Init.Logic "x <> y" type_scope
R5756 Coq.ZArith.BinInt.Z
R5756 Coq.ZArith.BinInt.Z
R5782 Coq.ZArith.ZArith_dec.Z_eq_dec
R5869 Coq.Init.Logic "x = y" type_scope
R5848 Coqlib.zeq
R5831 Coq.ZArith.BinInt.Z
R5899 Coqlib.zeq
R5899 Coqlib.zeq
R6036 Coq.Init.Logic "x = y" type_scope
R6015 Coqlib.zeq
R6003 Coq.Init.Logic "x <> y" type_scope
R5988 Coq.ZArith.BinInt.Z
R5988 Coq.ZArith.BinInt.Z
R6066 Coqlib.zeq
R6066 Coqlib.zeq
R6170 Coq.Init.Specif "{ A } + { B }" type_scope
R6173 Coq.ZArith.BinInt "x < y" Z_scope
R6183 Coq.ZArith.BinInt "x >= y" Z_scope
R6166 Coq.ZArith.BinInt.Z
R6166 Coq.ZArith.BinInt.Z
R6192 Coq.ZArith.ZArith_dec.Z_lt_ge_dec
R6296 Coq.Init.Logic "x = y" type_scope
R6275 Coqlib.zlt
R6264 Coq.ZArith.BinInt "x < y" Z_scope
R6246 Coq.ZArith.BinInt.Z
R6246 Coq.ZArith.BinInt.Z
R6326 Coqlib.zlt
R6326 Coqlib.zlt
R6472 Coq.Init.Logic "x = y" type_scope
R6451 Coqlib.zlt
R6439 Coq.ZArith.BinInt "x >= y" Z_scope
R6421 Coq.ZArith.BinInt.Z
R6421 Coq.ZArith.BinInt.Z
R6502 Coqlib.zlt
R6502 Coqlib.zlt
R6589 Coq.Init.Specif "{ A } + { B }" type_scope
R6592 Coq.ZArith.BinInt "x <= y" Z_scope
R6603 Coq.ZArith.BinInt "x > y" Z_scope
R6585 Coq.ZArith.BinInt.Z
R6585 Coq.ZArith.BinInt.Z
R6611 Coq.ZArith.ZArith_dec.Z_le_gt_dec
R6716 Coq.Init.Logic "x = y" type_scope
R6695 Coqlib.zle
R6683 Coq.ZArith.BinInt "x <= y" Z_scope
R6665 Coq.ZArith.BinInt.Z
R6665 Coq.ZArith.BinInt.Z
R6746 Coqlib.zle
R6746 Coqlib.zle
R6891 Coq.Init.Logic "x = y" type_scope
R6870 Coqlib.zle
R6859 Coq.ZArith.BinInt "x > y" Z_scope
R6841 Coq.ZArith.BinInt.Z
R6841 Coq.ZArith.BinInt.Z
R6921 Coqlib.zle
R6921 Coqlib.zle
R7036 Coq.Init.Logic "x = y" type_scope
R7020 Coq.ZArith.Zpower.two_power_nat
R7034 Coq.Init.Datatypes.O
R7125 Coq.ZArith.BinInt "x > y" Z_scope
R7109 Coq.ZArith.Zpower.two_power_nat
R7104 Coq.Init.Datatypes.nat
R7160 Coqlib.two_power_nat_O
R7160 Coqlib.two_power_nat_O
R7194 Coq.ZArith.Zpower.two_power_nat_S
R7194 Coq.ZArith.Zpower.two_power_nat_S
R7280 Coq.Init.Logic "x = y" type_scope
R7271 Coq.ZArith.Zmin.Zmin
R7285 Coqlib.zlt
R7331 Coqlib.zlt
R7331 Coqlib.zlt
R7423 Coq.ZArith.BinInt "x ?= y" Z_scope
R7423 Coq.ZArith.BinInt "x ?= y" Z_scope
R7446 Coq.ZArith.Zcompare.Zcompare_Eq_eq
R7446 Coq.ZArith.Zcompare.Zcompare_Eq_eq
R7546 Coq.Init.Logic "x = y" type_scope
R7537 Coq.ZArith.Zmin.Zmax
R7551 Coqlib.zlt
R7597 Coqlib.zlt
R7597 Coqlib.zlt
R7659 Coq.ZArith.Zcompare.Zcompare_antisym
R7659 Coq.ZArith.Zcompare.Zcompare_antisym
R7735 Coq.ZArith.Zcompare.Zcompare_antisym
R7735 Coq.ZArith.Zcompare.Zcompare_antisym
R7770 Coq.ZArith.BinInt "x ?= y" Z_scope
R7770 Coq.ZArith.BinInt "x ?= y" Z_scope
R7809 Coq.ZArith.Zcompare.Zcompare_Eq_eq
R7809 Coq.ZArith.Zcompare.Zcompare_Eq_eq
R7915 Coq.ZArith.BinInt "x <= y" Z_scope
R7918 Coq.ZArith.Zmin.Zmax
R7905 Coq.ZArith.BinInt "x <= y" Z_scope
R7957 Coq.ZArith.Zmin.Zmax1
R7957 Coq.ZArith.Zmin.Zmax1
R8029 Coq.ZArith.BinInt "x <= y" Z_scope
R8032 Coq.ZArith.Zmin.Zmax
R8019 Coq.ZArith.BinInt "x <= y" Z_scope
R8071 Coq.ZArith.Zmin.Zmax2
R8071 Coq.ZArith.Zmin.Zmax2
R8163 Coq.Init.Logic "x = y" type_scope
R8159 Coq.ZArith.Zdiv "x / y" Z_scope
R8145 Coq.ZArith.BinInt "x <= y < z" Z_scope
R8195 Coq.ZArith.BinInt "x > y" Z_scope
R8195 Coq.ZArith.BinInt "x > y" Z_scope
R8281 Coq.Init.Logic "x = y" type_scope
R8255 Coq.ZArith.BinInt "x <= y < z" Z_scope
R8264 Coq.ZArith.BinInt "x + y" Z_scope
R8260 Coq.ZArith.BinInt "x * y" Z_scope
R8264 Coq.ZArith.BinInt "x + y" Z_scope
R8260 Coq.ZArith.BinInt "x * y" Z_scope
R8237 Coq.ZArith.BinInt "x <= y < z" Z_scope
R8281 Coq.Init.Logic "x = y" type_scope
R8255 Coq.ZArith.BinInt "x <= y < z" Z_scope
R8264 Coq.ZArith.BinInt "x + y" Z_scope
R8260 Coq.ZArith.BinInt "x * y" Z_scope
R8264 Coq.ZArith.BinInt "x + y" Z_scope
R8260 Coq.ZArith.BinInt "x * y" Z_scope
R8237 Coq.ZArith.BinInt "x <= y < z" Z_scope
R8314 Coq.Init.Logic "A \/ B" type_scope
R8310 Coq.Init.Logic "x = y" type_scope
R8323 Coq.Init.Logic "A \/ B" type_scope
R8319 Coq.ZArith.BinInt "x > y" Z_scope
R8329 Coq.ZArith.BinInt "x > y" Z_scope
R8327 Coq.ZArith.BinInt "- x" Z_scope
R8314 Coq.Init.Logic "A \/ B" type_scope
R8310 Coq.Init.Logic "x = y" type_scope
R8323 Coq.Init.Logic "A \/ B" type_scope
R8319 Coq.ZArith.BinInt "x > y" Z_scope
R8329 Coq.ZArith.BinInt "x > y" Z_scope
R8327 Coq.ZArith.BinInt "- x" Z_scope
R8404 Coq.ZArith.BinInt "x >= y" Z_scope
R8400 Coq.ZArith.BinInt "x * y" Z_scope
R8409 Coq.ZArith.BinInt "x * y" Z_scope
R8404 Coq.ZArith.BinInt "x >= y" Z_scope
R8400 Coq.ZArith.BinInt "x * y" Z_scope
R8409 Coq.ZArith.BinInt "x * y" Z_scope
R8421 Coq.ZArith.Zorder.Zmult_ge_compat_l
R8421 Coq.ZArith.Zorder.Zmult_ge_compat_l
R8497 Coq.ZArith.BinInt "x >= y" Z_scope
R8490 Coq.ZArith.BinInt "x * y" Z_scope
R8493 Coq.ZArith.BinInt "- x" Z_scope
R8502 Coq.ZArith.BinInt "x * y" Z_scope
R8497 Coq.ZArith.BinInt "x >= y" Z_scope
R8490 Coq.ZArith.BinInt "x * y" Z_scope
R8493 Coq.ZArith.BinInt "- x" Z_scope
R8502 Coq.ZArith.BinInt "x * y" Z_scope
R8514 Coq.ZArith.Zorder.Zmult_ge_compat_l
R8514 Coq.ZArith.Zorder.Zmult_ge_compat_l
R8560 Coq.ZArith.BinInt.Zopp_mult_distr_r
R8560 Coq.ZArith.BinInt.Zopp_mult_distr_r
R8624 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R8624 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R8641 Coq.ZArith.Zdiv.Z_mod_lt
R8641 Coq.ZArith.Zdiv.Z_mod_lt
R8670 Coq.ZArith.Zdiv.Z_div_mod_eq
R8670 Coq.ZArith.Zdiv.Z_div_mod_eq
R8756 Coq.Init.Logic "x = y" type_scope
R8750 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R8736 Coq.ZArith.BinInt "x <= y < z" Z_scope
R8788 Coq.ZArith.BinInt "x > y" Z_scope
R8788 Coq.ZArith.BinInt "x > y" Z_scope
R8815 Coq.ZArith.Zdiv.Z_div_mod_eq
R8815 Coq.ZArith.Zdiv.Z_div_mod_eq
R8849 Coqlib.Zdiv_small
R8849 Coqlib.Zdiv_small
R8959 Coq.Init.Logic "x = y" type_scope
R8953 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R8939 Coq.ZArith.BinInt "x <= y < z" Z_scope
R8922 Coq.Init.Logic "x = y" type_scope
R8930 Coq.ZArith.BinInt "x + y" Z_scope
R8926 Coq.ZArith.BinInt "x * y" Z_scope
R8998 Coq.ZArith.BinInt.Zplus_comm
R8998 Coq.ZArith.BinInt.Zplus_comm
R9021 Coq.ZArith.Zdiv.Z_mod_plus
R9021 Coq.ZArith.Zdiv.Z_mod_plus
R9039 Coqlib.Zmod_small
R9039 Coqlib.Zmod_small
R9146 Coq.Init.Logic "x = y" type_scope
R9142 Coq.ZArith.Zdiv "x / y" Z_scope
R9128 Coq.ZArith.BinInt "x <= y < z" Z_scope
R9111 Coq.Init.Logic "x = y" type_scope
R9119 Coq.ZArith.BinInt "x + y" Z_scope
R9115 Coq.ZArith.BinInt "x * y" Z_scope
R9185 Coq.ZArith.BinInt.Zplus_comm
R9185 Coq.ZArith.BinInt.Zplus_comm
R9207 Coq.ZArith.Zdiv.Z_div_plus
R9207 Coq.ZArith.Zdiv.Z_div_plus
R9228 Coqlib.Zdiv_small
R9228 Coqlib.Zdiv_small
R9374 Coq.Init.Datatypes.option
R9405 Coq.Init.Datatypes.None
R9413 Coq.Init.Datatypes.None
R9422 Coq.Init.Datatypes.Some
R9432 Coq.Init.Datatypes.Some
R9362 Coq.Init.Datatypes.option
R9532 Coq.Init.Datatypes "x + y" type_scope
R9558 Coq.Init.Datatypes.inl
R9567 Coq.Init.Datatypes.inl
R9583 Coq.Init.Datatypes.inr
R9592 Coq.Init.Datatypes.inr
R9523 Coq.Init.Datatypes "x + y" type_scope
R9639 Coq.Lists.List.in_eq
R9645 Coq.Lists.List.in_cons
R9763 Coq.Lists.List.In
R9751 Coq.Init.Logic "x = y" type_scope
R9732 Coq.Lists.List.nth_error
R9753 Coq.Init.Datatypes.Some
R9714 Coq.Lists.List.list
R9705 Coq.Init.Datatypes.nat
R9880 Coq.Lists.List.in_eq
R9880 Coq.Lists.List.in_eq
R9938 Coq.Lists.List.in_cons
R9938 Coq.Lists.List.in_cons
R9971 Coqlib.nth_error_in
R10068 Coq.Init.Logic "x = y" type_scope
R10045 Coq.Lists.List.nth_error
R10057 Coq.Lists.List.nil
R10070 Coq.Init.Datatypes.None
R10039 Coq.Init.Datatypes.nat
R10146 Coqlib.nth_error_nil
R10252 Coq.Lists.List.incl
R10233 Coq.Lists.List.incl
R10241 Coq.Lists.List "x :: y" list_scope
R10222 Coq.Lists.List.list
R10222 Coq.Lists.List.list
R10307 Coq.Lists.List.in_cons
R10307 Coq.Lists.List.in_cons
R10340 Coqlib.incl_cons_inv
R10446 Coq.Lists.List.incl
R10425 Coq.Lists.List.incl
R10434 Coq.Lists.List "x ++ y" list_scope
R10414 Coq.Lists.List.list
R10414 Coq.Lists.List.list
R10414 Coq.Lists.List.list
R10502 Coq.Lists.List.in_or_app
R10502 Coq.Lists.List.in_or_app
R10619 Coq.Lists.List.incl
R10598 Coq.Lists.List.incl
R10607 Coq.Lists.List "x ++ y" list_scope
R10587 Coq.Lists.List.list
R10587 Coq.Lists.List.list
R10587 Coq.Lists.List.list
R10675 Coq.Lists.List.in_or_app
R10675 Coq.Lists.List.in_or_app
R10724 Coqlib.incl_app_inv_l
R10739 Coqlib.incl_app_inv_r
R10798 Coq.Lists.List.list
R10857 Coq.Lists.List.nil
R10961 Coq.Lists.List "x :: y" list_scope
R10910 Coq.Init.Logic "~ x" type_scope
R10912 Coq.Lists.List.In
R11073 Coq.Init.Logic "x <> y" type_scope
R11060 Coq.Lists.List.In
R11049 Coq.Lists.List.In
R11012 Coq.Lists.List.list
R11012 Coq.Lists.List.list
R11184 Coqlib.list_disjoint
R11154 Coqlib.list_disjoint
R11171 Coq.Lists.List "x :: y" list_scope
R11143 Coq.Lists.List.list
R11143 Coq.Lists.List.list
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R11379 Coqlib.list_disjoint
R11349 Coqlib.list_disjoint
R11369 Coq.Lists.List "x :: y" list_scope
R11338 Coq.Lists.List.list
R11338 Coq.Lists.List.list
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R11573 Coq.Init.Logic "~ x" type_scope
R11575 Coq.Lists.List.In
R11562 Coq.Lists.List.In
R11539 Coqlib.list_disjoint
R11521 Coq.Lists.List.list
R11521 Coq.Lists.List.list
R11754 Coqlib.list_disjoint
R11731 Coqlib.list_disjoint
R11720 Coq.Lists.List.list
R11720 Coq.Lists.List.list
R11823 Coq.Init.Logic.sym_not_equal
R11823 Coq.Init.Logic.sym_not_equal
R11983 Coq.Init.Logic "x = y" type_scope
R11969 Coq.Lists.List.map
R11985 Coq.Lists.List.map
R11956 Coq.Init.Logic "x = y" type_scope
R11942 Coq.Lists.List.In
R11920 Coq.Lists.List.list
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R12245 Coq.Init.Logic "x = y" type_scope
R12219 Coq.Lists.List.map
R12231 Coq.Lists.List.map
R12247 Coq.Lists.List.map
R12208 Coq.Lists.List.list
R12454 Coq.Init.Logic "x = y" type_scope
R12427 Coq.Lists.List.nth_error
R12438 Coq.Lists.List.map
R12456 Coqlib.option_map
R12470 Coq.Lists.List.nth_error
R12419 Coq.Init.Datatypes.nat
R12407 Coq.Lists.List.list
R12540 Coqlib.nth_error_nil
R12540 Coqlib.nth_error_nil
R12540 Coqlib.nth_error_nil
R12540 Coqlib.nth_error_nil
R12711 Coq.Init.Logic "x = y" type_scope
R12684 Coq.Lists.List.length
R12697 Coq.Lists.List.map
R12713 Coq.Lists.List.length
R12673 Coq.Lists.List.list
R12875 Coq.Init.Logic "'exists' x : t , p" type_scope
R12895 Coq.Init.Logic "A /\ B" type_scope
R12889 Coq.Init.Logic "x = y" type_scope
R12898 Coq.Lists.List.In
R12852 Coq.Lists.List.In
R12858 Coq.Lists.List.map
R12834 Coq.Lists.List.list
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R13228 Coqlib.list_norepet
R13242 Coq.Lists.List.map
R13215 Coq.Init.Logic "x <> y" type_scope
R13203 Coq.Init.Logic "x <> y" type_scope
R13191 Coq.Lists.List.In
R13181 Coq.Lists.List.In
R13148 Coqlib.list_norepet
R13137 Coq.Lists.List.list
R13350 Coqlib.list_in_map_inv
R13350 Coqlib.list_in_map_inv
R13427 Coq.Init.Logic "x <> y" type_scope
R13427 Coq.Init.Logic "x <> y" type_scope
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R13665 Coq.Init.Logic "x = y" type_scope
R13643 Coq.Lists.List.map
R13658 Coq.Lists.List "x ++ y" list_scope
R13681 Coq.Lists.List "x ++ y" list_scope
R13667 Coq.Lists.List.map
R13684 Coq.Lists.List.map
R13632 Coq.Lists.List.list
R13632 Coq.Lists.List.list
R13866 Coqlib.list_norepet
R13882 Coq.Lists.List "x ++ y" list_scope
R13841 Coqlib.list_norepet
R13857 Coq.Lists.List "x ++ y" list_scope
R13830 Coq.Lists.List.list
R13830 Coq.Lists.List.list
R14031 Coqlib.list_norepet
R14047 Coq.Lists.List "x ++ y" list_scope
R14052 Coq.Lists.List "x :: y" list_scope
R14006 Coq.Init.Logic "~ x" type_scope
R14008 Coq.Lists.List.In
R13993 Coq.Init.Logic "~ x" type_scope
R13995 Coq.Lists.List.In
R13968 Coqlib.list_norepet
R13984 Coq.Lists.List "x ++ y" list_scope
R13947 Coq.Lists.List.list
R13935 Coq.Lists.List.list
R14031 Coqlib.list_norepet
R14047 Coq.Lists.List "x ++ y" list_scope
R14052 Coq.Lists.List "x :: y" list_scope
R14006 Coq.Init.Logic "~ x" type_scope
R14008 Coq.Lists.List.In
R13993 Coq.Init.Logic "~ x" type_scope
R13995 Coq.Lists.List.In
R13968 Coqlib.list_norepet
R13984 Coq.Lists.List "x ++ y" list_scope
R13947 Coq.Lists.List.list
R13935 Coq.Lists.List.list
R14167 Coq.Lists.List.in_app_or
R14167 Coq.Lists.List.in_app_or
R14214 Coq.Lists.List.in_or_app
R14214 Coq.Lists.List.in_or_app
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R14302 Coq.Lists.List.in_or_app
R14302 Coq.Lists.List.in_or_app
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R14373 Coq.Lists.List.app_nil_end
R14373 Coq.Lists.List.app_nil_end
R14453 Coq.Lists.List.in_or_app
R14453 Coq.Lists.List.in_or_app
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R14500 Coq.Lists.List.in_or_app
R14500 Coq.Lists.List.in_or_app
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R14621 Coqlib.list_norepet
R14594 Coqlib.list_norepet
R14611 Coq.Lists.List "x ++ y" list_scope
R14583 Coq.Lists.List.list
R14583 Coq.Lists.List.list
R14820 Coqlib.list_norepet
R14793 Coqlib.list_norepet
R14810 Coq.Lists.List "x ++ y" list_scope
R14782 Coq.Lists.List.list
R14782 Coq.Lists.List.list
R14860 Coqlib.list_norepet_append_right
R14860 Coqlib.list_norepet_append_right
R14904 Coqlib.list_norepet_append_commut
R14904 Coqlib.list_norepet_append_commut
R15059 Coq.Lists.List.list
R15049 Coq.Lists.List.list
R15122 Coq.Lists.List.nil
R15118 Coq.Lists.List.nil
R15254 Coq.Lists.List "x :: y" list_scope
R15243 Coq.Lists.List "x :: y" list_scope
R15497 Coqlib.list_forall2
R15458 Coq.Lists.List.In
R15446 Coq.Lists.List.In
R15373 Coqlib.list_forall2
R15362 Coq.Lists.List.list
R15349 Coq.Lists.List.list
FMaps
R199 Coq.Init.Specif "{ A } + { B }" type_scope
R202 Coq.Init.Logic "x = y" type_scope
R212 Coq.Init.Logic "x <> y" type_scope
R193 Maps.elt
R193 Maps.elt
R349 Coq.Init.Specif "{ A } + { B }" type_scope
R352 Coq.Init.Logic "x = y" type_scope
R362 Coq.Init.Logic "x <> y" type_scope
R343 Maps.t
R343 Maps.t
R295 Coq.Init.Specif "{ A } + { B }" type_scope
R297 Coq.Init.Logic "x = y" type_scope
R305 Coq.Init.Logic "x <> y" type_scope
R404 Maps.t
R456 Coq.Init.Datatypes.option
R449 Maps.t
R442 Maps.elt
R518 Maps.t
R511 Maps.t
R499 Maps.elt
R573 Maps.t
R566 Maps.t
R559 Maps.elt
R645 Coq.Init.Logic "x = y" type_scope
R629 Maps.get
R636 Maps.empty
R647 Coq.Init.Datatypes.None
R623 Maps.elt
R735 Coq.Init.Logic "x = y" type_scope
R717 Maps.get
R724 Maps.set
R737 Coq.Init.Datatypes.Some
R711 Maps.t
R695 Maps.elt
R843 Coq.Init.Logic "x = y" type_scope
R825 Maps.get
R832 Maps.set
R845 Maps.get
R817 Coq.Init.Logic "x <> y" type_scope
R805 Maps.t
R789 Maps.elt
R789 Maps.elt
R945 Coq.Init.Logic "x = y" type_scope
R927 Maps.get
R934 Maps.set
R950 Maps.elt_eq
R978 Maps.get
R966 Coq.Init.Datatypes.Some
R917 Maps.t
R901 Maps.elt
R901 Maps.elt
R1089 Coq.Init.Logic "x = y" type_scope
R1079 Maps.set
R1067 Coq.Init.Logic "x = y" type_scope
R1059 Maps.get
R1069 Coq.Init.Datatypes.Some
R1042 Maps.t
R1033 Maps.elt
R1362 Coq.Init.Logic "x = y" type_scope
R1343 Maps.get
R1350 Maps.remove
R1364 Coq.Init.Datatypes.None
R1337 Maps.t
R1328 Maps.elt
R1462 Coq.Init.Logic "x = y" type_scope
R1443 Maps.get
R1450 Maps.remove
R1464 Maps.get
R1435 Coq.Init.Logic "x <> y" type_scope
R1423 Maps.t
R1414 Maps.elt
R1414 Maps.elt
R1538 Maps.t
R1531 Maps.t
R1513 Maps.elt
R1642 Coq.Init.Logic "x = y" type_scope
R1626 Maps.get
R1633 Maps.map
R1644 Coqlib.option_map
R1662 Maps.get
R1616 Maps.t
R1607 Maps.elt
R1588 Maps.elt
R1765 Maps.t
R1758 Maps.t
R1751 Maps.t
R1738 Coq.Init.Datatypes.option
R1726 Coq.Init.Datatypes.option
R1714 Coq.Init.Datatypes.option
R1939 Coq.Init.Logic "x = y" type_scope
R1915 Maps.get
R1922 Maps.combine
R1955 Maps.get
R1944 Maps.get
R1901 Coq.Init.Logic "x = y" type_scope
R1896 Coq.Init.Datatypes.None
R1891 Coq.Init.Datatypes.None
R1903 Coq.Init.Datatypes.None
R1879 Maps.elt
R1870 Maps.t
R1870 Maps.t
R1841 Coq.Init.Datatypes.option
R1829 Coq.Init.Datatypes.option
R1817 Coq.Init.Datatypes.option
R2148 Coq.Init.Logic "x = y" type_scope
R2132 Maps.combine
R2150 Maps.combine
R2122 Maps.t
R2122 Maps.t
R2091 Coq.Init.Logic "x = y" type_scope
R2074 Coq.Init.Datatypes.option
R2074 Coq.Init.Datatypes.option
R2045 Coq.Init.Datatypes.option
R2033 Coq.Init.Datatypes.option
R2021 Coq.Init.Datatypes.option
R2045 Coq.Init.Datatypes.option
R2033 Coq.Init.Datatypes.option
R2021 Coq.Init.Datatypes.option
R2216 Coq.Lists.List.list
R2226 Coq.Init.Datatypes "x * y" type_scope
R2222 Maps.elt
R2209 Maps.t
R2333 Coq.Lists.List.In
R2344 Maps.elements
R2336 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2321 Coq.Init.Logic "x = y" type_scope
R2313 Maps.get
R2323 Coq.Init.Datatypes.Some
R2296 Maps.elt
R2287 Maps.t
R2473 Coq.Init.Logic "x = y" type_scope
R2465 Maps.get
R2475 Coq.Init.Datatypes.Some
R2439 Coq.Lists.List.In
R2450 Maps.elements
R2442 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2422 Maps.elt
R2413 Maps.t
R2547 Maps.t
R2529 Maps.elt
R2664 Coq.Init.Logic "x = y" type_scope
R2653 Maps.fold
R2670 Coq.Lists.List.fold_left
R2719 Maps.elements
R2710 Coq.Init.Datatypes.snd
R2702 Coq.Init.Datatypes.fst
R2643 Maps.t
R2617 Maps.elt
R2821 Coq.Init.Specif "{ A } + { B }" type_scope
R2824 Coq.Init.Logic "x = y" type_scope
R2834 Coq.Init.Logic "x <> y" type_scope
R2815 Maps.elt
R2815 Maps.elt
R2906 Maps.t
R2951 Maps.t
R2944 Maps.elt
R3013 Maps.t
R3006 Maps.t
R2994 Maps.elt
R3087 Coq.Init.Logic "x = y" type_scope
R3072 Maps.get
R3079 Maps.init
R3059 Maps.elt
R3174 Coq.Init.Logic "x = y" type_scope
R3156 Maps.get
R3163 Maps.set
R3150 Maps.t
R3134 Maps.elt
R3277 Coq.Init.Logic "x = y" type_scope
R3259 Maps.get
R3266 Maps.set
R3279 Maps.get
R3251 Coq.Init.Logic "x <> y" type_scope
R3239 Maps.t
R3223 Maps.elt
R3223 Maps.elt
R3379 Coq.Init.Logic "x = y" type_scope
R3361 Maps.get
R3368 Maps.set
R3384 Maps.elt_eq
R3407 Maps.get
R3351 Maps.t
R3335 Maps.elt
R3335 Maps.elt
R3505 Coq.Init.Logic "x = y" type_scope
R3479 Maps.get
R3486 Maps.set
R3493 Maps.get
R3507 Maps.get
R3473 Maps.t
R3464 Maps.elt
R3464 Maps.elt
R3570 Maps.t
R3563 Maps.t
R3667 Coq.Init.Logic "x = y" type_scope
R3651 Maps.get
R3658 Maps.map
R3671 Maps.get
R3641 Maps.t
R3632 Maps.elt
R3733 Coq.NArith.BinPos.positive
R3766 Coqlib.peq
R3851 Coq.Init.Datatypes.option
R3965 Maps.tree
R4070 Coq.Init.Specif "{ A } + { B }" type_scope
R4073 Coq.Init.Logic "x = y" type_scope
R4083 Coq.Init.Logic "x <> y" type_scope
R4064 Maps.t
R4064 Maps.t
R4027 Coq.Init.Specif "{ A } + { B }" type_scope
R4029 Coq.Init.Logic "x = y" type_scope
R4037 Coq.Init.Logic "x <> y" type_scope
R4224 Maps.t
R4217 Maps.Leaf
R4294 Coq.Init.Datatypes.option
R4276 Maps.t
R4261 Coq.NArith.BinPos.positive
R4329 Maps.Leaf
R4337 Coq.Init.Datatypes.None
R4348 Maps.Node
R4393 Coq.NArith.BinPos.xH
R4411 Coq.NArith.BinPos.xO
R4439 Coq.NArith.BinPos.xI
R4276 Maps.t
R4261 Coq.NArith.BinPos.positive
R4550 Maps.t
R4532 Maps.t
R4509 Coq.NArith.BinPos.positive
R4580 Maps.Leaf
R4619 Coq.NArith.BinPos.xH
R4625 Maps.Node
R4644 Maps.Leaf
R4636 Coq.Init.Datatypes.Some
R4630 Maps.Leaf
R4659 Coq.NArith.BinPos.xO
R4668 Maps.Node
R4694 Maps.Leaf
R4689 Coq.Init.Datatypes.None
R4683 Maps.Leaf
R4709 Coq.NArith.BinPos.xI
R4718 Maps.Node
R4743 Maps.Leaf
R4728 Coq.Init.Datatypes.None
R4723 Maps.Leaf
R4767 Maps.Node
R4812 Coq.NArith.BinPos.xH
R4818 Maps.Node
R4826 Coq.Init.Datatypes.Some
R4846 Coq.NArith.BinPos.xO
R4855 Maps.Node
R4887 Coq.NArith.BinPos.xI
R4896 Maps.Node
R4532 Maps.t
R4509 Coq.NArith.BinPos.positive
R5006 Maps.t
R4988 Maps.t
R4973 Coq.NArith.BinPos.positive
R5036 Coq.NArith.BinPos.xH
R5073 Maps.Leaf
R5081 Maps.Leaf
R5096 Maps.Node
R5101 Maps.Leaf
R5108 Maps.Leaf
R5116 Maps.Leaf
R5131 Maps.Node
R5145 Maps.Node
R5152 Coq.Init.Datatypes.None
R5177 Coq.NArith.BinPos.xO
R5217 Maps.Leaf
R5225 Maps.Leaf
R5240 Maps.Node
R5247 Coq.Init.Datatypes.None
R5252 Maps.Leaf
R5309 Maps.Leaf
R5317 Maps.Leaf
R5342 Maps.Node
R5355 Maps.Leaf
R5350 Coq.Init.Datatypes.None
R5386 Maps.Node
R5400 Maps.Node
R5441 Coq.NArith.BinPos.xI
R5481 Maps.Leaf
R5489 Maps.Leaf
R5504 Maps.Node
R5509 Maps.Leaf
R5514 Coq.Init.Datatypes.None
R5573 Maps.Leaf
R5581 Maps.Leaf
R5606 Maps.Node
R5616 Coq.Init.Datatypes.None
R5611 Maps.Leaf
R5650 Maps.Node
R5664 Maps.Node
R4988 Maps.t
R4973 Coq.NArith.BinPos.positive
R5778 Coq.Init.Logic "x = y" type_scope
R5762 Maps.get
R5769 Maps.empty
R5780 Coq.Init.Datatypes.None
R5751 Coq.NArith.BinPos.positive
R5917 Coq.Init.Logic "x = y" type_scope
R5899 Maps.get
R5906 Maps.set
R5919 Coq.Init.Datatypes.Some
R5893 Maps.t
R5872 Coq.NArith.BinPos.positive
R6056 Coq.Init.Logic "x = y" type_scope
R6037 Maps.get
R6051 Maps.t
R6044 Maps.Leaf
R6058 Coq.Init.Datatypes.None
R6026 Coq.NArith.BinPos.positive
R6081 Maps.gempty
R6081 Maps.gempty
R6195 Coq.Init.Logic "x = y" type_scope
R6177 Maps.get
R6184 Maps.set
R6197 Maps.get
R6169 Coq.Init.Logic "x <> y" type_scope
R6157 Maps.t
R6136 Coq.NArith.BinPos.positive
R6136 Coq.NArith.BinPos.positive
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6294 Maps.gleaf
R6440 Coq.Init.Logic "x = y" type_scope
R6422 Maps.get
R6429 Maps.set
R6445 Coqlib.peq
R6470 Maps.get
R6458 Coq.Init.Datatypes.Some
R6412 Maps.t
R6391 Coq.NArith.BinPos.positive
R6391 Coq.NArith.BinPos.positive
R6514 Coqlib.peq
R6543 Maps.gss
R6555 Maps.gso
R6514 Coqlib.peq
R6543 Maps.gss
R6555 Maps.gso
R6680 Coq.Init.Logic "x = y" type_scope
R6670 Maps.set
R6658 Coq.Init.Logic "x = y" type_scope
R6650 Maps.get
R6660 Coq.Init.Datatypes.Some
R6633 Maps.t
R6619 Coq.NArith.BinPos.positive
R6925 Coq.Init.Logic "x = y" type_scope
R6903 Maps.remove
R6920 Maps.t
R6913 Maps.Leaf
R6927 Maps.Leaf
R6892 Coq.NArith.BinPos.positive
R7053 Coq.Init.Logic "x = y" type_scope
R7034 Maps.get
R7041 Maps.remove
R7055 Coq.Init.Datatypes.None
R7028 Maps.t
R7014 Coq.NArith.BinPos.positive
R7205 Maps.rleaf
R7205 Maps.rleaf
R7267 Coq.Init.Logic "x = y" type_scope
R7234 Maps.get
R7241 Maps.remove
R7251 Maps.Node
R7269 Coq.Init.Datatypes.None
R7267 Coq.Init.Logic "x = y" type_scope
R7234 Maps.get
R7241 Maps.remove
R7251 Maps.Node
R7269 Coq.Init.Datatypes.None
R7294 Maps.remove
R7304 Maps.Node
R7294 Maps.remove
R7304 Maps.Node
R7463 Maps.rleaf
R7463 Maps.rleaf
R7525 Coq.Init.Logic "x = y" type_scope
R7492 Maps.get
R7499 Maps.remove
R7509 Maps.Node
R7527 Coq.Init.Datatypes.None
R7525 Coq.Init.Logic "x = y" type_scope
R7492 Maps.get
R7499 Maps.remove
R7509 Maps.Node
R7527 Coq.Init.Datatypes.None
R7552 Maps.remove
R7562 Maps.Node
R7552 Maps.remove
R7562 Maps.Node
R7779 Coq.Init.Logic "x = y" type_scope
R7760 Maps.get
R7767 Maps.remove
R7781 Maps.get
R7752 Coq.Init.Logic "x <> y" type_scope
R7740 Maps.t
R7726 Coq.NArith.BinPos.positive
R7726 Coq.NArith.BinPos.positive
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7945 Maps.rleaf
R8084 Maps.rleaf
R8123 Maps.gleaf
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7869 Maps.rleaf
R7878 Coq.NArith.BinPos.xI
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7907 Maps.rleaf
R7916 Coq.NArith.BinPos.xO
R7945 Maps.rleaf
R7945 Maps.rleaf
R7945 Maps.rleaf
R7945 Maps.rleaf
R7945 Maps.rleaf
R7945 Maps.rleaf
R7945 Maps.rleaf
R7945 Maps.rleaf
R7945 Maps.rleaf
R7945 Maps.rleaf
R7945 Maps.rleaf
R7945 Maps.rleaf
R7945 Maps.rleaf
R7945 Maps.rleaf
R7945 Maps.rleaf
R7945 Maps.rleaf
R7945 Maps.rleaf
R7945 Maps.rleaf
R8084 Maps.rleaf
R8084 Maps.rleaf
R8084 Maps.rleaf
R8084 Maps.rleaf
R8084 Maps.rleaf
R8084 Maps.rleaf
R8084 Maps.rleaf
R8084 Maps.rleaf
R8084 Maps.rleaf
R8084 Maps.rleaf
R8084 Maps.rleaf
R8084 Maps.rleaf
R8084 Maps.rleaf
R8084 Maps.rleaf
R8084 Maps.rleaf
R8084 Maps.rleaf
R8123 Maps.gleaf
R8123 Maps.gleaf
R8123 Maps.gleaf
R8123 Maps.gleaf
R8123 Maps.gleaf
R8123 Maps.gleaf
R8123 Maps.gleaf
R8123 Maps.gleaf
R8123 Maps.gleaf
R8123 Maps.gleaf
R8123 Maps.gleaf
R8123 Maps.gleaf
R8123 Maps.gleaf
R8123 Maps.gleaf
R8187 Coq.Init.Logic "x = y" type_scope
R8151 Maps.get
R8158 Maps.remove
R8168 Maps.Node
R8189 Maps.get
R8196 Maps.Node
R8236 Maps.remove
R8246 Maps.Node
R8279 Maps.gleaf
R8187 Coq.Init.Logic "x = y" type_scope
R8151 Maps.get
R8158 Maps.remove
R8168 Maps.Node
R8189 Maps.get
R8196 Maps.Node
R8236 Maps.remove
R8246 Maps.Node
R8279 Maps.gleaf
R8279 Maps.gleaf
R8346 Maps.remove
R8356 Maps.Node
R8397 Maps.gleaf
R8346 Maps.remove
R8356 Maps.Node
R8397 Maps.gleaf
R8397 Maps.gleaf
R8438 Maps.remove
R8448 Maps.Node
R8488 Maps.gleaf
R8438 Maps.remove
R8448 Maps.Node
R8488 Maps.gleaf
R8488 Maps.gleaf
R8561 Coq.Init.Logic "x = y" type_scope
R8524 Maps.get
R8531 Maps.remove
R8541 Maps.Node
R8563 Maps.get
R8570 Maps.Node
R8611 Maps.remove
R8621 Maps.Node
R8655 Maps.gleaf
R8561 Coq.Init.Logic "x = y" type_scope
R8524 Maps.get
R8531 Maps.remove
R8541 Maps.Node
R8563 Maps.get
R8570 Maps.Node
R8611 Maps.remove
R8621 Maps.Node
R8655 Maps.gleaf
R8655 Maps.gleaf
R8722 Maps.remove
R8732 Maps.Node
R8772 Maps.gleaf
R8722 Maps.remove
R8732 Maps.Node
R8772 Maps.gleaf
R8772 Maps.gleaf
R8813 Maps.remove
R8823 Maps.Node
R8864 Maps.gleaf
R8813 Maps.remove
R8823 Maps.Node
R8864 Maps.gleaf
R8864 Maps.gleaf
R8948 Coq.NArith.BinPos.positive
R8925 Coq.NArith.BinPos.positive
R8925 Coq.NArith.BinPos.positive
R8987 Coq.NArith.BinPos.xH
R9003 Coq.NArith.BinPos.xI
R9012 Coq.NArith.BinPos.xI
R9037 Coq.NArith.BinPos.xO
R9046 Coq.NArith.BinPos.xO
R8925 Coq.NArith.BinPos.positive
R8925 Coq.NArith.BinPos.positive
R9170 Coq.Init.Logic "x = y" type_scope
R9154 Maps.append
R9164 Coq.NArith.BinPos.xO
R9172 Maps.append
R9180 Maps.append
R9190 Coq.NArith.BinPos.xO
R9193 Coq.NArith.BinPos.xH
R9116 Coq.NArith.BinPos.positive
R9116 Coq.NArith.BinPos.positive
R9282 Coq.NArith.BinPos.xI
R9314 Coq.NArith.BinPos.xO
R9348 Coq.NArith.BinPos.xH
R9282 Coq.NArith.BinPos.xI
R9282 Coq.NArith.BinPos.xI
R9282 Coq.NArith.BinPos.xI
R9282 Coq.NArith.BinPos.xI
R9282 Coq.NArith.BinPos.xI
R9282 Coq.NArith.BinPos.xI
R9314 Coq.NArith.BinPos.xO
R9314 Coq.NArith.BinPos.xO
R9314 Coq.NArith.BinPos.xO
R9314 Coq.NArith.BinPos.xO
R9314 Coq.NArith.BinPos.xO
R9314 Coq.NArith.BinPos.xO
R9348 Coq.NArith.BinPos.xH
R9348 Coq.NArith.BinPos.xH
R9348 Coq.NArith.BinPos.xH
R9348 Coq.NArith.BinPos.xH
R9348 Coq.NArith.BinPos.xH
R9348 Coq.NArith.BinPos.xH
R9470 Coq.Init.Logic "x = y" type_scope
R9454 Maps.append
R9464 Coq.NArith.BinPos.xI
R9472 Maps.append
R9480 Maps.append
R9490 Coq.NArith.BinPos.xI
R9493 Coq.NArith.BinPos.xH
R9416 Coq.NArith.BinPos.positive
R9416 Coq.NArith.BinPos.positive
R9582 Coq.NArith.BinPos.xI
R9614 Coq.NArith.BinPos.xO
R9648 Coq.NArith.BinPos.xH
R9582 Coq.NArith.BinPos.xI
R9582 Coq.NArith.BinPos.xI
R9582 Coq.NArith.BinPos.xI
R9582 Coq.NArith.BinPos.xI
R9582 Coq.NArith.BinPos.xI
R9582 Coq.NArith.BinPos.xI
R9614 Coq.NArith.BinPos.xO
R9614 Coq.NArith.BinPos.xO
R9614 Coq.NArith.BinPos.xO
R9614 Coq.NArith.BinPos.xO
R9614 Coq.NArith.BinPos.xO
R9614 Coq.NArith.BinPos.xO
R9648 Coq.NArith.BinPos.xH
R9648 Coq.NArith.BinPos.xH
R9648 Coq.NArith.BinPos.xH
R9648 Coq.NArith.BinPos.xH
R9648 Coq.NArith.BinPos.xH
R9648 Coq.NArith.BinPos.xH
R9739 Coq.Init.Logic "x = y" type_scope
R9727 Maps.append
R9736 Coq.NArith.BinPos.xH
R9716 Coq.NArith.BinPos.positive
R9867 Coq.Init.Logic "x = y" type_scope
R9855 Maps.append
R9862 Coq.NArith.BinPos.xH
R9844 Coq.NArith.BinPos.positive
R10018 Maps.t
R9982 Coq.NArith.BinPos.positive
R9972 Maps.t
R9947 Coq.NArith.BinPos.positive
R10052 Maps.Leaf
R10060 Maps.Leaf
R10073 Maps.Node
R10087 Maps.Node
R10208 Maps.append
R10218 Coq.NArith.BinPos.xI
R10221 Coq.NArith.BinPos.xH
R10150 Coqlib.option_map
R10103 Maps.append
R10113 Coq.NArith.BinPos.xO
R10116 Coq.NArith.BinPos.xH
R9982 Coq.NArith.BinPos.positive
R9972 Maps.t
R9947 Coq.NArith.BinPos.positive
R10298 Maps.xmap
R10307 Coq.NArith.BinPos.xH
R10273 Coq.NArith.BinPos.positive
R10429 Coq.Init.Logic "x = y" type_scope
R10410 Maps.get
R10417 Maps.xmap
R10431 Coqlib.option_map
R10460 Maps.get
R10446 Maps.append
R10398 Maps.t
R10384 Coq.NArith.BinPos.positive
R10384 Coq.NArith.BinPos.positive
R10357 Coq.NArith.BinPos.positive
R10548 Maps.append_assoc_1
R10548 Maps.append_assoc_1
R10595 Maps.append_assoc_0
R10595 Maps.append_assoc_0
R10642 Maps.append_neutral_r
R10642 Maps.append_neutral_r
R10785 Coq.Init.Logic "x = y" type_scope
R10769 Maps.get
R10776 Maps.map
R10787 Coqlib.option_map
R10805 Maps.get
R10759 Maps.t
R10745 Coq.NArith.BinPos.positive
R10721 Coq.NArith.BinPos.positive
R10879 Maps.append
R10886 Coq.NArith.BinPos.xH
R10879 Maps.append
R10886 Coq.NArith.BinPos.xH
R10904 Maps.xgmap
R10904 Maps.xgmap
R10923 Maps.append_neutral_l
R10923 Maps.append_neutral_l
R11074 Maps.t
R11056 Maps.t
R11018 Coq.Init.Datatypes.option
R11006 Coq.Init.Datatypes.option
R10994 Coq.Init.Datatypes.option
R11108 Maps.Leaf
R11116 Maps.Leaf
R11129 Maps.Node
R11143 Maps.Node
R11170 Coq.Init.Datatypes.None
R11056 Maps.t
R11018 Coq.Init.Datatypes.option
R11006 Coq.Init.Datatypes.option
R10994 Coq.Init.Datatypes.option
R11393 Coq.Init.Logic "x = y" type_scope
R11370 Maps.get
R11377 Maps.xcombine_l
R11407 Coq.Init.Datatypes.None
R11398 Maps.get
R11360 Coq.Init.Logic "x = y" type_scope
R11355 Coq.Init.Datatypes.None
R11350 Coq.Init.Datatypes.None
R11362 Coq.Init.Datatypes.None
R11332 Maps.t
R11317 Coq.NArith.BinPos.positive
R11285 Coq.Init.Datatypes.option
R11273 Coq.Init.Datatypes.option
R11261 Coq.Init.Datatypes.option
R11605 Maps.t
R11587 Maps.t
R11549 Coq.Init.Datatypes.option
R11537 Coq.Init.Datatypes.option
R11525 Coq.Init.Datatypes.option
R11639 Maps.Leaf
R11647 Maps.Leaf
R11660 Maps.Node
R11674 Maps.Node
R11699 Coq.Init.Datatypes.None
R11587 Maps.t
R11549 Coq.Init.Datatypes.option
R11537 Coq.Init.Datatypes.option
R11525 Coq.Init.Datatypes.option
R11924 Coq.Init.Logic "x = y" type_scope
R11901 Maps.get
R11908 Maps.xcombine_r
R11934 Maps.get
R11928 Coq.Init.Datatypes.None
R11891 Coq.Init.Logic "x = y" type_scope
R11886 Coq.Init.Datatypes.None
R11881 Coq.Init.Datatypes.None
R11893 Coq.Init.Datatypes.None
R11863 Maps.t
R11848 Coq.NArith.BinPos.positive
R11816 Coq.Init.Datatypes.option
R11804 Coq.Init.Datatypes.option
R11792 Coq.Init.Datatypes.option
R12132 Maps.t
R12113 Maps.t
R12113 Maps.t
R12075 Coq.Init.Datatypes.option
R12063 Coq.Init.Datatypes.option
R12051 Coq.Init.Datatypes.option
R12163 Maps.Leaf
R12171 Maps.xcombine_r
R12193 Maps.Node
R12242 Maps.Leaf
R12250 Maps.xcombine_l
R12276 Maps.Node
R12293 Maps.Node
R12113 Maps.t
R12113 Maps.t
R12075 Coq.Init.Datatypes.option
R12063 Coq.Init.Datatypes.option
R12051 Coq.Init.Datatypes.option
R12546 Coq.Init.Logic "x = y" type_scope
R12522 Maps.get
R12529 Maps.combine
R12562 Maps.get
R12551 Maps.get
R12506 Coq.Init.Logic "x = y" type_scope
R12501 Coq.Init.Datatypes.None
R12496 Coq.Init.Datatypes.None
R12508 Coq.Init.Datatypes.None
R12482 Maps.t
R12482 Maps.t
R12451 Coq.NArith.BinPos.positive
R12437 Coq.Init.Datatypes.option
R12425 Coq.Init.Datatypes.option
R12413 Coq.Init.Datatypes.option
R12666 Maps.xgcombine_r
R12689 Maps.xgcombine_l
R12666 Maps.xgcombine_r
R12666 Maps.xgcombine_r
R12666 Maps.xgcombine_r
R12666 Maps.xgcombine_r
R12689 Maps.xgcombine_l
R12689 Maps.xgcombine_l
R12689 Maps.xgcombine_l
R12689 Maps.xgcombine_l
R12889 Coq.Init.Logic "x = y" type_scope
R12865 Maps.get
R12872 Maps.combine
R12905 Maps.get
R12894 Maps.get
R12851 Coq.Init.Logic "x = y" type_scope
R12846 Coq.Init.Datatypes.None
R12841 Coq.Init.Datatypes.None
R12853 Coq.Init.Datatypes.None
R12824 Coq.NArith.BinPos.positive
R12815 Maps.t
R12815 Maps.t
R12786 Coq.Init.Datatypes.option
R12774 Coq.Init.Datatypes.option
R12762 Coq.Init.Datatypes.option
R12958 Maps.xgcombine
R12958 Maps.xgcombine
R13160 Coq.Init.Logic "x = y" type_scope
R13145 Maps.xcombine_l
R13162 Maps.xcombine_r
R13127 Coq.Init.Logic "x = y" type_scope
R13110 Coq.Init.Datatypes.option
R13110 Coq.Init.Datatypes.option
R13083 Maps.t
R13068 Coq.Init.Datatypes.option
R13056 Coq.Init.Datatypes.option
R13044 Coq.Init.Datatypes.option
R13068 Coq.Init.Datatypes.option
R13056 Coq.Init.Datatypes.option
R13044 Coq.Init.Datatypes.option
R13493 Coq.Init.Logic "x = y" type_scope
R13477 Maps.combine
R13495 Maps.combine
R13467 Maps.t
R13467 Maps.t
R13436 Coq.Init.Logic "x = y" type_scope
R13419 Coq.Init.Datatypes.option
R13419 Coq.Init.Datatypes.option
R13390 Coq.Init.Datatypes.option
R13378 Coq.Init.Datatypes.option
R13366 Coq.Init.Datatypes.option
R13390 Coq.Init.Datatypes.option
R13378 Coq.Init.Datatypes.option
R13366 Coq.Init.Datatypes.option
R13590 Coq.Init.Logic "x = y" type_scope
R13573 Coq.Init.Datatypes.option
R13573 Coq.Init.Datatypes.option
R13590 Coq.Init.Logic "x = y" type_scope
R13573 Coq.Init.Datatypes.option
R13573 Coq.Init.Datatypes.option
R13711 Maps.xcombine_lr
R13751 Maps.xcombine_lr
R13711 Maps.xcombine_lr
R13711 Maps.xcombine_lr
R13711 Maps.xcombine_lr
R13711 Maps.xcombine_lr
R13711 Maps.xcombine_lr
R13711 Maps.xcombine_lr
R13711 Maps.xcombine_lr
R13711 Maps.xcombine_lr
R13751 Maps.xcombine_lr
R13751 Maps.xcombine_lr
R13751 Maps.xcombine_lr
R13751 Maps.xcombine_lr
R13751 Maps.xcombine_lr
R13751 Maps.xcombine_lr
R13751 Maps.xcombine_lr
R13751 Maps.xcombine_lr
R13751 Maps.xcombine_lr
R13751 Maps.xcombine_lr
R13927 Coq.Lists.List.list
R13942 Coq.Init.Datatypes "x * y" type_scope
R13933 Coq.NArith.BinPos.positive
R13891 Coq.NArith.BinPos.positive
R13881 Maps.t
R13977 Maps.Leaf
R13985 Coq.Lists.List.nil
R13997 Maps.Node
R14004 Coq.Init.Datatypes.None
R14055 Coq.Lists.List "x ++ y" list_scope
R14038 Maps.append
R14048 Coq.NArith.BinPos.xO
R14051 Coq.NArith.BinPos.xH
R14074 Maps.append
R14084 Coq.NArith.BinPos.xI
R14087 Coq.NArith.BinPos.xH
R14101 Maps.Node
R14109 Coq.Init.Datatypes.Some
R14163 Coq.Lists.List "x ++ y" list_scope
R14146 Maps.append
R14156 Coq.NArith.BinPos.xO
R14159 Coq.NArith.BinPos.xH
R14186 Coq.Lists.List "x :: y" list_scope
R14179 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14202 Maps.append
R14212 Coq.NArith.BinPos.xI
R14215 Coq.NArith.BinPos.xH
R13891 Coq.NArith.BinPos.positive
R13881 Maps.t
R14410 Maps.xelements
R14422 Coq.NArith.BinPos.xH
R14402 Maps.t
R14538 Coq.Lists.List.In
R14558 Maps.xelements
R14541 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14542 Maps.append
R14526 Coq.Init.Logic "x = y" type_scope
R14518 Maps.get
R14528 Coq.Init.Datatypes.Some
R14494 Coq.NArith.BinPos.positive
R14494 Coq.NArith.BinPos.positive
R14482 Maps.t
R14628 Maps.gleaf
R14628 Maps.gleaf
R14723 Maps.append_assoc_1
R14745 Coq.Lists.List.in_or_app
R14769 Coq.Lists.List.in_cons
R14723 Maps.append_assoc_1
R14745 Coq.Lists.List.in_or_app
R14769 Coq.Lists.List.in_cons
R14822 Maps.append_assoc_0
R14844 Coq.Lists.List.in_or_app
R14822 Maps.append_assoc_0
R14844 Coq.Lists.List.in_or_app
R14895 Maps.append_neutral_r
R14919 Coq.Lists.List.in_or_app
R14988 Coq.Lists.List.in_eq
R14895 Maps.append_neutral_r
R14919 Coq.Lists.List.in_or_app
R14988 Coq.Lists.List.in_eq
R15011 Maps.append_assoc_1
R15033 Coq.Lists.List.in_or_app
R15011 Maps.append_assoc_1
R15033 Coq.Lists.List.in_or_app
R15085 Maps.append_assoc_0
R15107 Coq.Lists.List.in_or_app
R15085 Maps.append_assoc_0
R15107 Coq.Lists.List.in_or_app
R15275 Coq.Lists.List.In
R15286 Maps.elements
R15278 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15263 Coq.Init.Logic "x = y" type_scope
R15255 Maps.get
R15265 Coq.Init.Datatypes.Some
R15233 Coq.NArith.BinPos.positive
R15224 Maps.t
R15341 Maps.xelements_correct
R15363 Coq.NArith.BinPos.xH
R15341 Maps.xelements_correct
R15363 Coq.NArith.BinPos.xH
R15446 Coq.Init.Datatypes.option
R15428 Maps.t
R15413 Coq.NArith.BinPos.positive
R15413 Coq.NArith.BinPos.positive
R15491 Coq.NArith.BinPos.xH
R15497 Maps.get
R15513 Coq.NArith.BinPos.xO
R15520 Coq.NArith.BinPos.xO
R15550 Coq.NArith.BinPos.xI
R15557 Coq.NArith.BinPos.xI
R15595 Coq.Init.Datatypes.None
R15428 Maps.t
R15413 Coq.NArith.BinPos.positive
R15413 Coq.NArith.BinPos.positive
R15783 Coq.Init.Logic "x = y" type_scope
R15759 Maps.xget
R15769 Maps.Node
R15785 Coq.Init.Datatypes.Some
R15747 Coq.Init.Logic "x = y" type_scope
R15718 Maps.xget
R15726 Maps.append
R15736 Coq.NArith.BinPos.xO
R15739 Coq.NArith.BinPos.xH
R15749 Coq.Init.Datatypes.Some
R15693 Coq.Init.Datatypes.option
R15683 Maps.t
R15683 Maps.t
R15664 Coq.NArith.BinPos.positive
R15664 Coq.NArith.BinPos.positive
R16048 Coq.Lists.List.In
R16059 Maps.xelements
R16051 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16011 Coq.Lists.List.In
R16025 Maps.xelements
R16038 Coq.NArith.BinPos.xI
R16014 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16015 Coq.NArith.BinPos.xI
R15987 Coq.NArith.BinPos.positive
R15987 Coq.NArith.BinPos.positive
R15975 Maps.t
R16181 Coq.Lists.List.in_app_or
R16216 Coq.Lists.List.in_or_app
R16181 Coq.Lists.List.in_app_or
R16181 Coq.Lists.List.in_app_or
R16216 Coq.Lists.List.in_or_app
R16216 Coq.Lists.List.in_or_app
R16216 Coq.Lists.List.in_or_app
R16216 Coq.Lists.List.in_or_app
R16284 Coq.Lists.List.in_inv
R16284 Coq.Lists.List.in_inv
R16367 Coq.Lists.List.in_eq
R16367 Coq.Lists.List.in_eq
R16389 Coq.Lists.List.in_cons
R16389 Coq.Lists.List.in_cons
R16578 Coq.Init.Logic "~ x" type_scope
R16579 Coq.Lists.List.In
R16593 Maps.xelements
R16606 Coq.NArith.BinPos.xO
R16582 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16583 Coq.NArith.BinPos.xI
R16554 Coq.NArith.BinPos.positive
R16554 Coq.NArith.BinPos.positive
R16542 Maps.t
R16717 Coq.Lists.List.in_app_or
R16717 Coq.Lists.List.in_app_or
R16717 Coq.Lists.List.in_app_or
R16786 Coq.Lists.List.in_inv
R16786 Coq.Lists.List.in_inv
R17047 Coq.Lists.List.In
R17058 Maps.xelements
R17050 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17010 Coq.Lists.List.In
R17024 Maps.xelements
R17037 Coq.NArith.BinPos.xO
R17013 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17014 Coq.NArith.BinPos.xO
R16986 Coq.NArith.BinPos.positive
R16986 Coq.NArith.BinPos.positive
R16974 Maps.t
R17180 Coq.Lists.List.in_app_or
R17215 Coq.Lists.List.in_or_app
R17180 Coq.Lists.List.in_app_or
R17180 Coq.Lists.List.in_app_or
R17215 Coq.Lists.List.in_or_app
R17215 Coq.Lists.List.in_or_app
R17215 Coq.Lists.List.in_or_app
R17215 Coq.Lists.List.in_or_app
R17283 Coq.Lists.List.in_inv
R17283 Coq.Lists.List.in_inv
R17366 Coq.Lists.List.in_eq
R17366 Coq.Lists.List.in_eq
R17388 Coq.Lists.List.in_cons
R17388 Coq.Lists.List.in_cons
R17577 Coq.Init.Logic "~ x" type_scope
R17578 Coq.Lists.List.In
R17592 Maps.xelements
R17605 Coq.NArith.BinPos.xI
R17581 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17582 Coq.NArith.BinPos.xO
R17553 Coq.NArith.BinPos.positive
R17553 Coq.NArith.BinPos.positive
R17541 Maps.t
R17716 Coq.Lists.List.in_app_or
R17716 Coq.Lists.List.in_app_or
R17716 Coq.Lists.List.in_app_or
R17785 Coq.Lists.List.in_inv
R17785 Coq.Lists.List.in_inv
R18071 Coq.Lists.List.In
R18082 Maps.xelements
R18095 Coq.NArith.BinPos.xH
R18074 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18025 Coq.Lists.List.In
R18039 Maps.xelements
R18064 Coq.NArith.BinPos.xH
R18050 Maps.Node
R18028 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18029 Coq.NArith.BinPos.xI
R18001 Coq.NArith.BinPos.positive
R17986 Coq.Init.Datatypes.option
R17977 Maps.t
R17977 Maps.t
R18154 Coq.Lists.List.in_app_or
R18154 Coq.Lists.List.in_app_or
R18154 Coq.Lists.List.in_app_or
R18190 Coq.Lists.List.In
R18204 Maps.xelements
R18193 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18194 Coq.NArith.BinPos.xI
R18234 Maps.xelements_io
R18190 Coq.Lists.List.In
R18204 Maps.xelements
R18193 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18194 Coq.NArith.BinPos.xI
R18234 Maps.xelements_io
R18272 Coq.Lists.List.in_inv
R18272 Coq.Lists.List.in_inv
R18320 Maps.xelements_ii
R18320 Maps.xelements_ii
R18356 Coq.Lists.List.In
R18370 Maps.xelements
R18359 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18360 Coq.NArith.BinPos.xI
R18400 Maps.xelements_io
R18356 Coq.Lists.List.In
R18370 Maps.xelements
R18359 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18360 Coq.NArith.BinPos.xI
R18400 Maps.xelements_io
R18434 Maps.xelements_ii
R18434 Maps.xelements_ii
R18613 Coq.Lists.List.In
R18624 Maps.xelements
R18637 Coq.NArith.BinPos.xH
R18616 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18567 Coq.Lists.List.In
R18581 Maps.xelements
R18606 Coq.NArith.BinPos.xH
R18592 Maps.Node
R18570 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18571 Coq.NArith.BinPos.xO
R18543 Coq.NArith.BinPos.positive
R18528 Coq.Init.Datatypes.option
R18519 Maps.t
R18519 Maps.t
R18696 Coq.Lists.List.in_app_or
R18696 Coq.Lists.List.in_app_or
R18696 Coq.Lists.List.in_app_or
R18730 Maps.xelements_oo
R18730 Maps.xelements_oo
R18768 Coq.Lists.List.in_inv
R18768 Coq.Lists.List.in_inv
R18818 Coq.Lists.List.In
R18832 Maps.xelements
R18821 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18822 Coq.NArith.BinPos.xO
R18862 Maps.xelements_oi
R18818 Coq.Lists.List.In
R18832 Maps.xelements
R18821 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18822 Coq.NArith.BinPos.xO
R18862 Maps.xelements_oi
R18896 Maps.xelements_oo
R18896 Maps.xelements_oo
R18932 Coq.Lists.List.In
R18946 Maps.xelements
R18935 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18936 Coq.NArith.BinPos.xO
R18976 Maps.xelements_oi
R18932 Coq.Lists.List.In
R18946 Maps.xelements
R18935 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18936 Coq.NArith.BinPos.xO
R18976 Maps.xelements_oi
R19091 Coq.Init.Logic "~ x" type_scope
R19092 Coq.Lists.List.In
R19104 Maps.xelements
R19117 Coq.NArith.BinPos.xI
R19095 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R19096 Coq.NArith.BinPos.xH
R19067 Coq.NArith.BinPos.positive
R19057 Maps.t
R19228 Coq.Lists.List.in_app_or
R19228 Coq.Lists.List.in_app_or
R19228 Coq.Lists.List.in_app_or
R19307 Coq.Lists.List.in_inv
R19307 Coq.Lists.List.in_inv
R19559 Coq.Init.Logic "~ x" type_scope
R19560 Coq.Lists.List.In
R19572 Maps.xelements
R19585 Coq.NArith.BinPos.xO
R19563 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R19564 Coq.NArith.BinPos.xH
R19535 Coq.NArith.BinPos.positive
R19525 Maps.t
R19696 Coq.Lists.List.in_app_or
R19696 Coq.Lists.List.in_app_or
R19696 Coq.Lists.List.in_app_or
R19775 Coq.Lists.List.in_inv
R19775 Coq.Lists.List.in_inv
R20019 Coq.Init.Logic "x = y" type_scope
R20011 Maps.get
R20021 Maps.xget
R20028 Coq.NArith.BinPos.xH
R20000 Coq.NArith.BinPos.positive
R19991 Maps.t
R20218 Coq.Init.Logic "x = y" type_scope
R20207 Maps.xget
R20220 Coq.Init.Datatypes.Some
R20178 Coq.Lists.List.In
R20189 Maps.xelements
R20181 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R20159 Maps.t
R20145 Coq.NArith.BinPos.positive
R20145 Coq.NArith.BinPos.positive
R20316 Maps.xelements_ii
R20316 Maps.xelements_ii
R20351 Coq.Lists.List.In
R20365 Maps.xelements
R20378 Coq.NArith.BinPos.xO
R20354 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R20355 Coq.NArith.BinPos.xI
R20399 Maps.xelements_io
R20351 Coq.Lists.List.In
R20365 Maps.xelements
R20378 Coq.NArith.BinPos.xO
R20354 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R20355 Coq.NArith.BinPos.xI
R20399 Maps.xelements_io
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R20475 Maps.get_xget_h
R20475 Maps.get_xget_h
R20505 Maps.xelements_ih
R20505 Maps.xelements_ih
R20547 Coq.Lists.List.In
R20561 Maps.xelements
R20574 Coq.NArith.BinPos.xI
R20550 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R20551 Coq.NArith.BinPos.xO
R20595 Maps.xelements_oi
R20547 Coq.Lists.List.In
R20561 Maps.xelements
R20574 Coq.NArith.BinPos.xI
R20550 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R20551 Coq.NArith.BinPos.xO
R20595 Maps.xelements_oi
R20633 Maps.xelements_oo
R20633 Maps.xelements_oo
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R20715 Maps.get_xget_h
R20715 Maps.get_xget_h
R20745 Maps.xelements_oh
R20745 Maps.xelements_oh
R20787 Coq.Lists.List.In
R20799 Maps.xelements
R20812 Coq.NArith.BinPos.xI
R20790 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R20791 Coq.NArith.BinPos.xH
R20833 Maps.xelements_hi
R20787 Coq.Lists.List.In
R20799 Maps.xelements
R20812 Coq.NArith.BinPos.xI
R20790 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R20791 Coq.NArith.BinPos.xH
R20833 Maps.xelements_hi
R20862 Coq.Lists.List.In
R20874 Maps.xelements
R20887 Coq.NArith.BinPos.xO
R20865 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R20866 Coq.NArith.BinPos.xH
R20908 Maps.xelements_ho
R20862 Coq.Lists.List.In
R20874 Maps.xelements
R20887 Coq.NArith.BinPos.xO
R20865 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R20866 Coq.NArith.BinPos.xH
R20908 Maps.xelements_ho
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R21010 Coq.Lists.List.in_app_or
R21010 Coq.Lists.List.in_app_or
R21010 Coq.Lists.List.in_app_or
R21047 Coq.Lists.List.In
R21059 Maps.xelements
R21073 Coq.NArith.BinPos.xO
R21076 Coq.NArith.BinPos.xH
R21050 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21051 Coq.NArith.BinPos.xH
R21095 Maps.xelements_ho
R21047 Coq.Lists.List.In
R21059 Maps.xelements
R21073 Coq.NArith.BinPos.xO
R21076 Coq.NArith.BinPos.xH
R21050 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21051 Coq.NArith.BinPos.xH
R21095 Maps.xelements_ho
R21128 Coq.Lists.List.in_inv
R21128 Coq.Lists.List.in_inv
R21180 Coq.Lists.List.In
R21192 Maps.xelements
R21206 Coq.NArith.BinPos.xI
R21209 Coq.NArith.BinPos.xH
R21183 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21184 Coq.NArith.BinPos.xH
R21228 Maps.xelements_hi
R21180 Coq.Lists.List.In
R21192 Maps.xelements
R21206 Coq.NArith.BinPos.xI
R21209 Coq.NArith.BinPos.xH
R21183 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21184 Coq.NArith.BinPos.xH
R21228 Maps.xelements_hi
R21259 Coq.Lists.List.In
R21271 Maps.xelements
R21285 Coq.NArith.BinPos.xO
R21288 Coq.NArith.BinPos.xH
R21262 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21263 Coq.NArith.BinPos.xH
R21307 Maps.xelements_ho
R21259 Coq.Lists.List.In
R21271 Maps.xelements
R21285 Coq.NArith.BinPos.xO
R21288 Coq.NArith.BinPos.xH
R21262 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21263 Coq.NArith.BinPos.xH
R21307 Maps.xelements_ho
R21338 Coq.Lists.List.In
R21350 Maps.xelements
R21364 Coq.NArith.BinPos.xI
R21367 Coq.NArith.BinPos.xH
R21341 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21342 Coq.NArith.BinPos.xH
R21386 Maps.xelements_hi
R21338 Coq.Lists.List.In
R21350 Maps.xelements
R21364 Coq.NArith.BinPos.xI
R21367 Coq.NArith.BinPos.xH
R21341 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21342 Coq.NArith.BinPos.xH
R21386 Maps.xelements_hi
R21528 Coq.Init.Logic "x = y" type_scope
R21520 Maps.get
R21530 Coq.Init.Datatypes.Some
R21494 Coq.Lists.List.In
R21505 Maps.elements
R21497 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21472 Coq.NArith.BinPos.positive
R21463 Maps.t
R21607 Maps.get_xget_h
R21607 Maps.get_xget_h
R21630 Maps.xelements_complete
R21651 Coq.NArith.BinPos.xH
R21630 Maps.xelements_complete
R21651 Coq.NArith.BinPos.xH
R21754 Coq.Lists.List.fold_left
R21803 Maps.elements
R21794 Coq.Init.Datatypes.snd
R21786 Coq.Init.Datatypes.fst
R21734 Maps.t
R21709 Coq.NArith.BinPos.positive
R21924 Coq.Init.Logic "x = y" type_scope
R21913 Maps.fold
R21930 Coq.Lists.List.fold_left
R21979 Maps.elements
R21970 Coq.Init.Datatypes.snd
R21962 Coq.Init.Datatypes.fst
R21903 Maps.t
R21872 Coq.NArith.BinPos.positive
R22094 Coq.NArith.BinPos.positive
R22127 Coqlib.peq
R22170 Coq.Init.Datatypes "x * y" type_scope
R22172 Maps.t
R22233 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22237 Maps.empty
R22319 Maps.get
R22332 Coq.Init.Datatypes.snd
R22350 Coq.Init.Datatypes.Some
R22368 Coq.Init.Datatypes.None
R22376 Coq.Init.Datatypes.fst
R22301 Maps.t
R22286 Coq.NArith.BinPos.positive
R22459 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22460 Coq.Init.Datatypes.fst
R22467 Maps.set
R22482 Coq.Init.Datatypes.snd
R22447 Maps.t
R22424 Coq.NArith.BinPos.positive
R22563 Coq.Init.Logic "x = y" type_scope
R22548 Maps.get
R22555 Maps.init
R22530 Coq.NArith.BinPos.positive
R22629 Maps.gempty
R22629 Maps.gempty
R22741 Coq.Init.Logic "x = y" type_scope
R22723 Maps.get
R22730 Maps.set
R22717 Maps.t
R22696 Coq.NArith.BinPos.positive
R22806 Maps.gss
R22806 Maps.gss
R22931 Coq.Init.Logic "x = y" type_scope
R22913 Maps.get
R22920 Maps.set
R22933 Maps.get
R22905 Coq.Init.Logic "x <> y" type_scope
R22893 Maps.t
R22872 Coq.NArith.BinPos.positive
R22872 Coq.NArith.BinPos.positive
R23002 Maps.gso
R23002 Maps.gso
R23120 Coq.Init.Logic "x = y" type_scope
R23102 Maps.get
R23109 Maps.set
R23125 Coqlib.peq
R23145 Maps.get
R23092 Maps.t
R23071 Coq.NArith.BinPos.positive
R23071 Coq.NArith.BinPos.positive
R23185 Coqlib.peq
R23185 Coqlib.peq
R23217 Maps.gss
R23217 Maps.gss
R23239 Maps.gso
R23239 Maps.gso
R23353 Coq.Init.Logic "x = y" type_scope
R23327 Maps.get
R23334 Maps.set
R23341 Maps.get
R23355 Maps.get
R23317 Maps.t
R23303 Coq.NArith.BinPos.positive
R23303 Coq.NArith.BinPos.positive
R23395 Coqlib.peq
R23395 Coqlib.peq
R23429 Maps.gss
R23429 Maps.gss
R23453 Maps.gso
R23453 Maps.gso
R23526 Maps.t
R23537 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23541 Coq.Init.Datatypes.fst
R23549 Maps.map
R23573 Coq.Init.Datatypes.snd
R23519 Maps.t
R23677 Coq.Init.Logic "x = y" type_scope
R23661 Maps.get
R23668 Maps.map
R23681 Maps.get
R23651 Maps.t
R23637 Coq.NArith.BinPos.positive
R23751 Maps.gmap
R23751 Maps.gmap
R23796 Maps.get
R23809 Coq.Init.Datatypes.snd
R23796 Maps.get
R23809 Coq.Init.Datatypes.snd
R23911 Coq.NArith.BinPos.positive
R23906 Maps.t
R23985 Coq.Init.Logic "x = y" type_scope
R23970 Coq.Init.Logic "x = y" type_scope
R23962 Maps.index
R23972 Maps.index
R23958 Maps.t
R23958 Maps.t
R24022 Coq.Init.Specif "{ A } + { B }" type_scope
R24025 Coq.Init.Logic "x = y" type_scope
R24035 Coq.Init.Logic "x <> y" type_scope
R24018 Maps.t
R24018 Maps.t
R24177 Maps.t
R24222 Maps.init
R24282 Maps.get
R24274 Maps.t
R24360 Maps.set
R24352 Maps.t
R24437 Maps.t
R24444 Maps.map
R24430 Maps.t
R24523 Coq.Init.Logic "x = y" type_scope
R24508 Maps.get
R24515 Maps.init
R24573 Maps.gi
R24573 Maps.gi
R24668 Coq.Init.Logic "x = y" type_scope
R24650 Maps.get
R24657 Maps.set
R24644 Maps.t
R24717 Maps.gss
R24717 Maps.gss
R24828 Coq.Init.Logic "x = y" type_scope
R24810 Maps.get
R24817 Maps.set
R24830 Maps.get
R24802 Coq.Init.Logic "x <> y" type_scope
R24790 Maps.t
R24883 Maps.gso
R24883 Maps.gso
R25039 Coq.Init.Logic "x = y" type_scope
R25021 Maps.get
R25028 Maps.set
R25065 Maps.get
R25011 Maps.t
R25125 Maps.gsspec
R25125 Maps.gsspec
R25187 Coqlib.peq_true
R25187 Coqlib.peq_true
R25222 Coqlib.peq_false
R25222 Coqlib.peq_false
R25391 Coq.Init.Logic "x = y" type_scope
R25375 Maps.get
R25382 Maps.map
R25395 Maps.get
R25365 Maps.t
R25449 Maps.gmap
R25449 Maps.gmap
R25515 Coq.ZArith.BinInt.Z
R25545 Coq.NArith.BinPos.positive
R25580 Coq.ZArith.BinInt.Z0
R25586 Coq.NArith.BinPos.xH
R25595 Coq.ZArith.BinInt.Zpos
R25605 Coq.NArith.BinPos.xO
R25616 Coq.ZArith.BinInt.Zneg
R25626 Coq.NArith.BinPos.xI
R25541 Coq.ZArith.BinInt.Z
R25699 Coq.Init.Logic "x = y" type_scope
R25684 Coq.Init.Logic "x = y" type_scope
R25676 Maps.index
R25686 Maps.index
R25672 Coq.ZArith.BinInt.Z
R25672 Coq.ZArith.BinInt.Z
R25860 Coqlib.zeq
R25947 Coq.NArith.BinNat.N
R25977 Coq.NArith.BinPos.positive
R26012 Coq.NArith.BinNat.N0
R26018 Coq.NArith.BinPos.xH
R26027 Coq.NArith.BinNat.Npos
R26037 Coq.NArith.BinPos.xO
R25973 Coq.NArith.BinNat.N
R26110 Coq.Init.Logic "x = y" type_scope
R26095 Coq.Init.Logic "x = y" type_scope
R26087 Maps.index
R26097 Maps.index
R26083 Coq.NArith.BinNat.N
R26083 Coq.NArith.BinNat.N
R26265 Coq.Init.Specif "{ A } + { B }" type_scope
R26268 Coq.Init.Logic "x = y" type_scope
R26278 Coq.Init.Logic "x <> y" type_scope
R26261 Coq.NArith.BinNat.N
R26261 Coq.NArith.BinNat.N
R26321 Coqlib.peq
R26321 Coqlib.peq
R26458 Coq.Init.Specif "{ A } + { B }" type_scope
R26461 Coq.Init.Logic "x = y" type_scope
R26471 Coq.Init.Logic "x <> y" type_scope
R26454 Maps.t
R26454 Maps.t
R26723 Maps.t
R26782 Maps.t
R26897 Coq.Init.Logic "x = y" type_scope
R26888 Maps.init
R26875 Maps.elt
R27016 Coq.Init.Logic "x = y" type_scope
R27003 Maps.set
R26996 Maps.t
R26980 Maps.elt
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R27198 Coq.Init.Logic "x = y" type_scope
R27185 Maps.set
R27176 Coq.Init.Logic "x <> y" type_scope
R27164 Maps.t
R27148 Maps.elt
R27148 Maps.elt
R27384 Coq.Init.Logic "x = y" type_scope
R27366 Maps.get
R27373 Maps.set
R27389 Maps.elt_eq
R27412 Maps.get
R27356 Maps.t
R27340 Maps.elt
R27340 Maps.elt
R27571 Coq.Init.Logic "x = y" type_scope
R27545 Maps.get
R27552 Maps.set
R27559 Maps.get
R27573 Maps.get
R27539 Maps.t
R27530 Maps.elt
R27530 Maps.elt
R27724 Maps.t
R27847 Coq.Init.Logic "x = y" type_scope
R27831 Maps.get
R27838 Maps.map
R27851 Maps.get
R27821 Maps.t
R27812 Maps.elt
R28007 Coq.Init.Logic "x = y" type_scope
R27993 Coq.Init.Logic "x = y" type_scope
R27962 Maps.t
R27962 Maps.t
R28050 Coqlib.extensionality
R28050 Coqlib.extensionality
R28141 Maps.get
R28192 Maps.get
FLattice
R122 Coq.Init.Specif "{ A } + { B }" type_scope
R124 Coq.Init.Logic "x = y" type_scope
R132 Coq.Init.Logic "x <> y" type_scope
R118 Lattice.t
R118 Lattice.t
R158 Lattice.t
R153 Lattice.t
R201 Lattice.ge
R266 Lattice.ge
R256 Lattice.ge
R246 Lattice.ge
R290 Lattice.t
R324 Lattice.ge
R329 Lattice.bot
R360 Lattice.t
R355 Lattice.t
R350 Lattice.t
R408 Coq.Init.Logic "x = y" type_scope
R400 Lattice.lub
R410 Lattice.lub
R457 Lattice.ge
R461 Lattice.lub
R578 Coq.Init.Specif "{ A } + { B }" type_scope
R580 Coq.Init.Logic "x = y" type_scope
R588 Coq.Init.Logic "x <> y" type_scope
R574 Lattice.t
R574 Lattice.t
R614 Lattice.t
R609 Lattice.t
R657 Lattice.ge
R722 Lattice.ge
R712 Lattice.ge
R702 Lattice.ge
R746 Lattice.t
R780 Lattice.ge
R785 Lattice.bot
R806 Lattice.t
R840 Lattice.ge
R843 Lattice.top
R876 Lattice.t
R871 Lattice.t
R866 Lattice.t
R924 Coq.Init.Logic "x = y" type_scope
R916 Lattice.lub
R926 Lattice.lub
R973 Lattice.ge
R977 Lattice.lub
R1119 Maps.t
R1153 Maps.t
R1194 Lattice.t_
R1226 Coq.Init.Specif "{ A } + { B }" type_scope
R1228 Coq.Init.Logic "x = y" type_scope
R1236 Coq.Init.Logic "x <> y" type_scope
R1222 Lattice.t
R1222 Lattice.t
R1286 Coq.Init.Specif "{ A } + { B }" type_scope
R1289 Coq.Init.Logic "x = y" type_scope
R1299 Coq.Init.Logic "x <> y" type_scope
R1273 Maps.t
R1273 Maps.t
R1286 Coq.Init.Specif "{ A } + { B }" type_scope
R1289 Coq.Init.Logic "x = y" type_scope
R1299 Coq.Init.Logic "x <> y" type_scope
R1273 Maps.t
R1273 Maps.t
R1315 Maps.eq
R1315 Maps.eq
R1426 Lattice.Bot_except
R1455 Maps "a ! b"
R1463 Coq.Init.Datatypes.None
R1479 Coq.Init.Datatypes.Some
R1499 Lattice.Top_except
R1528 Maps "a ! b"
R1536 Coq.Init.Datatypes.None
R1552 Coq.Init.Datatypes.Some
R1395 Lattice.t
R1381 Coq.NArith.BinPos.positive
R1623 Lattice.t
R1647 Lattice.Bot_except
R1669 Lattice.Bot_except
R1681 Maps.set
R1702 Lattice.Top_except
R1724 Lattice.Top_except
R1736 Maps.set
R1618 Lattice.t
R1595 Coq.NArith.BinPos.positive
R1808 Coq.Init.Logic "x = y" type_scope
R1790 Lattice.get
R1797 Lattice.set
R1857 Maps.gss
R1857 Maps.gss
R1857 Maps.gss
R1939 Coq.Init.Logic "x = y" type_scope
R1921 Lattice.get
R1928 Lattice.set
R1941 Lattice.get
R1913 Coq.Init.Logic "x <> y" type_scope
R1994 Maps.gso
R1994 Maps.gso
R1994 Maps.gso
R2078 Lattice.get
R2068 Lattice.get
R2037 Lattice.t
R2037 Lattice.t
R2114 Lattice.ge
R2223 Lattice.ge
R2213 Lattice.ge
R2203 Lattice.ge
R2282 Lattice.get
R2282 Lattice.get
R2322 Lattice.Bot_except
R2334 Maps.empty
R2388 Coq.Init.Logic "x = y" type_scope
R2378 Lattice.get
R2384 Lattice.bot
R2441 Maps.gempty
R2441 Maps.gempty
R2491 Lattice.ge
R2496 Lattice.bot
R2537 Lattice.get_bot
R2537 Lattice.get_bot
R2586 Lattice.Top_except
R2598 Maps.empty
R2652 Coq.Init.Logic "x = y" type_scope
R2642 Lattice.get
R2648 Lattice.top
R2705 Maps.gempty
R2705 Maps.gempty
R2755 Lattice.ge
R2758 Lattice.top
R2801 Lattice.get_top
R2801 Lattice.get_top
R2858 Lattice.t
R2885 Lattice.Bot_except
R2899 Lattice.Bot_except
R2921 Lattice.Bot_except
R2941 Maps.combine
R3025 Coq.Init.Datatypes.Some
R3033 Coq.Init.Datatypes.Some
R3043 Coq.Init.Datatypes.Some
R3076 Coq.Init.Datatypes.None
R3108 Coq.Init.Datatypes.None
R3157 Lattice.Bot_except
R3171 Lattice.Top_except
R3193 Lattice.Top_except
R3213 Maps.combine
R3296 Coq.Init.Datatypes.Some
R3304 Coq.Init.Datatypes.Some
R3314 Coq.Init.Datatypes.Some
R3347 Coq.Init.Datatypes.None
R3379 Coq.Init.Datatypes.None
R3387 Coq.Init.Datatypes.None
R3441 Lattice.Top_except
R3455 Lattice.Bot_except
R3477 Lattice.Top_except
R3497 Maps.combine
R3580 Coq.Init.Datatypes.Some
R3588 Coq.Init.Datatypes.Some
R3598 Coq.Init.Datatypes.Some
R3631 Coq.Init.Datatypes.None
R3642 Coq.Init.Datatypes.None
R3666 Coq.Init.Datatypes.None
R3725 Lattice.Top_except
R3739 Lattice.Top_except
R3761 Lattice.Top_except
R3781 Maps.combine
R3865 Coq.Init.Datatypes.Some
R3873 Coq.Init.Datatypes.Some
R3883 Coq.Init.Datatypes.Some
R3924 Coq.Init.Datatypes.None
R2853 Lattice.t
R2853 Lattice.t
R4012 Coq.Init.Logic "x = y" type_scope
R4004 Lattice.lub
R4014 Lattice.lub
R4084 Maps.combine_commut
R4084 Maps.combine_commut
R4084 Maps.combine_commut
R4084 Maps.combine_commut
R4084 Maps.combine_commut
R4214 Lattice.ge
R4218 Lattice.lub
R4303 Maps.gcombine
R4303 Maps.gcombine
R4333 Maps "a ! b"
R4333 Maps "a ! b"
R4348 Maps "a ! b"
R4348 Maps "a ! b"
R4403 Maps "a ! b"
R4403 Maps "a ! b"
R4459 Maps.gcombine
R4459 Maps.gcombine
R4489 Maps "a ! b"
R4489 Maps "a ! b"
R4504 Maps "a ! b"
R4504 Maps "a ! b"
R4558 Maps "a ! b"
R4558 Maps "a ! b"
R4613 Maps.gcombine
R4613 Maps.gcombine
R4643 Maps "a ! b"
R4643 Maps "a ! b"
R4658 Maps "a ! b"
R4658 Maps "a ! b"
R4736 Maps.gcombine
R4736 Maps.gcombine
R4766 Maps "a ! b"
R4766 Maps "a ! b"
R4781 Maps "a ! b"
R4781 Maps "a ! b"
R5013 Lattice.t_
R5045 Coq.Init.Specif "{ A } + { B }" type_scope
R5047 Coq.Init.Logic "x = y" type_scope
R5055 Coq.Init.Logic "x <> y" type_scope
R5041 Lattice.t
R5041 Lattice.t
R5160 Lattice.Top
R5170 Coq.Init.Logic.True
R5182 Lattice.Bot
R5189 Coq.Init.Logic.True
R5198 Lattice.Inj
R5205 Lattice.Inj
R5216 Coq.Init.Logic "x = y" type_scope
R5232 Coq.Init.Logic.False
R5125 Lattice.t
R5125 Lattice.t
R5271 Lattice.ge
R5373 Lattice.ge
R5363 Lattice.ge
R5353 Lattice.ge
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R5499 Lattice.t
R5504 Lattice.Bot
R5534 Lattice.ge
R5539 Lattice.bot
R5600 Lattice.t
R5605 Lattice.Top
R5635 Lattice.ge
R5638 Lattice.top
R5711 Lattice.t
R5738 Lattice.Bot
R5757 Lattice.Bot
R5770 Lattice.Top
R5780 Lattice.Top
R5791 Lattice.Top
R5798 Lattice.Top
R5806 Lattice.Inj
R5813 Lattice.Inj
R5850 Lattice.Top
R5839 Lattice.Inj
R5706 Lattice.t
R5706 Lattice.t
R5900 Coq.Init.Logic "x = y" type_scope
R5892 Lattice.lub
R5902 Lattice.lub
R6054 Lattice.ge
R6058 Lattice.lub
R6228 Coq.Init.Datatypes.bool
R6262 Coq.Init.Specif "{ A } + { B }" type_scope
R6264 Coq.Init.Logic "x = y" type_scope
R6272 Coq.Init.Logic "x <> y" type_scope
R6258 Lattice.t
R6258 Lattice.t
R6347 Coq.Init.Logic "A \/ B" type_scope
R6343 Coq.Init.Logic "x = y" type_scope
R6352 Coq.Init.Logic "x = y" type_scope
R6354 Coq.Init.Datatypes.true
R6328 Lattice.t
R6328 Lattice.t
R6386 Lattice.ge
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R6475 Lattice.ge
R6465 Lattice.ge
R6455 Lattice.ge
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R6547 Coq.Init.Datatypes.false
R6579 Lattice.ge
R6584 Lattice.bot
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R6648 Coq.Init.Datatypes.true
R6679 Lattice.ge
R6682 Lattice.top
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R6754 Coq.Bool.Bool "x || y" bool_scope
R6746 Lattice.t
R6746 Lattice.t
R6799 Coq.Init.Logic "x = y" type_scope
R6791 Lattice.lub
R6801 Lattice.lub
R6843 Coq.Bool.Bool.orb_comm
R6843 Coq.Bool.Bool.orb_comm
R6890 Lattice.ge
R6894 Lattice.lub
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
FSets
R212 Coq.Init.Datatypes.unit
R248 Coq.Init.Specif "{ A } + { B }" type_scope
R250 Coq.Init.Logic "x = y" type_scope
R258 Coq.Init.Logic "x <> y" type_scope
R244 Sets.t
R244 Sets.t
R394 Coq.Init.Datatypes.unit
R462 Coq.Init.Datatypes.None
R470 Coq.Init.Datatypes.false
R478 Coq.Init.Datatypes.Some
R488 Coq.Init.Datatypes.true
R431 Sets.t
R422 Sets.elt
R543 Coq.Init.Datatypes.tt
R529 Sets.t
R520 Sets.elt
R583 Sets.t
R574 Sets.elt
R707 Coq.Init.Datatypes.None
R713 Coq.Init.Datatypes.None
R721 Coq.Init.Datatypes.None
R744 Coq.Init.Datatypes.Some
R749 Coq.Init.Datatypes.tt
R631 Sets.t
R631 Sets.t
R824 Coq.Init.Logic "x = y" type_scope
R812 Sets.mem
R818 Sets.empty
R826 Coq.Init.Datatypes.false
R958 Coq.Init.Logic "x = y" type_scope
R942 Sets.mem
R949 Sets.add
R960 Coq.Init.Datatypes.true
R1103 Coq.Init.Logic "x = y" type_scope
R1086 Sets.mem
R1094 Sets.add
R1105 Sets.mem
R1077 Coq.Init.Logic "x <> y" type_scope
R1242 Coq.Init.Logic "x = y" type_scope
R1223 Sets.mem
R1230 Sets.remove
R1244 Coq.Init.Datatypes.false
R1397 Coq.Init.Logic "x = y" type_scope
R1377 Sets.mem
R1385 Sets.remove
R1399 Sets.mem
R1368 Coq.Init.Logic "x <> y" type_scope
R1538 Coq.Init.Logic "x = y" type_scope
R1518 Sets.mem
R1525 Sets.union
R1550 Coq.Bool.Bool "x || y" bool_scope
R1541 Sets.mem
R1553 Sets.mem
R1727 Coq.Lists.List.map
R1738 Coq.Init.Datatypes.fst
R1746 Coq.Init.Datatypes.unit
R1742 Sets.elt
R1717 Sets.t
R1829 Coq.Lists.List.In
R1835 Sets.elements
R1819 Coq.Init.Logic "x = y" type_scope
R1811 Sets.mem
R1821 Coq.Init.Datatypes.true
R1946 Coq.Init.Datatypes.fst
R1950 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R1946 Coq.Init.Datatypes.fst
R1950 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R1965 Coq.Lists.List.in_map
R1965 Coq.Lists.List.in_map
R2120 Coq.Init.Logic "x = y" type_scope
R2112 Sets.mem
R2122 Coq.Init.Datatypes.true
R2091 Coq.Lists.List.In
R2097 Sets.elements
R2188 Coqlib.list_in_map_inv
R2188 Coqlib.list_in_map_inv
R2433 Coq.Init.Datatypes.unit
R2424 Sets.elt
R2384 Sets.t
R2370 Sets.elt
R2543 Coq.Init.Logic "x = y" type_scope
R2532 Sets.fold
R2545 Coq.Lists.List.fold_left
R2563 Sets.elements
R2517 Sets.t
R2503 Sets.elt
R2785 Sets.fold
R2818 Coq.Init.Datatypes.true
R2802 Coq.Bool.Bool.andb
R2775 Sets.t
R2765 Coq.Init.Datatypes.bool
R2758 Sets.elt
R2913 Coq.Init.Logic "x = y" type_scope
R2915 Coq.Init.Datatypes.true
R2899 Coq.Init.Logic "x = y" type_scope
R2891 Sets.mem
R2901 Coq.Init.Datatypes.true
R2881 Coq.Init.Logic "x = y" type_scope
R2869 Sets.for_all
R2883 Coq.Init.Datatypes.true
R2974 Sets.fold_spec
R2974 Sets.fold_spec
R3089 Coq.Init.Logic "x = y" type_scope
R3091 Coq.Init.Datatypes.true
R3070 Coq.Init.Logic "x = y" type_scope
R3016 Coq.Lists.List.fold_left
R3057 Coq.Bool.Bool "x && y" bool_scope
R3047 Sets.elt
R3036 Coq.Init.Datatypes.bool
R3072 Coq.Init.Datatypes.true
R3089 Coq.Init.Logic "x = y" type_scope
R3091 Coq.Init.Datatypes.true
R3070 Coq.Init.Logic "x = y" type_scope
R3016 Coq.Lists.List.fold_left
R3057 Coq.Bool.Bool "x && y" bool_scope
R3047 Sets.elt
R3036 Coq.Init.Datatypes.bool
R3072 Coq.Init.Datatypes.true
R3183 Coq.Bool.Bool.andb_prop
R3183 Coq.Bool.Bool.andb_prop
R3330 Coq.Init.Logic "x = y" type_scope
R3332 Coq.Init.Datatypes.true
R3316 Coq.Lists.List.In
R3300 Coq.Init.Logic "x = y" type_scope
R3244 Coq.Lists.List.fold_left
R3295 Coq.Init.Datatypes.true
R3285 Coq.Bool.Bool "x && y" bool_scope
R3275 Sets.elt
R3264 Coq.Init.Datatypes.bool
R3302 Coq.Init.Datatypes.true
R3330 Coq.Init.Logic "x = y" type_scope
R3332 Coq.Init.Datatypes.true
R3316 Coq.Lists.List.In
R3300 Coq.Init.Logic "x = y" type_scope
R3244 Coq.Lists.List.fold_left
R3295 Coq.Init.Datatypes.true
R3285 Coq.Bool.Bool "x && y" bool_scope
R3275 Sets.elt
R3264 Coq.Init.Datatypes.bool
R3302 Coq.Init.Datatypes.true
R3544 Sets.elements_correct
R3544 Sets.elements_correct
R3655 Coq.Init.Logic "x = y" type_scope
R3646 Sets.mem
R3657 Coq.Init.Datatypes.true
R3636 Coq.Init.Logic "x = y" type_scope
R3627 Sets.mem
R3638 Coq.Init.Datatypes.true
R3600 Sets.t
R3600 Sets.t
R3691 Sets.ge
R3797 Sets.ge
R3787 Sets.ge
R3777 Sets.ge
R3871 Sets.empty
R3898 Sets.union
R3936 Sets.ge
R3941 Sets.bot
R3932 Sets.t
R3986 Sets.mem_empty
R3986 Sets.mem_empty
R4069 Coq.Init.Logic "x = y" type_scope
R4061 Sets.lub
R4071 Sets.lub
R4057 Sets.t
R4057 Sets.t
R4231 Sets.ge
R4235 Sets.lub
R4227 Sets.t
R4227 Sets.t
R4297 Sets.mem_union
R4297 Sets.mem_union
R4379 Sets.ge
R4383 Sets.lub
R4375 Sets.t
R4375 Sets.t
R4424 Sets.lub_commut
R4424 Sets.lub_commut
R4442 Sets.ge_lub_left
R4442 Sets.ge_lub_left
Funion_find
R82 Coq.Init.Logic.refl_equal
R197 Coq.Init.Logic "'exists' x : t , p" type_scope
R288 Coq.Init.Logic "A /\ B" type_scope
R362 Coq.Init.Logic "A \/ B" type_scope
R626 Coq.Init.Specif "{ A } + { B }" type_scope
R629 Coq.Init.Logic "x = y" type_scope
R639 Coq.Init.Logic "x <> y" type_scope
R622 union_find.T
R622 union_find.T
R775 union_find.T
R806 Coq.Init.Datatypes.option
R813 union_find.elt
R801 union_find.T
R794 union_find.elt
R853 union_find.T
R848 union_find.T
R841 union_find.elt
R834 union_find.elt
R910 Coq.Init.Logic "x = y" type_scope
R898 union_find.get
R904 union_find.empty
R912 Coq.Init.Datatypes.None
R892 union_find.elt
R989 Coq.Init.Logic "x = y" type_scope
R971 union_find.get
R978 union_find.add
R991 Coq.Init.Datatypes.Some
R967 union_find.T
R958 union_find.elt
R958 union_find.elt
R1082 Coq.Init.Logic "x = y" type_scope
R1064 union_find.get
R1071 union_find.add
R1084 union_find.get
R1056 Coq.Init.Logic "x <> y" type_scope
R1050 union_find.T
R1041 union_find.elt
R1041 union_find.elt
R1041 union_find.elt
R1226 union_find.T
R1258 union_find.elt
R1251 union_find.elt
R1246 union_find.T
R1303 union_find.T
R1296 union_find.elt
R1289 union_find.elt
R1284 union_find.T
R1367 Coq.Init.Logic "x = y" type_scope
R1358 union_find.repr
R1369 union_find.repr
R1343 union_find.elt
R1343 union_find.elt
R1334 union_find.T
R1482 union_find.sameclass
R1476 union_find.elt
R1469 union_find.T
R1576 union_find.sameclass
R1557 union_find.sameclass
R1551 union_find.elt
R1551 union_find.elt
R1542 union_find.T
R1697 union_find.sameclass
R1678 union_find.sameclass
R1659 union_find.sameclass
R1649 union_find.elt
R1649 union_find.elt
R1649 union_find.elt
R1638 union_find.T
R1852 Coq.Init.Logic "x = y" type_scope
R1834 union_find.repr
R1842 union_find.repr
R1854 union_find.repr
R1828 union_find.elt
R1821 union_find.T
R1921 union_find.sameclass
R1936 union_find.repr
R1915 union_find.elt
R1908 union_find.T
R2044 Coq.Init.Logic "x = y" type_scope
R2031 union_find.repr
R2036 union_find.empty
R2025 union_find.elt
R2127 Coq.Init.Logic "x = y" type_scope
R2102 union_find.sameclass
R2112 union_find.empty
R2096 union_find.elt
R2096 union_find.elt
R2310 union_find.sameclass
R2321 union_find.identify
R2304 union_find.elt
R2304 union_find.elt
R2295 union_find.T
R2434 union_find.sameclass
R2445 union_find.identify
R2415 union_find.sameclass
R2405 union_find.elt
R2405 union_find.elt
R2405 union_find.elt
R2405 union_find.elt
R2392 union_find.T
R3110 Coq.Init.Logic "x = y" type_scope
R3112 Coq.Init.Datatypes.Some
R3082 union_find.elt
R3082 union_find.elt
R3237 Coq.Init.Specif "A + { B }" type_scope
R3215 Coq.Init.Specif "{ x : A  |  P }" type_scope
R3227 Coq.Init.Logic "x = y" type_scope
R3229 Coq.Init.Datatypes.Some
R3219 union_find.elt
R3242 Coq.Init.Logic "x = y" type_scope
R3244 Coq.Init.Datatypes.None
R3202 Coq.Init.Datatypes.option
R3209 union_find.elt
R3422 union_find.option_sum
R3457 Coq.Init.Specif.inleft
R3465 Coq.Init.Specif.exist
R3494 Coq.Init.Specif.inright
R3403 union_find.elt
R3383 union_find.repr_order
R3378 union_find.elt
R3357 union_find.elt
R3598 union_find.elt
R3607 Coq.Init.Wf.Fix
R3637 union_find.repr_rec
R3631 union_find.elt
R3623 union_find.elt
R3591 union_find.elt
R3558 Coq.Init.Wf.well_founded
R3572 union_find.repr_order
R3823 Coq.Init.Logic "x = y" type_scope
R3808 union_find.repr_rec
R3825 union_find.repr_rec
R3794 Coq.Init.Logic "x = y" type_scope
R3769 union_find.repr_order
R3760 union_find.elt
R3740 union_find.elt
R3720 union_find.repr_order
R3715 union_find.elt
R3740 union_find.elt
R3720 union_find.repr_order
R3715 union_find.elt
R3695 union_find.elt
R3884 union_find.option_sum
R3884 union_find.option_sum
R4089 Coq.Init.Logic "x = y" type_scope
R4073 union_find.repr_aux
R4061 Coq.Init.Logic "x = y" type_scope
R4063 Coq.Init.Datatypes.None
R4043 union_find.elt
R4010 Coq.Init.Wf.well_founded
R4024 union_find.repr_order
R4126 Coq.Init.Wf.Fix_eq
R4171 union_find.repr_rec_ext
R4158 union_find.repr_rec
R4152 union_find.elt
R4144 union_find.elt
R4126 Coq.Init.Wf.Fix_eq
R4171 union_find.repr_rec_ext
R4158 union_find.repr_rec
R4152 union_find.elt
R4144 union_find.elt
R4259 union_find.option_sum
R4259 union_find.option_sum
R4494 Coq.Init.Logic "x = y" type_scope
R4478 union_find.repr_aux
R4496 union_find.repr_aux
R4463 Coq.Init.Logic "x = y" type_scope
R4465 Coq.Init.Datatypes.Some
R4445 union_find.elt
R4445 union_find.elt
R4409 Coq.Init.Wf.well_founded
R4423 union_find.repr_order
R4546 Coq.Init.Wf.Fix_eq
R4591 union_find.repr_rec_ext
R4578 union_find.repr_rec
R4572 union_find.elt
R4564 union_find.elt
R4546 Coq.Init.Wf.Fix_eq
R4591 union_find.repr_rec_ext
R4578 union_find.repr_rec
R4572 union_find.elt
R4564 union_find.elt
R4675 union_find.option_sum
R4675 union_find.option_sum
R4943 Coq.Init.Logic "x = y" type_scope
R4924 union_find.repr_aux
R4945 Coq.Init.Datatypes.None
R4909 union_find.elt
R4876 Coq.Init.Wf.well_founded
R4890 union_find.repr_order
R4977 Coq.Init.Wf.well_founded_ind
R5040 Coq.Init.Logic "x = y" type_scope
R5021 union_find.repr_aux
R5042 Coq.Init.Datatypes.None
R5006 union_find.elt
R4977 Coq.Init.Wf.well_founded_ind
R5040 Coq.Init.Logic "x = y" type_scope
R5021 union_find.repr_aux
R5042 Coq.Init.Datatypes.None
R5006 union_find.elt
R5074 Coq.Init.Wf.Fix_eq
R5119 union_find.repr_rec_ext
R5106 union_find.repr_rec
R5100 union_find.elt
R5092 union_find.elt
R5074 Coq.Init.Wf.Fix_eq
R5119 union_find.repr_rec_ext
R5106 union_find.repr_rec
R5100 union_find.elt
R5092 union_find.elt
R5206 union_find.option_sum
R5206 union_find.option_sum
R5427 Coq.Init.Wf.well_founded
R5441 union_find.repr_order
R5489 Coq.Init.Wf.Acc_intro
R5489 Coq.Init.Wf.Acc_intro
R5670 Coq.Init.Wf.well_founded
R5684 union_find.repr_order
R5713 union_find.elt
R5741 Coq.Init.Logic "x <> y" type_scope
R5777 Coq.Init.Logic "x = y" type_scope
R5779 Coq.Init.Datatypes.None
R5815 Coq.Init.Logic "x = y" type_scope
R5817 Coq.Init.Datatypes.None
R5923 Coq.Init.Logic "x = y" type_scope
R5909 union_find.identify_base
R5925 Coq.Init.Datatypes.None
R6001 Coq.Init.Logic.sym_not_eq
R6001 Coq.Init.Logic.sym_not_eq
R6082 Coq.Init.Logic "x = y" type_scope
R6068 union_find.identify_base
R6084 Coq.Init.Datatypes.Some
R6262 Coq.Init.Logic "A \/ B" type_scope
R6245 union_find.repr_order
R6272 Coq.Init.Logic "A /\ B" type_scope
R6268 Coq.Init.Logic "x = y" type_scope
R6277 Coq.Init.Logic "x = y" type_scope
R6211 union_find.repr_order
R6222 union_find.identify_base
R6203 union_find.elt
R6203 union_find.elt
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R6522 Coq.Init.Wf.well_founded
R6536 union_find.repr_order
R6547 union_find.identify_base
R6626 Coq.Init.Wf.Acc
R6631 union_find.repr_order
R6642 union_find.identify_base
R6602 Coq.Init.Wf.Acc
R6607 union_find.repr_order
R6596 union_find.elt
R6626 Coq.Init.Wf.Acc
R6631 union_find.repr_order
R6642 union_find.identify_base
R6602 Coq.Init.Wf.Acc
R6607 union_find.repr_order
R6596 union_find.elt
R6729 Coq.Init.Wf.Acc_intro
R6729 Coq.Init.Wf.Acc_intro
R6758 union_find.identify_base_repr_order
R6758 union_find.identify_base_repr_order
R6832 Coq.Init.Wf.Acc_intro
R6832 Coq.Init.Wf.Acc_intro
R6879 union_find.identify_base_b_canon
R6879 union_find.identify_base_b_canon
R7028 Coq.Init.Logic "A \/ B" type_scope
R6997 Coq.Init.Logic "A /\ B" type_scope
R6990 Coq.Init.Logic "x = y" type_scope
R6992 Coq.Init.Datatypes.None
R7022 Coq.Init.Logic "x = y" type_scope
R7008 union_find.identify_base
R7024 Coq.Init.Datatypes.None
R7095 Coq.Init.Logic "A \/ B" type_scope
R7042 Coq.Init.Logic "A /\ B" type_scope
R7038 Coq.Init.Logic "x = y" type_scope
R7062 Coq.Init.Logic "A /\ B" type_scope
R7055 Coq.Init.Logic "x = y" type_scope
R7057 Coq.Init.Datatypes.None
R7087 Coq.Init.Logic "x = y" type_scope
R7073 union_find.identify_base
R7089 Coq.Init.Datatypes.Some
R7103 Coq.Init.Logic "'exists' x , p" type_scope
R7132 Coq.Init.Logic "A /\ B" type_scope
R7123 Coq.Init.Logic "x = y" type_scope
R7125 Coq.Init.Datatypes.Some
R7157 Coq.Init.Logic "x = y" type_scope
R7143 union_find.identify_base
R7159 Coq.Init.Datatypes.Some
R6968 union_find.elt
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R7482 Coq.Init.Logic "x = y" type_scope
R7434 union_find.repr_aux
R7457 union_find.identify_base_order_wf
R7443 union_find.identify_base
R7496 union_find.repr_aux
R7528 union_find.repr_aux
R7426 union_find.elt
R7575 Coq.Init.Wf.well_founded_ind
R7671 Coq.Init.Logic "x = y" type_scope
R7623 union_find.repr_aux
R7646 union_find.identify_base_order_wf
R7632 union_find.identify_base
R7689 union_find.repr_aux
R7721 union_find.repr_aux
R7609 union_find.elt
R7575 Coq.Init.Wf.well_founded_ind
R7671 Coq.Init.Logic "x = y" type_scope
R7623 union_find.repr_aux
R7646 union_find.identify_base_order_wf
R7632 union_find.identify_base
R7689 union_find.repr_aux
R7721 union_find.repr_aux
R7609 union_find.elt
R7762 union_find.identify_aux_decomp
R7762 union_find.identify_aux_decomp
R7798 union_find.repr_aux_none
R7812 union_find.identify_base
R7798 union_find.repr_aux_none
R7812 union_find.identify_base
R7839 union_find.repr_aux_none
R7839 union_find.repr_aux_none
R7910 union_find.identify_base_a_maps_to_b
R7910 union_find.identify_base_a_maps_to_b
R8000 union_find.repr_aux_none
R8000 union_find.repr_aux_none
R8067 union_find.repr_aux_some
R8095 union_find.identify_base_order_wf
R8081 union_find.identify_base
R8067 union_find.repr_aux_some
R8095 union_find.identify_base_order_wf
R8081 union_find.identify_base
R8135 union_find.repr_aux_none
R8163 union_find.identify_base_order_wf
R8149 union_find.identify_base
R8135 union_find.repr_aux_none
R8163 union_find.identify_base_order_wf
R8149 union_find.identify_base
R8204 union_find.identify_base_b_canon
R8204 union_find.identify_base_b_canon
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R8255 union_find.repr_aux_some
R8283 union_find.identify_base_order_wf
R8269 union_find.identify_base
R8255 union_find.repr_aux_some
R8283 union_find.identify_base_order_wf
R8269 union_find.identify_base
R8330 union_find.repr_aux_some
R8330 union_find.repr_aux_some
R8514 Coq.Init.Logic "x = y" type_scope
R8466 union_find.repr_aux
R8489 union_find.identify_base_order_wf
R8475 union_find.identify_base
R8520 union_find.repr_aux
R8543 union_find.identify_base_order_wf
R8529 union_find.identify_base
R8442 Coq.Init.Logic "x = y" type_scope
R8425 union_find.repr_aux
R8444 union_find.repr_aux
R8417 union_find.elt
R8417 union_find.elt
R8596 union_find.identify_base_repr
R8596 union_find.identify_base_repr
R8626 union_find.identify_base_repr
R8626 union_find.identify_base_repr
R8829 Coq.Init.Logic "x = y" type_scope
R8781 union_find.repr_aux
R8804 union_find.identify_base_order_wf
R8790 union_find.identify_base
R8833 union_find.repr_aux
R8856 union_find.identify_base_order_wf
R8842 union_find.identify_base
R8772 Coq.Init.Logic "x = y" type_scope
R8755 union_find.repr_aux
R8746 Coq.Init.Logic "x = y" type_scope
R8729 union_find.repr_aux
R8721 union_find.elt
R8721 union_find.elt
R8909 union_find.identify_base_repr
R8909 union_find.identify_base_repr
R8939 union_find.identify_base_repr
R8939 union_find.identify_base_repr
R9013 union_find.repr_aux
R9013 union_find.repr_aux
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R9174 Coq.Init.Wf.well_founded
R9188 union_find.repr_order
R9224 union_find.unionfind
R9279 union_find.elt
R9288 union_find.repr_aux
R9307 union_find.wf
R9298 union_find.map
R9272 union_find.elt
R9257 union_find.unionfind
R9390 Coq.Init.Logic "x = y" type_scope
R9370 union_find.repr
R9379 union_find.repr
R9392 union_find.repr
R9364 union_find.elt
R9349 union_find.unionfind
R9446 union_find.repr_aux_none
R9478 union_find.repr_aux
R9497 union_find.wf
R9488 union_find.map
R9470 union_find.wf
R9461 union_find.map
R9446 union_find.repr_aux_none
R9478 union_find.repr_aux
R9497 union_find.wf
R9488 union_find.map
R9470 union_find.wf
R9461 union_find.map
R9525 union_find.repr_aux_canon
R9525 union_find.repr_aux_canon
R9568 union_find.mkunionfind
R9588 union_find.wf_empty
R9648 union_find.unionfind
R9687 union_find.repr
R9675 union_find.repr
R9707 Coq.Init.Specif.left
R9731 Coq.Init.Specif.right
R9752 union_find.mkunionfind
R9830 union_find.identify_base_order_wf
R9937 union_find.repr_aux_canon
R9962 union_find.wf
R9953 union_find.map
R9895 union_find.repr
R9883 union_find.repr
R9863 union_find.wf
R9854 union_find.map
R9773 union_find.identify_base
R9809 union_find.repr
R9797 union_find.repr
R9788 union_find.map
R9641 union_find.elt
R9641 union_find.elt
R9624 union_find.unionfind
R10051 Coq.Init.Logic "x = y" type_scope
R10041 union_find.repr
R10053 union_find.repr
R10024 union_find.elt
R10024 union_find.elt
R10007 union_find.unionfind
R10122 union_find.sameclass
R10116 union_find.elt
R10101 union_find.unionfind
R10252 union_find.sameclass
R10232 union_find.sameclass
R10226 union_find.elt
R10226 union_find.elt
R10209 union_find.unionfind
R10421 union_find.sameclass
R10401 union_find.sameclass
R10381 union_find.sameclass
R10373 union_find.elt
R10373 union_find.elt
R10373 union_find.elt
R10354 union_find.unionfind
R10475 union_find.repr
R10475 union_find.repr
R10569 union_find.sameclass
R10585 union_find.repr
R10563 union_find.elt
R10548 union_find.unionfind
R10637 union_find.repr_repr
R10637 union_find.repr_repr
R10710 Coq.Init.Logic "x = y" type_scope
R10697 union_find.repr
R10702 union_find.empty
R10691 union_find.elt
R10777 union_find.repr_aux_none
R10777 union_find.repr_aux_none
R10888 Coq.Init.Logic "x = y" type_scope
R10863 union_find.sameclass
R10873 union_find.empty
R10857 union_find.elt
R10857 union_find.elt
R10928 union_find.repr_empty
R10928 union_find.repr_empty
R10955 union_find.repr_empty
R10955 union_find.repr_empty
R11075 union_find.sameclass
R11086 union_find.identify
R11055 union_find.sameclass
R11047 union_find.elt
R11047 union_find.elt
R11047 union_find.elt
R11047 union_find.elt
R11026 union_find.unionfind
R11170 union_find.repr
R11158 union_find.repr
R11170 union_find.repr
R11158 union_find.repr
R11241 union_find.identify_base_sameclass_1
R11241 union_find.identify_base_sameclass_1
R11276 union_find.repr_aux_canon
R11276 union_find.repr_aux_canon
R11376 union_find.sameclass
R11387 union_find.identify
R11368 union_find.elt
R11368 union_find.elt
R11351 union_find.unionfind
R11471 union_find.repr
R11459 union_find.repr
R11471 union_find.repr
R11459 union_find.repr
R11544 union_find.identify_base_sameclass_2
R11544 union_find.identify_base_sameclass_2
R11579 union_find.repr_aux_canon
R11579 union_find.repr_aux_canon
FInclusion
R573 Coq.Lists.List.cons
R581 Coq.Lists.List.nil
R612 Coq.Lists.List.cons
R689 Coq.Lists.List.app
R766 Coq.Lists.List.app
R665 Coq.Lists.List.app
R670 Coq.Lists.List.cons
R677 Coq.Lists.List.nil
R596 Coq.Lists.List.cons
R603 Coq.Lists.List.nil
R964 Coq.Init.Datatypes.nat
R1020 Inclusion.bin
R1003 Inclusion.bin
R1003 Inclusion.bin
R1046 Inclusion.node
R1105 Inclusion.node
R1003 Inclusion.bin
R1003 Inclusion.bin
R1151 Inclusion.bin
R1144 Inclusion.bin
R1177 Inclusion.node
R1191 Inclusion.flatten_aux
R1144 Inclusion.bin
R1281 Coq.Init.Datatypes.bool
R1264 Coq.Init.Datatypes.nat
R1264 Coq.Init.Datatypes.nat
R1311 Coq.Init.Datatypes.O
R1319 Coq.Init.Datatypes.true
R1328 Coq.Init.Datatypes.S
R1333 Coq.Init.Datatypes.O
R1338 Coq.Init.Datatypes.false
R1348 Coq.Init.Datatypes.S
R1353 Coq.Init.Datatypes.S
R1264 Coq.Init.Datatypes.nat
R1264 Coq.Init.Datatypes.nat
R1431 Inclusion.bin
R1414 Inclusion.bin
R1407 Coq.Init.Datatypes.nat
R1457 Inclusion.leaf
R1475 Inclusion.nat_le_bool
R1541 Inclusion.node
R1555 Inclusion.leaf
R1547 Inclusion.leaf
R1503 Inclusion.node
R1517 Inclusion.leaf
R1509 Inclusion.leaf
R1567 Inclusion.node
R1573 Inclusion.leaf
R1594 Inclusion.nat_le_bool
R1636 Inclusion.node
R1642 Inclusion.leaf
R1615 Inclusion.node
R1621 Inclusion.leaf
R1676 Inclusion.node
R1682 Inclusion.leaf
R1414 Inclusion.bin
R1407 Coq.Init.Datatypes.nat
R1728 Inclusion.bin
R1721 Inclusion.bin
R1754 Inclusion.node
R1760 Inclusion.leaf
R1774 Inclusion.insert_bin
R1721 Inclusion.bin
R1921 Coq.Init.Logic "x = y" type_scope
R1973 Inclusion.bin
R1956 Coq.Lists.List.list
R2016 Inclusion.node
R2070 Inclusion.leaf
R2080 Coq.Lists.List.nth
R1973 Inclusion.bin
R1956 Coq.Lists.List.list
R2207 Coq.Init.Logic "x = y" type_scope
R2191 Inclusion.bin_A
R2176 Inclusion.bin_A
R2209 Inclusion.bin_A
R2222 Inclusion.flatten_aux
R2164 Inclusion.bin
R2164 Inclusion.bin
R2144 Coq.Lists.List.list
R2464 Coq.Init.Logic "x = y" type_scope
R2450 Inclusion.bin_A
R2466 Inclusion.bin_A
R2479 Inclusion.flatten
R2440 Inclusion.bin
R2423 Coq.Lists.List.list
R2578 Inclusion.flatten_aux_valid_A
R2578 Inclusion.flatten_aux_valid_A
R2696 Coq.Lists.List.cons
R2782 Coq.Init.Logic "x = y" type_scope
R2822 Coq.Init.Datatypes.S
R2761 Coq.Init.Logic "x = y" type_scope
R2891 Coq.Lists.List.app
R2982 Coq.Lists.List.cons
R3047 Coq.Lists.List.app
R3231 Inclusion.leaf
R3206 Inclusion.leaf
R3143 Inclusion.node
R3347 Coq.Lists.List.In
R3354 Coq.Lists.List "x ++ y" list_scope
R3357 Coq.Lists.List "x ++ y" list_scope
R3329 Coq.Lists.List.In
R3336 Coq.Lists.List "x ++ y" list_scope
R3339 Coq.Lists.List "x ++ y" list_scope
R3318 Coq.Lists.List.list
R3318 Coq.Lists.List.list
R3318 Coq.Lists.List.list
R3403 Coq.Lists.List.incl
R3419 Coq.Lists.List "x ++ y" list_scope
R3422 Coq.Lists.List "x ++ y" list_scope
R3410 Coq.Lists.List "x ++ y" list_scope
R3413 Coq.Lists.List "x ++ y" list_scope
R3403 Coq.Lists.List.incl
R3419 Coq.Lists.List "x ++ y" list_scope
R3422 Coq.Lists.List "x ++ y" list_scope
R3410 Coq.Lists.List "x ++ y" list_scope
R3413 Coq.Lists.List "x ++ y" list_scope
R3444 Coq.Lists.List.ass_app
R3444 Coq.Lists.List.ass_app
R3444 Coq.Lists.List.ass_app
R3444 Coq.Lists.List.ass_app
R3669 Coq.Lists.List.In
R3675 Inclusion.bin_A
R3710 Inclusion.node
R3716 Inclusion.leaf
R3691 Coq.Lists.List.app
R3682 Coq.Lists.List.list
R3602 Coq.Lists.List.In
R3608 Inclusion.bin_A
R3643 Inclusion.insert_bin
R3624 Coq.Lists.List.app
R3615 Coq.Lists.List.list
R3587 Coq.Lists.List.list
R3568 Coq.Lists.List.list
R3574 Coq.Lists.List.list
R3537 Inclusion.bin
R3522 Coq.Init.Datatypes.nat
R3831 Coq.Lists.List.app_ass
R3831 Coq.Lists.List.app_ass
R3831 Coq.Lists.List.app_ass
R3868 Coq.Lists.List.app_ass
R3868 Coq.Lists.List.app_ass
R3890 Inclusion.nat_le_bool
R3890 Inclusion.nat_le_bool
R3937 Inclusion.In_permute_app_head
R3937 Inclusion.In_permute_app_head
R3963 Coq.Lists.List.in_app_or
R3963 Coq.Lists.List.in_app_or
R4012 Coq.Lists.List.in_or_app
R4012 Coq.Lists.List.in_or_app
R4047 Coq.Lists.List.in_or_app
R4047 Coq.Lists.List.in_or_app
R4128 Inclusion.nat_le_bool
R4128 Inclusion.nat_le_bool
R4178 Coq.Lists.List.app_nil_end
R4191 Coq.Lists.List.nth
R4178 Coq.Lists.List.app_nil_end
R4191 Coq.Lists.List.nth
R4220 Coq.Lists.List.app_nil_end
R4233 Coq.Lists.List.nth
R4220 Coq.Lists.List.app_nil_end
R4233 Coq.Lists.List.nth
R4254 Inclusion.In_permute_app_head
R4254 Inclusion.In_permute_app_head
R4462 Coq.Lists.List.In
R4468 Inclusion.bin_A
R4502 Inclusion.insert_bin
R4483 Coq.Lists.List.app
R4475 Coq.Lists.List.list
R4411 Coq.Init.Logic "A \/ B" type_scope
R4392 Coq.Lists.List.In
R4398 Coq.Lists.List.nth
R4414 Coq.Lists.List.In
R4420 Inclusion.bin_A
R4435 Coq.Lists.List.app
R4427 Coq.Lists.List.list
R4381 Coq.Lists.List.list
R4361 Coq.Lists.List.list
R4367 Coq.Lists.List.list
R4341 Inclusion.bin
R4332 Coq.Init.Datatypes.nat
R4606 Coq.Lists.List.in_or_app
R4606 Coq.Lists.List.in_or_app
R4630 Inclusion.nat_le_bool
R4630 Inclusion.nat_le_bool
R4671 Coq.Lists.List.in_or_app
R4671 Coq.Lists.List.in_or_app
R4711 Coq.Lists.List.in_or_app
R4711 Coq.Lists.List.in_or_app
R4754 Coq.Lists.List.in_app_or
R4802 Coq.Lists.List.in_or_app
R4754 Coq.Lists.List.in_app_or
R4802 Coq.Lists.List.in_or_app
R4802 Coq.Lists.List.in_or_app
R4846 Inclusion.nat_le_bool
R4878 Coq.Lists.List.in_or_app
R4846 Inclusion.nat_le_bool
R4846 Inclusion.nat_le_bool
R4878 Coq.Lists.List.in_or_app
R4878 Coq.Lists.List.in_or_app
R4878 Coq.Lists.List.in_or_app
R4878 Coq.Lists.List.in_or_app
R5055 Coq.Lists.List.In
R5061 Inclusion.bin_A
R5077 Coq.Lists.List.app
R5068 Coq.Lists.List.list
R4994 Coq.Lists.List.In
R5000 Inclusion.bin_A
R5035 Inclusion.sort_bin
R5016 Coq.Lists.List.app
R5007 Coq.Lists.List.list
R4981 Coq.Lists.List.list
R4963 Coq.Lists.List.list
R4968 Coq.Lists.List.list
R4936 Inclusion.bin
R5189 Inclusion.insert_bin_included
R5189 Inclusion.insert_bin_included
R5222 Inclusion.insert_bin_included
R5222 Inclusion.insert_bin_included
R5294 Coq.Lists.List.in_app_or
R5343 Inclusion.in_or_insert_bin
R5294 Coq.Lists.List.in_app_or
R5343 Inclusion.in_or_insert_bin
R5343 Inclusion.in_or_insert_bin
R5542 Coq.Lists.List.In
R5548 Inclusion.bin_A
R5583 Inclusion.sort_bin
R5564 Coq.Lists.List.app
R5555 Coq.Lists.List.list
R5492 Coq.Lists.List.In
R5498 Inclusion.bin_A
R5514 Coq.Lists.List.app
R5505 Coq.Lists.List.list
R5479 Coq.Lists.List.list
R5461 Coq.Lists.List.list
R5466 Coq.Lists.List.list
R5434 Inclusion.bin
R5695 Inclusion.in_or_insert_bin
R5695 Inclusion.in_or_insert_bin
R5718 Coq.Lists.List.in_app_or
R5718 Coq.Lists.List.in_app_or
R5875 Coq.Lists.List.In
R5883 Coq.Lists.List "x ++ y" list_scope
R5863 Coq.Lists.List.In
R5852 Coq.Lists.List.In
R5834 Coq.Lists.List.In
R5842 Coq.Lists.List "x ++ y" list_scope
R5823 Coq.Lists.List.list
R5823 Coq.Lists.List.list
R5823 Coq.Lists.List.list
R5921 Coq.Lists.List.in_app_or
R5969 Coq.Lists.List.in_or_app
R5921 Coq.Lists.List.in_app_or
R5969 Coq.Lists.List.in_or_app
R5969 Coq.Lists.List.in_or_app
R6046 Coq.Init.Datatypes.bool
R6028 Inclusion.bin
R6021 Coq.Init.Datatypes.nat
R6073 Inclusion.leaf
R6084 Coq.ring.ArithRing.nateq
R6099 Inclusion.node
R6113 Coq.Bool.Bool.andb
R6028 Inclusion.bin
R6021 Coq.Init.Datatypes.nat
R6227 Inclusion.bin
R6210 Inclusion.bin
R6203 Coq.Init.Datatypes.nat
R6253 Inclusion.leaf
R6263 Inclusion.leaf
R6274 Inclusion.node
R6280 Inclusion.leaf
R6302 Coq.ring.ArithRing.nateq
R6210 Inclusion.bin
R6203 Coq.Init.Datatypes.nat
R6417 Coq.Init.Datatypes.bool
R6398 Inclusion.bin
R6398 Inclusion.bin
R6445 Inclusion.leaf
R6455 Inclusion.check_all_leaves
R6481 Inclusion.node
R6487 Inclusion.leaf
R6531 Coq.Bool.Bool "x || y" bool_scope
R6508 Inclusion.check_all_leaves
R6554 Inclusion.remove_all_leaves
R6588 Coq.Init.Datatypes.false
R6398 Inclusion.bin
R6398 Inclusion.bin
R6794 Coq.Lists.List.In
R6800 Coq.Lists.List.nth
R6743 Coq.Lists.List.In
R6749 Inclusion.bin_A
R6765 Coq.Lists.List.app
R6756 Coq.Lists.List.list
R6730 Coq.Lists.List.list
R6712 Coq.Lists.List.list
R6717 Coq.Lists.List.list
R6676 Coq.Init.Logic "x = y" type_scope
R6654 Inclusion.check_all_leaves
R6678 Coq.Init.Datatypes.true
R6858 Inclusion.check_all_leaves
R6894 Inclusion.check_all_leaves
R6858 Inclusion.check_all_leaves
R6894 Inclusion.check_all_leaves
R6894 Inclusion.check_all_leaves
R6982 Coq.Lists.List.in_app_or
R6982 Coq.Lists.List.in_app_or
R7062 Coq.ring.ArithRing.nateq_prop
R7062 Coq.ring.ArithRing.nateq_prop
R7341 Coq.Init.Logic "A \/ B" type_scope
R7276 Coq.Lists.List.In
R7282 Inclusion.bin_A
R7316 Inclusion.remove_all_leaves
R7298 Coq.Lists.List.app
R7289 Coq.Lists.List.list
R7346 Coq.Lists.List.In
R7352 Coq.Lists.List.nth
R7228 Coq.Lists.List.In
R7234 Inclusion.bin_A
R7250 Coq.Lists.List.app
R7241 Coq.Lists.List.list
R7217 Coq.Lists.List.list
R7199 Coq.Lists.List.list
R7204 Coq.Lists.List.list
R7458 Coq.Init.Logic.refl_equal
R7470 Coq.ring.ArithRing.nateq
R7492 Coq.ring.ArithRing.nateq
R7517 Coq.ring.ArithRing.nateq
R7458 Coq.Init.Logic.refl_equal
R7470 Coq.ring.ArithRing.nateq
R7492 Coq.ring.ArithRing.nateq
R7517 Coq.ring.ArithRing.nateq
R7578 Coq.Init.Logic "x = y" type_scope
R7578 Coq.Init.Logic "x = y" type_scope
R7589 Coq.ring.ArithRing.nateq_prop
R7589 Coq.ring.ArithRing.nateq_prop
R7671 Coq.Lists.List.in_app_or
R7671 Coq.Lists.List.in_app_or
R7948 Coq.Lists.List.In
R7954 Inclusion.bin_A
R7969 Coq.Lists.List.app
R7961 Coq.Lists.List.list
R7901 Coq.Lists.List.In
R7907 Inclusion.bin_A
R7922 Coq.Lists.List.app
R7914 Coq.Lists.List.list
R7890 Coq.Lists.List.list
R7872 Coq.Lists.List.list
R7877 Coq.Lists.List.list
R7838 Coq.Init.Logic "x = y" type_scope
R7817 Inclusion.test_inclusion
R7840 Coq.Init.Datatypes.true
R7810 Inclusion.bin
R7810 Inclusion.bin
R8152 Coq.Init.Logic "A \/ B" type_scope
R8145 Coq.Init.Logic "x = y" type_scope
R8123 Inclusion.check_all_leaves
R8147 Coq.Init.Datatypes.true
R8203 Coq.Init.Logic "x = y" type_scope
R8158 Inclusion.test_inclusion
R8179 Inclusion.remove_all_leaves
R8205 Coq.Init.Datatypes.true
R8152 Coq.Init.Logic "A \/ B" type_scope
R8145 Coq.Init.Logic "x = y" type_scope
R8123 Inclusion.check_all_leaves
R8147 Coq.Init.Datatypes.true
R8203 Coq.Init.Logic "x = y" type_scope
R8158 Inclusion.test_inclusion
R8179 Inclusion.remove_all_leaves
R8205 Coq.Init.Datatypes.true
R8222 Inclusion.check_all_leaves
R8256 Inclusion.test_inclusion
R8277 Inclusion.remove_all_leaves
R8222 Inclusion.check_all_leaves
R8256 Inclusion.test_inclusion
R8277 Inclusion.remove_all_leaves
R8256 Inclusion.test_inclusion
R8277 Inclusion.remove_all_leaves
R8381 Coq.Lists.List.in_or_app
R8404 Inclusion.check_all_leaves_sound
R8381 Coq.Lists.List.in_or_app
R8404 Inclusion.check_all_leaves_sound
R8453 Inclusion.remove_all_leaves_sound
R8453 Inclusion.remove_all_leaves_sound
R8514 Coq.Lists.List.in_or_app
R8514 Coq.Lists.List.in_or_app
R8572 Coq.Lists.List.in_or_app
R8572 Coq.Lists.List.in_or_app
R8602 Inclusion.check_all_leaves_sound
R8602 Inclusion.check_all_leaves_sound
R8866 Coq.Lists.List.In
R8872 Inclusion.bin_A
R8888 Coq.Lists.List.app
R8879 Coq.Lists.List.list
R8816 Coq.Lists.List.In
R8822 Inclusion.bin_A
R8838 Coq.Lists.List.app
R8829 Coq.Lists.List.list
R8803 Coq.Lists.List.list
R8785 Coq.Lists.List.list
R8790 Coq.Lists.List.list
R8749 Coq.Init.Logic "x = y" type_scope
R8686 Inclusion.test_inclusion
R8726 Inclusion.sort_bin
R8736 Inclusion.flatten
R8702 Inclusion.sort_bin
R8712 Inclusion.flatten
R8751 Coq.Init.Datatypes.true
R8677 Inclusion.bin
R8677 Inclusion.bin
R8983 Coq.Lists.List.ass_app
R8948 Inclusion.flatten_valid_A
R8983 Coq.Lists.List.ass_app
R8948 Inclusion.flatten_valid_A
R9008 Inclusion.sort_included
R9008 Inclusion.sort_included
R9062 Inclusion.sort_bin
R9072 Inclusion.flatten
R9029 Inclusion.test_inclusion_sound
R9062 Inclusion.sort_bin
R9072 Inclusion.flatten
R9029 Inclusion.test_inclusion_sound
R9104 Inclusion.sort_included2
R9104 Inclusion.sort_included2
R9158 Coq.Lists.List.ass_app
R9131 Inclusion.flatten_valid_A
R9158 Coq.Lists.List.ass_app
R9131 Inclusion.flatten_valid_A
R9237 Coq.Lists.List.In
R9243 Coq.Lists.List.nil
R9272 Coq.Lists.List.In
R9285 Coq.Lists.List.In
R9409 Coq.Lists.List.nil
R9417 Coq.Lists.List.list
R9531 Coq.Lists.List.In
R9537 Inclusion.bin_A
R9567 Coq.Lists.List.nil
R9553 Coq.Lists.List.app
R9544 Coq.Lists.List.list
R9601 Inclusion.inclusion_theorem
R9644 Coq.Init.Logic.refl_equal
R9715 Coq.Lists.List.incl
FAST
R69 Coq.NArith.BinPos.positive
R103 Coqlib.peq
R198 Coq.ZArith.BinInt.Z
R219 AST.Tint
R231 AST.Tfloat
R191 AST.typ
R699 AST.comparison
R732 AST.Ceq
R739 AST.Cne
R747 AST.Cne
R754 AST.Ceq
R762 AST.Clt
R769 AST.Cge
R777 AST.Cle
R784 AST.Cgt
R792 AST.Cgt
R799 AST.Cle
R807 AST.Cge
R814 AST.Clt
R686 AST.comparison
R870 AST.comparison
R903 AST.Ceq
R910 AST.Ceq
R918 AST.Cne
R925 AST.Cne
R933 AST.Clt
R940 AST.Cgt
R948 AST.Cle
R955 AST.Cge
R963 AST.Cgt
R970 AST.Clt
R978 AST.Cge
R985 AST.Cle
R857 AST.comparison
R1049 Coq.Lists.List.list
R1054 AST.typ
R1070 Coq.Init.Datatypes.option
R1077 AST.typ
R1148 Coq.Lists.List.list
R1160 Coq.Init.Datatypes "x * y" type_scope
R1154 AST.ident
R1183 AST.ident
R1203 Coq.Lists.List.list
R1215 Coq.Init.Datatypes "x * y" type_scope
R1209 AST.ident
R1217 Coq.ZArith.BinInt.Z
R1342 Coq.Lists.List.list
R1354 Coq.Init.Datatypes "x * y" type_scope
R1348 AST.ident
R1322 Coq.Lists.List.list
R1334 Coq.Init.Datatypes "x * y" type_scope
R1328 AST.ident
R1381 Coq.Lists.List.nil
R1388 Coq.Lists.List.nil
R1405 Coq.Lists.List "x :: y" list_scope
R1396 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R1431 Coq.Lists.List "x :: y" list_scope
R1415 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R1322 Coq.Lists.List.list
R1334 Coq.Init.Datatypes "x * y" type_scope
R1328 AST.ident
R1507 AST.program
R1522 AST.mkprogram
R1593 AST.prog_vars
R1575 AST.prog_main
R1537 AST.transf_program
R1555 AST.prog_funct
R1494 AST.program
R1695 Coq.Init.Logic "'exists' x , p" type_scope
R1718 Coq.Init.Logic "A /\ B" type_scope
R1705 Coq.Lists.List.In
R1708 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R1730 Coq.Init.Logic "x = y" type_scope
R1659 Coq.Lists.List.In
R1671 AST.transf_program
R1662 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R2064 Coq.Init.Logic "'exists' x , p" type_scope
R2099 Coq.Init.Logic "A /\ B" type_scope
R2074 Coq.Lists.List.In
R2087 AST.prog_funct
R2077 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2111 Coq.Init.Logic "x = y" type_scope
R2013 Coq.Lists.List.In
R2047 AST.prog_funct
R2025 AST.transform_program
R2016 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2148 AST.transf_program_functions
R2148 AST.transf_program_functions
R2290 Coq.Init.Datatypes.option
R2369 Coq.Init.Datatypes.option
R2377 Coq.Lists.List.list
R2389 Coq.Init.Datatypes "x * y" type_scope
R2383 AST.ident
R2349 Coq.Lists.List.list
R2361 Coq.Init.Datatypes "x * y" type_scope
R2355 AST.ident
R2417 Coq.Lists.List.nil
R2424 Coq.Init.Datatypes.Some
R2429 Coq.Lists.List.nil
R2446 Coq.Lists.List "x :: y" list_scope
R2437 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2499 Coq.Init.Datatypes.None
R2507 Coq.Init.Datatypes.None
R2520 Coq.Init.Datatypes.Some
R2592 Coq.Init.Datatypes.None
R2600 Coq.Init.Datatypes.None
R2617 Coq.Init.Datatypes.Some
R2629 Coq.Init.Datatypes.Some
R2645 Coq.Lists.List "x :: y" list_scope
R2635 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2349 Coq.Lists.List.list
R2361 Coq.Init.Datatypes "x * y" type_scope
R2355 AST.ident
R2739 Coq.Init.Datatypes.option
R2747 AST.program
R2769 AST.transf_partial_program
R2795 AST.prog_funct
R2816 Coq.Init.Datatypes.None
R2824 Coq.Init.Datatypes.None
R2833 Coq.Init.Datatypes.Some
R2844 Coq.Init.Datatypes.Some
R2850 AST.mkprogram
R2880 AST.prog_vars
R2866 AST.prog_main
R2726 AST.program
R3027 Coq.Init.Logic "'exists' x , p" type_scope
R3050 Coq.Init.Logic "A /\ B" type_scope
R3037 Coq.Lists.List.In
R3040 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3070 Coq.Init.Logic "x = y" type_scope
R3072 Coq.Init.Datatypes.Some
R3007 Coq.Lists.List.In
R3010 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2991 Coq.Init.Logic "x = y" type_scope
R2965 AST.transf_partial_program
R2993 Coq.Init.Datatypes.Some
R3266 AST.transf_partial_program
R3266 AST.transf_partial_program
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R3705 Coq.Init.Logic "'exists' x , p" type_scope
R3740 Coq.Init.Logic "A /\ B" type_scope
R3715 Coq.Lists.List.In
R3728 AST.prog_funct
R3718 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3760 Coq.Init.Logic "x = y" type_scope
R3762 Coq.Init.Datatypes.Some
R3673 Coq.Lists.List.In
R3688 AST.prog_funct
R3676 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3658 Coq.Init.Logic "x = y" type_scope
R3630 AST.transform_partial_program
R3660 Coq.Init.Datatypes.Some
R3843 AST.transf_partial_program
R3867 AST.prog_funct
R3843 AST.transf_partial_program
R3867 AST.prog_funct
R3899 AST.transf_partial_program_functions
R3899 AST.transf_partial_program_functions
R4133 Coq.Init.Logic "x = y" type_scope
R4122 AST.prog_main
R4138 AST.prog_main
R4103 Coq.Init.Logic "x = y" type_scope
R4075 AST.transform_partial_program
R4105 Coq.Init.Datatypes.Some
R4218 AST.transf_partial_program
R4242 AST.prog_funct
R4218 AST.transf_partial_program
R4242 AST.prog_funct
FIntegers
R66 Coq.Init.Datatypes.nat
R102 Coq.ZArith.BinInt.Z
R107 Coq.ZArith.Zpower.two_power_nat
R121 Integers.wordsize
R157 Coq.ZArith.BinInt.Z
R170 Coq.ZArith.Zdiv "x / y" Z_scope
R162 Integers.modulus
R216 Coq.ZArith.BinInt "x ?= y" Z_scope
R230 Coq.Init.Datatypes.Lt
R236 Coq.Init.Logic.False
R264 Coq.ZArith.BinInt "x ?= y" Z_scope
R267 Integers.modulus
R286 Coq.Init.Datatypes.Lt
R292 Coq.Init.Logic.True
R309 Coq.Init.Logic.False
R200 Coq.ZArith.BinInt.Z
R366 Coq.ZArith.BinInt.Z
R379 Integers.in_range
R438 Coq.ZArith.BinInt.Z
R451 Coq.ZArith.BinInt "x - y" Z_scope
R443 Integers.modulus
R480 Coq.ZArith.BinInt.Z
R498 Coq.ZArith.BinInt "x - y" Z_scope
R485 Integers.half_modulus
R527 Coq.ZArith.BinInt.Z
R532 Coq.ZArith.BinInt "- x" Z_scope
R534 Integers.half_modulus
R580 Coq.ZArith.BinInt.Z
R585 Integers.intval
R573 Integers.int
R625 Coq.ZArith.BinInt.Z
R635 Coqlib.zlt
R652 Integers.half_modulus
R640 Integers.unsigned
R701 Coq.ZArith.BinInt "x - y" Z_scope
R690 Integers.unsigned
R703 Integers.modulus
R672 Integers.unsigned
R618 Integers.int
R745 Integers.in_range
R755 Coq.ZArith.Zdiv.Zmod
R762 Integers.modulus
R802 Coq.ZArith.Zdiv.Z_mod_lt
R822 Coqlib.two_power_nat_pos
R840 Integers.wordsize
R813 Integers.modulus
R802 Coq.ZArith.Zdiv.Z_mod_lt
R822 Coqlib.two_power_nat_pos
R840 Integers.wordsize
R813 Integers.modulus
R895 Coq.ZArith.BinInt "x >= y" Z_scope
R883 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R887 Integers.modulus
R895 Coq.ZArith.BinInt "x >= y" Z_scope
R883 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R887 Integers.modulus
R974 Coq.ZArith.BinInt "x ?= y" Z_scope
R962 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R966 Integers.modulus
R974 Coq.ZArith.BinInt "x ?= y" Z_scope
R962 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R966 Integers.modulus
R1019 Integers.int
R1029 Integers.mkint
R1053 Integers.mod_in_range
R1036 Coq.ZArith.Zdiv.Zmod
R1043 Integers.modulus
R1014 Coq.ZArith.BinInt.Z
R1090 Integers.repr
R1117 Integers.repr
R1144 Integers.repr
R1230 Coq.Init.Logic "x = y" type_scope
R1214 Integers.in_range
R1214 Integers.in_range
R1203 Coq.ZArith.BinInt.Z
R1369 Coq.Init.Logic "x = y" type_scope
R1316 Coq.ZArith.BinInt "x ?= y" Z_scope
R1319 Integers.modulus
R1332 Coq.Init.Datatypes.Lt
R1338 Coq.Init.Logic.True
R1350 Coq.Init.Logic.False
R1316 Coq.ZArith.BinInt "x ?= y" Z_scope
R1319 Integers.modulus
R1332 Coq.Init.Datatypes.Lt
R1338 Coq.Init.Logic.True
R1350 Coq.Init.Logic.False
R1369 Coq.Init.Logic "x = y" type_scope
R1316 Coq.ZArith.BinInt "x ?= y" Z_scope
R1319 Integers.modulus
R1332 Coq.Init.Datatypes.Lt
R1338 Coq.Init.Logic.True
R1350 Coq.Init.Logic.False
R1316 Coq.ZArith.BinInt "x ?= y" Z_scope
R1319 Integers.modulus
R1332 Coq.Init.Datatypes.Lt
R1338 Coq.Init.Logic.True
R1350 Coq.Init.Logic.False
R1390 Coq.ZArith.BinInt "x ?= y" Z_scope
R1393 Integers.modulus
R1390 Coq.ZArith.BinInt "x ?= y" Z_scope
R1393 Integers.modulus
R1508 Coq.ZArith.BinInt "x ?= y" Z_scope
R1508 Coq.ZArith.BinInt "x ?= y" Z_scope
R1606 Coq.Init.Logic "x = y" type_scope
R1595 Integers.mkint
R1608 Integers.mkint
R1588 Coq.Init.Logic "x = y" type_scope
R1661 Integers.in_range_proof_irrelevance
R1661 Integers.in_range_proof_irrelevance
R1769 Coq.Init.Specif "{ A } + { B }" type_scope
R1772 Coq.Init.Logic "x = y" type_scope
R1782 Coq.Init.Logic "x <> y" type_scope
R1763 Integers.int
R1763 Integers.int
R1836 Coqlib.zeq
R1836 Coqlib.zeq
R1879 Integers.mkint_eq
R1879 Integers.mkint_eq
R1971 Coq.Init.Datatypes.bool
R1985 Coqlib.zeq
R2003 Integers.unsigned
R1990 Integers.unsigned
R2030 Coq.Init.Datatypes.false
R2020 Coq.Init.Datatypes.true
R1964 Integers.int
R1964 Integers.int
R2064 Coq.Init.Datatypes.bool
R2077 Coqlib.zlt
R2093 Integers.signed
R2082 Integers.signed
R2118 Coq.Init.Datatypes.false
R2108 Coq.Init.Datatypes.true
R2057 Integers.int
R2057 Integers.int
R2153 Coq.Init.Datatypes.bool
R2166 Coqlib.zlt
R2184 Integers.unsigned
R2171 Integers.unsigned
R2211 Coq.Init.Datatypes.false
R2201 Coq.Init.Datatypes.true
R2146 Integers.int
R2146 Integers.int
R2245 Integers.int
R2252 Integers.repr
R2258 Coq.ZArith.BinInt "- x" Z_scope
R2260 Integers.unsigned
R2238 Integers.int
R2307 Integers.int
R2355 Coqlib.zlt
R2382 Integers.repr
R2390 Coq.ZArith.BinInt "x - y" Z_scope
R2370 Integers.repr
R2325 Coq.ZArith.Zdiv.Zmod
R2331 Integers.unsigned
R2300 Integers.int
R2434 Integers.int
R2443 Integers.repr
R2449 Coq.ZArith.Zdiv.Zmod
R2455 Integers.unsigned
R2427 Integers.int
R2508 Integers.int
R2558 Coqlib.zlt
R2587 Integers.repr
R2595 Coq.ZArith.BinInt "x - y" Z_scope
R2575 Integers.repr
R2526 Coq.ZArith.Zdiv.Zmod
R2532 Integers.unsigned
R2501 Integers.int
R2642 Integers.int
R2651 Integers.repr
R2657 Coq.ZArith.Zdiv.Zmod
R2663 Integers.unsigned
R2635 Integers.int
R2712 Integers.int
R2721 Integers.repr
R2738 Coq.ZArith.BinInt "x + y" Z_scope
R2727 Integers.unsigned
R2740 Integers.unsigned
R2705 Integers.int
R2705 Integers.int
R2781 Integers.int
R2790 Integers.repr
R2807 Coq.ZArith.BinInt "x - y" Z_scope
R2796 Integers.unsigned
R2809 Integers.unsigned
R2774 Integers.int
R2774 Integers.int
R2850 Integers.int
R2859 Integers.repr
R2876 Coq.ZArith.BinInt "x * y" Z_scope
R2865 Integers.unsigned
R2878 Integers.unsigned
R2843 Integers.int
R2843 Integers.int
R2925 Coq.ZArith.BinInt.Z
R2935 Coqlib.zlt
R3012 Coqlib.zlt
R3044 Coq.ZArith.Zdiv "x / y" Z_scope
R3025 Coq.ZArith.BinInt "- x" Z_scope
R3029 Coq.ZArith.Zdiv "x / y" Z_scope
R3032 Coq.ZArith.BinInt "- x" Z_scope
R2955 Coqlib.zlt
R2985 Coq.ZArith.BinInt "- x" Z_scope
R2991 Coq.ZArith.Zdiv "x / y" Z_scope
R2989 Coq.ZArith.BinInt "- x" Z_scope
R2971 Coq.ZArith.Zdiv "x / y" Z_scope
R2969 Coq.ZArith.BinInt "- x" Z_scope
R2976 Coq.ZArith.BinInt "- x" Z_scope
R2920 Coq.ZArith.BinInt.Z
R2920 Coq.ZArith.BinInt.Z
R3083 Coq.ZArith.BinInt.Z
R3092 Coq.ZArith.BinInt "x - y" Z_scope
R3109 Coq.ZArith.BinInt "x * y" Z_scope
R3095 Integers.Zdiv_round
R3078 Coq.ZArith.BinInt.Z
R3078 Coq.ZArith.BinInt.Z
R3146 Integers.int
R3155 Integers.repr
R3161 Integers.Zdiv_round
R3184 Integers.signed
R3173 Integers.signed
R3139 Integers.int
R3139 Integers.int
R3225 Integers.int
R3234 Integers.repr
R3240 Integers.Zmod_round
R3263 Integers.signed
R3252 Integers.signed
R3218 Integers.int
R3218 Integers.int
R3304 Integers.int
R3313 Integers.repr
R3330 Coq.ZArith.Zdiv "x / y" Z_scope
R3319 Integers.unsigned
R3332 Integers.unsigned
R3297 Integers.int
R3297 Integers.int
R3374 Integers.int
R3383 Integers.repr
R3389 Coq.ZArith.Zdiv.Zmod
R3408 Integers.unsigned
R3395 Integers.unsigned
R3367 Integers.int
R3367 Integers.int
R3495 Coq.ZArith.BinInt "x * y" Z_scope
R3484 Coq.ZArith.BinInt "x + y" Z_scope
R3480 Coq.ZArith.BinInt "x * y" Z_scope
R3460 Coq.ZArith.BinInt.Z
R3450 Coq.Init.Datatypes.bool
R3539 Coq.Init.Datatypes "x * y" type_scope
R3534 Coq.Init.Datatypes.bool
R3541 Coq.ZArith.BinInt.Z
R3565 Coq.ZArith.BinInt.Z0
R3571 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3572 Coq.Init.Datatypes.false
R3586 Coq.ZArith.BinInt.Zpos
R3623 Coq.NArith.BinPos.xI
R3631 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3632 Coq.Init.Datatypes.true
R3638 Coq.ZArith.BinInt.Zpos
R3654 Coq.NArith.BinPos.xO
R3662 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3663 Coq.Init.Datatypes.false
R3670 Coq.ZArith.BinInt.Zpos
R3686 Coq.NArith.BinPos.xH
R3692 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3693 Coq.Init.Datatypes.true
R3716 Coq.ZArith.BinInt.Zneg
R3753 Coq.NArith.BinPos.xI
R3761 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3762 Coq.Init.Datatypes.true
R3775 Coq.ZArith.BinInt "x - y" Z_scope
R3768 Coq.ZArith.BinInt.Zneg
R3788 Coq.NArith.BinPos.xO
R3796 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3797 Coq.Init.Datatypes.false
R3804 Coq.ZArith.BinInt.Zneg
R3820 Coq.NArith.BinPos.xH
R3826 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3827 Coq.Init.Datatypes.true
R3529 Coq.ZArith.BinInt.Z
R3907 Coq.Init.Datatypes.bool
R3902 Coq.ZArith.BinInt.Z
R3887 Coq.ZArith.BinInt.Z
R3878 Coq.Init.Datatypes.nat
R3934 Coq.Init.Datatypes.O
R3958 Coq.Init.Datatypes.false
R3953 Coq.ZArith.BinInt.Z
R3969 Coq.Init.Datatypes.S
R3996 Integers.Z_bin_decomp
R4068 Coqlib.zeq
R4093 Coq.ZArith.BinInt "x - y" Z_scope
R4060 Coq.ZArith.BinInt.Z
R3887 Coq.ZArith.BinInt.Z
R3878 Coq.Init.Datatypes.nat
R4162 Coq.ZArith.BinInt.Z
R4144 Coq.Init.Datatypes.bool
R4139 Coq.ZArith.BinInt.Z
R4130 Coq.Init.Datatypes.nat
R4186 Coq.Init.Datatypes.O
R4197 Coq.Init.Datatypes.S
R4204 Integers.Z_shift_add
R4250 Coq.ZArith.BinInt "x + y" Z_scope
R4144 Coq.Init.Datatypes.bool
R4139 Coq.ZArith.BinInt.Z
R4130 Coq.Init.Datatypes.nat
R4426 Integers.repr
R4432 Integers.Z_of_bits
R4442 Integers.wordsize
R4389 Integers.bits_of_Z
R4409 Integers.unsigned
R4399 Integers.wordsize
R4342 Integers.bits_of_Z
R4362 Integers.unsigned
R4352 Integers.wordsize
R4322 Integers.int
R4322 Integers.int
R4310 Coq.Init.Datatypes.bool
R4302 Coq.Init.Datatypes.bool
R4294 Coq.Init.Datatypes.bool
R4508 Integers.int
R4515 Integers.bitwise_binop
R4529 Coq.Bool.Bool.andb
R4502 Integers.int
R4502 Integers.int
R4565 Integers.int
R4572 Integers.bitwise_binop
R4586 Coq.Bool.Bool.orb
R4559 Integers.int
R4559 Integers.int
R4623 Integers.int
R4630 Integers.bitwise_binop
R4644 Coq.Bool.Bool.xorb
R4616 Integers.int
R4616 Integers.int
R4681 Integers.int
R4688 Integers.xor
R4694 Integers.mone
R4674 Integers.int
R4728 Integers.int
R4810 Integers.repr
R4816 Integers.Z_of_bits
R4851 Coq.ZArith.BinInt "x - y" Z_scope
R4826 Integers.wordsize
R4794 Integers.unsigned
R4747 Integers.bits_of_Z
R4767 Integers.unsigned
R4757 Integers.wordsize
R4722 Integers.int
R4722 Integers.int
R4889 Integers.int
R4971 Integers.repr
R4977 Integers.Z_of_bits
R5012 Coq.ZArith.BinInt "x + y" Z_scope
R4987 Integers.wordsize
R4955 Integers.unsigned
R4908 Integers.bits_of_Z
R4928 Integers.unsigned
R4918 Integers.wordsize
R4883 Integers.int
R4883 Integers.int
R5049 Integers.int
R5058 Integers.repr
R5073 Coq.ZArith.Zdiv "x / y" Z_scope
R5064 Integers.signed
R5075 Coq.ZArith.Zpower.two_p
R5082 Integers.unsigned
R5043 Integers.int
R5043 Integers.int
R5124 Integers.int
R5133 Integers.divs
R5141 Integers.shl
R5145 Integers.one
R5118 Integers.int
R5118 Integers.int
R5191 Integers.sub
R5207 Integers.shr
R5196 Integers.shrx
R5181 Integers.int
R5181 Integers.int
R5246 Integers.int
R5328 Integers.repr
R5334 Integers.Z_of_bits
R5376 Coq.ZArith.Zdiv.Zmod
R5391 Coq.ZArith.BinInt.Z_of_nat
R5400 Integers.wordsize
R5384 Coq.ZArith.BinInt "x - y" Z_scope
R5344 Integers.wordsize
R5312 Integers.unsigned
R5265 Integers.bits_of_Z
R5285 Integers.unsigned
R5275 Integers.wordsize
R5239 Integers.int
R5239 Integers.int
R5445 Integers.int
R5452 Integers.and
R5457 Integers.rol
R5439 Integers.int
R5439 Integers.int
R5439 Integers.int
R5525 Coq.Lists.List.list
R5530 Coq.ZArith.BinInt.Z
R5510 Coq.ZArith.BinInt.Z
R5503 Coq.ZArith.BinInt.Z
R5494 Coq.Init.Datatypes.nat
R5554 Coq.Init.Datatypes.O
R5559 Coq.Lists.List.nil
R5567 Coq.Init.Datatypes.S
R5594 Integers.Z_bin_decomp
R5676 Coq.ZArith.BinInt "x + y" Z_scope
R5630 Coq.Lists.List "x :: y" list_scope
R5650 Coq.ZArith.BinInt "x + y" Z_scope
R5510 Coq.ZArith.BinInt.Z
R5503 Coq.ZArith.BinInt.Z
R5494 Coq.Init.Datatypes.nat
R5720 Coq.Init.Datatypes.option
R5727 Integers.int
R5742 Integers.Z_one_bits
R5763 Integers.unsigned
R5753 Integers.wordsize
R5788 Coq.Lists.List "x :: y" list_scope
R5791 Coq.Lists.List.nil
R5798 Coq.Init.Datatypes.Some
R5804 Integers.repr
R5821 Coq.Init.Datatypes.None
R5713 Integers.int
R5865 Coq.Lists.List.list
R5870 Integers.int
R5879 Coq.Lists.List.map
R5894 Integers.Z_one_bits
R5915 Integers.unsigned
R5905 Integers.wordsize
R5888 Integers.repr
R5858 Integers.int
R6573 Integers.rlw_state
R6608 Integers.RLW_S0
R6616 Coq.Init.Datatypes.false
R6625 Integers.RLW_S1
R6636 Integers.RLW_S0
R6644 Coq.Init.Datatypes.true
R6653 Integers.RLW_S4
R6664 Integers.RLW_S1
R6672 Coq.Init.Datatypes.false
R6681 Integers.RLW_S1
R6692 Integers.RLW_S1
R6700 Coq.Init.Datatypes.true
R6709 Integers.RLW_S2
R6720 Integers.RLW_S2
R6728 Coq.Init.Datatypes.false
R6737 Integers.RLW_S3
R6748 Integers.RLW_S2
R6756 Coq.Init.Datatypes.true
R6765 Integers.RLW_S2
R6776 Integers.RLW_S3
R6784 Coq.Init.Datatypes.false
R6793 Integers.RLW_S3
R6804 Integers.RLW_S3
R6812 Coq.Init.Datatypes.true
R6821 Integers.RLW_Sbad
R6834 Integers.RLW_S4
R6842 Coq.Init.Datatypes.false
R6851 Integers.RLW_S5
R6862 Integers.RLW_S4
R6870 Coq.Init.Datatypes.true
R6879 Integers.RLW_S4
R6890 Integers.RLW_S5
R6898 Coq.Init.Datatypes.false
R6907 Integers.RLW_S5
R6918 Integers.RLW_S5
R6926 Coq.Init.Datatypes.true
R6935 Integers.RLW_S6
R6946 Integers.RLW_S6
R6954 Coq.Init.Datatypes.false
R6963 Integers.RLW_Sbad
R6976 Integers.RLW_S6
R6984 Coq.Init.Datatypes.true
R6993 Integers.RLW_S6
R7004 Integers.RLW_Sbad
R7019 Integers.RLW_Sbad
R6565 Coq.Init.Datatypes.bool
R6550 Integers.rlw_state
R7078 Coq.Init.Datatypes.bool
R7105 Integers.RLW_S0
R7115 Coq.Init.Datatypes.false
R7125 Integers.RLW_S1
R7135 Coq.Init.Datatypes.false
R7145 Integers.RLW_S2
R7155 Coq.Init.Datatypes.true
R7164 Integers.RLW_S3
R7174 Coq.Init.Datatypes.true
R7183 Integers.RLW_S4
R7193 Coq.Init.Datatypes.true
R7202 Integers.RLW_S5
R7212 Coq.Init.Datatypes.true
R7221 Integers.RLW_S6
R7231 Coq.Init.Datatypes.true
R7240 Integers.RLW_Sbad
R7252 Coq.Init.Datatypes.false
R7065 Integers.rlw_state
R7335 Coq.Init.Datatypes.bool
R7319 Coq.ZArith.BinInt.Z
R7304 Integers.rlw_state
R7295 Coq.Init.Datatypes.nat
R7362 Coq.Init.Datatypes.O
R7373 Integers.rlw_accepting
R7393 Coq.Init.Datatypes.S
R7420 Integers.Z_bin_decomp
R7463 Integers.rlw_transition
R7319 Coq.ZArith.BinInt.Z
R7304 Integers.rlw_state
R7295 Coq.Init.Datatypes.nat
R7527 Coq.Init.Datatypes.bool
R7537 Integers.is_rlw_mask_rec
R7570 Integers.unsigned
R7562 Integers.RLW_S0
R7553 Integers.wordsize
R7520 Integers.int
R7628 Coq.Init.Datatypes.bool
R7655 AST.Ceq
R7662 Integers.eq
R7673 AST.Cne
R7680 Coq.Bool.Bool.negb
R7686 Integers.eq
R7698 AST.Clt
R7705 Integers.lt
R7716 AST.Cle
R7723 Coq.Bool.Bool.negb
R7729 Integers.lt
R7741 AST.Cgt
R7748 Integers.lt
R7759 AST.Cge
R7766 Coq.Bool.Bool.negb
R7772 Integers.lt
R7621 Integers.int
R7621 Integers.int
R7603 AST.comparison
R7833 Coq.Init.Datatypes.bool
R7860 AST.Ceq
R7867 Integers.eq
R7878 AST.Cne
R7885 Coq.Bool.Bool.negb
R7891 Integers.eq
R7903 AST.Clt
R7910 Integers.ltu
R7922 AST.Cle
R7929 Coq.Bool.Bool.negb
R7935 Integers.ltu
R7948 AST.Cgt
R7955 Integers.ltu
R7967 AST.Cge
R7974 Coq.Bool.Bool.negb
R7980 Integers.ltu
R7826 Integers.int
R7826 Integers.int
R7808 AST.comparison
R8038 Coq.Init.Logic "x = y" type_scope
R8040 Integers.zero
R8021 Integers.int
R8087 Coq.Init.Logic "x <> y" type_scope
R8090 Integers.zero
R8070 Integers.int
R8127 Integers.int
R8138 Integers.eq
R8143 Integers.zero
R8162 Integers.zero
R8153 Integers.one
R8120 Integers.int
R8239 Coq.Init.Logic "x <> y" type_scope
R8231 Integers.one
R8242 Integers.zero
R8326 Coq.Init.Logic "x = y" type_scope
R8319 Integers.eq
R8328 Integers.eq
R8370 Coqlib.zeq
R8388 Integers.unsigned
R8375 Integers.unsigned
R8370 Coqlib.zeq
R8388 Integers.unsigned
R8375 Integers.unsigned
R8430 Coqlib.zeq_true
R8430 Coqlib.zeq_true
R8456 Coqlib.zeq_false
R8456 Coqlib.zeq_false
R8524 Integers.eq
R8549 Coq.Init.Logic "x <> y" type_scope
R8538 Coq.Init.Logic "x = y" type_scope
R8515 Integers.int
R8515 Integers.int
R8589 Integers.eq_dec
R8589 Integers.eq_dec
R8628 Coqlib.zeq_true
R8628 Coqlib.zeq_true
R8654 Coqlib.zeq_false
R8654 Coqlib.zeq_false
R8733 Integers.mkint_eq
R8733 Integers.mkint_eq
R8789 Coq.Init.Logic "x = y" type_scope
R8782 Integers.eq
R8791 Coq.Init.Datatypes.true
R8826 Integers.eq_spec
R8846 Integers.eq
R8826 Integers.eq_spec
R8846 Integers.eq
R8928 Coq.Init.Logic "x = y" type_scope
R8921 Integers.eq
R8930 Coq.Init.Datatypes.false
R8913 Coq.Init.Logic "x <> y" type_scope
R8966 Integers.eq_spec
R8986 Integers.eq
R8966 Integers.eq_spec
R8986 Integers.eq
R9050 Coq.ZArith.BinInt "x > y" Z_scope
R9042 Integers.modulus
R9086 Coqlib.two_power_nat_pos
R9086 Coqlib.two_power_nat_pos
R9124 Integers.modulus_pos
R9222 Coq.ZArith.BinInt.Z
R9253 Coq.ZArith.BinInt "x > y" Z_scope
R9295 Coq.Init.Logic "'exists' x , p" type_scope
R9307 Coq.Init.Logic "x = y" type_scope
R9319 Coq.ZArith.BinInt "x + y" Z_scope
R9311 Coq.ZArith.BinInt "x * y" Z_scope
R9282 Coq.ZArith.BinInt.Z
R9282 Coq.ZArith.BinInt.Z
R9353 Integers.eqmod
R9449 Integers.eqmod
R9442 Coq.Init.Logic "x = y" type_scope
R9492 Integers.eqmod_refl
R9492 Integers.eqmod_refl
R9552 Integers.eqmod
R9539 Integers.eqmod
R9604 Coq.ZArith.BinInt "- x" Z_scope
R9604 Coq.ZArith.BinInt "- x" Z_scope
R9689 Integers.eqmod
R9676 Integers.eqmod
R9663 Integers.eqmod
R9759 Coq.ZArith.BinInt "x + y" Z_scope
R9759 Coq.ZArith.BinInt "x + y" Z_scope
R9883 Coq.Init.Logic "x = y" type_scope
R9865 Coq.ZArith.BinInt "x <= y < z" Z_scope
R9847 Coq.ZArith.BinInt "x <= y < z" Z_scope
R9832 Integers.eqmod
R9936 Coqlib.Zdiv_unique
R9936 Coqlib.Zdiv_unique
R9982 Coqlib.Zdiv_small
R9982 Coqlib.Zdiv_small
R10092 Coq.Init.Logic "x = y" type_scope
R10082 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R10096 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R10067 Integers.eqmod
R10155 Coq.ZArith.BinInt.Zplus_comm
R10155 Coq.ZArith.BinInt.Zplus_comm
R10173 Coq.ZArith.Zdiv.Z_mod_plus
R10173 Coq.ZArith.Zdiv.Z_mod_plus
R10226 Integers.eqmod
R10237 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R10281 Coq.ZArith.Zdiv "x / y" Z_scope
R10281 Coq.ZArith.Zdiv "x / y" Z_scope
R10302 Coq.ZArith.BinInt.Zmult_comm
R10302 Coq.ZArith.BinInt.Zmult_comm
R10320 Coq.ZArith.Zdiv.Z_div_mod_eq
R10320 Coq.ZArith.Zdiv.Z_div_mod_eq
R10407 Integers.eqmod
R10424 Coq.ZArith.BinInt "x + y" Z_scope
R10416 Coq.ZArith.BinInt "x + y" Z_scope
R10394 Integers.eqmod
R10381 Integers.eqmod
R10509 Coq.ZArith.BinInt "x + y" Z_scope
R10509 Coq.ZArith.BinInt "x + y" Z_scope
R10572 Integers.eqmod
R10584 Coq.ZArith.BinInt "- x" Z_scope
R10579 Coq.ZArith.BinInt "- x" Z_scope
R10559 Integers.eqmod
R10630 Coq.ZArith.BinInt "- x" Z_scope
R10630 Coq.ZArith.BinInt "- x" Z_scope
R10721 Integers.eqmod
R10738 Coq.ZArith.BinInt "x - y" Z_scope
R10730 Coq.ZArith.BinInt "x - y" Z_scope
R10708 Integers.eqmod
R10695 Integers.eqmod
R10823 Coq.ZArith.BinInt "x - y" Z_scope
R10823 Coq.ZArith.BinInt "x - y" Z_scope
R10904 Integers.eqmod
R10921 Coq.ZArith.BinInt "x * y" Z_scope
R10913 Coq.ZArith.BinInt "x * y" Z_scope
R10891 Integers.eqmod
R10878 Integers.eqmod
R11030 Coq.ZArith.BinInt "x + y" Z_scope
R11021 Coq.ZArith.BinInt "x + y" Z_scope
R11013 Coq.ZArith.BinInt "x * y" Z_scope
R11008 Coq.ZArith.BinInt "x * y" Z_scope
R11025 Coq.ZArith.BinInt "x * y" Z_scope
R11035 Coq.ZArith.BinInt "x * y" Z_scope
R11030 Coq.ZArith.BinInt "x + y" Z_scope
R11021 Coq.ZArith.BinInt "x + y" Z_scope
R11013 Coq.ZArith.BinInt "x * y" Z_scope
R11008 Coq.ZArith.BinInt "x * y" Z_scope
R11025 Coq.ZArith.BinInt "x * y" Z_scope
R11035 Coq.ZArith.BinInt "x * y" Z_scope
R11123 Integers.eqmod
R11129 Integers.modulus
R11165 Integers.eqm
R11181 Integers.eqmod_refl
R11192 Integers.modulus
R11215 Integers.eqm_refl
R11272 Integers.eqm
R11265 Coq.Init.Logic "x = y" type_scope
R11288 Integers.eqmod_refl2
R11300 Integers.modulus
R11323 Integers.eqm_refl2
R11379 Integers.eqm
R11368 Integers.eqm
R11395 Integers.eqmod_sym
R11405 Integers.modulus
R11428 Integers.eqm_sym
R11497 Integers.eqm
R11486 Integers.eqm
R11475 Integers.eqm
R11513 Integers.eqmod_trans
R11525 Integers.modulus
R11548 Integers.eqm_trans
R11616 Coq.Init.Logic "x = y" type_scope
R11609 Integers.repr
R11618 Integers.repr
R11598 Integers.eqm
R11662 Integers.mkint_eq
R11662 Integers.mkint_eq
R11681 Integers.eqmod_mod_eq
R11681 Integers.eqmod_mod_eq
R11763 Integers.eqm
R11770 Integers.unsigned
R11780 Integers.repr
R11850 Integers.eqmod_mod
R11850 Integers.eqmod_mod
R11895 Integers.eqm_unsigned_repr
R11973 Integers.eqm
R11978 Integers.unsigned
R11988 Integers.repr
R11962 Integers.eqm
R12023 Integers.eqm_trans
R12023 Integers.eqm_trans
R12050 Integers.eqm_sym
R12050 Integers.eqm_sym
R12065 Integers.eqm_unsigned_repr
R12065 Integers.eqm_unsigned_repr
R12108 Integers.eqm_unsigned_repr_l
R12188 Integers.eqm
R12195 Integers.unsigned
R12205 Integers.repr
R12177 Integers.eqm
R12238 Integers.eqm_trans
R12238 Integers.eqm_trans
R12270 Integers.eqm_unsigned_repr
R12270 Integers.eqm_unsigned_repr
R12308 Integers.eqm_unsigned_repr_r
R12375 Integers.eqm
R12391 Integers.unsigned
R12380 Integers.signed
R12450 Integers.unsigned
R12450 Integers.unsigned
R12471 Coqlib.zlt
R12477 Integers.half_modulus
R12471 Coqlib.zlt
R12477 Integers.half_modulus
R12507 Integers.eqmod_refl
R12507 Integers.eqmod_refl
R12637 Coq.Init.Logic "x = y" type_scope
R12617 Coq.ZArith.BinInt "x <= y < z" Z_scope
R12624 Integers.modulus
R12597 Coq.ZArith.BinInt "x <= y < z" Z_scope
R12604 Integers.modulus
R12584 Integers.eqm
R12649 Integers.eqmod_small_eq
R12664 Integers.modulus
R12687 Integers.eqm_small_eq
R12763 Integers.eqm
R12778 Coq.ZArith.BinInt "x + y" Z_scope
R12770 Coq.ZArith.BinInt "x + y" Z_scope
R12752 Integers.eqm
R12741 Integers.eqm
R12791 Integers.eqmod_add
R12801 Integers.modulus
R12824 Integers.eqm_add
R12880 Integers.eqm
R12890 Coq.ZArith.BinInt "- x" Z_scope
R12885 Coq.ZArith.BinInt "- x" Z_scope
R12869 Integers.eqm
R12902 Integers.eqmod_neg
R12912 Integers.modulus
R12935 Integers.eqm_neg
R13006 Integers.eqm
R13021 Coq.ZArith.BinInt "x - y" Z_scope
R13013 Coq.ZArith.BinInt "x - y" Z_scope
R12995 Integers.eqm
R12984 Integers.eqm
R13034 Integers.eqmod_sub
R13044 Integers.modulus
R13067 Integers.eqm_sub
R13139 Integers.eqm
R13154 Coq.ZArith.BinInt "x * y" Z_scope
R13146 Coq.ZArith.BinInt "x * y" Z_scope
R13128 Integers.eqm
R13117 Integers.eqm
R13167 Integers.eqmod_mult
R13178 Integers.modulus
R13201 Integers.eqm_mult
R13268 Coq.ZArith.BinInt "x <= y < z" Z_scope
R13275 Integers.modulus
R13252 Integers.in_range
R13319 Coq.Init.Logic "A /\ B" type_scope
R13314 Coq.ZArith.BinInt "x >= y" Z_scope
R13324 Coq.ZArith.BinInt "x < y" Z_scope
R13326 Integers.modulus
R13319 Coq.Init.Logic "A /\ B" type_scope
R13314 Coq.ZArith.BinInt "x >= y" Z_scope
R13324 Coq.ZArith.BinInt "x < y" Z_scope
R13326 Integers.modulus
R13393 Coq.ZArith.BinInt "x ?= y" Z_scope
R13393 Coq.ZArith.BinInt "x ?= y" Z_scope
R13414 Coq.ZArith.BinInt "x ?= y" Z_scope
R13417 Integers.modulus
R13414 Coq.ZArith.BinInt "x ?= y" Z_scope
R13417 Integers.modulus
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R13501 Coq.ZArith.BinInt "x ?= y" Z_scope
R13504 Integers.modulus
R13501 Coq.ZArith.BinInt "x ?= y" Z_scope
R13504 Integers.modulus
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R13610 Coq.ZArith.BinInt "x <= y < z" Z_scope
R13613 Integers.unsigned
R13613 Integers.unsigned
R13626 Integers.modulus
R13672 Integers.in_range_range
R13672 Integers.in_range_range
R13712 Integers.unsigned_range
R13775 Coq.ZArith.BinInt "x <= y <= z" Z_scope
R13778 Integers.unsigned
R13778 Integers.unsigned
R13792 Integers.max_unsigned
R13858 Integers.unsigned_range
R13858 Integers.unsigned_range
R13902 Integers.unsigned_range_2
R13972 Coq.ZArith.BinInt "x <= y <= z" Z_scope
R13961 Integers.min_signed
R13975 Integers.signed
R13975 Integers.signed
R13987 Integers.max_signed
R14046 Integers.unsigned_range
R14046 Integers.unsigned_range
R14075 Integers.unsigned
R14075 Integers.unsigned
R14104 Coqlib.zlt
R14110 Integers.half_modulus
R14104 Coqlib.zlt
R14110 Integers.half_modulus
R14172 Coq.ZArith.BinInt "x < y" Z_scope
R14161 Integers.min_signed
R14172 Coq.ZArith.BinInt "x < y" Z_scope
R14161 Integers.min_signed
R14259 Coq.ZArith.BinInt "x * y" Z_scope
R14261 Integers.half_modulus
R14243 Integers.modulus
R14259 Coq.ZArith.BinInt "x * y" Z_scope
R14261 Integers.half_modulus
R14243 Integers.modulus
R14301 Coq.ZArith.BinInt "x * y" Z_scope
R14303 Integers.half_modulus
R14285 Integers.modulus
R14301 Coq.ZArith.BinInt "x * y" Z_scope
R14303 Integers.half_modulus
R14285 Integers.modulus
R14391 Coq.Init.Logic "x = y" type_scope
R14373 Integers.repr
R14379 Integers.unsigned
R14443 Integers.mkint_eq
R14443 Integers.mkint_eq
R14461 Coqlib.Zmod_small
R14461 Coqlib.Zmod_small
R14479 Integers.in_range_range
R14479 Integers.in_range_range
R14519 Integers.repr_unsigned
R14588 Coq.Init.Logic "x = y" type_scope
R14572 Integers.repr
R14578 Integers.signed
R14624 Integers.repr
R14630 Integers.unsigned
R14624 Integers.repr
R14630 Integers.unsigned
R14653 Integers.eqm_samerepr
R14653 Integers.eqm_samerepr
R14673 Integers.eqm_signed_unsigned
R14673 Integers.eqm_signed_unsigned
R14728 Integers.repr_unsigned
R14829 Coq.Init.Logic "x = y" type_scope
R14811 Integers.unsigned
R14821 Integers.repr
R14787 Coq.ZArith.BinInt "x <= y <= z" Z_scope
R14795 Integers.max_unsigned
R14890 Coqlib.Zmod_small
R14890 Coqlib.Zmod_small
R14953 Integers.unsigned_repr
R15057 Coq.Init.Logic "x = y" type_scope
R15041 Integers.signed
R15049 Integers.repr
R15019 Coq.ZArith.BinInt "x <= y <= z" Z_scope
R15008 Integers.min_signed
R15027 Integers.max_signed
R15100 Coqlib.zle
R15100 Coqlib.zle
R15128 Integers.unsigned
R15138 Integers.repr
R15128 Integers.unsigned
R15138 Integers.repr
R15165 Coqlib.zlt_true
R15165 Coqlib.zlt_true
R15230 Integers.unsigned_repr
R15230 Integers.unsigned_repr
R15282 Integers.max_signed
R15267 Coq.ZArith.Zorder.Zle_trans
R15282 Integers.max_signed
R15267 Coq.ZArith.Zorder.Zle_trans
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R15349 Coq.ZArith.BinInt "x + y" Z_scope
R15351 Integers.modulus
R15349 Coq.ZArith.BinInt "x + y" Z_scope
R15351 Integers.modulus
R15372 Integers.repr
R15386 Integers.repr
R15372 Integers.repr
R15386 Integers.repr
R15407 Integers.unsigned
R15417 Integers.repr
R15407 Integers.unsigned
R15417 Integers.repr
R15446 Coqlib.zlt_false
R15446 Coqlib.zlt_false
R15549 Coq.ZArith.BinInt "x + y" Z_scope
R15536 Integers.half_modulus
R15551 Integers.half_modulus
R15522 Integers.modulus
R15549 Coq.ZArith.BinInt "x + y" Z_scope
R15536 Integers.half_modulus
R15551 Integers.half_modulus
R15522 Integers.modulus
R15591 Integers.unsigned_repr
R15591 Integers.unsigned_repr
R15705 Coq.ZArith.BinInt "x + y" Z_scope
R15692 Integers.half_modulus
R15707 Integers.half_modulus
R15678 Integers.modulus
R15705 Coq.ZArith.BinInt "x + y" Z_scope
R15692 Integers.half_modulus
R15707 Integers.half_modulus
R15678 Integers.modulus
R15740 Integers.eqm_samerepr
R15740 Integers.eqm_samerepr
R15865 Coq.Init.Logic "x = y" type_scope
R15857 Integers.add
R15867 Integers.repr
R15884 Coq.ZArith.BinInt "x + y" Z_scope
R15873 Integers.unsigned
R15886 Integers.unsigned
R15973 Coq.Init.Logic "x = y" type_scope
R15965 Integers.add
R15975 Integers.repr
R15990 Coq.ZArith.BinInt "x + y" Z_scope
R15981 Integers.signed
R15992 Integers.signed
R16029 Integers.add_unsigned
R16029 Integers.add_unsigned
R16049 Integers.eqm_samerepr
R16049 Integers.eqm_samerepr
R16071 Integers.eqm_add
R16086 Integers.eqm_sym
R16101 Integers.eqm_signed_unsigned
R16071 Integers.eqm_add
R16086 Integers.eqm_sym
R16086 Integers.eqm_sym
R16101 Integers.eqm_signed_unsigned
R16101 Integers.eqm_signed_unsigned
R16168 Coq.Init.Logic "x = y" type_scope
R16160 Integers.add
R16170 Integers.add
R16265 Coq.Init.Logic "x = y" type_scope
R16254 Integers.add
R16260 Integers.zero
R16314 Integers.unsigned
R16324 Integers.repr
R16314 Integers.unsigned
R16324 Integers.repr
R16351 Coq.ZArith.BinInt.Zplus_0_r
R16351 Coq.ZArith.BinInt.Zplus_0_r
R16368 Integers.repr_unsigned
R16368 Integers.repr_unsigned
R16438 Coq.Init.Logic "x = y" type_scope
R16422 Integers.add
R16427 Integers.add
R16440 Integers.add
R16447 Integers.add
R16499 Integers.unsigned
R16499 Integers.unsigned
R16525 Integers.unsigned
R16525 Integers.unsigned
R16551 Integers.unsigned
R16551 Integers.unsigned
R16572 Integers.eqm_samerepr
R16572 Integers.eqm_samerepr
R16619 Coq.ZArith.BinInt "x + y" Z_scope
R16615 Coq.ZArith.BinInt "x + y" Z_scope
R16595 Integers.eqm_trans
R16619 Coq.ZArith.BinInt "x + y" Z_scope
R16615 Coq.ZArith.BinInt "x + y" Z_scope
R16595 Integers.eqm_trans
R16659 Coq.ZArith.BinInt.Zplus_assoc
R16659 Coq.ZArith.BinInt.Zplus_assoc
R16744 Coq.Init.Logic "x = y" type_scope
R16728 Integers.add
R16735 Integers.add
R16746 Integers.add
R16753 Integers.add
R16789 Integers.add_commut
R16789 Integers.add_commut
R16817 Integers.add_assoc
R16817 Integers.add_assoc
R16834 Integers.add_commut
R16834 Integers.add_commut
R16899 Coq.Init.Logic "x = y" type_scope
R16885 Integers.add
R16892 Integers.neg
R16901 Integers.zero
R16953 Integers.eqm_samerepr
R16953 Integers.eqm_samerepr
R16996 Coq.ZArith.BinInt "x + y" Z_scope
R16985 Integers.unsigned
R16999 Coq.ZArith.BinInt "- x" Z_scope
R17002 Integers.unsigned
R16996 Coq.ZArith.BinInt "x + y" Z_scope
R16985 Integers.unsigned
R16999 Coq.ZArith.BinInt "- x" Z_scope
R17002 Integers.unsigned
R17119 Coq.Init.Logic "x = y" type_scope
R17106 Integers.neg
R17111 Integers.repr
R17121 Integers.repr
R17127 Coq.ZArith.BinInt "- x" Z_scope
R17167 Integers.eqm_samerepr
R17167 Integers.eqm_samerepr
R17230 Coq.Init.Logic "x = y" type_scope
R17221 Integers.neg
R17225 Integers.zero
R17232 Integers.zero
R17280 Integers.mkint_eq
R17280 Integers.mkint_eq
R17350 Coq.Init.Logic "x = y" type_scope
R17337 Integers.neg
R17341 Integers.add
R17352 Integers.add
R17365 Integers.neg
R17357 Integers.neg
R17413 Integers.eqm_samerepr
R17413 Integers.eqm_samerepr
R17451 Coq.ZArith.BinInt "- x" Z_scope
R17465 Coq.ZArith.BinInt "x + y" Z_scope
R17454 Integers.unsigned
R17467 Integers.unsigned
R17435 Integers.eqm_trans
R17451 Coq.ZArith.BinInt "- x" Z_scope
R17465 Coq.ZArith.BinInt "x + y" Z_scope
R17454 Integers.unsigned
R17467 Integers.unsigned
R17435 Integers.eqm_trans
R17510 Coq.ZArith.BinInt "- x" Z_scope
R17524 Coq.ZArith.BinInt "x + y" Z_scope
R17513 Integers.unsigned
R17526 Integers.unsigned
R17563 Coq.ZArith.BinInt "x + y" Z_scope
R17551 Coq.ZArith.BinInt "- x" Z_scope
R17553 Integers.unsigned
R17568 Coq.ZArith.BinInt "- x" Z_scope
R17570 Integers.unsigned
R17510 Coq.ZArith.BinInt "- x" Z_scope
R17524 Coq.ZArith.BinInt "x + y" Z_scope
R17513 Integers.unsigned
R17526 Integers.unsigned
R17563 Coq.ZArith.BinInt "x + y" Z_scope
R17551 Coq.ZArith.BinInt "- x" Z_scope
R17553 Integers.unsigned
R17568 Coq.ZArith.BinInt "- x" Z_scope
R17570 Integers.unsigned
R17689 Coq.Init.Logic "x = y" type_scope
R17678 Integers.sub
R17684 Integers.zero
R17731 Integers.unsigned
R17740 Integers.zero
R17731 Integers.unsigned
R17740 Integers.zero
R17776 Coq.ZArith.BinInt "x - y" Z_scope
R17765 Integers.unsigned
R17787 Integers.unsigned
R17776 Coq.ZArith.BinInt "x - y" Z_scope
R17765 Integers.unsigned
R17787 Integers.unsigned
R17806 Integers.repr_unsigned
R17806 Integers.repr_unsigned
R17877 Coq.Init.Logic "x = y" type_scope
R17866 Integers.sub
R17870 Integers.zero
R17879 Integers.neg
R17928 Integers.unsigned
R17937 Integers.zero
R17928 Integers.unsigned
R17937 Integers.zero
R17964 Coq.ZArith.BinInt "x - y" Z_scope
R17966 Integers.unsigned
R17984 Coq.ZArith.BinInt "- x" Z_scope
R17986 Integers.unsigned
R17964 Coq.ZArith.BinInt "x - y" Z_scope
R17966 Integers.unsigned
R17984 Coq.ZArith.BinInt "- x" Z_scope
R17986 Integers.unsigned
R18061 Coq.Init.Logic "x = y" type_scope
R18053 Integers.sub
R18063 Integers.add
R18070 Integers.neg
R18139 Coq.ZArith.BinInt "x - y" Z_scope
R18128 Integers.unsigned
R18141 Integers.unsigned
R18175 Coq.ZArith.BinInt "x + y" Z_scope
R18164 Integers.unsigned
R18178 Coq.ZArith.BinInt "- x" Z_scope
R18180 Integers.unsigned
R18139 Coq.ZArith.BinInt "x - y" Z_scope
R18128 Integers.unsigned
R18141 Integers.unsigned
R18175 Coq.ZArith.BinInt "x + y" Z_scope
R18164 Integers.unsigned
R18178 Coq.ZArith.BinInt "- x" Z_scope
R18180 Integers.unsigned
R18202 Integers.eqm_samerepr
R18202 Integers.eqm_samerepr
R18281 Coq.Init.Logic "x = y" type_scope
R18273 Integers.sub
R18283 Integers.zero
R18338 Coq.ZArith.BinInt "x - y" Z_scope
R18327 Integers.unsigned
R18340 Integers.unsigned
R18338 Coq.ZArith.BinInt "x - y" Z_scope
R18327 Integers.unsigned
R18340 Integers.unsigned
R18437 Coq.Init.Logic "x = y" type_scope
R18421 Integers.sub
R18426 Integers.add
R18439 Integers.add
R18444 Integers.sub
R18488 Integers.sub_add_opp
R18488 Integers.sub_add_opp
R18488 Integers.sub_add_opp
R18488 Integers.sub_add_opp
R18519 Integers.add_assoc
R18519 Integers.add_assoc
R18519 Integers.add_assoc
R18519 Integers.add_assoc
R18543 Integers.add_commut
R18543 Integers.add_commut
R18610 Coq.Init.Logic "x = y" type_scope
R18594 Integers.sub
R18601 Integers.add
R18612 Integers.add
R18627 Integers.neg
R18617 Integers.sub
R18667 Integers.sub_add_opp
R18667 Integers.sub_add_opp
R18667 Integers.sub_add_opp
R18667 Integers.sub_add_opp
R18690 Integers.neg_add_distr
R18690 Integers.neg_add_distr
R18713 Integers.add_permut
R18713 Integers.add_permut
R18731 Integers.add_commut
R18731 Integers.add_commut
R18825 Coq.Init.Logic "x = y" type_scope
R18817 Integers.mul
R18827 Integers.mul
R18924 Coq.Init.Logic "x = y" type_scope
R18913 Integers.mul
R18919 Integers.zero
R18926 Integers.zero
R18969 Integers.unsigned
R18978 Integers.zero
R18969 Integers.unsigned
R18978 Integers.zero
R19063 Coq.Init.Logic "x = y" type_scope
R19053 Integers.mul
R19059 Integers.one
R19105 Integers.unsigned
R19114 Integers.one
R19105 Integers.unsigned
R19114 Integers.one
R19143 Integers.repr
R19149 Integers.unsigned
R19143 Integers.repr
R19149 Integers.unsigned
R19184 Integers.repr_unsigned
R19184 Integers.repr_unsigned
R19254 Coq.Init.Logic "x = y" type_scope
R19238 Integers.mul
R19243 Integers.mul
R19256 Integers.mul
R19263 Integers.mul
R19315 Integers.unsigned
R19315 Integers.unsigned
R19341 Integers.unsigned
R19341 Integers.unsigned
R19367 Integers.unsigned
R19367 Integers.unsigned
R19388 Integers.eqm_samerepr
R19388 Integers.eqm_samerepr
R19432 Coq.ZArith.BinInt "x * y" Z_scope
R19428 Coq.ZArith.BinInt "x * y" Z_scope
R19408 Integers.eqm_trans
R19432 Coq.ZArith.BinInt "x * y" Z_scope
R19428 Coq.ZArith.BinInt "x * y" Z_scope
R19408 Integers.eqm_trans
R19472 Coq.ZArith.BinInt.Zmult_assoc
R19472 Coq.ZArith.BinInt.Zmult_assoc
R19564 Coq.Init.Logic "x = y" type_scope
R19548 Integers.mul
R19553 Integers.add
R19566 Integers.add
R19581 Integers.mul
R19571 Integers.mul
R19633 Integers.eqm_samerepr
R19633 Integers.eqm_samerepr
R19660 Integers.unsigned
R19660 Integers.unsigned
R19686 Integers.unsigned
R19686 Integers.unsigned
R19712 Integers.unsigned
R19712 Integers.unsigned
R19757 Coq.ZArith.BinInt "x * y" Z_scope
R19753 Coq.ZArith.BinInt "x + y" Z_scope
R19733 Integers.eqm_trans
R19757 Coq.ZArith.BinInt "x * y" Z_scope
R19753 Coq.ZArith.BinInt "x + y" Z_scope
R19733 Integers.eqm_trans
R19803 Coq.ZArith.BinInt "x * y" Z_scope
R19799 Coq.ZArith.BinInt "x + y" Z_scope
R19825 Coq.ZArith.BinInt "x + y" Z_scope
R19820 Coq.ZArith.BinInt "x * y" Z_scope
R19830 Coq.ZArith.BinInt "x * y" Z_scope
R19803 Coq.ZArith.BinInt "x * y" Z_scope
R19799 Coq.ZArith.BinInt "x + y" Z_scope
R19825 Coq.ZArith.BinInt "x + y" Z_scope
R19820 Coq.ZArith.BinInt "x * y" Z_scope
R19830 Coq.ZArith.BinInt "x * y" Z_scope
R19926 Coq.Init.Logic "x = y" type_scope
R19910 Integers.mul
R19917 Integers.add
R19928 Integers.add
R19943 Integers.mul
R19933 Integers.mul
R19978 Integers.mul_commut
R19978 Integers.mul_commut
R19998 Integers.mul_add_distr_l
R19998 Integers.mul_add_distr_l
R20031 Integers.mul_commut
R20031 Integers.mul_commut
R20031 Integers.mul_commut
R20098 Coq.Init.Logic "x = y" type_scope
R20085 Integers.neg
R20089 Integers.mul
R20100 Integers.mul
R20105 Integers.neg
R20163 Coq.Init.Logic "x = y" type_scope
R20150 Integers.neg
R20154 Integers.mul
R20165 Integers.mul
R20172 Integers.neg
R20326 Coq.Init.Logic "x = y" type_scope
R20268 Integers.Z_shift_add
R20304 Coq.Init.Datatypes.snd
R20309 Integers.Z_bin_decomp
R20281 Coq.Init.Datatypes.fst
R20286 Integers.Z_bin_decomp
R20469 Coq.Init.Logic "x = y" type_scope
R20465 Coq.ZArith.BinInt "x - y" Z_scope
R20455 Coq.ZArith.BinInt "x * y" Z_scope
R20460 Coq.ZArith.BinInt "x + y" Z_scope
R20477 Coq.ZArith.BinInt "x + y" Z_scope
R20473 Coq.ZArith.BinInt "x * y" Z_scope
R20469 Coq.Init.Logic "x = y" type_scope
R20465 Coq.ZArith.BinInt "x - y" Z_scope
R20455 Coq.ZArith.BinInt "x * y" Z_scope
R20460 Coq.ZArith.BinInt "x + y" Z_scope
R20477 Coq.ZArith.BinInt "x + y" Z_scope
R20473 Coq.ZArith.BinInt "x * y" Z_scope
R20514 Coq.ZArith.BinInt.Zpos
R20514 Coq.ZArith.BinInt.Zpos
R20645 Coq.Init.Logic "A /\ B" type_scope
R20640 Coq.Init.Logic "x = y" type_scope
R20651 Coq.Init.Logic "x = y" type_scope
R20614 Coq.Init.Logic "x = y" type_scope
R20596 Integers.Z_shift_add
R20616 Integers.Z_shift_add
R20913 Coq.Init.Logic "x = y" type_scope
R20898 Integers.Z_of_bits
R20915 Integers.Z_of_bits
R20885 Coq.Init.Logic "x = y" type_scope
R20859 Coq.ZArith.BinInt "x <= y < z" Z_scope
R20866 Coq.ZArith.BinInt.Z_of_nat
R20993 Coq.ZArith.Znat.inj_S
R20993 Coq.ZArith.Znat.inj_S
R21121 Integers.eqm
R21126 Integers.Z_of_bits
R21146 Integers.bits_of_Z
R21156 Integers.wordsize
R21136 Integers.wordsize
R21201 Coq.Init.Logic "'exists' x , p" type_scope
R21243 Coq.Init.Logic "x = y" type_scope
R21215 Integers.Z_of_bits
R21228 Integers.bits_of_Z
R21265 Coq.ZArith.BinInt "x + y" Z_scope
R21247 Coq.ZArith.BinInt "x * y" Z_scope
R21249 Coq.ZArith.Zpower.two_power_nat
R21201 Coq.Init.Logic "'exists' x , p" type_scope
R21243 Coq.Init.Logic "x = y" type_scope
R21215 Integers.Z_of_bits
R21228 Integers.bits_of_Z
R21265 Coq.ZArith.BinInt "x + y" Z_scope
R21247 Coq.ZArith.BinInt "x * y" Z_scope
R21249 Coq.ZArith.Zpower.two_power_nat
R21304 Coqlib.two_power_nat_O
R21304 Coqlib.two_power_nat_O
R21336 Coq.ZArith.BinInt "- x" Z_scope
R21336 Coq.ZArith.BinInt "- x" Z_scope
R21358 Coq.ZArith.Zpower.two_power_nat_S
R21358 Coq.ZArith.Zpower.two_power_nat_S
R21392 Integers.Z_bin_decomp
R21392 Integers.Z_bin_decomp
R21444 Integers.Z_of_bits
R21469 Coqlib.zeq
R21476 Coq.ZArith.BinInt "x + y" Z_scope
R21495 Integers.bits_of_Z
R21516 Coq.ZArith.BinInt "x - y" Z_scope
R21512 Coq.ZArith.BinInt "x + y" Z_scope
R21534 Integers.Z_of_bits
R21547 Integers.bits_of_Z
R21444 Integers.Z_of_bits
R21469 Coqlib.zeq
R21476 Coq.ZArith.BinInt "x + y" Z_scope
R21495 Integers.bits_of_Z
R21516 Coq.ZArith.BinInt "x - y" Z_scope
R21512 Coq.ZArith.BinInt "x + y" Z_scope
R21534 Integers.Z_of_bits
R21547 Integers.bits_of_Z
R21622 Integers.Z_shift_add_bin_decomp
R21622 Integers.Z_shift_add_bin_decomp
R21730 Integers.Z_of_bits_exten
R21730 Integers.Z_of_bits_exten
R21765 Coqlib.zeq_false
R21765 Coqlib.zeq_false
R21816 Integers.wordsize
R21816 Integers.wordsize
R21887 Coq.Init.Logic "x = y" type_scope
R21871 Integers.bits_of_Z
R21889 Coq.Init.Datatypes.false
R21949 Coqlib.zeq
R21949 Coqlib.zeq
R22047 Coq.Init.Logic "x = y" type_scope
R22022 Integers.Z_bin_decomp
R22042 Coq.ZArith.BinInt "x - y" Z_scope
R22038 Coq.ZArith.BinInt "x * y" Z_scope
R22049 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22050 Coq.Init.Datatypes.true
R22058 Coq.ZArith.BinInt "x - y" Z_scope
R22089 Integers.Z_bin_decomp
R22109 Coq.ZArith.BinInt "x - y" Z_scope
R22105 Coq.ZArith.BinInt "x * y" Z_scope
R22089 Integers.Z_bin_decomp
R22109 Coq.ZArith.BinInt "x - y" Z_scope
R22105 Coq.ZArith.BinInt "x * y" Z_scope
R22145 Integers.Z_shift_add_bin_decomp
R22175 Coq.ZArith.BinInt "x - y" Z_scope
R22171 Coq.ZArith.BinInt "x * y" Z_scope
R22145 Integers.Z_shift_add_bin_decomp
R22175 Coq.ZArith.BinInt "x - y" Z_scope
R22171 Coq.ZArith.BinInt "x * y" Z_scope
R22220 Coq.ZArith.BinInt "x - y" Z_scope
R22216 Coq.ZArith.BinInt "x * y" Z_scope
R22231 Integers.Z_shift_add
R22251 Coq.ZArith.BinInt "x - y" Z_scope
R22243 Coq.Init.Datatypes.true
R22220 Coq.ZArith.BinInt "x - y" Z_scope
R22216 Coq.ZArith.BinInt "x * y" Z_scope
R22231 Integers.Z_shift_add
R22251 Coq.ZArith.BinInt "x - y" Z_scope
R22243 Coq.Init.Datatypes.true
R22273 Integers.Z_shift_add_inj
R22273 Integers.Z_shift_add_inj
R22456 Coq.Init.Logic "x = y" type_scope
R22420 Integers.bits_of_Z
R22449 Coq.ZArith.BinInt "x - y" Z_scope
R22433 Coq.ZArith.Zpower.two_power_nat
R22458 Coq.Init.Datatypes.true
R22396 Coq.ZArith.BinInt "x <= y < z" Z_scope
R22403 Coq.ZArith.BinInt.Z_of_nat
R22553 Integers.bits_of_Z
R22553 Integers.bits_of_Z
R22574 Coq.ZArith.Zpower.two_power_nat_S
R22574 Coq.ZArith.Zpower.two_power_nat_S
R22599 Integers.Z_bin_decomp_2xm1
R22599 Integers.Z_bin_decomp_2xm1
R22628 Coq.ZArith.Znat.inj_S
R22628 Coq.ZArith.Znat.inj_S
R22646 Coqlib.zeq
R22646 Coqlib.zeq
R22771 Coq.Init.Logic "x = y" type_scope
R22740 Integers.Z_bin_decomp
R22754 Integers.Z_shift_add
R22773 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22806 Integers.Z_bin_decomp
R22820 Integers.Z_shift_add
R22806 Integers.Z_bin_decomp
R22820 Integers.Z_shift_add
R22870 Integers.Z_shift_add_bin_decomp
R22894 Integers.Z_shift_add
R22870 Integers.Z_shift_add_bin_decomp
R22894 Integers.Z_shift_add
R22933 Coq.Init.Datatypes.fst
R22944 Coq.Init.Datatypes.snd
R22933 Coq.Init.Datatypes.fst
R22944 Coq.Init.Datatypes.snd
R22964 Integers.Z_shift_add_inj
R22964 Integers.Z_shift_add_inj
R23118 Coq.Init.Logic "x = y" type_scope
R23088 Integers.bits_of_Z
R23101 Integers.Z_of_bits
R23065 Coq.ZArith.BinInt "x <= y < z" Z_scope
R23072 Coq.ZArith.BinInt.Z_of_nat
R23206 Integers.Z_bin_decomp_shift_add
R23206 Integers.Z_bin_decomp_shift_add
R23238 Coqlib.zeq
R23238 Coqlib.zeq
R23306 Coq.ZArith.Znat.inj_S
R23306 Coq.ZArith.Znat.inj_S
R23370 Coq.ZArith.BinInt "x <= y < z" Z_scope
R23373 Integers.Z_of_bits
R23383 Integers.wordsize
R23373 Integers.Z_of_bits
R23383 Integers.wordsize
R23396 Integers.modulus
R23457 Integers.wordsize
R23457 Integers.wordsize
R23505 Coqlib.two_power_nat_O
R23505 Coqlib.two_power_nat_O
R23539 Coq.ZArith.Zpower.two_power_nat_S
R23539 Coq.ZArith.Zpower.two_power_nat_S
R23587 Coq.ZArith.BinInt "x + y" Z_scope
R23587 Coq.ZArith.BinInt "x + y" Z_scope
R23607 Integers.Z_of_bits
R23634 Coq.ZArith.BinInt "x + y" Z_scope
R23607 Integers.Z_of_bits
R23634 Coq.ZArith.BinInt "x + y" Z_scope
R23712 Integers.Z_of_bits_range
R23775 Coq.ZArith.BinInt "x <= y <= z" Z_scope
R23778 Integers.Z_of_bits
R23788 Integers.wordsize
R23778 Integers.Z_of_bits
R23788 Integers.wordsize
R23802 Integers.max_unsigned
R23868 Integers.Z_of_bits_range
R23868 Integers.Z_of_bits_range
R23913 Integers.Z_of_bits_range_2
R24003 Coq.Init.Logic "x = y" type_scope
R23987 Integers.bits_of_Z
R24005 Coq.Init.Datatypes.false
R23980 Coq.ZArith.BinInt "x < y" Z_scope
R24076 Integers.Z_bin_decomp
R24076 Integers.Z_bin_decomp
R24101 Coqlib.zeq_false
R24101 Coqlib.zeq_false
R24219 Coq.Init.Logic "x = y" type_scope
R24203 Integers.bits_of_Z
R24221 Coq.Init.Datatypes.false
R24186 Coq.ZArith.BinInt "x >= y" Z_scope
R24189 Coq.ZArith.BinInt.Z_of_nat
R24292 Integers.Z_bin_decomp
R24292 Integers.Z_bin_decomp
R24317 Coqlib.zeq_false
R24317 Coqlib.zeq_false
R24349 Coq.ZArith.Znat.inj_S
R24349 Coq.ZArith.Znat.inj_S
R24376 Coq.ZArith.Znat.inj_S
R24376 Coq.ZArith.Znat.inj_S
R24604 Coq.Init.Logic "x = y" type_scope
R24588 Coq.ZArith.BinInt "x + y" Z_scope
R24574 Integers.Z_of_bits
R24590 Integers.Z_of_bits
R24606 Integers.Z_of_bits
R24562 Coq.Init.Logic "x = y" type_scope
R24555 Coq.Bool.Bool "x || y" bool_scope
R24530 Coq.ZArith.BinInt "x <= y < z" Z_scope
R24537 Coq.ZArith.BinInt.Z_of_nat
R24503 Coq.Init.Logic "x = y" type_scope
R24496 Coq.Bool.Bool "x && y" bool_scope
R24505 Coq.Init.Datatypes.false
R24471 Coq.ZArith.BinInt "x <= y < z" Z_scope
R24478 Coq.ZArith.BinInt.Z_of_nat
R24691 Coq.ZArith.Znat.inj_S
R24691 Coq.ZArith.Znat.inj_S
R24711 Coq.ZArith.Znat.inj_S
R24711 Coq.ZArith.Znat.inj_S
R24791 Coq.ZArith.BinInt "x + y" Z_scope
R24773 Coq.ZArith.BinInt "x + y" Z_scope
R24755 Coq.ZArith.BinInt "x + y" Z_scope
R24791 Coq.ZArith.BinInt "x + y" Z_scope
R24773 Coq.ZArith.BinInt "x + y" Z_scope
R24755 Coq.ZArith.BinInt "x + y" Z_scope
R24810 Coq.ZArith.BinInt "x <= y < z" Z_scope
R24817 Coq.ZArith.BinInt.Zsucc
R24823 Coq.ZArith.BinInt.Z_of_nat
R24810 Coq.ZArith.BinInt "x <= y < z" Z_scope
R24817 Coq.ZArith.BinInt.Zsucc
R24823 Coq.ZArith.BinInt.Z_of_nat
R24901 Integers.Z_of_bits
R24927 Coq.ZArith.BinInt "x + y" Z_scope
R24901 Integers.Z_of_bits
R24927 Coq.ZArith.BinInt "x + y" Z_scope
R24947 Integers.Z_of_bits
R24973 Coq.ZArith.BinInt "x + y" Z_scope
R24947 Integers.Z_of_bits
R24973 Coq.ZArith.BinInt "x + y" Z_scope
R25301 Coq.Init.Logic "x = y" type_scope
R25281 Integers.bitwise_binop
R25303 Integers.bitwise_binop
R25253 Coq.Init.Logic "x = y" type_scope
R25378 Integers.Z_of_bits_exten
R25378 Integers.Z_of_bits_exten
R25559 Coq.Init.Logic "x = y" type_scope
R25519 Integers.bitwise_binop
R25536 Integers.bitwise_binop
R25563 Integers.bitwise_binop
R25582 Integers.bitwise_binop
R25483 Coq.Init.Logic "x = y" type_scope
R25660 Integers.unsigned_repr
R25660 Integers.unsigned_repr
R25660 Integers.unsigned_repr
R25660 Integers.unsigned_repr
R25660 Integers.unsigned_repr
R25660 Integers.unsigned_repr
R25706 Integers.Z_of_bits_exten
R25706 Integers.Z_of_bits_exten
R25749 Integers.bits_of_Z_of_bits
R25749 Integers.bits_of_Z_of_bits
R25749 Integers.bits_of_Z_of_bits
R25880 Coq.Init.Logic "x = y" type_scope
R25860 Integers.bitwise_binop
R25838 Coq.Init.Logic "x = y" type_scope
R25940 Integers.repr
R25946 Integers.Z_of_bits
R25966 Integers.bits_of_Z
R25986 Integers.unsigned
R25976 Integers.wordsize
R25956 Integers.wordsize
R25940 Integers.repr
R25946 Integers.Z_of_bits
R25966 Integers.bits_of_Z
R25986 Integers.unsigned
R25976 Integers.wordsize
R25956 Integers.wordsize
R26017 Integers.Z_of_bits_exten
R26017 Integers.Z_of_bits_exten
R26064 Integers.repr
R26070 Integers.unsigned
R26064 Integers.repr
R26070 Integers.unsigned
R26092 Integers.eqm_samerepr
R26092 Integers.eqm_samerepr
R26112 Integers.Z_of_bits_of_Z
R26112 Integers.Z_of_bits_of_Z
R26134 Integers.repr_unsigned
R26134 Integers.repr_unsigned
R26228 Coq.Init.Logic "x = y" type_scope
R26220 Integers.and
R26230 Integers.and
R26246 Integers.bitwise_binop_commut
R26272 Coq.Bool.Bool.andb_comm
R26267 Coq.Bool.Bool.andb
R26334 Coq.Init.Logic "x = y" type_scope
R26318 Integers.and
R26323 Integers.and
R26336 Integers.and
R26343 Integers.and
R26360 Integers.bitwise_binop_assoc
R26385 Coq.Bool.Bool.andb_assoc
R26380 Coq.Bool.Bool.andb
R26438 Coq.Init.Logic "x = y" type_scope
R26427 Integers.and
R26433 Integers.zero
R26440 Integers.zero
R26513 Integers.repr
R26519 Integers.Z_of_bits
R26539 Integers.bits_of_Z
R26549 Integers.wordsize
R26529 Integers.wordsize
R26513 Integers.repr
R26519 Integers.Z_of_bits
R26539 Integers.bits_of_Z
R26549 Integers.wordsize
R26529 Integers.wordsize
R26579 Integers.Z_of_bits_exten
R26579 Integers.Z_of_bits_exten
R26614 Integers.unsigned
R26624 Integers.repr
R26614 Integers.unsigned
R26624 Integers.repr
R26651 Integers.bits_of_Z_zero
R26651 Integers.bits_of_Z_zero
R26673 Coq.Bool.Bool.andb_b_false
R26673 Coq.Bool.Bool.andb_b_false
R26743 Coq.Init.Logic "x = y" type_scope
R26738 Integers.mone
R26745 Integers.repr
R26750 Integers.max_unsigned
R26792 Integers.eqm_samerepr
R26792 Integers.eqm_samerepr
R26894 Coq.Init.Logic "x = y" type_scope
R26883 Integers.and
R26889 Integers.mone
R26954 Integers.mone_max_unsigned
R26954 Integers.mone_max_unsigned
R27019 Integers.repr
R27025 Integers.Z_of_bits
R27045 Integers.bits_of_Z
R27065 Integers.unsigned
R27055 Integers.wordsize
R27035 Integers.wordsize
R27019 Integers.repr
R27025 Integers.Z_of_bits
R27045 Integers.bits_of_Z
R27065 Integers.unsigned
R27055 Integers.wordsize
R27035 Integers.wordsize
R27096 Integers.Z_of_bits_exten
R27096 Integers.Z_of_bits_exten
R27131 Integers.unsigned_repr
R27131 Integers.unsigned_repr
R27154 Integers.bits_of_Z_mone
R27154 Integers.bits_of_Z_mone
R27179 Coq.Bool.Bool.andb_b_true
R27179 Coq.Bool.Bool.andb_b_true
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R27246 Integers.repr
R27252 Integers.unsigned
R27246 Integers.repr
R27252 Integers.unsigned
R27275 Integers.eqm_samerepr
R27275 Integers.eqm_samerepr
R27295 Integers.Z_of_bits_of_Z
R27295 Integers.Z_of_bits_of_Z
R27319 Integers.repr_unsigned
R27319 Integers.repr_unsigned
R27376 Coq.Init.Logic "x = y" type_scope
R27368 Integers.and
R27415 Coq.Init.Logic "x = y" type_scope
R27410 Coq.Bool.Bool "x && y" bool_scope
R27415 Coq.Init.Logic "x = y" type_scope
R27410 Coq.Bool.Bool "x && y" bool_scope
R27459 Integers.bitwise_binop_idem
R27478 Coq.Bool.Bool.andb
R27459 Integers.bitwise_binop_idem
R27478 Coq.Bool.Bool.andb
R27563 Coq.Init.Logic "x = y" type_scope
R27556 Integers.or
R27565 Integers.or
R27580 Integers.bitwise_binop_commut
R27605 Coq.Bool.Bool.orb_comm
R27601 Coq.Bool.Bool.orb
R27663 Coq.Init.Logic "x = y" type_scope
R27649 Integers.or
R27653 Integers.or
R27665 Integers.or
R27671 Integers.or
R27687 Integers.bitwise_binop_assoc
R27711 Coq.Bool.Bool.orb_assoc
R27707 Coq.Bool.Bool.orb
R27761 Coq.Init.Logic "x = y" type_scope
R27751 Integers.or
R27756 Integers.zero
R27832 Integers.repr
R27838 Integers.Z_of_bits
R27858 Integers.bits_of_Z
R27878 Integers.unsigned
R27868 Integers.wordsize
R27848 Integers.wordsize
R27832 Integers.repr
R27838 Integers.Z_of_bits
R27858 Integers.bits_of_Z
R27878 Integers.unsigned
R27868 Integers.wordsize
R27848 Integers.wordsize
R27909 Integers.Z_of_bits_exten
R27909 Integers.Z_of_bits_exten
R27944 Integers.unsigned
R27954 Integers.repr
R27944 Integers.unsigned
R27954 Integers.repr
R27981 Integers.bits_of_Z_zero
R27981 Integers.bits_of_Z_zero
R28003 Coq.Bool.Bool.orb_b_false
R28003 Coq.Bool.Bool.orb_b_false
R28032 Integers.repr
R28038 Integers.unsigned
R28032 Integers.repr
R28038 Integers.unsigned
R28076 Integers.eqm_samerepr
R28076 Integers.eqm_samerepr
R28096 Integers.Z_of_bits_of_Z
R28096 Integers.Z_of_bits_of_Z
R28155 Coq.Init.Logic "x = y" type_scope
R28145 Integers.or
R28150 Integers.mone
R28157 Integers.mone
R28180 Integers.mone_max_unsigned
R28180 Integers.mone_max_unsigned
R28262 Integers.Z_of_bits
R28282 Integers.bits_of_Z
R28301 Integers.max_unsigned
R28292 Integers.wordsize
R28272 Integers.wordsize
R28262 Integers.Z_of_bits
R28282 Integers.bits_of_Z
R28301 Integers.max_unsigned
R28292 Integers.wordsize
R28272 Integers.wordsize
R28325 Integers.Z_of_bits_exten
R28325 Integers.Z_of_bits_exten
R28395 Integers.max_unsigned
R28360 Integers.unsigned
R28370 Integers.repr
R28375 Integers.max_unsigned
R28395 Integers.max_unsigned
R28360 Integers.unsigned
R28370 Integers.repr
R28375 Integers.max_unsigned
R28449 Integers.bits_of_Z_mone
R28449 Integers.bits_of_Z_mone
R28479 Coq.Bool.Bool.orb_b_true
R28479 Coq.Bool.Bool.orb_b_true
R28500 Integers.eqm_small_eq
R28500 Integers.eqm_small_eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R28601 Coq.Init.Logic "x = y" type_scope
R28594 Integers.or
R28640 Coq.Init.Logic "x = y" type_scope
R28635 Coq.Bool.Bool "x || y" bool_scope
R28640 Coq.Init.Logic "x = y" type_scope
R28635 Coq.Bool.Bool "x || y" bool_scope
R28684 Integers.bitwise_binop_idem
R28703 Coq.Bool.Bool.orb
R28684 Integers.bitwise_binop_idem
R28703 Coq.Bool.Bool.orb
R28774 Coq.Init.Logic "x = y" type_scope
R28759 Integers.and
R28766 Integers.or
R28776 Integers.or
R28790 Integers.and
R28780 Integers.and
R28872 Integers.unsigned_repr
R28872 Integers.unsigned_repr
R28872 Integers.unsigned_repr
R28872 Integers.unsigned_repr
R28872 Integers.unsigned_repr
R28872 Integers.unsigned_repr
R28872 Integers.unsigned_repr
R28872 Integers.unsigned_repr
R28911 Integers.Z_of_bits_exten
R28911 Integers.Z_of_bits_exten
R28953 Integers.bits_of_Z_of_bits
R28953 Integers.bits_of_Z_of_bits
R28953 Integers.bits_of_Z_of_bits
R28953 Integers.bits_of_Z_of_bits
R28953 Integers.bits_of_Z_of_bits
R28953 Integers.bits_of_Z_of_bits
R28953 Integers.bits_of_Z_of_bits
R28953 Integers.bits_of_Z_of_bits
R28986 Coq.Bool.Bool.demorgan1
R28986 Coq.Bool.Bool.demorgan1
R29078 Coq.Init.Logic "x = y" type_scope
R29070 Integers.xor
R29080 Integers.xor
R29096 Integers.bitwise_binop_commut
R29122 Coq.Bool.Bool.xorb_comm
R29117 Coq.Bool.Bool.xorb
R29184 Coq.Init.Logic "x = y" type_scope
R29168 Integers.xor
R29173 Integers.xor
R29186 Integers.xor
R29193 Integers.xor
R29252 Coq.Init.Logic "x = y" type_scope
R29234 Coq.Bool.Bool.xorb
R29242 Coq.Bool.Bool.xorb
R29254 Coq.Bool.Bool.xorb
R29260 Coq.Bool.Bool.xorb
R29252 Coq.Init.Logic "x = y" type_scope
R29234 Coq.Bool.Bool.xorb
R29242 Coq.Bool.Bool.xorb
R29254 Coq.Bool.Bool.xorb
R29260 Coq.Bool.Bool.xorb
R29292 Coq.Bool.Bool.xorb_assoc
R29292 Coq.Bool.Bool.xorb_assoc
R29313 Integers.bitwise_binop_assoc
R29333 Coq.Bool.Bool.xorb
R29313 Integers.bitwise_binop_assoc
R29333 Coq.Bool.Bool.xorb
R29387 Coq.Init.Logic "x = y" type_scope
R29376 Integers.xor
R29382 Integers.zero
R29459 Integers.repr
R29465 Integers.Z_of_bits
R29485 Integers.bits_of_Z
R29505 Integers.unsigned
R29495 Integers.wordsize
R29475 Integers.wordsize
R29459 Integers.repr
R29465 Integers.Z_of_bits
R29485 Integers.bits_of_Z
R29505 Integers.unsigned
R29495 Integers.wordsize
R29475 Integers.wordsize
R29536 Integers.Z_of_bits_exten
R29536 Integers.Z_of_bits_exten
R29571 Integers.unsigned
R29581 Integers.repr
R29571 Integers.unsigned
R29581 Integers.repr
R29608 Integers.bits_of_Z_zero
R29608 Integers.bits_of_Z_zero
R29630 Coq.Bool.Bool.xorb_false
R29630 Coq.Bool.Bool.xorb_false
R29658 Integers.repr
R29664 Integers.unsigned
R29658 Integers.repr
R29664 Integers.unsigned
R29702 Integers.eqm_samerepr
R29702 Integers.eqm_samerepr
R29722 Integers.Z_of_bits_of_Z
R29722 Integers.Z_of_bits_of_Z
R29779 Coq.Init.Logic "x = y" type_scope
R29766 Integers.xor
R29775 Integers.one
R29770 Integers.zero
R29781 Integers.one
R29845 Coq.Init.Logic "x = y" type_scope
R29833 Integers.xor
R29841 Integers.one
R29837 Integers.one
R29847 Integers.zero
R29938 Coq.Init.Logic "x = y" type_scope
R29922 Integers.and
R29929 Integers.xor
R29940 Integers.xor
R29955 Integers.and
R29945 Integers.and
R30038 Integers.unsigned_repr
R30038 Integers.unsigned_repr
R30038 Integers.unsigned_repr
R30038 Integers.unsigned_repr
R30038 Integers.unsigned_repr
R30038 Integers.unsigned_repr
R30038 Integers.unsigned_repr
R30038 Integers.unsigned_repr
R30077 Integers.Z_of_bits_exten
R30077 Integers.Z_of_bits_exten
R30119 Integers.bits_of_Z_of_bits
R30119 Integers.bits_of_Z_of_bits
R30119 Integers.bits_of_Z_of_bits
R30119 Integers.bits_of_Z_of_bits
R30119 Integers.bits_of_Z_of_bits
R30119 Integers.bits_of_Z_of_bits
R30119 Integers.bits_of_Z_of_bits
R30119 Integers.bits_of_Z_of_bits
R30184 Coq.Init.Logic "x = y" type_scope
R30170 Coq.Bool.Bool "x && y" bool_scope
R30174 Coq.Bool.Bool.xorb
R30186 Coq.Bool.Bool.xorb
R30203 Coq.Bool.Bool "x && y" bool_scope
R30194 Coq.Bool.Bool "x && y" bool_scope
R30184 Coq.Init.Logic "x = y" type_scope
R30170 Coq.Bool.Bool "x && y" bool_scope
R30174 Coq.Bool.Bool.xorb
R30186 Coq.Bool.Bool.xorb
R30203 Coq.Bool.Bool "x && y" bool_scope
R30194 Coq.Bool.Bool "x && y" bool_scope
R30359 Coq.Init.Logic "'exists' x , p" type_scope
R30404 Coq.Init.Logic "x = y" type_scope
R30371 Integers.Z_of_bits
R30398 Coq.ZArith.BinInt "x - y" Z_scope
R30430 Coq.ZArith.BinInt "x + y" Z_scope
R30412 Coq.ZArith.BinInt "x * y" Z_scope
R30414 Coq.ZArith.Zpower.two_power_nat
R30432 Integers.Z_shift_add
R30454 Integers.Z_of_bits
R30517 Coqlib.two_power_nat_O
R30517 Coqlib.two_power_nat_O
R30631 Coq.ZArith.Zpower.two_power_nat_S
R30631 Coq.ZArith.Zpower.two_power_nat_S
R30683 Coq.ZArith.BinInt "x + y" Z_scope
R30683 Coq.ZArith.BinInt "x + y" Z_scope
R30716 Integers.Z_of_bits
R30747 Coq.ZArith.BinInt "x + y" Z_scope
R30743 Coq.ZArith.BinInt "x - y" Z_scope
R30765 Integers.Z_of_bits
R30796 Coq.ZArith.BinInt "x - y" Z_scope
R30792 Coq.ZArith.BinInt "x + y" Z_scope
R30716 Integers.Z_of_bits
R30747 Coq.ZArith.BinInt "x + y" Z_scope
R30743 Coq.ZArith.BinInt "x - y" Z_scope
R30765 Integers.Z_of_bits
R30796 Coq.ZArith.BinInt "x - y" Z_scope
R30792 Coq.ZArith.BinInt "x + y" Z_scope
R30837 Coq.ZArith.BinInt "x + y" Z_scope
R30837 Coq.ZArith.BinInt "x + y" Z_scope
R30934 Integers.Z_of_bits_exten
R30934 Integers.Z_of_bits_exten
R31071 Integers.eqm
R31132 Coq.ZArith.BinInt "x * y" Z_scope
R31124 Coq.ZArith.Zpower.two_p
R31134 Integers.Z_of_bits
R31144 Integers.wordsize
R31076 Integers.Z_of_bits
R31110 Coq.ZArith.BinInt "x - y" Z_scope
R31086 Integers.wordsize
R31057 Coq.Init.Logic "x = y" type_scope
R31059 Coq.Init.Datatypes.false
R31046 Coq.ZArith.BinInt "x < y" Z_scope
R31023 Coq.ZArith.BinInt "x <= y" Z_scope
R31191 Coq.ZArith.Wf_Z.natlike_ind
R31191 Coq.ZArith.Wf_Z.natlike_ind
R31212 Integers.eqm_refl2
R31212 Integers.eqm_refl2
R31237 Integers.Z_of_bits
R31247 Integers.wordsize
R31237 Integers.Z_of_bits
R31247 Integers.wordsize
R31268 Integers.Z_of_bits_exten
R31268 Integers.Z_of_bits_exten
R31315 Coq.ZArith.Zpower.two_p
R31315 Coq.ZArith.Zpower.two_p
R31347 Coq.ZArith.Zpower.two_p_S
R31347 Coq.ZArith.Zpower.two_p_S
R31389 Coq.ZArith.BinInt "x - y" Z_scope
R31389 Coq.ZArith.BinInt "x - y" Z_scope
R31420 Integers.Z_of_bits
R31455 Coq.ZArith.BinInt "x - y" Z_scope
R31430 Integers.wordsize
R31404 Integers.eqm_trans
R31420 Integers.Z_of_bits
R31455 Coq.ZArith.BinInt "x - y" Z_scope
R31430 Integers.wordsize
R31404 Integers.eqm_trans
R31471 Integers.eqm_refl2
R31471 Integers.eqm_refl2
R31488 Integers.Z_of_bits_exten
R31488 Integers.Z_of_bits_exten
R31564 Integers.Z_shift_add
R31587 Integers.Z_of_bits
R31597 Integers.wordsize
R31548 Integers.eqm_trans
R31564 Integers.Z_shift_add
R31587 Integers.Z_of_bits
R31597 Integers.wordsize
R31548 Integers.eqm_trans
R31621 Integers.Z_of_bits_shift
R31637 Integers.wordsize
R31621 Integers.Z_of_bits_shift
R31637 Integers.wordsize
R31710 Coq.ZArith.BinInt.Zmult_assoc
R31710 Coq.ZArith.BinInt.Zmult_assoc
R31729 Integers.eqm_mult
R31729 Integers.eqm_mult
R31745 Integers.eqm_refl
R31745 Integers.eqm_refl
R31837 Coq.Init.Logic "x = y" type_scope
R31829 Integers.shl
R31839 Integers.mul
R31846 Integers.repr
R31852 Coq.ZArith.Zpower.two_p
R31859 Integers.unsigned
R31917 Integers.eqm_samerepr
R31917 Integers.eqm_samerepr
R31941 Integers.eqm_trans
R31941 Integers.eqm_trans
R31960 Integers.Z_of_bits_shifts
R31960 Integers.Z_of_bits_shifts
R31992 Integers.unsigned_range
R31992 Integers.unsigned_range
R32034 Integers.bits_of_Z_below
R32034 Integers.bits_of_Z_below
R32067 Coq.ZArith.BinInt.Zmult_comm
R32067 Coq.ZArith.BinInt.Zmult_comm
R32085 Integers.eqm_mult
R32085 Integers.eqm_mult
R32103 Integers.Z_of_bits_of_Z
R32103 Integers.Z_of_bits_of_Z
R32125 Integers.eqm_unsigned_repr
R32125 Integers.eqm_unsigned_repr
R32189 Coq.Init.Logic "x = y" type_scope
R32178 Integers.shl
R32184 Integers.zero
R32219 Integers.shl_mul_two_p
R32219 Integers.shl_mul_two_p
R32280 Integers.one
R32245 Integers.repr
R32251 Coq.ZArith.Zpower.two_p
R32258 Integers.unsigned
R32267 Integers.zero
R32280 Integers.one
R32245 Integers.repr
R32251 Coq.ZArith.Zpower.two_p
R32258 Integers.unsigned
R32267 Integers.zero
R32293 Integers.mul_one
R32293 Integers.mul_one
R32349 Coq.Init.Logic "x = y" type_scope
R32341 Integers.shl
R32351 Integers.mul
R32358 Integers.shl
R32362 Integers.one
R32408 Coq.Init.Logic "x = y" type_scope
R32398 Integers.shl
R32402 Integers.one
R32410 Integers.repr
R32416 Coq.ZArith.Zpower.two_p
R32423 Integers.unsigned
R32408 Coq.Init.Logic "x = y" type_scope
R32398 Integers.shl
R32402 Integers.one
R32410 Integers.repr
R32416 Coq.ZArith.Zpower.two_p
R32423 Integers.unsigned
R32448 Integers.shl_mul_two_p
R32448 Integers.shl_mul_two_p
R32471 Integers.mul_commut
R32471 Integers.mul_commut
R32491 Integers.mul_one
R32491 Integers.mul_one
R32525 Integers.shl_mul_two_p
R32525 Integers.shl_mul_two_p
R32633 Coq.Init.Logic "x = y" type_scope
R32625 Integers.shl
R32635 Integers.rolm
R32645 Integers.shl
R32649 Integers.mone
R32613 Coq.Init.Logic "x = y" type_scope
R32580 Integers.ltu
R32587 Integers.repr
R32593 Coq.ZArith.BinInt.Z_of_nat
R32602 Integers.wordsize
R32615 Coq.Init.Datatypes.true
R32702 Integers.unsigned_repr
R32702 Integers.unsigned_repr
R32723 Coqlib.zlt
R32741 Coq.ZArith.BinInt.Z_of_nat
R32750 Integers.wordsize
R32728 Integers.unsigned
R32723 Coqlib.zlt
R32741 Coq.ZArith.BinInt.Z_of_nat
R32750 Integers.wordsize
R32728 Integers.unsigned
R32836 Integers.Z_of_bits_exten
R32836 Integers.Z_of_bits_exten
R32878 Integers.unsigned_repr
R32878 Integers.unsigned_repr
R32878 Integers.unsigned_repr
R32878 Integers.unsigned_repr
R32878 Integers.unsigned_repr
R32878 Integers.unsigned_repr
R32926 Integers.bits_of_Z_of_bits
R32926 Integers.bits_of_Z_of_bits
R32926 Integers.bits_of_Z_of_bits
R32926 Integers.bits_of_Z_of_bits
R32926 Integers.bits_of_Z_of_bits
R32926 Integers.bits_of_Z_of_bits
R32960 Coqlib.zlt
R32967 Integers.unsigned
R32960 Coqlib.zlt
R32967 Integers.unsigned
R33017 Coq.ZArith.BinInt "x < y" Z_scope
R33004 Coq.ZArith.BinInt "x - y" Z_scope
R33006 Integers.unsigned
R33017 Coq.ZArith.BinInt "x < y" Z_scope
R33004 Coq.ZArith.BinInt "x - y" Z_scope
R33006 Integers.unsigned
R33041 Integers.bits_of_Z_below
R33067 Integers.unsigned
R33057 Integers.wordsize
R33041 Integers.bits_of_Z_below
R33067 Integers.unsigned
R33057 Integers.wordsize
R33097 Integers.bits_of_Z_below
R33123 Integers.unsigned
R33132 Integers.mone
R33113 Integers.wordsize
R33097 Integers.bits_of_Z_below
R33123 Integers.unsigned
R33132 Integers.mone
R33113 Integers.wordsize
R33163 Coq.Bool.Bool.andb_b_false
R33163 Coq.Bool.Bool.andb_b_false
R33203 Coq.ZArith.BinInt "x < y" Z_scope
R33190 Coq.ZArith.BinInt "x - y" Z_scope
R33192 Integers.unsigned
R33205 Coq.ZArith.BinInt.Z_of_nat
R33214 Integers.wordsize
R33203 Coq.ZArith.BinInt "x < y" Z_scope
R33190 Coq.ZArith.BinInt "x - y" Z_scope
R33192 Integers.unsigned
R33205 Coq.ZArith.BinInt.Z_of_nat
R33214 Integers.wordsize
R33241 Integers.unsigned_range
R33241 Integers.unsigned_range
R33279 Integers.unsigned
R33288 Integers.mone
R33323 Coq.ZArith.BinInt "x - y" Z_scope
R33300 Coq.ZArith.Zpower.two_power_nat
R33314 Integers.wordsize
R33279 Integers.unsigned
R33288 Integers.mone
R33323 Coq.ZArith.BinInt "x - y" Z_scope
R33300 Coq.ZArith.Zpower.two_power_nat
R33314 Integers.wordsize
R33339 Integers.bits_of_Z_mone
R33339 Integers.bits_of_Z_mone
R33363 Coq.Bool.Bool.andb_b_true
R33363 Coq.Bool.Bool.andb_b_true
R33393 Coqlib.Zmod_small
R33393 Coqlib.Zmod_small
R33436 Integers.mone_max_unsigned
R33436 Integers.mone_max_unsigned
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R33633 Coq.Init.Logic "x = y" type_scope
R33597 Integers.bitwise_binop
R33624 Integers.shl
R33614 Integers.shl
R33635 Integers.shl
R33640 Integers.bitwise_binop
R33584 Coq.Init.Logic "x = y" type_scope
R33578 Coq.Init.Datatypes.false
R33572 Coq.Init.Datatypes.false
R33586 Coq.Init.Datatypes.false
R33732 Integers.unsigned_repr
R33732 Integers.unsigned_repr
R33732 Integers.unsigned_repr
R33732 Integers.unsigned_repr
R33732 Integers.unsigned_repr
R33732 Integers.unsigned_repr
R33732 Integers.unsigned_repr
R33732 Integers.unsigned_repr
R33771 Integers.Z_of_bits_exten
R33771 Integers.Z_of_bits_exten
R33804 Coqlib.zlt
R33811 Coq.ZArith.BinInt "x - y" Z_scope
R33813 Integers.unsigned
R33804 Coqlib.zlt
R33811 Coq.ZArith.BinInt "x - y" Z_scope
R33813 Integers.unsigned
R33851 Coq.Init.Datatypes.false
R33851 Coq.Init.Datatypes.false
R33873 Integers.bits_of_Z_of_bits
R33873 Integers.bits_of_Z_of_bits
R33873 Integers.bits_of_Z_of_bits
R33873 Integers.bits_of_Z_of_bits
R33873 Integers.bits_of_Z_of_bits
R33873 Integers.bits_of_Z_of_bits
R33915 Integers.bits_of_Z_below
R33915 Integers.bits_of_Z_below
R33915 Integers.bits_of_Z_below
R33915 Integers.bits_of_Z_below
R33915 Integers.bits_of_Z_below
R33915 Integers.bits_of_Z_below
R33948 Integers.bits_of_Z_below
R33948 Integers.bits_of_Z_below
R33988 Integers.bits_of_Z_of_bits
R33988 Integers.bits_of_Z_of_bits
R33988 Integers.bits_of_Z_of_bits
R33988 Integers.bits_of_Z_of_bits
R33988 Integers.bits_of_Z_of_bits
R33988 Integers.bits_of_Z_of_bits
R33988 Integers.bits_of_Z_of_bits
R33988 Integers.bits_of_Z_of_bits
R34027 Integers.unsigned_range
R34027 Integers.unsigned_range
R34116 Coq.Init.Logic "x = y" type_scope
R34092 Integers.and
R34107 Integers.shl
R34097 Integers.shl
R34118 Integers.shl
R34123 Integers.and
R34170 Integers.bitwise_binop_shl
R34170 Integers.bitwise_binop_shl
R34297 Coq.Init.Logic "x = y" type_scope
R34288 Integers.shru
R34299 Integers.rolm
R34342 Integers.shru
R34347 Integers.mone
R34307 Integers.sub
R34312 Integers.repr
R34318 Coq.ZArith.BinInt.Z_of_nat
R34327 Integers.wordsize
R34276 Coq.Init.Logic "x = y" type_scope
R34243 Integers.ltu
R34250 Integers.repr
R34256 Coq.ZArith.BinInt.Z_of_nat
R34265 Integers.wordsize
R34278 Coq.Init.Datatypes.true
R34400 Integers.unsigned_repr
R34400 Integers.unsigned_repr
R34424 Coqlib.zlt
R34442 Coq.ZArith.BinInt.Z_of_nat
R34451 Integers.wordsize
R34429 Integers.unsigned
R34424 Coqlib.zlt
R34442 Coq.ZArith.BinInt.Z_of_nat
R34451 Integers.wordsize
R34429 Integers.unsigned
R34538 Integers.Z_of_bits_exten
R34538 Integers.Z_of_bits_exten
R34580 Integers.unsigned_repr
R34580 Integers.unsigned_repr
R34580 Integers.unsigned_repr
R34580 Integers.unsigned_repr
R34580 Integers.unsigned_repr
R34580 Integers.unsigned_repr
R34628 Integers.bits_of_Z_of_bits
R34628 Integers.bits_of_Z_of_bits
R34628 Integers.bits_of_Z_of_bits
R34628 Integers.bits_of_Z_of_bits
R34628 Integers.bits_of_Z_of_bits
R34628 Integers.bits_of_Z_of_bits
R34726 Coq.ZArith.BinInt.Z_of_nat
R34735 Integers.wordsize
R34679 Integers.unsigned
R34689 Integers.repr
R34695 Coq.ZArith.BinInt.Z_of_nat
R34704 Integers.wordsize
R34726 Coq.ZArith.BinInt.Z_of_nat
R34735 Integers.wordsize
R34679 Integers.unsigned
R34689 Integers.repr
R34695 Coq.ZArith.BinInt.Z_of_nat
R34704 Integers.wordsize
R34756 Integers.unsigned_repr
R34756 Integers.unsigned_repr
R34780 Coqlib.zlt
R34802 Coq.ZArith.BinInt.Z_of_nat
R34811 Integers.wordsize
R34787 Coq.ZArith.BinInt "x + y" Z_scope
R34789 Integers.unsigned
R34780 Coqlib.zlt
R34802 Coq.ZArith.BinInt.Z_of_nat
R34811 Integers.wordsize
R34787 Coq.ZArith.BinInt "x + y" Z_scope
R34789 Integers.unsigned
R34845 Integers.unsigned
R34854 Integers.mone
R34889 Coq.ZArith.BinInt "x - y" Z_scope
R34866 Coq.ZArith.Zpower.two_power_nat
R34880 Integers.wordsize
R34845 Integers.unsigned
R34854 Integers.mone
R34889 Coq.ZArith.BinInt "x - y" Z_scope
R34866 Coq.ZArith.Zpower.two_power_nat
R34880 Integers.wordsize
R34905 Integers.bits_of_Z_mone
R34905 Integers.bits_of_Z_mone
R34929 Coq.Bool.Bool.andb_b_true
R34929 Coq.Bool.Bool.andb_b_true
R34965 Coq.ZArith.BinInt "x - y" Z_scope
R34986 Coq.ZArith.BinInt "x - y" Z_scope
R34968 Coq.ZArith.BinInt.Z_of_nat
R34977 Integers.wordsize
R34988 Integers.unsigned
R35027 Coq.ZArith.BinInt "x + y" Z_scope
R35015 Coq.ZArith.BinInt "x + y" Z_scope
R35017 Integers.unsigned
R35034 Coq.ZArith.BinInt "x * y" Z_scope
R35038 Coq.ZArith.BinInt.Z_of_nat
R35047 Integers.wordsize
R34965 Coq.ZArith.BinInt "x - y" Z_scope
R34986 Coq.ZArith.BinInt "x - y" Z_scope
R34968 Coq.ZArith.BinInt.Z_of_nat
R34977 Integers.wordsize
R34988 Integers.unsigned
R35027 Coq.ZArith.BinInt "x + y" Z_scope
R35015 Coq.ZArith.BinInt "x + y" Z_scope
R35017 Integers.unsigned
R35034 Coq.ZArith.BinInt "x * y" Z_scope
R35038 Coq.ZArith.BinInt.Z_of_nat
R35047 Integers.wordsize
R35068 Coq.ZArith.Zdiv.Z_mod_plus
R35068 Coq.ZArith.Zdiv.Z_mod_plus
R35096 Coqlib.Zmod_small
R35096 Coqlib.Zmod_small
R35122 Integers.unsigned_range
R35122 Integers.unsigned_range
R35177 Integers.unsigned_range
R35177 Integers.unsigned_range
R35230 Integers.bits_of_Z_above
R35256 Integers.unsigned
R35246 Integers.wordsize
R35230 Integers.bits_of_Z_above
R35256 Integers.unsigned
R35246 Integers.wordsize
R35287 Integers.bits_of_Z_above
R35313 Integers.unsigned
R35322 Integers.mone
R35303 Integers.wordsize
R35287 Integers.bits_of_Z_above
R35313 Integers.unsigned
R35322 Integers.mone
R35303 Integers.wordsize
R35354 Coq.Bool.Bool.andb_b_false
R35354 Coq.Bool.Bool.andb_b_false
R35406 Coq.ZArith.BinInt.Z_of_nat
R35415 Integers.wordsize
R35390 Coq.ZArith.Zorder.Zle_trans
R35406 Coq.ZArith.BinInt.Z_of_nat
R35415 Integers.wordsize
R35390 Coq.ZArith.Zorder.Zle_trans
R35440 Integers.unsigned_range
R35440 Integers.unsigned_range
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R35677 Coq.Init.Logic "x = y" type_scope
R35639 Integers.bitwise_binop
R35667 Integers.shru
R35656 Integers.shru
R35679 Integers.shru
R35685 Integers.bitwise_binop
R35626 Coq.Init.Logic "x = y" type_scope
R35620 Coq.Init.Datatypes.false
R35614 Coq.Init.Datatypes.false
R35628 Coq.Init.Datatypes.false
R35778 Integers.unsigned_repr
R35778 Integers.unsigned_repr
R35778 Integers.unsigned_repr
R35778 Integers.unsigned_repr
R35778 Integers.unsigned_repr
R35778 Integers.unsigned_repr
R35778 Integers.unsigned_repr
R35778 Integers.unsigned_repr
R35817 Integers.Z_of_bits_exten
R35817 Integers.Z_of_bits_exten
R35850 Coqlib.zlt
R35872 Coq.ZArith.BinInt.Z_of_nat
R35881 Integers.wordsize
R35857 Coq.ZArith.BinInt "x + y" Z_scope
R35859 Integers.unsigned
R35850 Coqlib.zlt
R35872 Coq.ZArith.BinInt.Z_of_nat
R35881 Integers.wordsize
R35857 Coq.ZArith.BinInt "x + y" Z_scope
R35859 Integers.unsigned
R35917 Integers.bits_of_Z_of_bits
R35917 Integers.bits_of_Z_of_bits
R35917 Integers.bits_of_Z_of_bits
R35917 Integers.bits_of_Z_of_bits
R35917 Integers.bits_of_Z_of_bits
R35917 Integers.bits_of_Z_of_bits
R35917 Integers.bits_of_Z_of_bits
R35917 Integers.bits_of_Z_of_bits
R35956 Integers.unsigned_range
R35956 Integers.unsigned_range
R35997 Coq.Init.Datatypes.false
R35997 Coq.Init.Datatypes.false
R36019 Integers.bits_of_Z_of_bits
R36019 Integers.bits_of_Z_of_bits
R36019 Integers.bits_of_Z_of_bits
R36019 Integers.bits_of_Z_of_bits
R36019 Integers.bits_of_Z_of_bits
R36019 Integers.bits_of_Z_of_bits
R36061 Integers.bits_of_Z_above
R36061 Integers.bits_of_Z_above
R36061 Integers.bits_of_Z_above
R36061 Integers.bits_of_Z_above
R36061 Integers.bits_of_Z_above
R36061 Integers.bits_of_Z_above
R36094 Integers.bits_of_Z_above
R36094 Integers.bits_of_Z_above
R36183 Coq.Init.Logic "x = y" type_scope
R36157 Integers.and
R36173 Integers.shru
R36162 Integers.shru
R36185 Integers.shru
R36191 Integers.and
R36238 Integers.bitwise_binop_shru
R36238 Integers.bitwise_binop_shru
R36320 Coq.Init.Logic "x = y" type_scope
R36309 Integers.rol
R36315 Integers.zero
R36368 Integers.repr
R36374 Integers.Z_of_bits
R36394 Integers.bits_of_Z
R36414 Integers.unsigned
R36404 Integers.wordsize
R36384 Integers.wordsize
R36368 Integers.repr
R36374 Integers.Z_of_bits
R36394 Integers.bits_of_Z
R36414 Integers.unsigned
R36404 Integers.wordsize
R36384 Integers.wordsize
R36456 Integers.repr
R36462 Integers.unsigned
R36456 Integers.repr
R36462 Integers.unsigned
R36491 Integers.eqm_small_eq
R36491 Integers.eqm_small_eq
R36511 Integers.Z_of_bits_of_Z
R36511 Integers.Z_of_bits_of_Z
R36666 Coq.Init.Logic "x = y" type_scope
R36630 Integers.bitwise_binop
R36657 Integers.rol
R36647 Integers.rol
R36668 Integers.rol
R36673 Integers.bitwise_binop
R36766 Integers.unsigned_repr
R36766 Integers.unsigned_repr
R36766 Integers.unsigned_repr
R36766 Integers.unsigned_repr
R36766 Integers.unsigned_repr
R36806 Integers.Z_of_bits_exten
R36806 Integers.Z_of_bits_exten
R36848 Integers.bits_of_Z_of_bits
R36848 Integers.bits_of_Z_of_bits
R36848 Integers.bits_of_Z_of_bits
R36848 Integers.bits_of_Z_of_bits
R36848 Integers.bits_of_Z_of_bits
R36848 Integers.bits_of_Z_of_bits
R36848 Integers.bits_of_Z_of_bits
R36848 Integers.bits_of_Z_of_bits
R36881 Coq.ZArith.Zdiv.Z_mod_lt
R36881 Coq.ZArith.Zdiv.Z_mod_lt
R36964 Coq.Init.Logic "x = y" type_scope
R36948 Integers.rol
R36953 Integers.and
R36966 Integers.and
R36981 Integers.rol
R36971 Integers.rol
R37036 Integers.bitwise_binop_rol
R37036 Integers.bitwise_binop_rol
R37112 Coq.Init.Logic "x = y" type_scope
R37096 Integers.rol
R37101 Integers.rol
R37114 Integers.rol
R37121 Integers.modu
R37137 Integers.repr
R37143 Coq.ZArith.BinInt.Z_of_nat
R37152 Integers.wordsize
R37127 Integers.add
R37219 Integers.unsigned_repr
R37219 Integers.unsigned_repr
R37219 Integers.unsigned_repr
R37259 Integers.Z_of_bits_exten
R37259 Integers.Z_of_bits_exten
R37301 Integers.bits_of_Z_of_bits
R37301 Integers.bits_of_Z_of_bits
R37301 Integers.bits_of_Z_of_bits
R37301 Integers.bits_of_Z_of_bits
R37366 Coq.ZArith.BinInt.Z_of_nat
R37375 Integers.wordsize
R37366 Coq.ZArith.BinInt.Z_of_nat
R37375 Integers.wordsize
R37398 Integers.unsigned
R37421 Integers.unsigned
R37398 Integers.unsigned
R37421 Integers.unsigned
R37446 Coq.ZArith.BinInt "x > y" Z_scope
R37446 Coq.ZArith.BinInt "x > y" Z_scope
R37487 Integers.eqmod
R37498 Integers.unsigned
R37508 Integers.repr
R37487 Integers.eqmod
R37498 Integers.unsigned
R37508 Integers.repr
R37536 Integers.eqm_unsigned_repr
R37536 Integers.eqm_unsigned_repr
R37590 Coq.ZArith.BinInt "x * y" Z_scope
R37601 Coq.ZArith.Zdiv "x / y" Z_scope
R37593 Integers.modulus
R37590 Coq.ZArith.BinInt "x * y" Z_scope
R37601 Coq.ZArith.Zdiv "x / y" Z_scope
R37593 Integers.modulus
R37640 Coq.ZArith.BinInt "x * y" Z_scope
R37624 Coq.ZArith.BinInt "x * y" Z_scope
R37635 Coq.ZArith.Zdiv "x / y" Z_scope
R37627 Integers.modulus
R37653 Coq.ZArith.BinInt "x * y" Z_scope
R37655 Integers.modulus
R37640 Coq.ZArith.BinInt "x * y" Z_scope
R37624 Coq.ZArith.BinInt "x * y" Z_scope
R37635 Coq.ZArith.Zdiv "x / y" Z_scope
R37627 Integers.modulus
R37653 Coq.ZArith.BinInt "x * y" Z_scope
R37655 Integers.modulus
R37686 Coq.ZArith.BinInt.Zmult_assoc
R37686 Coq.ZArith.BinInt.Zmult_assoc
R37720 Integers.eqmod_mod_eq
R37720 Integers.eqmod_mod_eq
R37750 Integers.unsigned
R37760 Integers.repr
R37750 Integers.unsigned
R37760 Integers.repr
R37805 Coq.ZArith.BinInt "x - y" Z_scope
R37813 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R37810 Coq.ZArith.BinInt "x + y" Z_scope
R37785 Integers.eqmod_trans
R37805 Coq.ZArith.BinInt "x - y" Z_scope
R37813 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R37810 Coq.ZArith.BinInt "x + y" Z_scope
R37785 Integers.eqmod_trans
R37855 Coq.ZArith.BinInt "x - y" Z_scope
R37852 Coq.ZArith.BinInt "x - y" Z_scope
R37831 Integers.eqmod_trans
R37855 Coq.ZArith.BinInt "x - y" Z_scope
R37852 Coq.ZArith.BinInt "x - y" Z_scope
R37831 Integers.eqmod_trans
R37871 Integers.eqmod_sub
R37871 Integers.eqmod_sub
R37888 Integers.eqmod_sym
R37888 Integers.eqmod_sym
R37905 Integers.eqmod_mod
R37905 Integers.eqmod_mod
R37930 Integers.eqmod_refl
R37930 Integers.eqmod_refl
R37960 Coq.ZArith.BinInt "x - y" Z_scope
R37956 Coq.ZArith.BinInt "x - y" Z_scope
R37973 Coq.ZArith.BinInt "x - y" Z_scope
R37978 Coq.ZArith.BinInt "x + y" Z_scope
R37960 Coq.ZArith.BinInt "x - y" Z_scope
R37956 Coq.ZArith.BinInt "x - y" Z_scope
R37973 Coq.ZArith.BinInt "x - y" Z_scope
R37978 Coq.ZArith.BinInt "x + y" Z_scope
R37993 Integers.eqmod_sub
R37993 Integers.eqmod_sub
R38010 Integers.eqmod_refl
R38010 Integers.eqmod_refl
R38028 Integers.eqmod_mod
R38028 Integers.eqmod_mod
R38062 Integers.eqmod_sub
R38062 Integers.eqmod_sub
R38079 Integers.eqmod_refl
R38079 Integers.eqmod_refl
R38101 Integers.eqmod_trans
R38101 Integers.eqmod_trans
R38141 Integers.eqmod_trans
R38167 Integers.eqmod_mod
R38141 Integers.eqmod_trans
R38167 Integers.eqmod_mod
R38187 Integers.eqmod_sym
R38187 Integers.eqmod_sym
R38205 Integers.eqmod_trans
R38231 Integers.eqmod_mod
R38205 Integers.eqmod_trans
R38231 Integers.eqmod_mod
R38251 Integers.eqmod_sym
R38251 Integers.eqmod_sym
R38293 Coq.ZArith.Zdiv.Z_mod_lt
R38293 Coq.ZArith.Zdiv.Z_mod_lt
R38373 Coq.Init.Logic "x = y" type_scope
R38359 Integers.rolm
R38366 Integers.zero
R38375 Integers.and
R38422 Integers.rol_zero
R38422 Integers.rol_zero
R38515 Coq.Init.Logic "x = y" type_scope
R38489 Integers.rolm
R38495 Integers.rolm
R38521 Integers.rolm
R38586 Integers.and
R38591 Integers.rol
R38529 Integers.modu
R38547 Integers.repr
R38553 Coq.ZArith.BinInt.Z_of_nat
R38562 Integers.wordsize
R38535 Integers.add
R38647 Integers.rol_and
R38647 Integers.rol_and
R38664 Integers.and_assoc
R38664 Integers.and_assoc
R38686 Integers.rol_rol
R38686 Integers.rol_rol
R38763 Coq.Init.Logic "x = y" type_scope
R38748 Integers.rol
R38753 Integers.or
R38765 Integers.or
R38779 Integers.rol
R38769 Integers.rol
R38833 Integers.bitwise_binop_rol
R38833 Integers.bitwise_binop_rol
R38928 Coq.Init.Logic "x = y" type_scope
R38897 Integers.or
R38915 Integers.rolm
R38901 Integers.rolm
R38930 Integers.rolm
R38940 Integers.or
R38997 Integers.and_or_distrib
R38997 Integers.and_or_distrib
R39083 Coq.ZArith.BinInt.Z
R39074 Coq.Lists.List.list
R39079 Coq.ZArith.BinInt.Z
R39107 Coq.Lists.List.nil
R39122 Coq.Lists.List "x :: y" list_scope
R39139 Coq.ZArith.BinInt "x + y" Z_scope
R39131 Coq.ZArith.Zpower.two_p
R39074 Coq.Lists.List.list
R39079 Coq.ZArith.BinInt.Z
R39225 Coq.ZArith.BinInt "x <= y < z" Z_scope
R39228 Coq.Init.Datatypes.snd
R39233 Integers.Z_bin_decomp
R39228 Coq.Init.Datatypes.snd
R39233 Integers.Z_bin_decomp
R39207 Coq.ZArith.BinInt "x <= y < z" Z_scope
R39216 Coq.ZArith.BinInt "x * y" Z_scope
R39283 Integers.Z_shift_add_bin_decomp
R39283 Integers.Z_shift_add_bin_decomp
R39352 Coq.Init.Datatypes.fst
R39357 Integers.Z_bin_decomp
R39352 Coq.Init.Datatypes.fst
R39357 Integers.Z_bin_decomp
R39451 Coq.Init.Logic "x = y" type_scope
R39453 Integers.powerserie
R39465 Integers.Z_one_bits
R39476 Integers.wordsize
R39431 Coq.ZArith.BinInt "x <= y < z" Z_scope
R39438 Integers.modulus
R39585 Coq.Init.Logic "x = y" type_scope
R39575 Coq.ZArith.BinInt "x * y" Z_scope
R39577 Coq.ZArith.Zpower.two_p
R39587 Integers.powerserie
R39599 Integers.Z_one_bits
R39543 Coq.ZArith.BinInt "x <= y < z" Z_scope
R39550 Coq.ZArith.Zpower.two_power_nat
R39529 Coq.ZArith.BinInt "x <= y" Z_scope
R39585 Coq.Init.Logic "x = y" type_scope
R39575 Coq.ZArith.BinInt "x * y" Z_scope
R39577 Coq.ZArith.Zpower.two_p
R39587 Integers.powerserie
R39599 Integers.Z_one_bits
R39543 Coq.ZArith.BinInt "x <= y < z" Z_scope
R39550 Coq.ZArith.Zpower.two_power_nat
R39529 Coq.ZArith.BinInt "x <= y" Z_scope
R39659 Coqlib.two_power_nat_O
R39659 Coqlib.two_power_nat_O
R39695 Coq.Init.Logic "x = y" type_scope
R39695 Coq.Init.Logic "x = y" type_scope
R39734 Coq.ZArith.Zpower.two_power_nat_S
R39734 Coq.ZArith.Zpower.two_power_nat_S
R39763 Integers.Z_one_bits
R39763 Integers.Z_one_bits
R39789 Integers.Z_shift_add_bin_decomp
R39789 Integers.Z_shift_add_bin_decomp
R39830 Integers.Z_bin_decomp_range
R39830 Integers.Z_bin_decomp_range
R39866 Integers.Z_bin_decomp
R39866 Integers.Z_bin_decomp
R39966 Integers.powerserie
R39966 Integers.powerserie
R40005 Coq.ZArith.Zpower.two_p_is_exp
R40005 Coq.ZArith.Zpower.two_p_is_exp
R40027 Coq.ZArith.Zpower.two_p
R40027 Coq.ZArith.Zpower.two_p
R40107 Coq.ZArith.Zpower.two_p_is_exp
R40107 Coq.ZArith.Zpower.two_p_is_exp
R40129 Coq.ZArith.Zpower.two_p
R40129 Coq.ZArith.Zpower.two_p
R40212 Coq.ZArith.Zpower.two_p
R40212 Coq.ZArith.Zpower.two_p
R40335 Coq.ZArith.BinInt "x <= y < z" Z_scope
R40342 Coq.ZArith.BinInt.Z_of_nat
R40351 Integers.wordsize
R40299 Coq.Lists.List.In
R40305 Integers.Z_one_bits
R40316 Integers.wordsize
R40427 Coq.ZArith.BinInt "x <= y < z" Z_scope
R40436 Coq.ZArith.BinInt "x + y" Z_scope
R40438 Coq.ZArith.BinInt.Z_of_nat
R40398 Coq.Lists.List.In
R40404 Integers.Z_one_bits
R40427 Coq.ZArith.BinInt "x <= y < z" Z_scope
R40436 Coq.ZArith.BinInt "x + y" Z_scope
R40438 Coq.ZArith.BinInt.Z_of_nat
R40398 Coq.Lists.List.In
R40404 Integers.Z_one_bits
R40472 Coq.Lists.List.In
R40472 Coq.Lists.List.In
R40472 Coq.Lists.List.In
R40520 Integers.Z_bin_decomp
R40520 Integers.Z_bin_decomp
R40555 Coq.ZArith.Znat.inj_S
R40555 Coq.ZArith.Znat.inj_S
R40654 Coq.ZArith.Znat.inj_S
R40654 Coq.ZArith.Znat.inj_S
R40718 Integers.wordsize
R40718 Integers.wordsize
R40822 Coq.ZArith.BinInt "x <= y < z" Z_scope
R40825 Integers.unsigned
R40825 Integers.unsigned
R40841 Coq.ZArith.BinInt.Z_of_nat
R40850 Integers.wordsize
R40803 Coq.Init.Logic "x = y" type_scope
R40791 Integers.is_power2
R40805 Coq.Init.Datatypes.Some
R40916 Integers.Z_one_bits_range
R40934 Integers.unsigned
R40916 Integers.Z_one_bits_range
R40934 Integers.unsigned
R40960 Integers.Z_one_bits
R40981 Integers.unsigned
R40971 Integers.wordsize
R40960 Integers.Z_one_bits
R40981 Integers.unsigned
R40971 Integers.wordsize
R41100 Coq.ZArith.BinInt "x <= y < z" Z_scope
R41107 Coq.ZArith.BinInt.Z_of_nat
R41116 Integers.wordsize
R41100 Coq.ZArith.BinInt "x <= y < z" Z_scope
R41107 Coq.ZArith.BinInt.Z_of_nat
R41116 Integers.wordsize
R41166 Integers.unsigned_repr
R41166 Integers.unsigned_repr
R41215 Coq.ZArith.BinInt "x < y" Z_scope
R41197 Coq.ZArith.BinInt.Z_of_nat
R41206 Integers.wordsize
R41217 Integers.max_unsigned
R41215 Coq.ZArith.BinInt "x < y" Z_scope
R41197 Coq.ZArith.BinInt.Z_of_nat
R41206 Integers.wordsize
R41217 Integers.max_unsigned
R41393 Coq.Init.Logic "x = y" type_scope
R41357 Integers.ltu
R41367 Integers.repr
R41373 Coq.ZArith.BinInt.Z_of_nat
R41382 Integers.wordsize
R41395 Coq.Init.Datatypes.true
R41342 Coq.Init.Logic "x = y" type_scope
R41330 Integers.is_power2
R41344 Coq.Init.Datatypes.Some
R41483 Coq.ZArith.BinInt.Z_of_nat
R41492 Integers.wordsize
R41440 Integers.unsigned
R41450 Integers.repr
R41456 Coq.ZArith.BinInt.Z_of_nat
R41465 Integers.wordsize
R41483 Coq.ZArith.BinInt.Z_of_nat
R41492 Integers.wordsize
R41440 Integers.unsigned
R41450 Integers.repr
R41456 Coq.ZArith.BinInt.Z_of_nat
R41465 Integers.wordsize
R41517 Integers.is_power2_rng
R41517 Integers.is_power2_rng
R41548 Coqlib.zlt
R41569 Coq.ZArith.BinInt.Z_of_nat
R41578 Integers.wordsize
R41553 Integers.unsigned
R41548 Coqlib.zlt
R41569 Coq.ZArith.BinInt.Z_of_nat
R41578 Integers.wordsize
R41553 Integers.unsigned
R41718 Coq.Init.Logic "x = y" type_scope
R41707 Integers.unsigned
R41720 Coq.ZArith.Zpower.two_p
R41727 Integers.unsigned
R41690 Coq.Init.Logic "x = y" type_scope
R41678 Integers.is_power2
R41692 Coq.Init.Datatypes.Some
R41799 Integers.Z_one_bits_powerserie
R41835 Integers.unsigned_range
R41822 Integers.unsigned
R41799 Integers.Z_one_bits_powerserie
R41835 Integers.unsigned_range
R41822 Integers.unsigned
R41869 Integers.Z_one_bits_range
R41887 Integers.unsigned
R41869 Integers.Z_one_bits_range
R41887 Integers.unsigned
R41913 Integers.Z_one_bits
R41934 Integers.unsigned
R41924 Integers.wordsize
R41913 Integers.Z_one_bits
R41934 Integers.unsigned
R41924 Integers.wordsize
R42065 Integers.unsigned_repr
R42065 Integers.unsigned_repr
R42089 Coq.ZArith.Zpower.two_p
R42112 Coq.ZArith.BinInt "x + y" Z_scope
R42104 Coq.ZArith.Zpower.two_p
R42089 Coq.ZArith.Zpower.two_p
R42112 Coq.ZArith.BinInt "x + y" Z_scope
R42104 Coq.ZArith.Zpower.two_p
R42182 Coq.ZArith.BinInt "x < y" Z_scope
R42164 Coq.ZArith.BinInt.Z_of_nat
R42173 Integers.wordsize
R42184 Integers.max_unsigned
R42182 Coq.ZArith.BinInt "x < y" Z_scope
R42164 Coq.ZArith.BinInt.Z_of_nat
R42173 Integers.wordsize
R42184 Integers.max_unsigned
R42348 Coq.Init.Logic "x = y" type_scope
R42340 Integers.mul
R42350 Integers.shl
R42323 Coq.Init.Logic "x = y" type_scope
R42311 Integers.is_power2
R42325 Coq.Init.Datatypes.Some
R42391 Integers.is_power2_correct
R42391 Integers.is_power2_correct
R42437 Integers.shl_mul_two_p
R42437 Integers.shl_mul_two_p
R42475 Integers.repr_unsigned
R42475 Integers.repr_unsigned
R42609 Coq.Init.Logic "x = y" type_scope
R42595 Integers.Z_of_bits
R42611 Integers.Z_shift_add
R42630 Integers.Z_of_bits
R42656 Coq.ZArith.BinInt "x + y" Z_scope
R42581 Coq.Init.Logic "x = y" type_scope
R42583 Coq.Init.Datatypes.false
R42560 Coq.ZArith.BinInt "x >= y" Z_scope
R42563 Coq.ZArith.BinInt.Z_of_nat
R42788 Coq.ZArith.BinInt "x + y" Z_scope
R42788 Coq.ZArith.BinInt "x + y" Z_scope
R42839 Coq.ZArith.Znat.inj_S
R42839 Coq.ZArith.Znat.inj_S
R42970 Coq.Init.Logic "'exists' x , p" type_scope
R43060 Coq.Init.Logic "A /\ B" type_scope
R43003 Coq.Init.Logic "x = y" type_scope
R42982 Integers.Z_of_bits
R42992 Integers.wordsize
R43007 Coq.ZArith.BinInt "x + y" Z_scope
R43017 Coq.ZArith.BinInt "x * y" Z_scope
R43009 Coq.ZArith.Zpower.two_p
R43019 Integers.Z_of_bits
R43052 Coq.ZArith.BinInt "x + y" Z_scope
R43029 Integers.wordsize
R43065 Coq.ZArith.BinInt "x <= y < z" Z_scope
R43072 Coq.ZArith.Zpower.two_p
R42956 Coq.Init.Logic "x = y" type_scope
R42958 Coq.Init.Datatypes.false
R42928 Coq.ZArith.BinInt "x >= y" Z_scope
R42931 Coq.ZArith.BinInt.Z_of_nat
R42940 Integers.wordsize
R42905 Coq.ZArith.BinInt "x <= y" Z_scope
R43115 Coq.ZArith.Wf_Z.natlike_ind
R43115 Coq.ZArith.Wf_Z.natlike_ind
R43148 Coq.ZArith.Zpower.two_p
R43148 Coq.ZArith.Zpower.two_p
R43188 Integers.Z_of_bits
R43222 Coq.ZArith.BinInt "x + y" Z_scope
R43198 Integers.wordsize
R43188 Integers.Z_of_bits
R43222 Coq.ZArith.BinInt "x + y" Z_scope
R43198 Integers.wordsize
R43238 Integers.Z_of_bits_exten
R43238 Integers.Z_of_bits_exten
R43354 Coq.ZArith.BinInt "x + y" Z_scope
R43354 Coq.ZArith.BinInt "x + y" Z_scope
R43417 Coq.Init.Logic "x = y" type_scope
R43419 Coq.Init.Datatypes.false
R43388 Coq.ZArith.BinInt "x >= y" Z_scope
R43391 Coq.ZArith.BinInt.Z_of_nat
R43400 Integers.wordsize
R43417 Coq.Init.Logic "x = y" type_scope
R43419 Coq.Init.Datatypes.false
R43388 Coq.ZArith.BinInt "x >= y" Z_scope
R43391 Coq.ZArith.BinInt.Z_of_nat
R43400 Integers.wordsize
R43481 Integers.Z_of_bits_shift_rev
R43501 Integers.wordsize
R43481 Integers.Z_of_bits_shift_rev
R43501 Integers.wordsize
R43565 Integers.Z_of_bits
R43599 Coq.ZArith.BinInt "x + y" Z_scope
R43601 Coq.ZArith.BinInt.Zsucc
R43575 Integers.wordsize
R43565 Integers.Z_of_bits
R43599 Coq.ZArith.BinInt "x + y" Z_scope
R43601 Coq.ZArith.BinInt.Zsucc
R43575 Integers.wordsize
R43624 Integers.Z_of_bits
R43659 Coq.ZArith.BinInt "x + y" Z_scope
R43634 Integers.wordsize
R43624 Integers.Z_of_bits
R43659 Coq.ZArith.BinInt "x + y" Z_scope
R43634 Integers.wordsize
R43684 Coq.ZArith.Zpower.two_p_S
R43684 Coq.ZArith.Zpower.two_p_S
R43740 Coq.ZArith.BinInt "x + y" Z_scope
R43742 Coq.ZArith.Zpower.two_p
R43740 Coq.ZArith.BinInt "x + y" Z_scope
R43742 Coq.ZArith.Zpower.two_p
R43832 Integers.Z_of_bits_exten
R43832 Integers.Z_of_bits_exten
R43946 Coq.Init.Logic "x = y" type_scope
R43937 Integers.shru
R43948 Integers.repr
R43965 Coq.ZArith.Zdiv "x / y" Z_scope
R43954 Integers.unsigned
R43967 Coq.ZArith.Zpower.two_p
R43974 Integers.unsigned
R44032 Integers.unsigned
R44032 Integers.unsigned
R44056 Integers.unsigned
R44056 Integers.unsigned
R44077 Integers.Z_of_bits_shifts_rev
R44102 Integers.bits_of_Z
R44112 Integers.wordsize
R44077 Integers.Z_of_bits_shifts_rev
R44102 Integers.bits_of_Z
R44112 Integers.wordsize
R44161 Integers.Z_of_bits
R44181 Integers.bits_of_Z
R44191 Integers.wordsize
R44171 Integers.wordsize
R44161 Integers.Z_of_bits
R44181 Integers.bits_of_Z
R44191 Integers.wordsize
R44171 Integers.wordsize
R44230 Coq.ZArith.BinInt.Zplus_comm
R44230 Coq.ZArith.BinInt.Zplus_comm
R44256 Coq.ZArith.BinInt.Zmult_comm
R44256 Coq.ZArith.BinInt.Zmult_comm
R44288 Coqlib.Zdiv_unique
R44288 Coqlib.Zdiv_unique
R44354 Integers.eqm_small_eq
R44354 Integers.eqm_small_eq
R44374 Integers.eqm_sym
R44374 Integers.eqm_sym
R44389 Integers.Z_of_bits_of_Z
R44389 Integers.Z_of_bits_of_Z
R44425 Integers.unsigned_range
R44425 Integers.unsigned_range
R44474 Integers.unsigned_range
R44474 Integers.unsigned_range
R44527 Integers.bits_of_Z_above
R44527 Integers.bits_of_Z_above
R44599 Coq.Init.Logic "x = y" type_scope
R44587 Integers.shru
R44594 Integers.zero
R44629 Integers.shru_div_two_p
R44629 Integers.shru_div_two_p
R44653 Coq.ZArith.Zpower.two_p
R44660 Integers.unsigned
R44669 Integers.zero
R44653 Coq.ZArith.Zpower.two_p
R44660 Integers.unsigned
R44669 Integers.zero
R44700 Integers.repr
R44706 Integers.unsigned
R44700 Integers.repr
R44706 Integers.unsigned
R44733 Coqlib.Zdiv_unique
R44733 Coqlib.Zdiv_unique
R44832 Coq.Init.Logic "x = y" type_scope
R44821 Integers.shr
R44827 Integers.zero
R44874 Coq.ZArith.Zpower.two_p
R44881 Integers.unsigned
R44890 Integers.zero
R44874 Coq.ZArith.Zpower.two_p
R44881 Integers.unsigned
R44890 Integers.zero
R44925 Coq.ZArith.Zdiv "x / y" Z_scope
R44916 Integers.signed
R44936 Integers.signed
R44925 Coq.ZArith.Zdiv "x / y" Z_scope
R44916 Integers.signed
R44936 Integers.signed
R44955 Integers.repr_signed
R44955 Integers.repr_signed
R44986 Coqlib.Zdiv_unique
R44986 Coqlib.Zdiv_unique
R45105 Coq.Init.Logic "x = y" type_scope
R45096 Integers.divu
R45107 Integers.shru
R45079 Coq.Init.Logic "x = y" type_scope
R45067 Integers.is_power2
R45081 Coq.Init.Datatypes.Some
R45149 Integers.is_power2_correct
R45149 Integers.is_power2_correct
R45228 Integers.shru_div_two_p
R45228 Integers.shru_div_two_p
R45303 Coq.Init.Logic "x = y" type_scope
R45305 Integers.add
R45329 Integers.modu
R45310 Integers.mul
R45315 Integers.divu
R45290 Coq.Init.Logic "x <> y" type_scope
R45293 Integers.zero
R45402 Integers.repr
R45408 Integers.unsigned
R45402 Integers.repr
R45408 Integers.unsigned
R45447 Integers.eqm_samerepr
R45447 Integers.eqm_samerepr
R45475 Integers.unsigned
R45475 Integers.unsigned
R45499 Integers.unsigned
R45499 Integers.unsigned
R45551 Coq.ZArith.BinInt "x + y" Z_scope
R45544 Coq.ZArith.BinInt "x * y" Z_scope
R45540 Coq.ZArith.Zdiv "x / y" Z_scope
R45556 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R45520 Integers.eqm_trans
R45551 Coq.ZArith.BinInt "x + y" Z_scope
R45544 Coq.ZArith.BinInt "x * y" Z_scope
R45540 Coq.ZArith.Zdiv "x / y" Z_scope
R45556 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R45520 Integers.eqm_trans
R45573 Integers.eqm_refl2
R45573 Integers.eqm_refl2
R45592 Coq.ZArith.BinInt.Zmult_comm
R45592 Coq.ZArith.BinInt.Zmult_comm
R45610 Coq.ZArith.Zdiv.Z_div_mod_eq
R45610 Coq.ZArith.Zdiv.Z_div_mod_eq
R45638 Integers.unsigned_range
R45638 Integers.unsigned_range
R45685 Coq.Init.Logic "x <> y" type_scope
R45674 Integers.unsigned
R45685 Coq.Init.Logic "x <> y" type_scope
R45674 Integers.unsigned
R45727 Integers.repr_unsigned
R45727 Integers.repr_unsigned
R45869 Coq.Init.Logic "x = y" type_scope
R45860 Integers.modu
R45871 Integers.sub
R45878 Integers.mul
R45883 Integers.divu
R45849 Coq.Init.Logic "x <> y" type_scope
R45852 Integers.zero
R45956 Coq.Init.Logic "x = y" type_scope
R45958 Integers.sub
R45941 Coq.Init.Logic "x = y" type_scope
R45943 Integers.add
R45956 Coq.Init.Logic "x = y" type_scope
R45958 Integers.sub
R45941 Coq.Init.Logic "x = y" type_scope
R45943 Integers.add
R45995 Integers.sub_add_l
R45995 Integers.sub_add_l
R46014 Integers.sub_idem
R46014 Integers.sub_idem
R46034 Integers.add_commut
R46034 Integers.add_commut
R46054 Integers.add_zero
R46054 Integers.add_zero
R46088 Integers.modu_divu_Euclid
R46088 Integers.modu_divu_Euclid
R46160 Coq.Init.Logic "x = y" type_scope
R46151 Integers.mods
R46162 Integers.sub
R46169 Integers.mul
R46174 Integers.divs
R46242 Integers.eqm_samerepr
R46242 Integers.eqm_samerepr
R46285 Integers.eqm_sub
R46285 Integers.eqm_sub
R46300 Integers.eqm_signed_unsigned
R46300 Integers.eqm_signed_unsigned
R46330 Integers.eqm_unsigned_repr_r
R46330 Integers.eqm_unsigned_repr_r
R46360 Integers.eqm_mult
R46360 Integers.eqm_mult
R46392 Integers.eqm_signed_unsigned
R46392 Integers.eqm_signed_unsigned
R46497 Coq.Init.Logic "x = y" type_scope
R46488 Integers.divs
R46499 Integers.shrx
R46471 Coq.Init.Logic "x = y" type_scope
R46459 Integers.is_power2
R46473 Coq.Init.Datatypes.Some
R46541 Integers.is_power2_correct
R46541 Integers.is_power2_correct
R46597 Integers.shl_mul_two_p
R46597 Integers.shl_mul_two_p
R46622 Integers.mul_commut
R46622 Integers.mul_commut
R46642 Integers.mul_one
R46642 Integers.mul_one
R46676 Integers.repr_unsigned
R46676 Integers.repr_unsigned
R46769 Coq.Init.Logic "x = y" type_scope
R46739 Integers.add
R46754 Integers.shr_carry
R46744 Integers.shr
R46771 Integers.shrx
R46827 Integers.sub_add_opp
R46827 Integers.sub_add_opp
R46848 Integers.add_permut
R46848 Integers.add_permut
R46871 Integers.add_neg_zero
R46871 Integers.add_neg_zero
R46891 Integers.add_zero
R46891 Integers.add_zero
R47003 Coq.Init.Logic "x = y" type_scope
R46979 Integers.add
R46994 Integers.and
R46984 Integers.and
R46967 Coq.Init.Logic "x = y" type_scope
R46960 Integers.or
R46969 Integers.mone
R46948 Coq.Init.Logic "x = y" type_scope
R46940 Integers.and
R46950 Integers.zero
R47051 Integers.repr
R47057 Integers.unsigned
R47051 Integers.repr
R47057 Integers.unsigned
R47140 Integers.unsigned_repr
R47140 Integers.unsigned_repr
R47140 Integers.unsigned_repr
R47140 Integers.unsigned_repr
R47140 Integers.unsigned_repr
R47140 Integers.unsigned_repr
R47187 Integers.Z_of_bits
R47207 Integers.bits_of_Z
R47227 Integers.unsigned
R47217 Integers.wordsize
R47197 Integers.wordsize
R47187 Integers.Z_of_bits
R47207 Integers.bits_of_Z
R47227 Integers.unsigned
R47217 Integers.wordsize
R47197 Integers.wordsize
R47250 Integers.Z_of_bits_excl
R47250 Integers.Z_of_bits_excl
R47318 Coq.Init.Logic "x = y" type_scope
R47306 Coq.Bool.Bool "x && y" bool_scope
R47301 Coq.Bool.Bool "x && y" bool_scope
R47312 Coq.Bool.Bool "x && y" bool_scope
R47322 Coq.Bool.Bool "x && y" bool_scope
R47328 Coq.Bool.Bool "x && y" bool_scope
R47318 Coq.Init.Logic "x = y" type_scope
R47306 Coq.Bool.Bool "x && y" bool_scope
R47301 Coq.Bool.Bool "x && y" bool_scope
R47312 Coq.Bool.Bool "x && y" bool_scope
R47322 Coq.Bool.Bool "x && y" bool_scope
R47328 Coq.Bool.Bool "x && y" bool_scope
R47449 Coq.Bool.Bool "x && y" bool_scope
R47415 Integers.bits_of_Z
R47435 Integers.unsigned
R47425 Integers.wordsize
R47463 Integers.bits_of_Z
R47483 Integers.unsigned
R47473 Integers.wordsize
R47509 Integers.bits_of_Z
R47529 Integers.unsigned
R47539 Integers.and
R47519 Integers.wordsize
R47449 Coq.Bool.Bool "x && y" bool_scope
R47415 Integers.bits_of_Z
R47435 Integers.unsigned
R47425 Integers.wordsize
R47463 Integers.bits_of_Z
R47483 Integers.unsigned
R47473 Integers.wordsize
R47509 Integers.bits_of_Z
R47529 Integers.unsigned
R47539 Integers.and
R47519 Integers.wordsize
R47574 Integers.unsigned
R47583 Integers.zero
R47574 Integers.unsigned
R47583 Integers.zero
R47608 Integers.bits_of_Z_zero
R47608 Integers.bits_of_Z_zero
R47630 Coq.Bool.Bool.andb_b_false
R47630 Coq.Bool.Bool.andb_b_false
R47684 Integers.unsigned_repr
R47684 Integers.unsigned_repr
R47723 Integers.bits_of_Z_of_bits
R47723 Integers.bits_of_Z_of_bits
R47786 Coq.Bool.Bool.demorgan1
R47786 Coq.Bool.Bool.demorgan1
R47843 Coq.Bool.Bool "x || y" bool_scope
R47809 Integers.bits_of_Z
R47829 Integers.unsigned
R47819 Integers.wordsize
R47857 Integers.bits_of_Z
R47877 Integers.unsigned
R47867 Integers.wordsize
R47903 Integers.bits_of_Z
R47923 Integers.unsigned
R47933 Integers.or
R47913 Integers.wordsize
R47843 Coq.Bool.Bool "x || y" bool_scope
R47809 Integers.bits_of_Z
R47829 Integers.unsigned
R47819 Integers.wordsize
R47857 Integers.bits_of_Z
R47877 Integers.unsigned
R47867 Integers.wordsize
R47903 Integers.bits_of_Z
R47923 Integers.unsigned
R47933 Integers.or
R47913 Integers.wordsize
R48012 Coq.ZArith.BinInt "x - y" Z_scope
R47989 Coq.ZArith.Zpower.two_power_nat
R48003 Integers.wordsize
R47968 Integers.unsigned
R47977 Integers.mone
R48012 Coq.ZArith.BinInt "x - y" Z_scope
R47989 Coq.ZArith.Zpower.two_power_nat
R48003 Integers.wordsize
R47968 Integers.unsigned
R47977 Integers.mone
R48028 Integers.bits_of_Z_mone
R48028 Integers.bits_of_Z_mone
R48056 Coq.Bool.Bool.andb_b_true
R48056 Coq.Bool.Bool.andb_b_true
R48108 Integers.unsigned_repr
R48108 Integers.unsigned_repr
R48147 Integers.bits_of_Z_of_bits
R48147 Integers.bits_of_Z_of_bits
R48180 Integers.eqm_small_eq
R48180 Integers.eqm_small_eq
R48216 Integers.Z_of_bits_of_Z
R48216 Integers.Z_of_bits_of_Z
R48310 Integers.int
R48303 Integers.int
R48358 Coq.Init.Datatypes.bool
R48351 Coq.Init.Datatypes.nat
R48385 Coq.Init.Datatypes.O
R48390 Coq.Init.Datatypes.true
R48399 Coq.Init.Datatypes.S
R48409 Integers.eq
R48440 Integers.repr
R48446 Coq.ZArith.BinInt.Z_of_nat
R48416 Integers.repr
R48422 Coq.ZArith.BinInt.Z_of_nat
R48515 Coq.Init.Datatypes.false
R48351 Coq.Init.Datatypes.nat
R48659 Coq.Init.Logic "x = y" type_scope
R48651 Integers.repr
R48664 Integers.repr
R48627 Coq.ZArith.BinInt "x <= y < z" Z_scope
R48634 Coq.ZArith.BinInt.Z_of_nat
R48603 Coq.Init.Logic "x = y" type_scope
R48580 Integers.check_equal_on_range
R48605 Coq.Init.Datatypes.true
R48741 Integers.check_equal_on_range
R48741 Integers.check_equal_on_range
R48779 Integers.repr
R48785 Coq.ZArith.BinInt.Z_of_nat
R48779 Integers.repr
R48785 Coq.ZArith.BinInt.Z_of_nat
R48816 Integers.repr
R48822 Coq.ZArith.BinInt.Z_of_nat
R48816 Integers.repr
R48822 Coq.ZArith.BinInt.Z_of_nat
R48851 Integers.eq_spec
R48851 Integers.eq_spec
R48875 Integers.eq
R48875 Integers.eq
R48904 Coq.ZArith.Znat.inj_S
R48904 Coq.ZArith.Znat.inj_S
R48948 Coq.Init.Logic "A \/ B" type_scope
R48930 Coq.ZArith.BinInt "x <= y < z" Z_scope
R48937 Coq.ZArith.BinInt.Z_of_nat
R48953 Coq.Init.Logic "x = y" type_scope
R48955 Coq.ZArith.BinInt.Z_of_nat
R48948 Coq.Init.Logic "A \/ B" type_scope
R48930 Coq.ZArith.BinInt "x <= y < z" Z_scope
R48937 Coq.ZArith.BinInt.Z_of_nat
R48953 Coq.Init.Logic "x = y" type_scope
R48955 Coq.ZArith.BinInt.Z_of_nat
R49180 Coq.Init.Logic "x = y" type_scope
R49137 Coq.ZArith.BinInt "x <= y < z" Z_scope
R49140 Integers.unsigned
R49140 Integers.unsigned
R49153 Coq.ZArith.BinInt.Z_of_nat
R49162 Integers.wordsize
R49113 Coq.Init.Logic "x = y" type_scope
R49083 Integers.check_equal_on_range
R49104 Integers.wordsize
R49115 Coq.Init.Datatypes.true
R49220 Integers.repr
R49226 Integers.unsigned
R49220 Integers.repr
R49226 Integers.unsigned
R49283 Integers.wordsize
R49249 Integers.check_equal_on_range_correct
R49283 Integers.wordsize
R49249 Integers.check_equal_on_range_correct
R49307 Integers.repr_unsigned
R49307 Integers.repr_unsigned
R49455 Coq.Init.Logic "x = y" type_scope
R49429 Integers.rol
R49434 Integers.shru
R49439 Integers.mone
R49457 Integers.shl
R49461 Integers.mone
R49387 Coq.ZArith.BinInt "x <= y < z" Z_scope
R49390 Integers.unsigned
R49390 Integers.unsigned
R49406 Coq.ZArith.BinInt.Z_of_nat
R49415 Integers.wordsize
R49479 Integers.equal_on_range
R49572 Coq.Init.Logic.refl_equal
R49583 Coq.Init.Datatypes.true
R49551 Integers.shl
R49555 Integers.mone
R49512 Integers.rol
R49517 Integers.shru
R49522 Integers.mone
R49736 Coq.Init.Logic "x = y" type_scope
R49675 Integers.and
R49696 Integers.sub
R49731 Integers.one
R49701 Integers.repr
R49707 Coq.ZArith.Zpower.two_p
R49714 Integers.unsigned
R49680 Integers.shl
R49684 Integers.mone
R49738 Integers.zero
R49633 Coq.ZArith.BinInt "x <= y < z" Z_scope
R49636 Integers.unsigned
R49636 Integers.unsigned
R49652 Coq.ZArith.BinInt.Z_of_nat
R49661 Integers.wordsize
R49751 Integers.equal_on_range
R49896 Coq.Init.Logic.refl_equal
R49907 Coq.Init.Datatypes.true
R49880 Integers.zero
R49784 Integers.and
R49824 Integers.sub
R49856 Integers.one
R49829 Integers.repr
R49835 Coq.ZArith.Zpower.two_p
R49842 Integers.unsigned
R49789 Integers.shl
R49793 Integers.mone
R50059 Coq.Init.Logic "x = y" type_scope
R49999 Integers.or
R50019 Integers.sub
R50054 Integers.one
R50024 Integers.repr
R50030 Coq.ZArith.Zpower.two_p
R50037 Integers.unsigned
R50003 Integers.shl
R50007 Integers.mone
R50061 Integers.mone
R49957 Coq.ZArith.BinInt "x <= y < z" Z_scope
R49960 Integers.unsigned
R49960 Integers.unsigned
R49976 Coq.ZArith.BinInt.Z_of_nat
R49985 Integers.wordsize
R50074 Integers.equal_on_range
R50217 Coq.Init.Logic.refl_equal
R50228 Coq.Init.Datatypes.true
R50202 Integers.mone
R50107 Integers.or
R50146 Integers.sub
R50178 Integers.one
R50151 Integers.repr
R50157 Coq.ZArith.Zpower.two_p
R50164 Integers.unsigned
R50111 Integers.shl
R50115 Integers.mone
R50314 Coq.Init.Logic "x = y" type_scope
R50305 Integers.modu
R50316 Integers.and
R50323 Integers.sub
R50329 Integers.one
R50288 Coq.Init.Logic "x = y" type_scope
R50276 Integers.is_power2
R50290 Coq.Init.Datatypes.Some
R50364 Integers.is_power2_correct
R50364 Integers.is_power2_correct
R50411 Integers.is_power2_rng
R50411 Integers.is_power2_rng
R50452 Coq.Init.Logic "x <> y" type_scope
R50455 Integers.zero
R50452 Coq.Init.Logic "x <> y" type_scope
R50455 Integers.zero
R50496 Integers.unsigned
R50505 Integers.zero
R50496 Integers.unsigned
R50505 Integers.zero
R50559 Coq.ZArith.BinInt "x > y" Z_scope
R50537 Coq.ZArith.Zpower.two_p
R50544 Integers.unsigned
R50559 Coq.ZArith.BinInt "x > y" Z_scope
R50537 Coq.ZArith.Zpower.two_p
R50544 Integers.unsigned
R50571 Coq.ZArith.Zpower.two_p_gt_ZERO
R50571 Coq.ZArith.Zpower.two_p_gt_ZERO
R50631 Integers.modu_divu_Euclid
R50631 Integers.modu_divu_Euclid
R50711 Coq.Init.Logic "x = y" type_scope
R50696 Coq.Init.Logic "x = y" type_scope
R50688 Integers.add
R50698 Integers.add
R50711 Coq.Init.Logic "x = y" type_scope
R50696 Coq.Init.Logic "x = y" type_scope
R50688 Integers.add
R50698 Integers.add
R50753 Coq.Init.Logic "x = y" type_scope
R50737 Integers.sub
R50742 Integers.add
R50755 Integers.sub
R50760 Integers.add
R50753 Coq.Init.Logic "x = y" type_scope
R50737 Integers.sub
R50742 Integers.add
R50755 Integers.sub
R50760 Integers.add
R50804 Integers.sub_add_l
R50804 Integers.sub_add_l
R50804 Integers.sub_add_l
R50804 Integers.sub_add_l
R50836 Integers.sub_idem
R50836 Integers.sub_idem
R50836 Integers.sub_idem
R50864 Integers.add_commut
R50890 Integers.add_zero
R50864 Integers.add_commut
R50890 Integers.add_zero
R50918 Integers.add_commut
R50944 Integers.add_zero
R50918 Integers.add_commut
R50944 Integers.add_zero
R50987 Integers.mul
R50992 Integers.divu
R50987 Integers.mul
R50992 Integers.divu
R51035 Integers.divu_pow2
R51035 Integers.divu_pow2
R51070 Integers.mul_pow2
R51080 Integers.shru
R51070 Integers.mul_pow2
R51080 Integers.shru
R51115 Integers.shru_rolm
R51115 Integers.shru_rolm
R51134 Integers.shl_rolm
R51134 Integers.shl_rolm
R51152 Integers.rolm_rolm
R51152 Integers.rolm_rolm
R51173 Integers.sub_add_opp
R51173 Integers.sub_add_opp
R51194 Integers.add_assoc
R51194 Integers.add_assoc
R51217 Integers.add
R51222 Integers.neg
R51243 Integers.zero
R51217 Integers.add
R51222 Integers.neg
R51243 Integers.zero
R51259 Integers.add_zero
R51259 Integers.add_zero
R51348 Integers.zero
R51279 Integers.modu
R51312 Integers.repr
R51318 Coq.ZArith.BinInt.Z_of_nat
R51327 Integers.wordsize
R51285 Integers.repr
R51291 Coq.ZArith.BinInt.Z_of_nat
R51300 Integers.wordsize
R51348 Integers.zero
R51279 Integers.modu
R51312 Integers.repr
R51318 Coq.ZArith.BinInt.Z_of_nat
R51327 Integers.wordsize
R51285 Integers.repr
R51291 Coq.ZArith.BinInt.Z_of_nat
R51300 Integers.wordsize
R51364 Integers.rolm_zero
R51364 Integers.rolm_zero
R51406 Integers.repr
R51412 Coq.ZArith.Zpower.two_p
R51419 Integers.unsigned
R51406 Integers.repr
R51412 Coq.ZArith.Zpower.two_p
R51419 Integers.unsigned
R51447 Integers.modu_and_masks_1
R51447 Integers.modu_and_masks_1
R51481 Integers.and_idem
R51481 Integers.and_idem
R51499 Integers.add_and
R51499 Integers.add_and
R51514 Integers.modu_and_masks_2
R51514 Integers.modu_and_masks_2
R51544 Integers.modu_and_masks_3
R51544 Integers.modu_and_masks_3
R51584 Integers.repr
R51590 Integers.unsigned
R51584 Integers.repr
R51590 Integers.unsigned
R51643 Integers.add_commut
R51643 Integers.add_commut
R51663 Integers.add_neg_zero
R51663 Integers.add_neg_zero
R51703 Coqlib.zlt_true
R51703 Coqlib.zlt_true
R51767 Coq.ZArith.BinInt.Z_of_nat
R51776 Integers.wordsize
R51724 Integers.unsigned
R51734 Integers.repr
R51740 Coq.ZArith.BinInt.Z_of_nat
R51749 Integers.wordsize
R51767 Coq.ZArith.BinInt.Z_of_nat
R51776 Integers.wordsize
R51724 Integers.unsigned
R51734 Integers.repr
R51740 Coq.ZArith.BinInt.Z_of_nat
R51749 Integers.wordsize
R51816 Coqlib.zlt_true
R51816 Coqlib.zlt_true
R51880 Coq.ZArith.BinInt.Z_of_nat
R51889 Integers.wordsize
R51837 Integers.unsigned
R51847 Integers.repr
R51853 Coq.ZArith.BinInt.Z_of_nat
R51862 Integers.wordsize
R51880 Coq.ZArith.BinInt.Z_of_nat
R51889 Integers.wordsize
R51837 Integers.unsigned
R51847 Integers.repr
R51853 Coq.ZArith.BinInt.Z_of_nat
R51862 Integers.wordsize
R51970 Coq.Init.Logic "x = y" type_scope
R51954 Integers.cast8unsigned
R51972 Integers.and
R51979 Integers.repr
R52073 Integers.modu
R52081 Integers.repr
R52040 Integers.repr
R52057 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R52046 Integers.unsigned
R52073 Integers.modu
R52081 Integers.repr
R52040 Integers.repr
R52057 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R52046 Integers.unsigned
R52119 Integers.sub
R52134 Integers.one
R52124 Integers.repr
R52103 Integers.repr
R52119 Integers.sub
R52134 Integers.one
R52124 Integers.repr
R52103 Integers.repr
R52163 Integers.repr
R52148 Integers.modu_and
R52163 Integers.repr
R52148 Integers.modu_and
R52248 Coq.Init.Logic "x = y" type_scope
R52231 Integers.cast16unsigned
R52250 Integers.and
R52257 Integers.repr
R52356 Integers.modu
R52364 Integers.repr
R52321 Integers.repr
R52338 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R52327 Integers.unsigned
R52356 Integers.modu
R52364 Integers.repr
R52321 Integers.repr
R52338 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R52327 Integers.unsigned
R52406 Integers.sub
R52423 Integers.one
R52411 Integers.repr
R52388 Integers.repr
R52406 Integers.sub
R52423 Integers.one
R52411 Integers.repr
R52388 Integers.repr
R52452 Integers.repr
R52437 Integers.modu_and
R52452 Integers.repr
R52437 Integers.modu_and
R52524 Integers.eqmod
R52537 Integers.unsigned
R52547 Integers.repr
R52586 Integers.eqm_unsigned_repr
R52586 Integers.eqm_unsigned_repr
R52654 Coq.ZArith.BinInt "x * y" Z_scope
R52665 Coq.ZArith.Zdiv "x / y" Z_scope
R52657 Integers.modulus
R52654 Coq.ZArith.BinInt "x * y" Z_scope
R52665 Coq.ZArith.Zdiv "x / y" Z_scope
R52657 Integers.modulus
R52706 Coq.ZArith.BinInt "x * y" Z_scope
R52688 Coq.ZArith.BinInt "x * y" Z_scope
R52699 Coq.ZArith.Zdiv "x / y" Z_scope
R52691 Integers.modulus
R52728 Coq.ZArith.BinInt "x * y" Z_scope
R52745 Coq.ZArith.BinInt "x * y" Z_scope
R52740 Coq.ZArith.Zdiv "x / y" Z_scope
R52732 Integers.modulus
R52706 Coq.ZArith.BinInt "x * y" Z_scope
R52688 Coq.ZArith.BinInt "x * y" Z_scope
R52699 Coq.ZArith.Zdiv "x / y" Z_scope
R52691 Integers.modulus
R52728 Coq.ZArith.BinInt "x * y" Z_scope
R52745 Coq.ZArith.BinInt "x * y" Z_scope
R52740 Coq.ZArith.Zdiv "x / y" Z_scope
R52732 Integers.modulus
R52826 Integers.eqmod
R52841 Integers.unsigned
R52851 Integers.repr
R52890 Integers.eqm_unsigned_repr
R52890 Integers.eqm_unsigned_repr
R52958 Coq.ZArith.BinInt "x * y" Z_scope
R52969 Coq.ZArith.Zdiv "x / y" Z_scope
R52961 Integers.modulus
R52958 Coq.ZArith.BinInt "x * y" Z_scope
R52969 Coq.ZArith.Zdiv "x / y" Z_scope
R52961 Integers.modulus
R53014 Coq.ZArith.BinInt "x * y" Z_scope
R52994 Coq.ZArith.BinInt "x * y" Z_scope
R53005 Coq.ZArith.Zdiv "x / y" Z_scope
R52997 Integers.modulus
R53038 Coq.ZArith.BinInt "x * y" Z_scope
R53057 Coq.ZArith.BinInt "x * y" Z_scope
R53050 Coq.ZArith.Zdiv "x / y" Z_scope
R53042 Integers.modulus
R53014 Coq.ZArith.BinInt "x * y" Z_scope
R52994 Coq.ZArith.BinInt "x * y" Z_scope
R53005 Coq.ZArith.Zdiv "x / y" Z_scope
R52997 Integers.modulus
R53038 Coq.ZArith.BinInt "x * y" Z_scope
R53057 Coq.ZArith.BinInt "x * y" Z_scope
R53050 Coq.ZArith.Zdiv "x / y" Z_scope
R53042 Integers.modulus
R53168 Coq.Init.Logic "x = y" type_scope
R53138 Integers.cast8signed
R53151 Integers.cast8unsigned
R53170 Integers.cast8signed
R53249 Integers.unsigned
R53249 Integers.unsigned
R53272 Integers.unsigned_repr
R53272 Integers.unsigned_repr
R53309 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R53302 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R53328 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R53309 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R53302 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R53328 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R53364 Coqlib.Zmod_small
R53364 Coqlib.Zmod_small
R53382 Coq.ZArith.Zdiv.Z_mod_lt
R53382 Coq.ZArith.Zdiv.Z_mod_lt
R53411 Coq.ZArith.BinInt "x <= y < z" Z_scope
R53416 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R53416 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R53411 Coq.ZArith.BinInt "x <= y < z" Z_scope
R53416 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R53416 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R53438 Coq.ZArith.Zdiv.Z_mod_lt
R53438 Coq.ZArith.Zdiv.Z_mod_lt
R53469 Coq.ZArith.BinInt "x < y" Z_scope
R53471 Integers.max_unsigned
R53469 Coq.ZArith.BinInt "x < y" Z_scope
R53471 Integers.max_unsigned
R53589 Coq.Init.Logic "x = y" type_scope
R53559 Integers.cast8unsigned
R53574 Integers.cast8signed
R53591 Integers.cast8unsigned
R53683 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R53672 Integers.unsigned
R53683 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R53672 Integers.unsigned
R53705 Coq.ZArith.BinInt "x <= y < z" Z_scope
R53705 Coq.ZArith.BinInt "x <= y < z" Z_scope
R53734 Coq.ZArith.Zdiv.Z_mod_lt
R53734 Coq.ZArith.Zdiv.Z_mod_lt
R53771 Coq.Init.Logic "x = y" type_scope
R53763 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R53771 Coq.Init.Logic "x = y" type_scope
R53763 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R53783 Coqlib.Zmod_small
R53783 Coqlib.Zmod_small
R53815 Coq.ZArith.BinInt "x <= y" Z_scope
R53818 Integers.max_unsigned
R53815 Coq.ZArith.BinInt "x <= y" Z_scope
R53818 Integers.max_unsigned
R53872 Coqlib.zlt
R53872 Coqlib.zlt
R53901 Integers.unsigned_repr
R53901 Integers.unsigned_repr
R53947 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R53947 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R53972 Integers.eqmod_mod_eq
R53972 Integers.eqmod_mod_eq
R54022 Coq.ZArith.BinInt "x - y" Z_scope
R54002 Integers.eqmod_trans
R54022 Coq.ZArith.BinInt "x - y" Z_scope
R54002 Integers.eqmod_trans
R54036 Integers.eqmod_sym
R54036 Integers.eqmod_sym
R54053 Integers.eqmod_256_unsigned_repr
R54053 Integers.eqmod_256_unsigned_repr
R54088 Integers.eqmod
R54111 Coq.ZArith.BinInt "x - y" Z_scope
R54101 Coq.ZArith.BinInt "x - y" Z_scope
R54088 Integers.eqmod
R54111 Coq.ZArith.BinInt "x - y" Z_scope
R54101 Coq.ZArith.BinInt "x - y" Z_scope
R54128 Integers.eqmod_sub
R54128 Integers.eqmod_sub
R54145 Integers.eqmod_refl
R54145 Integers.eqmod_refl
R54203 Coq.ZArith.BinInt "x - y" Z_scope
R54203 Coq.ZArith.BinInt "x - y" Z_scope
R54317 Coq.Init.Logic "x = y" type_scope
R54285 Integers.cast16unsigned
R54301 Integers.cast16signed
R54319 Integers.cast16unsigned
R54414 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R54403 Integers.unsigned
R54414 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R54403 Integers.unsigned
R54438 Coq.ZArith.BinInt "x <= y < z" Z_scope
R54438 Coq.ZArith.BinInt "x <= y < z" Z_scope
R54469 Coq.ZArith.Zdiv.Z_mod_lt
R54469 Coq.ZArith.Zdiv.Z_mod_lt
R54508 Coq.Init.Logic "x = y" type_scope
R54498 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R54508 Coq.Init.Logic "x = y" type_scope
R54498 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R54520 Coqlib.Zmod_small
R54520 Coqlib.Zmod_small
R54554 Coq.ZArith.BinInt "x <= y" Z_scope
R54557 Integers.max_unsigned
R54554 Coq.ZArith.BinInt "x <= y" Z_scope
R54557 Integers.max_unsigned
R54611 Coqlib.zlt
R54611 Coqlib.zlt
R54642 Integers.unsigned_repr
R54642 Integers.unsigned_repr
R54688 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R54688 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R54715 Integers.eqmod_mod_eq
R54715 Integers.eqmod_mod_eq
R54765 Coq.ZArith.BinInt "x - y" Z_scope
R54745 Integers.eqmod_trans
R54765 Coq.ZArith.BinInt "x - y" Z_scope
R54745 Integers.eqmod_trans
R54781 Integers.eqmod_sym
R54781 Integers.eqmod_sym
R54798 Integers.eqmod_65536_unsigned_repr
R54798 Integers.eqmod_65536_unsigned_repr
R54835 Integers.eqmod
R54862 Coq.ZArith.BinInt "x - y" Z_scope
R54850 Coq.ZArith.BinInt "x - y" Z_scope
R54835 Integers.eqmod
R54862 Coq.ZArith.BinInt "x - y" Z_scope
R54850 Coq.ZArith.BinInt "x - y" Z_scope
R54879 Integers.eqmod_sub
R54879 Integers.eqmod_sub
R54896 Integers.eqmod_refl
R54896 Integers.eqmod_refl
R54954 Coq.ZArith.BinInt "x - y" Z_scope
R54954 Coq.ZArith.BinInt "x - y" Z_scope
R55065 Coq.Init.Logic "x = y" type_scope
R55033 Integers.cast8unsigned
R55048 Integers.cast8unsigned
R55067 Integers.cast8unsigned
R55116 Integers.cast8unsigned_and
R55116 Integers.cast8unsigned_and
R55116 Integers.cast8unsigned_and
R55116 Integers.cast8unsigned_and
R55146 Integers.and_assoc
R55146 Integers.and_assoc
R55253 Coq.Init.Logic "x = y" type_scope
R55219 Integers.cast16unsigned
R55235 Integers.cast16unsigned
R55255 Integers.cast16unsigned
R55305 Integers.cast16unsigned_and
R55305 Integers.cast16unsigned_and
R55305 Integers.cast16unsigned_and
R55305 Integers.cast16unsigned_and
R55336 Integers.and_assoc
R55336 Integers.and_assoc
R55434 Coq.Init.Logic "x = y" type_scope
R55406 Integers.cast8signed
R55419 Integers.cast8signed
R55436 Integers.cast8signed
R55511 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R55500 Integers.unsigned
R55511 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R55500 Integers.unsigned
R55535 Coq.ZArith.BinInt "x < y" Z_scope
R55537 Integers.max_unsigned
R55535 Coq.ZArith.BinInt "x < y" Z_scope
R55537 Integers.max_unsigned
R55579 Coq.ZArith.BinInt "x <= y < z" Z_scope
R55579 Coq.ZArith.BinInt "x <= y < z" Z_scope
R55608 Coq.ZArith.Zdiv.Z_mod_lt
R55608 Coq.ZArith.Zdiv.Z_mod_lt
R55634 Coqlib.zlt
R55634 Coqlib.zlt
R55681 Coq.Init.Logic "x = y" type_scope
R55663 Integers.unsigned
R55673 Integers.repr
R55681 Coq.Init.Logic "x = y" type_scope
R55663 Integers.unsigned
R55673 Integers.repr
R55697 Integers.unsigned_repr
R55697 Integers.unsigned_repr
R55746 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R55746 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R55769 Coqlib.zlt_true
R55769 Coqlib.zlt_true
R55803 Coqlib.Zmod_small
R55803 Coqlib.Zmod_small
R55860 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R55834 Integers.unsigned
R55844 Integers.repr
R55852 Coq.ZArith.BinInt "x - y" Z_scope
R55860 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R55834 Integers.unsigned
R55844 Integers.repr
R55852 Coq.ZArith.BinInt "x - y" Z_scope
R55883 Coq.Init.Logic "x = y" type_scope
R55883 Coq.Init.Logic "x = y" type_scope
R55912 Integers.eqmod_mod_eq
R55912 Integers.eqmod_mod_eq
R55981 Coq.ZArith.BinInt "x - y" Z_scope
R55973 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R55962 Integers.unsigned
R55944 Integers.eqmod_trans
R55981 Coq.ZArith.BinInt "x - y" Z_scope
R55973 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R55962 Integers.unsigned
R55944 Integers.eqmod_trans
R55999 Integers.eqmod_sym
R55999 Integers.eqmod_sym
R56016 Integers.eqmod_256_unsigned_repr
R56016 Integers.eqmod_256_unsigned_repr
R56081 Coq.ZArith.BinInt "x - y" Z_scope
R56070 Integers.unsigned
R56052 Integers.eqmod_trans
R56081 Coq.ZArith.BinInt "x - y" Z_scope
R56070 Integers.unsigned
R56052 Integers.eqmod_trans
R56097 Integers.eqmod_sub
R56097 Integers.eqmod_sub
R56119 Integers.eqmod_sym
R56119 Integers.eqmod_sym
R56136 Integers.eqmod_mod
R56136 Integers.eqmod_mod
R56199 Integers.eqmod_refl2
R56199 Integers.eqmod_refl2
R56241 Coqlib.zlt_false
R56241 Coqlib.zlt_false
R56334 Coq.Init.Logic "x = y" type_scope
R56304 Integers.cast16signed
R56318 Integers.cast16signed
R56336 Integers.cast16signed
R56413 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R56402 Integers.unsigned
R56413 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R56402 Integers.unsigned
R56441 Coq.ZArith.BinInt "x < y" Z_scope
R56443 Integers.max_unsigned
R56441 Coq.ZArith.BinInt "x < y" Z_scope
R56443 Integers.max_unsigned
R56485 Coq.ZArith.BinInt "x <= y < z" Z_scope
R56485 Coq.ZArith.BinInt "x <= y < z" Z_scope
R56516 Coq.ZArith.Zdiv.Z_mod_lt
R56516 Coq.ZArith.Zdiv.Z_mod_lt
R56542 Coqlib.zlt
R56542 Coqlib.zlt
R56591 Coq.Init.Logic "x = y" type_scope
R56573 Integers.unsigned
R56583 Integers.repr
R56591 Coq.Init.Logic "x = y" type_scope
R56573 Integers.unsigned
R56583 Integers.repr
R56607 Integers.unsigned_repr
R56607 Integers.unsigned_repr
R56656 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R56656 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R56681 Coqlib.zlt_true
R56681 Coqlib.zlt_true
R56715 Coqlib.Zmod_small
R56715 Coqlib.Zmod_small
R56774 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R56746 Integers.unsigned
R56756 Integers.repr
R56764 Coq.ZArith.BinInt "x - y" Z_scope
R56774 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R56746 Integers.unsigned
R56756 Integers.repr
R56764 Coq.ZArith.BinInt "x - y" Z_scope
R56799 Coq.Init.Logic "x = y" type_scope
R56799 Coq.Init.Logic "x = y" type_scope
R56828 Integers.eqmod_mod_eq
R56828 Integers.eqmod_mod_eq
R56899 Coq.ZArith.BinInt "x - y" Z_scope
R56889 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R56878 Integers.unsigned
R56860 Integers.eqmod_trans
R56899 Coq.ZArith.BinInt "x - y" Z_scope
R56889 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R56878 Integers.unsigned
R56860 Integers.eqmod_trans
R56919 Integers.eqmod_sym
R56919 Integers.eqmod_sym
R56936 Integers.eqmod_65536_unsigned_repr
R56936 Integers.eqmod_65536_unsigned_repr
R57003 Coq.ZArith.BinInt "x - y" Z_scope
R56992 Integers.unsigned
R56974 Integers.eqmod_trans
R57003 Coq.ZArith.BinInt "x - y" Z_scope
R56992 Integers.unsigned
R56974 Integers.eqmod_trans
R57019 Integers.eqmod_sub
R57019 Integers.eqmod_sub
R57041 Integers.eqmod_sym
R57041 Integers.eqmod_sym
R57058 Integers.eqmod_mod
R57058 Integers.eqmod_mod
R57121 Integers.eqmod_refl2
R57121 Integers.eqmod_refl2
R57163 Coqlib.zlt_false
R57163 Coqlib.zlt_false
R57302 Coq.Init.Logic "x = y" type_scope
R57288 Integers.cast8signed
R57304 Integers.cast8signed
R57265 Coq.Init.Logic "x = y" type_scope
R57249 Integers.cast8unsigned
R57267 Integers.cast8unsigned
R57403 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R57392 Integers.unsigned
R57403 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R57392 Integers.unsigned
R57437 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R57426 Integers.unsigned
R57437 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R57426 Integers.unsigned
R57467 Integers.eqm
R57467 Integers.eqm
R57505 Integers.unsigned
R57515 Integers.repr
R57489 Integers.eqm_trans
R57505 Integers.unsigned
R57515 Integers.repr
R57489 Integers.eqm_trans
R57532 Integers.eqm_unsigned_repr
R57532 Integers.eqm_unsigned_repr
R57572 Integers.eqm_sym
R57572 Integers.eqm_sym
R57587 Integers.eqm_unsigned_repr
R57587 Integers.eqm_unsigned_repr
R57628 Coq.ZArith.BinInt "x <= y < z" Z_scope
R57633 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R57633 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R57643 Integers.modulus
R57628 Coq.ZArith.BinInt "x <= y < z" Z_scope
R57633 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R57633 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R57643 Integers.modulus
R57680 Coq.ZArith.BinInt "x <= y < z" Z_scope
R57685 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R57685 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R57680 Coq.ZArith.BinInt "x <= y < z" Z_scope
R57685 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R57685 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R57707 Coq.ZArith.Zdiv.Z_mod_lt
R57707 Coq.ZArith.Zdiv.Z_mod_lt
R57740 Coq.ZArith.BinInt "x <= y" Z_scope
R57743 Integers.modulus
R57740 Coq.ZArith.BinInt "x <= y" Z_scope
R57743 Integers.modulus
R57798 Coq.Init.Logic "x = y" type_scope
R57798 Coq.Init.Logic "x = y" type_scope
R57815 Integers.eqm_small_eq
R57815 Integers.eqm_small_eq
R57997 Coq.Init.Logic "x = y" type_scope
R57982 Integers.cast16signed
R57999 Integers.cast16signed
R57958 Coq.Init.Logic "x = y" type_scope
R57941 Integers.cast16unsigned
R57960 Integers.cast16unsigned
R58101 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R58090 Integers.unsigned
R58101 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R58090 Integers.unsigned
R58137 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R58126 Integers.unsigned
R58137 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R58126 Integers.unsigned
R58169 Integers.eqm
R58169 Integers.eqm
R58207 Integers.unsigned
R58217 Integers.repr
R58191 Integers.eqm_trans
R58207 Integers.unsigned
R58217 Integers.repr
R58191 Integers.eqm_trans
R58234 Integers.eqm_unsigned_repr
R58234 Integers.eqm_unsigned_repr
R58274 Integers.eqm_sym
R58274 Integers.eqm_sym
R58289 Integers.eqm_unsigned_repr
R58289 Integers.eqm_unsigned_repr
R58330 Coq.ZArith.BinInt "x <= y < z" Z_scope
R58335 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R58335 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R58347 Integers.modulus
R58330 Coq.ZArith.BinInt "x <= y < z" Z_scope
R58335 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R58335 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R58347 Integers.modulus
R58384 Coq.ZArith.BinInt "x <= y < z" Z_scope
R58389 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R58389 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R58384 Coq.ZArith.BinInt "x <= y < z" Z_scope
R58389 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R58389 Coq.ZArith.Zdiv "x 'mod' y" Z_scope
R58415 Coq.ZArith.Zdiv.Z_mod_lt
R58415 Coq.ZArith.Zdiv.Z_mod_lt
R58450 Coq.ZArith.BinInt "x <= y" Z_scope
R58453 Integers.modulus
R58450 Coq.ZArith.BinInt "x <= y" Z_scope
R58453 Integers.modulus
R58508 Coq.Init.Logic "x = y" type_scope
R58508 Coq.Init.Logic "x = y" type_scope
R58525 Integers.eqm_small_eq
R58525 Integers.eqm_small_eq
R58735 Coq.Init.Logic "x = y" type_scope
R58702 Integers.ltu
R58709 Integers.repr
R58715 Coq.ZArith.BinInt.Z_of_nat
R58724 Integers.wordsize
R58737 Coq.Init.Datatypes.true
R58681 Coq.Lists.List.In
R58687 Integers.one_bits
R58790 Coqlib.list_in_map_inv
R58790 Coqlib.list_in_map_inv
R58864 Coqlib.zlt_true
R58864 Coqlib.zlt_true
R58889 Integers.Z_one_bits_range
R58889 Integers.Z_one_bits_range
R58935 Coq.ZArith.BinInt "x <= y <= z" Z_scope
R58938 Coq.ZArith.BinInt.Z_of_nat
R58947 Integers.wordsize
R58938 Coq.ZArith.BinInt.Z_of_nat
R58947 Integers.wordsize
R58959 Integers.max_unsigned
R58935 Coq.ZArith.BinInt "x <= y <= z" Z_scope
R58938 Coq.ZArith.BinInt.Z_of_nat
R58947 Integers.wordsize
R58938 Coq.ZArith.BinInt.Z_of_nat
R58947 Integers.wordsize
R58959 Integers.max_unsigned
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R59026 Integers.unsigned_repr
R59026 Integers.unsigned_repr
R59026 Integers.unsigned_repr
R59026 Integers.unsigned_repr
R59026 Integers.unsigned_repr
R59026 Integers.unsigned_repr
R59095 Integers.int
R59083 Coq.Lists.List.list
R59088 Integers.int
R59121 Coq.Lists.List.nil
R59128 Integers.zero
R59139 Coq.Lists.List "x :: y" list_scope
R59147 Integers.add
R59152 Integers.shl
R59156 Integers.one
R59083 Coq.Lists.List.list
R59088 Integers.int
R59230 Coq.Init.Logic "x = y" type_scope
R59232 Integers.int_of_one_bits
R59249 Integers.one_bits
R59296 Integers.repr
R59302 Integers.powerserie
R59314 Integers.Z_one_bits
R59335 Integers.unsigned
R59325 Integers.wordsize
R59296 Integers.repr
R59302 Integers.powerserie
R59314 Integers.Z_one_bits
R59335 Integers.unsigned
R59325 Integers.wordsize
R59369 Integers.repr
R59375 Integers.unsigned
R59369 Integers.repr
R59375 Integers.unsigned
R59420 Integers.Z_one_bits_powerserie
R59420 Integers.Z_one_bits_powerserie
R59495 Integers.Z_one_bits_range
R59513 Integers.unsigned
R59495 Integers.Z_one_bits_range
R59513 Integers.unsigned
R59541 Integers.Z_one_bits
R59562 Integers.unsigned
R59552 Integers.wordsize
R59541 Integers.Z_one_bits
R59562 Integers.unsigned
R59552 Integers.wordsize
R59667 Integers.eqm_samerepr
R59667 Integers.eqm_samerepr
R59689 Integers.eqm_add
R59689 Integers.eqm_add
R59706 Integers.shl_mul_two_p
R59706 Integers.shl_mul_two_p
R59729 Integers.mul_commut
R59729 Integers.mul_commut
R59752 Integers.mul_one
R59752 Integers.mul_one
R59767 Integers.eqm_unsigned_repr_r
R59767 Integers.eqm_unsigned_repr_r
R59799 Integers.unsigned_repr
R59799 Integers.unsigned_repr
R59849 Coq.Lists.List.in_eq
R59849 Coq.Lists.List.in_eq
R59891 Coq.ZArith.BinInt "x < y" Z_scope
R59873 Coq.ZArith.BinInt.Z_of_nat
R59882 Integers.wordsize
R59893 Integers.max_unsigned
R59891 Coq.ZArith.BinInt "x < y" Z_scope
R59873 Coq.ZArith.BinInt.Z_of_nat
R59882 Integers.wordsize
R59893 Integers.max_unsigned
R60057 Coq.Init.Logic "x = y" type_scope
R60027 Integers.cmp
R60032 AST.negate_comparison
R60059 Coq.Bool.Bool.negb
R60065 Integers.cmp
R60125 Coq.Bool.Bool.negb_elim
R60125 Coq.Bool.Bool.negb_elim
R60125 Coq.Bool.Bool.negb_elim
R60125 Coq.Bool.Bool.negb_elim
R60125 Coq.Bool.Bool.negb_elim
R60125 Coq.Bool.Bool.negb_elim
R60125 Coq.Bool.Bool.negb_elim
R60216 Coq.Init.Logic "x = y" type_scope
R60185 Integers.cmpu
R60191 AST.negate_comparison
R60218 Coq.Bool.Bool.negb
R60224 Integers.cmpu
R60285 Coq.Bool.Bool.negb_elim
R60285 Coq.Bool.Bool.negb_elim
R60285 Coq.Bool.Bool.negb_elim
R60285 Coq.Bool.Bool.negb_elim
R60285 Coq.Bool.Bool.negb_elim
R60285 Coq.Bool.Bool.negb_elim
R60285 Coq.Bool.Bool.negb_elim
R60370 Coq.Init.Logic "x = y" type_scope
R60342 Integers.cmp
R60347 AST.swap_comparison
R60372 Integers.cmp
R60431 Integers.eq_sym
R60431 Integers.eq_sym
R60452 Integers.eq_sym
R60452 Integers.eq_sym
R60530 Coq.Init.Logic "x = y" type_scope
R60501 Integers.cmpu
R60507 AST.swap_comparison
R60532 Integers.cmpu
R60592 Integers.eq_sym
R60592 Integers.eq_sym
R60613 Integers.eq_sym
R60613 Integers.eq_sym
R60688 Coq.Init.Logic "x = y" type_scope
R60665 Integers.eq
R60679 Integers.add
R60669 Integers.add
R60690 Integers.eq
R60732 Coqlib.zeq
R60750 Integers.unsigned
R60737 Integers.unsigned
R60732 Coqlib.zeq
R60750 Integers.unsigned
R60737 Integers.unsigned
R60802 Coqlib.zeq_true
R60802 Coqlib.zeq_true
R60820 Coqlib.zeq_false
R60820 Coqlib.zeq_false
R60873 Integers.eqm_small_eq
R60873 Integers.eqm_small_eq
R60914 Integers.unsigned
R60956 Coq.ZArith.BinInt "x - y" Z_scope
R60944 Coq.ZArith.BinInt "x + y" Z_scope
R60933 Integers.unsigned
R60946 Integers.unsigned
R60960 Integers.unsigned
R60914 Integers.unsigned
R60956 Coq.ZArith.BinInt "x - y" Z_scope
R60944 Coq.ZArith.BinInt "x + y" Z_scope
R60933 Integers.unsigned
R60946 Integers.unsigned
R60960 Integers.unsigned
R60984 Integers.unsigned
R61026 Coq.ZArith.BinInt "x - y" Z_scope
R61014 Coq.ZArith.BinInt "x + y" Z_scope
R61003 Integers.unsigned
R61016 Integers.unsigned
R61030 Integers.unsigned
R60984 Integers.unsigned
R61026 Coq.ZArith.BinInt "x - y" Z_scope
R61014 Coq.ZArith.BinInt "x + y" Z_scope
R61003 Integers.unsigned
R61016 Integers.unsigned
R61030 Integers.unsigned
R61051 Integers.eqm_sub
R61051 Integers.eqm_sub
R61082 Integers.unsigned
R61092 Integers.repr
R61109 Coq.ZArith.BinInt "x + y" Z_scope
R61098 Integers.unsigned
R61111 Integers.unsigned
R61066 Integers.eqm_trans
R61082 Integers.unsigned
R61092 Integers.repr
R61109 Coq.ZArith.BinInt "x + y" Z_scope
R61098 Integers.unsigned
R61111 Integers.unsigned
R61066 Integers.eqm_trans
R61167 Integers.unsigned
R61177 Integers.repr
R61194 Coq.ZArith.BinInt "x + y" Z_scope
R61183 Integers.unsigned
R61196 Integers.unsigned
R61151 Integers.eqm_trans
R61167 Integers.unsigned
R61177 Integers.repr
R61194 Coq.ZArith.BinInt "x + y" Z_scope
R61183 Integers.unsigned
R61196 Integers.unsigned
R61151 Integers.eqm_trans
R61453 Coq.Init.Logic "x = y" type_scope
R61430 Integers.lt
R61444 Integers.add
R61434 Integers.add
R61455 Integers.lt
R61388 Coq.ZArith.BinInt "x <= y <= z" Z_scope
R61377 Integers.min_signed
R61400 Coq.ZArith.BinInt "x + y" Z_scope
R61391 Integers.signed
R61402 Integers.signed
R61400 Coq.ZArith.BinInt "x + y" Z_scope
R61391 Integers.signed
R61402 Integers.signed
R61414 Integers.max_signed
R61335 Coq.ZArith.BinInt "x <= y <= z" Z_scope
R61324 Integers.min_signed
R61347 Coq.ZArith.BinInt "x + y" Z_scope
R61338 Integers.signed
R61349 Integers.signed
R61347 Coq.ZArith.BinInt "x + y" Z_scope
R61338 Integers.signed
R61349 Integers.signed
R61361 Integers.max_signed
R61495 Integers.add_signed
R61495 Integers.add_signed
R61495 Integers.add_signed
R61495 Integers.add_signed
R61535 Integers.signed_repr
R61535 Integers.signed_repr
R61535 Integers.signed_repr
R61535 Integers.signed_repr
R61535 Integers.signed_repr
R61535 Integers.signed_repr
R61560 Coqlib.zlt
R61576 Integers.signed
R61565 Integers.signed
R61560 Coqlib.zlt
R61576 Integers.signed
R61565 Integers.signed
R61603 Coqlib.zlt_true
R61603 Coqlib.zlt_true
R61628 Coqlib.zlt_false
R61628 Coqlib.zlt_false
R61827 Coq.Init.Logic "x = y" type_scope
R61801 Integers.cmp
R61818 Integers.add
R61808 Integers.add
R61829 Integers.cmp
R61759 Coq.ZArith.BinInt "x <= y <= z" Z_scope
R61748 Integers.min_signed
R61771 Coq.ZArith.BinInt "x + y" Z_scope
R61762 Integers.signed
R61773 Integers.signed
R61771 Coq.ZArith.BinInt "x + y" Z_scope
R61762 Integers.signed
R61773 Integers.signed
R61785 Integers.max_signed
R61706 Coq.ZArith.BinInt "x <= y <= z" Z_scope
R61695 Integers.min_signed
R61718 Coq.ZArith.BinInt "x + y" Z_scope
R61709 Integers.signed
R61720 Integers.signed
R61718 Coq.ZArith.BinInt "x + y" Z_scope
R61709 Integers.signed
R61720 Integers.signed
R61732 Integers.max_signed
R61879 Integers.translate_eq
R61879 Integers.translate_eq
R61908 Integers.translate_lt
R61908 Integers.translate_lt
R61908 Integers.translate_lt
R61908 Integers.translate_lt
R61908 Integers.translate_lt
R61908 Integers.translate_lt
R61908 Integers.translate_lt
R61908 Integers.translate_lt
R61994 Integers.is_true
R62003 Integers.notbool
R61980 Integers.is_false
R62163 Integers.is_false
R62173 Integers.notbool
R62150 Integers.is_true
R62251 Integers.eq_spec
R62261 Integers.zero
R62251 Integers.eq_spec
R62261 Integers.zero
R62274 Integers.eq
R62279 Integers.zero
R62274 Integers.eq
R62279 Integers.zero
FFloats
R121 Floats.float
R143 Floats.float
R175 Floats.float
R166 Floats.float
R206 Floats.float
R197 Floats.float
R247 Floats.float
R238 Floats.float
R285 Integers.int
R276 Floats.float
R319 Floats.float
R312 Integers.int
R356 Floats.float
R349 Integers.int
R397 Floats.float
R388 Floats.float
R379 Floats.float
R437 Floats.float
R428 Floats.float
R419 Floats.float
R477 Floats.float
R468 Floats.float
R459 Floats.float
R517 Floats.float
R508 Floats.float
R499 Floats.float
R572 Coq.Init.Datatypes.bool
R563 Floats.float
R554 Floats.float
R540 AST.comparison
R616 Coq.Init.Specif "{ A } + { B }" type_scope
R620 Coq.Init.Logic "x = y" type_scope
R632 Coq.Init.Logic "x <> y" type_scope
R608 Floats.float
R608 Floats.float
R684 Coq.Init.Logic "x = y" type_scope
R674 Floats.add
R686 Floats.add
R742 Coq.Init.Logic "x = y" type_scope
R732 Floats.sub
R744 Floats.add
R752 Floats.neg
R832 Coq.Init.Logic "x = y" type_scope
R800 Floats.singleoffloat
R815 Floats.singleoffloat
R834 Floats.singleoffloat
R897 Coq.Init.Logic "x = y" type_scope
R883 Floats.cmp
R887 AST.Cne
R899 Coq.Bool.Bool.negb
R905 Floats.cmp
R909 AST.Ceq
R969 Coq.Init.Logic "x = y" type_scope
R955 Floats.cmp
R959 AST.Cle
R985 Coq.Bool.Bool "x || y" bool_scope
R971 Floats.cmp
R975 AST.Clt
R988 Floats.cmp
R992 AST.Ceq
R1051 Coq.Init.Logic "x = y" type_scope
R1037 Floats.cmp
R1041 AST.Cge
R1067 Coq.Bool.Bool "x || y" bool_scope
R1053 Floats.cmp
R1057 AST.Cgt
R1070 Floats.cmp
R1074 AST.Ceq
R1124 Coq.Init.Logic "x = y" type_scope
R1106 Floats.cmp
R1119 Floats.zero
R1114 Floats.zero
R1110 AST.Ceq
R1126 Coq.Init.Datatypes.true
R1191 Coq.Init.Logic "x = y" type_scope
R1176 Floats.cmp
R1186 Floats.zero
R1180 AST.Ceq
R1193 Coq.Init.Datatypes.false
R1165 Coq.Init.Logic "x <> y" type_scope
R1168 Floats.zero
FValues
R118 Coq.ZArith.BinInt.Z
R144 Coqlib.zeq
R198 Integers.int
R221 Floats.float
R253 Integers.int
R244 Values.block
R284 Values.val
R291 Values.Vint
R296 Integers.zero
R323 Values.val
R330 Values.Vint
R335 Integers.one
R362 Values.val
R369 Values.Vint
R374 Integers.mone
R403 Values.val
R410 Values.Vint
R415 Integers.one
R443 Values.val
R450 Values.Vint
R455 Integers.zero
R509 Values.val
R537 Values.Vfalse
R526 Values.Vtrue
R502 Coq.Init.Datatypes.bool
R616 Values.Vundef
R629 Coq.Init.Logic.True
R638 Values.Vint
R646 AST.Tint
R654 Coq.Init.Logic.True
R663 Values.Vfloat
R673 AST.Tfloat
R683 Coq.Init.Logic.True
R692 Values.Vptr
R702 AST.Tint
R710 Coq.Init.Logic.True
R727 Coq.Init.Logic.False
R579 AST.typ
R570 Values.val
R784 Coq.Lists.List.list
R789 AST.typ
R769 Coq.Lists.List.list
R774 Values.val
R840 Coq.Lists.List.nil
R845 Coq.Lists.List.nil
R852 Coq.Init.Logic.True
R864 Coq.Lists.List "x :: y" list_scope
R874 Coq.Lists.List "x :: y" list_scope
R898 Coq.Init.Logic "A /\ B" type_scope
R883 Values.has_type
R933 Coq.Init.Logic.False
R784 Coq.Lists.List.list
R789 AST.typ
R769 Coq.Lists.List.list
R774 Values.val
R1004 Values.Vint
R1016 Coq.Init.Logic "x <> y" type_scope
R1019 Integers.zero
R1032 Values.Vptr
R1046 Coq.Init.Logic.True
R1060 Coq.Init.Logic.False
R970 Values.val
R1132 Values.Vint
R1144 Coq.Init.Logic "x = y" type_scope
R1146 Integers.zero
R1164 Coq.Init.Logic.False
R1098 Values.val
R1208 Coq.Init.Datatypes.bool
R1201 Values.val
R1304 Coq.Init.Datatypes.true
R1296 Values.Vint
R1268 Coq.Init.Logic "x <> y" type_scope
R1271 Integers.zero
R1370 Coq.Init.Datatypes.false
R1355 Values.Vint
R1360 Integers.zero
R1442 Coq.Init.Datatypes.true
R1430 Values.Vptr
R1475 Values.val
R1501 Values.Vint
R1511 Values.Vint
R1517 Integers.neg
R1537 Values.Vundef
R1468 Values.val
R1579 Values.val
R1605 Values.Vfloat
R1617 Values.Vfloat
R1625 Floats.neg
R1647 Values.Vundef
R1572 Values.val
R1689 Values.val
R1715 Values.Vfloat
R1727 Values.Vfloat
R1735 Floats.abs
R1757 Values.Vundef
R1682 Values.val
R1805 Values.val
R1831 Values.Vfloat
R1843 Values.Vint
R1849 Floats.intoffloat
R1878 Values.Vundef
R1798 Values.val
R1926 Values.val
R1952 Values.Vint
R1962 Values.Vfloat
R1970 Floats.floatofint
R1999 Values.Vundef
R1919 Values.val
R2048 Values.val
R2074 Values.Vint
R2084 Values.Vfloat
R2092 Floats.floatofintu
R2122 Values.Vundef
R2041 Values.val
R2166 Values.val
R2192 Values.Vint
R2202 Values.Vint
R2208 Integers.xor
R2218 Integers.mone
R2237 Values.Vundef
R2159 Values.val
R2282 Values.val
R2308 Values.Vint
R2318 Values.of_bool
R2327 Integers.eq
R2336 Integers.zero
R2350 Values.Vptr
R2364 Values.Vfalse
R2380 Values.Vundef
R2275 Values.val
R2429 Values.val
R2455 Values.Vint
R2465 Values.Vint
R2470 Integers.cast8signed
R2498 Values.Vundef
R2422 Values.val
R2549 Values.val
R2575 Values.Vint
R2585 Values.Vint
R2590 Integers.cast8unsigned
R2620 Values.Vundef
R2542 Values.val
R2670 Values.val
R2696 Values.Vint
R2706 Values.Vint
R2711 Integers.cast16signed
R2740 Values.Vundef
R2663 Values.val
R2792 Values.val
R2818 Values.Vint
R2828 Values.Vint
R2833 Integers.cast16unsigned
R2864 Values.Vundef
R2785 Values.val
R2915 Values.val
R2941 Values.Vfloat
R2953 Values.Vfloat
R2960 Floats.singleoffloat
R2992 Values.Vundef
R2908 Values.val
R3036 Values.val
R3067 Values.Vint
R3076 Values.Vint
R3087 Values.Vint
R3092 Integers.add
R3111 Values.Vptr
R3125 Values.Vint
R3136 Values.Vptr
R3145 Integers.add
R3166 Values.Vint
R3175 Values.Vptr
R3191 Values.Vptr
R3200 Integers.add
R3229 Values.Vundef
R3030 Values.val
R3030 Values.val
R3273 Values.val
R3304 Values.Vint
R3313 Values.Vint
R3324 Values.Vint
R3329 Integers.sub
R3348 Values.Vptr
R3362 Values.Vint
R3373 Values.Vptr
R3382 Integers.sub
R3403 Values.Vptr
R3417 Values.Vptr
R3442 Coqlib.zeq
R3486 Values.Vundef
R3457 Values.Vint
R3462 Integers.sub
R3505 Values.Vundef
R3267 Values.val
R3267 Values.val
R3549 Values.val
R3580 Values.Vint
R3589 Values.Vint
R3600 Values.Vint
R3605 Integers.mul
R3632 Values.Vundef
R3543 Values.val
R3543 Values.val
R3677 Values.val
R3708 Values.Vint
R3717 Values.Vint
R3737 Integers.eq
R3747 Integers.zero
R3773 Values.Vint
R3778 Integers.divs
R3761 Values.Vundef
R3806 Values.Vundef
R3671 Values.val
R3671 Values.val
R3851 Values.val
R3882 Values.Vint
R3891 Values.Vint
R3911 Integers.eq
R3921 Integers.zero
R3947 Values.Vint
R3952 Integers.mods
R3935 Values.Vundef
R3980 Values.Vundef
R3845 Values.val
R3845 Values.val
R4025 Values.val
R4056 Values.Vint
R4065 Values.Vint
R4085 Integers.eq
R4095 Integers.zero
R4121 Values.Vint
R4126 Integers.divu
R4109 Values.Vundef
R4154 Values.Vundef
R4019 Values.val
R4019 Values.val
R4199 Values.val
R4230 Values.Vint
R4239 Values.Vint
R4259 Integers.eq
R4269 Integers.zero
R4295 Values.Vint
R4300 Integers.modu
R4283 Values.Vundef
R4328 Values.Vundef
R4193 Values.val
R4193 Values.val
R4372 Values.val
R4403 Values.Vint
R4412 Values.Vint
R4423 Values.Vint
R4428 Integers.and
R4455 Values.Vundef
R4366 Values.val
R4366 Values.val
R4498 Values.val
R4529 Values.Vint
R4538 Values.Vint
R4549 Values.Vint
R4554 Integers.or
R4580 Values.Vundef
R4492 Values.val
R4492 Values.val
R4624 Values.val
R4655 Values.Vint
R4664 Values.Vint
R4675 Values.Vint
R4680 Integers.xor
R4707 Values.Vundef
R4618 Values.val
R4618 Values.val
R4751 Values.val
R4782 Values.Vint
R4791 Values.Vint
R4810 Integers.ltu
R4822 Integers.repr
R4875 Values.Vundef
R4845 Values.Vint
R4850 Integers.shl
R4894 Values.Vundef
R4745 Values.val
R4745 Values.val
R4938 Values.val
R4969 Values.Vint
R4978 Values.Vint
R4997 Integers.ltu
R5009 Integers.repr
R5062 Values.Vundef
R5032 Values.Vint
R5037 Integers.shr
R5081 Values.Vundef
R4932 Values.val
R4932 Values.val
R5131 Values.val
R5162 Values.Vint
R5171 Values.Vint
R5190 Integers.ltu
R5202 Integers.repr
R5261 Values.Vundef
R5225 Values.Vint
R5230 Integers.shr_carry
R5280 Values.Vundef
R5125 Values.val
R5125 Values.val
R5325 Values.val
R5356 Values.Vint
R5365 Values.Vint
R5384 Integers.ltu
R5396 Integers.repr
R5450 Values.Vundef
R5419 Values.Vint
R5424 Integers.shrx
R5469 Values.Vundef
R5319 Values.val
R5319 Values.val
R5514 Values.val
R5545 Values.Vint
R5554 Values.Vint
R5573 Integers.ltu
R5585 Integers.repr
R5639 Values.Vundef
R5608 Values.Vint
R5613 Integers.shru
R5658 Values.Vundef
R5508 Values.val
R5508 Values.val
R5718 Values.val
R5744 Values.Vint
R5754 Values.Vint
R5759 Integers.rolm
R5792 Values.Vundef
R5712 Integers.int
R5712 Integers.int
R5693 Values.val
R5837 Values.val
R5868 Values.Vfloat
R5879 Values.Vfloat
R5892 Values.Vfloat
R5899 Floats.add
R5928 Values.Vundef
R5831 Values.val
R5831 Values.val
R5973 Values.val
R6004 Values.Vfloat
R6015 Values.Vfloat
R6028 Values.Vfloat
R6035 Floats.sub
R6064 Values.Vundef
R5967 Values.val
R5967 Values.val
R6109 Values.val
R6140 Values.Vfloat
R6151 Values.Vfloat
R6164 Values.Vfloat
R6171 Floats.mul
R6200 Values.Vundef
R6103 Values.val
R6103 Values.val
R6245 Values.val
R6276 Values.Vfloat
R6287 Values.Vfloat
R6300 Values.Vfloat
R6307 Floats.div
R6336 Values.Vundef
R6239 Values.val
R6239 Values.val
R6392 Values.val
R6418 AST.Ceq
R6425 Values.Vfalse
R6436 AST.Cne
R6443 Values.Vtrue
R6460 Values.Vundef
R6379 AST.comparison
R6520 Values.val
R6551 Values.Vint
R6560 Values.Vint
R6571 Values.of_bool
R6580 Integers.cmp
R6601 Values.Vint
R6610 Values.Vptr
R6635 Integers.eq
R6645 Integers.zero
R6679 Values.Vundef
R6659 Values.cmp_mismatch
R6690 Values.Vptr
R6704 Values.Vptr
R6729 Coqlib.zeq
R6791 Values.cmp_mismatch
R6750 Values.of_bool
R6759 Integers.cmp
R6810 Values.Vptr
R6824 Values.Vint
R6844 Integers.eq
R6854 Integers.zero
R6888 Values.Vundef
R6868 Values.cmp_mismatch
R6907 Values.Vundef
R6514 Values.val
R6514 Values.val
R6494 AST.comparison
R6968 Values.val
R6999 Values.Vint
R7008 Values.Vint
R7025 Values.of_bool
R7034 Integers.cmpu
R7056 Values.Vint
R7065 Values.Vptr
R7090 Integers.eq
R7100 Integers.zero
R7134 Values.Vundef
R7114 Values.cmp_mismatch
R7145 Values.Vptr
R7159 Values.Vptr
R7184 Coqlib.zeq
R7247 Values.cmp_mismatch
R7205 Values.of_bool
R7214 Integers.cmpu
R7266 Values.Vptr
R7280 Values.Vint
R7300 Integers.eq
R7310 Integers.zero
R7344 Values.Vundef
R7324 Values.cmp_mismatch
R7363 Values.Vundef
R6962 Values.val
R6962 Values.val
R6942 AST.comparison
R7424 Values.val
R7455 Values.Vfloat
R7466 Values.Vfloat
R7479 Values.of_bool
R7488 Floats.cmp
R7519 Values.Vundef
R7418 Values.val
R7418 Values.val
R7398 AST.comparison
R7617 AST.Mint8signed
R7630 Values.Vint
R7640 Values.Vint
R7646 Integers.cast8signed
R7669 AST.Mint8unsigned
R7684 Values.Vint
R7694 Values.Vint
R7700 Integers.cast8unsigned
R7725 AST.Mint16signed
R7739 Values.Vint
R7749 Values.Vint
R7755 Integers.cast16signed
R7779 AST.Mint16unsigned
R7795 Values.Vint
R7805 Values.Vint
R7811 Integers.cast16unsigned
R7837 AST.Mint32
R7845 Values.Vint
R7855 Values.Vint
R7866 AST.Mint32
R7874 Values.Vptr
R7888 Values.Vptr
R7903 AST.Mfloat32
R7913 Values.Vfloat
R7925 Values.Vfloat
R7932 Floats.singleoffloat
R7959 AST.Mfloat64
R7969 Values.Vfloat
R7981 Values.Vfloat
R8002 Values.Vundef
R7583 Values.val
R7565 AST.memory_chunk
R8113 Coq.Init.Logic "x = y" type_scope
R8097 Values.cast8unsigned
R8115 Values.and
R8122 Values.Vint
R8127 Integers.repr
R8190 Integers.cast8unsigned_and
R8190 Integers.cast8unsigned_and
R8276 Coq.Init.Logic "x = y" type_scope
R8259 Values.cast16unsigned
R8278 Values.and
R8285 Values.Vint
R8290 Integers.repr
R8355 Integers.cast16unsigned_and
R8355 Integers.cast16unsigned_and
R8439 Values.is_true
R8448 Values.notbool
R8425 Values.is_false
R8606 Values.is_false
R8616 Values.notbool
R8593 Values.is_true
R8697 Integers.eq_spec
R8711 Integers.zero
R8697 Integers.eq_spec
R8711 Integers.zero
R8730 Integers.eq
R8739 Integers.zero
R8730 Integers.eq
R8739 Integers.zero
R8852 Values.bool_of_val
R8866 Coq.Init.Datatypes.true
R8839 Values.is_true
R9035 Values.is_true
R9013 Values.bool_of_val
R9027 Coq.Init.Datatypes.true
R9173 Coq.Init.Logic "x = y" type_scope
R9175 Coq.Init.Datatypes.true
R9152 Values.bool_of_val
R9139 Values.is_true
R9301 Values.bool_of_val
R9315 Coq.Init.Datatypes.false
R9287 Values.is_false
R9478 Values.is_false
R9455 Values.bool_of_val
R9469 Coq.Init.Datatypes.false
R9619 Coq.Init.Logic "x = y" type_scope
R9621 Coq.Init.Datatypes.false
R9598 Values.bool_of_val
R9584 Values.is_false
R9776 Coq.Init.Logic "x = y" type_scope
R9759 Values.of_bool
R9768 Coq.Bool.Bool.negb
R9778 Values.notbool
R9787 Values.of_bool
R9885 Coq.Init.Logic "x = y" type_scope
R9875 Values.of_bool
R9887 Values.notbool
R9896 Values.of_bool
R9905 Coq.Bool.Bool.negb
R10018 Coq.Init.Logic "x = y" type_scope
R9990 Values.notbool
R9998 Values.notbool
R10006 Values.of_bool
R10020 Values.of_bool
R10134 Coq.Init.Logic "x = y" type_scope
R10106 Values.notbool
R10114 Values.notbool
R10122 Values.notbool
R10136 Values.notbool
R10190 Integers.eq
R10199 Integers.zero
R10190 Integers.eq
R10199 Integers.zero
R10269 Coq.Init.Logic "x = y" type_scope
R10261 Values.add
R10271 Values.add
R10341 Integers.add_commut
R10341 Integers.add_commut
R10412 Coq.Init.Logic "x = y" type_scope
R10396 Values.add
R10401 Values.add
R10414 Values.add
R10421 Values.add
R10499 Integers.add_assoc
R10499 Integers.add_assoc
R10530 Integers.add_assoc
R10530 Integers.add_assoc
R10573 Integers.add_commut
R10573 Integers.add_commut
R10606 Integers.add_commut
R10606 Integers.add_commut
R10633 Integers.add_assoc
R10633 Integers.add_assoc
R10664 Integers.add_commut
R10664 Integers.add_commut
R10697 Integers.add_assoc
R10697 Integers.add_assoc
R10774 Coq.Init.Logic "x = y" type_scope
R10758 Values.add
R10765 Values.add
R10776 Values.add
R10783 Values.add
R10819 Values.add_commut
R10819 Values.add_commut
R10847 Values.add_assoc
R10847 Values.add_assoc
R10864 Values.add_commut
R10864 Values.add_commut
R10946 Coq.Init.Logic "x = y" type_scope
R10922 Values.add
R10937 Values.add
R10927 Values.add
R10948 Values.add
R10963 Values.add
R10953 Values.add
R10998 Values.add_permut
R10998 Values.add_permut
R11018 Values.add_assoc
R11018 Values.add_assoc
R11040 Values.add_permut
R11040 Values.add_permut
R11068 Values.add_assoc
R11068 Values.add_assoc
R11114 Coq.Init.Logic "x = y" type_scope
R11104 Values.neg
R11108 Values.Vzero
R11116 Values.Vzero
R11199 Coq.Init.Logic "x = y" type_scope
R11186 Values.neg
R11190 Values.add
R11201 Values.add
R11214 Values.neg
R11206 Values.neg
R11281 Integers.neg_add_distr
R11281 Integers.neg_add_distr
R11348 Coq.Init.Logic "x = y" type_scope
R11336 Values.sub
R11340 Values.Vzero
R11350 Values.neg
R11446 Coq.Init.Logic "x = y" type_scope
R11431 Values.sub
R11438 Values.Vint
R11448 Values.add
R11455 Values.Vint
R11461 Integers.neg
R11525 Integers.sub_add_opp
R11525 Integers.sub_add_opp
R11525 Integers.sub_add_opp
R11616 Coq.Init.Logic "x = y" type_scope
R11591 Values.sub
R11596 Values.add
R11604 Values.Vint
R11618 Values.add
R11635 Values.Vint
R11623 Values.sub
R11710 Integers.sub_add_l
R11710 Integers.sub_add_l
R11741 Integers.sub_add_l
R11741 Integers.sub_add_l
R11770 Coqlib.zeq
R11770 Coqlib.zeq
R11796 Integers.sub_add_l
R11796 Integers.sub_add_l
R11898 Coq.Init.Logic "x = y" type_scope
R11873 Values.sub
R11881 Values.add
R11889 Values.Vint
R11900 Values.add
R11917 Values.Vint
R11923 Integers.neg
R11905 Values.sub
R12002 Integers.sub_add_r
R12002 Integers.sub_add_r
R12040 Integers.sub_add_opp
R12040 Integers.sub_add_opp
R12040 Integers.sub_add_opp
R12040 Integers.sub_add_opp
R12082 Integers.add_assoc
R12082 Integers.add_assoc
R12082 Integers.add_assoc
R12082 Integers.add_assoc
R12110 Integers.add_commut
R12110 Integers.add_commut
R12150 Integers.sub_add_opp
R12150 Integers.sub_add_opp
R12150 Integers.sub_add_opp
R12150 Integers.sub_add_opp
R12178 Integers.add_assoc
R12178 Integers.add_assoc
R12206 Integers.neg_add_distr
R12206 Integers.neg_add_distr
R12233 Coqlib.zeq
R12233 Coqlib.zeq
R12283 Integers.sub_add_opp
R12283 Integers.sub_add_opp
R12283 Integers.sub_add_opp
R12283 Integers.sub_add_opp
R12308 Integers.add_assoc
R12308 Integers.add_assoc
R12338 Integers.neg_add_distr
R12338 Integers.neg_add_distr
R12418 Coq.Init.Logic "x = y" type_scope
R12410 Values.mul
R12420 Values.mul
R12488 Integers.mul_commut
R12488 Integers.mul_commut
R12559 Coq.Init.Logic "x = y" type_scope
R12543 Values.mul
R12548 Values.mul
R12561 Values.mul
R12568 Values.mul
R12651 Integers.mul_assoc
R12651 Integers.mul_assoc
R12729 Coq.Init.Logic "x = y" type_scope
R12713 Values.mul
R12718 Values.add
R12731 Values.add
R12746 Values.mul
R12736 Values.mul
R12829 Integers.mul_add_distr_l
R12829 Integers.mul_add_distr_l
R12914 Coq.Init.Logic "x = y" type_scope
R12898 Values.mul
R12905 Values.add
R12916 Values.add
R12931 Values.mul
R12921 Values.mul
R13014 Integers.mul_add_distr_r
R13014 Integers.mul_add_distr_r
R13128 Coq.Init.Logic "x = y" type_scope
R13113 Values.mul
R13120 Values.Vint
R13130 Values.shl
R13137 Values.Vint
R13096 Coq.Init.Logic "x = y" type_scope
R13080 Integers.is_power2
R13098 Coq.Init.Datatypes.Some
R13209 Coq.ZArith.BinInt.Z_of_nat
R13218 Integers.wordsize
R13209 Coq.ZArith.BinInt.Z_of_nat
R13218 Integers.wordsize
R13240 Integers.is_power2_range
R13240 Integers.is_power2_range
R13281 Integers.mul_pow2
R13281 Integers.mul_pow2
R13351 Coq.Init.Logic "x = y" type_scope
R13342 Values.mods
R13353 Values.sub
R13360 Values.mul
R13365 Values.divs
R13433 Integers.eq
R13443 Integers.zero
R13433 Integers.eq
R13443 Integers.zero
R13480 Integers.mods_divs
R13480 Integers.mods_divs
R13543 Coq.Init.Logic "x = y" type_scope
R13534 Values.modu
R13545 Values.sub
R13552 Values.mul
R13557 Values.divu
R13631 Integers.eq_spec
R13646 Integers.zero
R13665 Integers.eq
R13675 Integers.zero
R13631 Integers.eq_spec
R13646 Integers.zero
R13665 Integers.eq
R13675 Integers.zero
R13722 Integers.modu_divu
R13722 Integers.modu_divu
R13838 Coq.Init.Logic "x = y" type_scope
R13822 Values.divs
R13830 Values.Vint
R13840 Values.shrx
R13848 Values.Vint
R13805 Coq.Init.Logic "x = y" type_scope
R13789 Integers.is_power2
R13807 Coq.Init.Datatypes.Some
R13920 Coq.ZArith.BinInt.Z_of_nat
R13929 Integers.wordsize
R13920 Coq.ZArith.BinInt.Z_of_nat
R13929 Integers.wordsize
R13951 Integers.is_power2_range
R13951 Integers.is_power2_range
R13994 Integers.eq_spec
R14008 Integers.zero
R14027 Integers.eq
R14036 Integers.zero
R13994 Integers.eq_spec
R14008 Integers.zero
R14027 Integers.eq
R14036 Integers.zero
R14108 Integers.divs_pow2
R14108 Integers.divs_pow2
R14224 Coq.Init.Logic "x = y" type_scope
R14208 Values.divu
R14216 Values.Vint
R14226 Values.shru
R14234 Values.Vint
R14191 Coq.Init.Logic "x = y" type_scope
R14175 Integers.is_power2
R14193 Coq.Init.Datatypes.Some
R14306 Coq.ZArith.BinInt.Z_of_nat
R14315 Integers.wordsize
R14306 Coq.ZArith.BinInt.Z_of_nat
R14315 Integers.wordsize
R14337 Integers.is_power2_range
R14337 Integers.is_power2_range
R14380 Integers.eq_spec
R14394 Integers.zero
R14413 Integers.eq
R14422 Integers.zero
R14380 Integers.eq_spec
R14394 Integers.zero
R14413 Integers.eq
R14422 Integers.zero
R14494 Integers.divu_pow2
R14494 Integers.divu_pow2
R14610 Coq.Init.Logic "x = y" type_scope
R14594 Values.modu
R14602 Values.Vint
R14612 Values.and
R14619 Values.Vint
R14625 Integers.sub
R14635 Integers.one
R14577 Coq.Init.Logic "x = y" type_scope
R14561 Integers.is_power2
R14579 Coq.Init.Datatypes.Some
R14702 Integers.eq_spec
R14716 Integers.zero
R14735 Integers.eq
R14744 Integers.zero
R14702 Integers.eq_spec
R14716 Integers.zero
R14735 Integers.eq
R14744 Integers.zero
R14817 Integers.modu_and
R14817 Integers.modu_and
R14884 Coq.Init.Logic "x = y" type_scope
R14876 Values.and
R14886 Values.and
R14954 Integers.and_commut
R14954 Integers.and_commut
R15025 Coq.Init.Logic "x = y" type_scope
R15009 Values.and
R15014 Values.and
R15027 Values.and
R15034 Values.and
R15117 Integers.and_assoc
R15117 Integers.and_assoc
R15176 Coq.Init.Logic "x = y" type_scope
R15169 Values.or
R15178 Values.or
R15245 Integers.or_commut
R15245 Integers.or_commut
R15312 Coq.Init.Logic "x = y" type_scope
R15298 Values.or
R15302 Values.or
R15314 Values.or
R15320 Values.or
R15402 Integers.or_assoc
R15402 Integers.or_assoc
R15462 Coq.Init.Logic "x = y" type_scope
R15454 Values.xor
R15464 Values.xor
R15532 Integers.xor_commut
R15532 Integers.xor_commut
R15603 Coq.Init.Logic "x = y" type_scope
R15587 Values.xor
R15592 Values.xor
R15605 Values.xor
R15612 Values.xor
R15695 Integers.xor_assoc
R15695 Integers.xor_assoc
R15772 Coq.Init.Logic "x = y" type_scope
R15745 Values.mul
R15756 Values.shl
R15764 Values.Vone
R15774 Values.shl
R15842 Integers.ltu
R15854 Integers.repr
R15842 Integers.ltu
R15854 Integers.repr
R15900 Integers.shl_mul
R15900 Integers.shl_mul
R16004 Coq.Init.Logic "x = y" type_scope
R15989 Values.shl
R15996 Values.Vint
R16006 Values.rolm
R16016 Integers.shl
R16024 Integers.mone
R15977 Coq.Init.Logic "x = y" type_scope
R15953 Integers.ltu
R15964 Integers.repr
R15979 Coq.Init.Datatypes.true
R16105 Integers.shl_rolm
R16105 Integers.shl_rolm
R16221 Coq.Init.Logic "x = y" type_scope
R16205 Values.shru
R16213 Values.Vint
R16223 Values.rolm
R16257 Integers.shru
R16266 Integers.mone
R16231 Integers.sub
R16240 Integers.repr
R16193 Coq.Init.Logic "x = y" type_scope
R16169 Integers.ltu
R16180 Integers.repr
R16195 Coq.Init.Datatypes.true
R16347 Integers.shru_rolm
R16347 Integers.shru_rolm
R16443 Coq.Init.Logic "x = y" type_scope
R16413 Values.add
R16428 Values.shr_carry
R16418 Values.shr
R16445 Values.shrx
R16509 Integers.ltu
R16521 Integers.repr
R16509 Integers.ltu
R16521 Integers.repr
R16564 Integers.shrx_carry
R16564 Integers.shrx_carry
R16656 Coq.Init.Logic "x = y" type_scope
R16625 Values.or
R16643 Values.rolm
R16629 Values.rolm
R16658 Values.rolm
R16668 Integers.or
R16740 Integers.or_rolm
R16740 Integers.or_rolm
R16830 Coq.Init.Logic "x = y" type_scope
R16804 Values.rolm
R16810 Values.rolm
R16836 Values.rolm
R16895 Integers.and
R16904 Integers.rol
R16844 Integers.and
R16869 Integers.repr
R16853 Integers.add
R16987 Integers.and
R17012 Integers.repr
R16996 Integers.add
R17037 Integers.modu
R17063 Integers.repr
R17047 Integers.add
R16987 Integers.and
R17012 Integers.repr
R16996 Integers.add
R17037 Integers.modu
R17063 Integers.repr
R17047 Integers.add
R17086 Integers.rolm_rolm
R17086 Integers.rolm_rolm
R17130 Integers.sub
R17152 Integers.one
R17139 Integers.repr
R17111 Integers.repr
R17130 Integers.sub
R17152 Integers.one
R17139 Integers.repr
R17111 Integers.repr
R17189 Integers.repr
R17170 Integers.modu_and
R17189 Integers.repr
R17170 Integers.modu_and
R17274 Coq.Init.Logic "x = y" type_scope
R17256 Values.rolm
R17263 Integers.zero
R17276 Values.and
R17283 Values.Vint
R17347 Integers.rolm_zero
R17347 Integers.rolm_zero
R17410 Coq.Init.Logic "x = y" type_scope
R17401 Values.addf
R17412 Values.addf
R17481 Floats.addf_commut
R17481 Floats.addf_commut
R17582 Coq.Init.Logic "x = y" type_scope
R17547 Values.cmp_mismatch
R17561 AST.negate_comparison
R17584 Values.notbool
R17592 Values.cmp_mismatch
R17717 Coq.Init.Logic "x = y" type_scope
R17687 Values.cmp
R17692 AST.negate_comparison
R17719 Values.notbool
R17728 Values.cmp
R17796 Integers.negate_cmp
R17796 Integers.negate_cmp
R17818 Values.notbool_negb_1
R17818 Values.notbool_negb_1
R17842 Integers.eq
R17851 Integers.zero
R17842 Integers.eq
R17851 Integers.zero
R17868 Values.negate_cmp_mismatch
R17868 Values.negate_cmp_mismatch
R17910 Integers.eq
R17920 Integers.zero
R17910 Integers.eq
R17920 Integers.zero
R17937 Values.negate_cmp_mismatch
R17937 Values.negate_cmp_mismatch
R17979 Coqlib.zeq
R17979 Coqlib.zeq
R18007 Integers.negate_cmp
R18007 Integers.negate_cmp
R18029 Values.notbool_negb_1
R18029 Values.notbool_negb_1
R18053 Values.negate_cmp_mismatch
R18053 Values.negate_cmp_mismatch
R18150 Coq.Init.Logic "x = y" type_scope
R18119 Values.cmpu
R18125 AST.negate_comparison
R18152 Values.notbool
R18161 Values.cmpu
R18230 Integers.negate_cmpu
R18230 Integers.negate_cmpu
R18253 Values.notbool_negb_1
R18253 Values.notbool_negb_1
R18277 Integers.eq
R18286 Integers.zero
R18277 Integers.eq
R18286 Integers.zero
R18303 Values.negate_cmp_mismatch
R18303 Values.negate_cmp_mismatch
R18345 Integers.eq
R18355 Integers.zero
R18345 Integers.eq
R18355 Integers.zero
R18372 Values.negate_cmp_mismatch
R18372 Values.negate_cmp_mismatch
R18414 Coqlib.zeq
R18414 Coqlib.zeq
R18442 Integers.negate_cmpu
R18442 Integers.negate_cmpu
R18465 Values.notbool_negb_1
R18465 Values.notbool_negb_1
R18489 Values.negate_cmp_mismatch
R18489 Values.negate_cmp_mismatch
R18586 Coq.Init.Logic "x = y" type_scope
R18553 Values.cmp_mismatch
R18567 AST.swap_comparison
R18588 Values.cmp_mismatch
R18710 Coq.Init.Logic "x = y" type_scope
R18682 Values.cmp
R18687 AST.swap_comparison
R18712 Values.cmp
R18779 Integers.swap_cmp
R18779 Integers.swap_cmp
R18807 Integers.eq
R18816 Integers.zero
R18807 Integers.eq
R18816 Integers.zero
R18833 Values.swap_cmp_mismatch
R18833 Values.swap_cmp_mismatch
R18866 Integers.eq
R18876 Integers.zero
R18866 Integers.eq
R18876 Integers.zero
R18893 Values.swap_cmp_mismatch
R18893 Values.swap_cmp_mismatch
R18926 Coqlib.zeq
R18926 Coqlib.zeq
R18964 Coqlib.zeq_true
R18964 Coqlib.zeq_true
R18982 Integers.swap_cmp
R18982 Integers.swap_cmp
R19012 Coqlib.zeq_false
R19012 Coqlib.zeq_false
R19029 Values.swap_cmp_mismatch
R19029 Values.swap_cmp_mismatch
R19126 Coq.Init.Logic "x = y" type_scope
R19097 Values.cmpu
R19103 AST.swap_comparison
R19128 Values.cmpu
R19196 Integers.swap_cmpu
R19196 Integers.swap_cmpu
R19225 Integers.eq
R19234 Integers.zero
R19225 Integers.eq
R19234 Integers.zero
R19251 Values.swap_cmp_mismatch
R19251 Values.swap_cmp_mismatch
R19284 Integers.eq
R19294 Integers.zero
R19284 Integers.eq
R19294 Integers.zero
R19311 Values.swap_cmp_mismatch
R19311 Values.swap_cmp_mismatch
R19344 Coqlib.zeq
R19344 Coqlib.zeq
R19382 Coqlib.zeq_true
R19382 Coqlib.zeq_true
R19400 Integers.swap_cmpu
R19400 Integers.swap_cmpu
R19431 Coqlib.zeq_false
R19431 Coqlib.zeq_false
R19448 Values.swap_cmp_mismatch
R19448 Values.swap_cmp_mismatch
R19544 Coq.Init.Logic "x = y" type_scope
R19519 Values.notbool
R19528 Values.cmpf
R19533 AST.Cne
R19546 Values.cmpf
R19551 AST.Ceq
R19620 Floats.cmp_ne_eq
R19620 Floats.cmp_ne_eq
R19645 Values.notbool_negb_1
R19645 Values.notbool_negb_1
R19670 Values.notbool_idem2
R19670 Values.notbool_idem2
R19754 Coq.Init.Logic "x = y" type_scope
R19725 Values.or
R19742 Values.of_bool
R19729 Values.of_bool
R19756 Values.of_bool
R19768 Coq.Bool.Bool "x || y" bool_scope
R19878 Coq.Init.Logic "x = y" type_scope
R19863 Values.cmpf
R19868 AST.Cle
R19880 Values.or
R19901 Values.cmpf
R19906 AST.Ceq
R19884 Values.cmpf
R19889 AST.Clt
R19976 Values.or_of_bool
R19976 Values.or_of_bool
R20001 Floats.cmp_le_lt_eq
R20001 Floats.cmp_le_lt_eq
R20075 Coq.Init.Logic "x = y" type_scope
R20060 Values.cmpf
R20065 AST.Cge
R20077 Values.or
R20098 Values.cmpf
R20103 AST.Ceq
R20081 Values.cmpf
R20086 AST.Cgt
R20173 Values.or_of_bool
R20173 Values.or_of_bool
R20198 Floats.cmp_ge_gt_eq
R20198 Floats.cmp_ge_gt_eq
R20268 Coq.Init.Logic "A \/ B" type_scope
R20259 Coq.Init.Logic "x = y" type_scope
R20261 Values.Vundef
R20281 Coq.Init.Logic "A \/ B" type_scope
R20273 Coq.Init.Logic "x = y" type_scope
R20275 Values.Vtrue
R20286 Coq.Init.Logic "x = y" type_scope
R20288 Values.Vfalse
R20247 Values.val
R20332 Values.is_bool
R20341 Values.of_bool
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R20431 Values.is_bool
R20439 Values.Vundef
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R20525 Values.is_bool
R20534 Values.cmp_mismatch
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R20645 Values.is_bool
R20654 Values.cmp
R20720 Values.undef_is_bool
R20720 Values.undef_is_bool
R20720 Values.undef_is_bool
R20720 Values.undef_is_bool
R20720 Values.undef_is_bool
R20720 Values.undef_is_bool
R20720 Values.undef_is_bool
R20720 Values.undef_is_bool
R20720 Values.undef_is_bool
R20720 Values.undef_is_bool
R20720 Values.undef_is_bool
R20720 Values.undef_is_bool
R20720 Values.undef_is_bool
R20720 Values.undef_is_bool
R20720 Values.undef_is_bool
R20720 Values.undef_is_bool
R20720 Values.undef_is_bool
R20743 Values.of_bool_is_bool
R20743 Values.of_bool_is_bool
R20768 Integers.eq
R20777 Integers.zero
R20768 Integers.eq
R20777 Integers.zero
R20794 Values.cmp_mismatch_is_bool
R20794 Values.cmp_mismatch_is_bool
R20822 Values.undef_is_bool
R20822 Values.undef_is_bool
R20845 Integers.eq
R20855 Integers.zero
R20845 Integers.eq
R20855 Integers.zero
R20872 Values.cmp_mismatch_is_bool
R20872 Values.cmp_mismatch_is_bool
R20900 Values.undef_is_bool
R20900 Values.undef_is_bool
R20923 Coqlib.zeq
R20923 Coqlib.zeq
R20947 Values.of_bool_is_bool
R20947 Values.of_bool_is_bool
R20970 Values.cmp_mismatch_is_bool
R20970 Values.cmp_mismatch_is_bool
R21036 Values.is_bool
R21045 Values.cmpu
R21112 Values.undef_is_bool
R21112 Values.undef_is_bool
R21112 Values.undef_is_bool
R21112 Values.undef_is_bool
R21112 Values.undef_is_bool
R21112 Values.undef_is_bool
R21112 Values.undef_is_bool
R21112 Values.undef_is_bool
R21112 Values.undef_is_bool
R21112 Values.undef_is_bool
R21112 Values.undef_is_bool
R21112 Values.undef_is_bool
R21112 Values.undef_is_bool
R21112 Values.undef_is_bool
R21112 Values.undef_is_bool
R21112 Values.undef_is_bool
R21112 Values.undef_is_bool
R21135 Values.of_bool_is_bool
R21135 Values.of_bool_is_bool
R21160 Integers.eq
R21169 Integers.zero
R21160 Integers.eq
R21169 Integers.zero
R21186 Values.cmp_mismatch_is_bool
R21186 Values.cmp_mismatch_is_bool
R21214 Values.undef_is_bool
R21214 Values.undef_is_bool
R21237 Integers.eq
R21247 Integers.zero
R21237 Integers.eq
R21247 Integers.zero
R21264 Values.cmp_mismatch_is_bool
R21264 Values.cmp_mismatch_is_bool
R21292 Values.undef_is_bool
R21292 Values.undef_is_bool
R21315 Coqlib.zeq
R21315 Coqlib.zeq
R21339 Values.of_bool_is_bool
R21339 Values.of_bool_is_bool
R21362 Values.cmp_mismatch_is_bool
R21362 Values.cmp_mismatch_is_bool
R21428 Values.is_bool
R21437 Values.cmpf
R21525 Values.of_bool_is_bool
R21502 Values.undef_is_bool
R21502 Values.undef_is_bool
R21502 Values.undef_is_bool
R21502 Values.undef_is_bool
R21502 Values.undef_is_bool
R21502 Values.undef_is_bool
R21502 Values.undef_is_bool
R21502 Values.undef_is_bool
R21502 Values.undef_is_bool
R21502 Values.undef_is_bool
R21502 Values.undef_is_bool
R21502 Values.undef_is_bool
R21525 Values.of_bool_is_bool
R21502 Values.undef_is_bool
R21502 Values.undef_is_bool
R21502 Values.undef_is_bool
R21502 Values.undef_is_bool
R21502 Values.undef_is_bool
R21583 Values.is_bool
R21592 Values.notbool
R21640 Values.undef_is_bool
R21640 Values.undef_is_bool
R21661 Values.of_bool_is_bool
R21661 Values.of_bool_is_bool
R21687 Values.undef_is_bool
R21687 Values.undef_is_bool
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R21777 Coq.Init.Logic "x = y" type_scope
R21779 Values.xor
R21795 Values.Vone
R21784 Values.notbool
R21762 Values.is_bool
FMem
R191 Coq.ZArith.BinInt.Z
R215 Coqlib.zeq
R181 Coq.ZArith.BinInt.Z
R167 Coq.ZArith.BinInt.Z
R351 Coq.Init.Logic "x = y" type_scope
R336 Mem.update
R325 Coq.ZArith.BinInt.Z
R311 Coq.ZArith.BinInt.Z
R394 Coqlib.zeq_true
R394 Coqlib.zeq_true
R505 Coq.Init.Logic "x = y" type_scope
R490 Mem.update
R482 Coq.Init.Logic "x <> y" type_scope
R474 Coq.ZArith.BinInt.Z
R462 Coq.ZArith.BinInt.Z
R448 Coq.ZArith.BinInt.Z
R550 Coqlib.zeq_false
R550 Coqlib.zeq_false
R631 Values.val
R659 Values.val
R687 Values.val
R715 Values.val
R786 Mem.content
R781 Coq.ZArith.BinInt.Z
R844 Coq.ZArith.BinInt.Z
R855 Coq.ZArith.BinInt.Z
R870 Mem.contentmap
R952 Coq.Init.Logic "x = y" type_scope
R954 Mem.Undef
R921 Coq.Init.Logic "A \/ B" type_scope
R915 Coq.ZArith.BinInt "x < y" Z_scope
R928 Coq.ZArith.BinInt "x >= y" Z_scope
R1007 Mem.block_contents
R1002 Coq.ZArith.BinInt.Z
R1036 Values.block
R1070 Coq.ZArith.BinInt "x > y" Z_scope
R1267 Mem.Size8
R1282 Mem.Size16
R1298 Mem.Size32
R1314 Mem.Size64
R1231 Mem.memory_size
R1403 AST.Mint8signed
R1418 Mem.Size8
R1428 AST.Mint8unsigned
R1445 Mem.Size8
R1455 AST.Mint16signed
R1471 Mem.Size16
R1482 AST.Mint16unsigned
R1500 Mem.Size16
R1511 AST.Mint32
R1521 Mem.Size32
R1532 AST.Mfloat32
R1544 Mem.Size32
R1555 AST.Mfloat64
R1567 Mem.Size64
R1363 AST.memory_chunk
R1629 Mem.size_mem
R1639 Mem.mem_chunk
R1612 AST.memory_chunk
R1702 Coq.ZArith.BinInt "x > y" Z_scope
R1821 Coq.Init.Logic "x = y" type_scope
R1810 Mem.Undef
R1823 Mem.Undef
R1784 Coq.Init.Logic "A \/ B" type_scope
R1779 Coq.ZArith.BinInt "x < y" Z_scope
R1791 Coq.ZArith.BinInt "x >= y" Z_scope
R1887 Mem.block_contents
R1907 Mem.mkblock
R1939 Mem.undef_undef_outside
R1931 Mem.Undef
R1882 Coq.ZArith.BinInt.Z
R1882 Coq.ZArith.BinInt.Z
R1986 Mem.mem
R1995 Mem.mkmem
R2030 Mem.one_pos
R2011 Mem.empty_block
R2060 Values.block
R2178 Coq.ZArith.BinInt "x > y" Z_scope
R2158 Coq.ZArith.BinInt.Zsucc
R2167 Mem.nextblock
R2209 Mem.nextblock_pos
R2209 Mem.nextblock_pos
R2282 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2283 Mem.mkmem
R2419 Mem.succ_nextblock_pos
R2388 Coq.ZArith.BinInt.Zsucc
R2397 Mem.nextblock
R2290 Mem.update
R2369 Mem.blocks
R2330 Mem.empty_block
R2300 Mem.nextblock
R2448 Mem.nextblock
R2274 Coq.ZArith.BinInt.Z
R2274 Coq.ZArith.BinInt.Z
R2261 Mem.mem
R2544 Mem.mkmem
R2656 Mem.nextblock_pos
R2634 Mem.nextblock
R2551 Mem.update
R2614 Mem.blocks
R2578 Mem.empty_block
R2532 Values.block
R2523 Mem.mem
R2764 Coq.Lists.List.fold_right
R2792 Mem.free
R2747 Coq.Lists.List.list
R2752 Values.block
R2739 Mem.mem
R2964 Mem.low
R2972 Mem.blocks
R2952 Values.block
R2943 Mem.mem
R3031 Mem.high
R3040 Mem.blocks
R3019 Values.block
R3010 Mem.mem
R3163 Coq.ZArith.BinInt "x < y" Z_scope
R3168 Mem.nextblock
R3149 Values.block
R3140 Mem.mem
R3310 Coq.Init.Datatypes.bool
R3285 Mem.contentmap
R3278 Coq.ZArith.BinInt.Z
R3269 Coq.Init.Datatypes.nat
R3337 Coq.Init.Datatypes.O
R3342 Coq.Init.Datatypes.true
R3351 Coq.Init.Datatypes.S
R3388 Mem.Cont
R3413 Coq.ZArith.BinInt "x + y" Z_scope
R3433 Coq.Init.Datatypes.false
R3285 Mem.contentmap
R3278 Coq.ZArith.BinInt.Z
R3269 Coq.Init.Datatypes.nat
R3507 Mem.content
R3523 Mem.check_cont
R3539 Coq.ZArith.BinInt "x + y" Z_scope
R3560 Mem.Undef
R3493 Mem.contentmap
R3486 Coq.ZArith.BinInt.Z
R3477 Coq.Init.Datatypes.nat
R3631 Mem.contentmap
R3606 Mem.contentmap
R3599 Coq.ZArith.BinInt.Z
R3590 Coq.Init.Datatypes.nat
R3664 Coq.Init.Datatypes.O
R3675 Coq.Init.Datatypes.S
R3683 Mem.update
R3713 Coq.ZArith.BinInt "x + y" Z_scope
R3692 Mem.Cont
R3606 Mem.contentmap
R3599 Coq.ZArith.BinInt.Z
R3590 Coq.Init.Datatypes.nat
R3792 Mem.contentmap
R3808 Mem.update
R3820 Mem.set_cont
R3834 Coq.ZArith.BinInt "x + y" Z_scope
R3778 Mem.contentmap
R3765 Mem.content
R3758 Coq.ZArith.BinInt.Z
R3749 Coq.Init.Datatypes.nat
R3957 Coq.Init.Logic "x = y" type_scope
R3940 Mem.check_cont
R3959 Coq.Init.Datatypes.true
R3927 Coq.Init.Logic "x = y" type_scope
R3929 Mem.Cont
R3898 Coq.ZArith.BinInt "x <= y < z" Z_scope
R3907 Coq.ZArith.BinInt "x + y" Z_scope
R3909 Coq.ZArith.BinInt.Z_of_nat
R4069 Coq.ZArith.Znat.inj_S
R4069 Coq.ZArith.Znat.inj_S
R4093 Coq.ZArith.Znat.inj_S
R4093 Coq.ZArith.Znat.inj_S
R4127 Mem.check_cont_true
R4256 Coq.Init.Logic "x = y" type_scope
R4258 Mem.Cont
R4227 Coq.ZArith.BinInt "x <= y < z" Z_scope
R4236 Coq.ZArith.BinInt "x + y" Z_scope
R4238 Coq.ZArith.BinInt.Z_of_nat
R4202 Coq.Init.Logic "x = y" type_scope
R4185 Mem.check_cont
R4204 Coq.Init.Datatypes.true
R4376 Mem.check_cont
R4376 Mem.check_cont
R4447 Coq.Init.Logic "A \/ B" type_scope
R4443 Coq.Init.Logic "x = y" type_scope
R4456 Coq.ZArith.BinInt "x <= y < z" Z_scope
R4452 Coq.ZArith.BinInt "x + y" Z_scope
R4469 Coq.ZArith.BinInt "x + y" Z_scope
R4466 Coq.ZArith.BinInt "x + y" Z_scope
R4473 Coq.ZArith.BinInt.Z_of_nat
R4447 Coq.Init.Logic "A \/ B" type_scope
R4443 Coq.Init.Logic "x = y" type_scope
R4456 Coq.ZArith.BinInt "x <= y < z" Z_scope
R4452 Coq.ZArith.BinInt "x + y" Z_scope
R4469 Coq.ZArith.BinInt "x + y" Z_scope
R4466 Coq.ZArith.BinInt "x + y" Z_scope
R4473 Coq.ZArith.BinInt.Z_of_nat
R4498 Coq.ZArith.Znat.inj_S
R4498 Coq.ZArith.Znat.inj_S
R4574 Coq.ZArith.BinInt "x + y" Z_scope
R4574 Coq.ZArith.BinInt "x + y" Z_scope
R4605 Mem.check_cont_inv
R4729 Coq.Init.Logic "x = y" type_scope
R4712 Mem.check_cont
R4731 Coq.Init.Datatypes.false
R4699 Coq.Init.Logic "x <> y" type_scope
R4702 Mem.Cont
R4668 Coq.ZArith.BinInt "x <= y < z" Z_scope
R4677 Coq.ZArith.BinInt "x + y" Z_scope
R4679 Coq.ZArith.BinInt.Z_of_nat
R4763 Mem.check_cont
R4763 Mem.check_cont
R4803 Mem.check_cont_inv
R4803 Mem.check_cont_inv
R4882 Mem.check_cont_false
R4992 Coq.Init.Logic "x = y" type_scope
R4974 Mem.set_cont
R4994 Mem.Cont
R4946 Coq.ZArith.BinInt "x <= y < z" Z_scope
R4955 Coq.ZArith.BinInt "x + y" Z_scope
R4957 Coq.ZArith.BinInt.Z_of_nat
R5100 Coq.Init.Logic "A \/ B" type_scope
R5096 Coq.Init.Logic "x = y" type_scope
R5109 Coq.ZArith.BinInt "x <= y < z" Z_scope
R5105 Coq.ZArith.BinInt "x + y" Z_scope
R5122 Coq.ZArith.BinInt "x + y" Z_scope
R5119 Coq.ZArith.BinInt "x + y" Z_scope
R5126 Coq.ZArith.BinInt.Z_of_nat
R5100 Coq.Init.Logic "A \/ B" type_scope
R5096 Coq.Init.Logic "x = y" type_scope
R5109 Coq.ZArith.BinInt "x <= y < z" Z_scope
R5105 Coq.ZArith.BinInt "x + y" Z_scope
R5122 Coq.ZArith.BinInt "x + y" Z_scope
R5119 Coq.ZArith.BinInt "x + y" Z_scope
R5126 Coq.ZArith.BinInt.Z_of_nat
R5151 Coq.ZArith.Znat.inj_S
R5151 Coq.ZArith.Znat.inj_S
R5206 Mem.update_s
R5206 Mem.update_s
R5226 Mem.update_o
R5226 Mem.update_o
R5304 Mem.set_cont_inside
R5419 Coq.Init.Logic "x = y" type_scope
R5401 Mem.set_cont
R5372 Coq.Init.Logic "A \/ B" type_scope
R5368 Coq.ZArith.BinInt "x < y" Z_scope
R5390 Coq.ZArith.BinInt "x <= y" Z_scope
R5377 Coq.ZArith.BinInt "x + y" Z_scope
R5379 Coq.ZArith.BinInt.Z_of_nat
R5488 Coq.ZArith.Znat.inj_S
R5488 Coq.ZArith.Znat.inj_S
R5511 Mem.update_o
R5511 Mem.update_o
R5565 Mem.set_cont_outside
R5650 Coq.Init.Logic "x = y" type_scope
R5626 Mem.getN
R5636 Mem.setN
R5701 Mem.check_cont_true
R5701 Mem.check_cont_true
R5724 Mem.update_s
R5724 Mem.update_s
R5752 Mem.update_o
R5752 Mem.update_o
R5768 Mem.set_cont_inside
R5768 Mem.set_cont_inside
R5820 Mem.getN_setN_same
R5968 Coq.Init.Logic "x = y" type_scope
R5940 Mem.getN
R5952 Mem.setN
R5970 Mem.getN
R5910 Coq.Init.Logic "A \/ B" type_scope
R5905 Coq.ZArith.BinInt "x < y" Z_scope
R5891 Coq.ZArith.BinInt "x + y" Z_scope
R5893 Coq.ZArith.BinInt.Z_of_nat
R5930 Coq.ZArith.BinInt "x < y" Z_scope
R5916 Coq.ZArith.BinInt "x + y" Z_scope
R5918 Coq.ZArith.BinInt.Z_of_nat
R6030 Mem.check_cont
R6048 Coq.ZArith.BinInt "x + y" Z_scope
R6030 Mem.check_cont
R6048 Coq.ZArith.BinInt "x + y" Z_scope
R6074 Mem.check_cont_true
R6074 Mem.check_cont_true
R6099 Mem.update_o
R6099 Mem.update_o
R6117 Mem.set_cont_outside
R6117 Mem.set_cont_outside
R6167 Mem.update_o
R6167 Mem.update_o
R6185 Mem.set_cont_outside
R6185 Mem.set_cont_outside
R6212 Mem.check_cont_inv
R6212 Mem.check_cont_inv
R6268 Mem.check_cont
R6292 Mem.update
R6305 Mem.set_cont
R6321 Coq.ZArith.BinInt "x + y" Z_scope
R6286 Coq.ZArith.BinInt "x + y" Z_scope
R6268 Mem.check_cont
R6292 Mem.update
R6305 Mem.set_cont
R6321 Coq.ZArith.BinInt "x + y" Z_scope
R6286 Coq.ZArith.BinInt "x + y" Z_scope
R6375 Coq.Init.Logic "x = y" type_scope
R6350 Mem.check_cont
R6368 Coq.ZArith.BinInt "x + y" Z_scope
R6377 Coq.Init.Datatypes.true
R6375 Coq.Init.Logic "x = y" type_scope
R6350 Mem.check_cont
R6368 Coq.ZArith.BinInt "x + y" Z_scope
R6377 Coq.Init.Datatypes.true
R6392 Mem.check_cont_true
R6392 Mem.check_cont_true
R6432 Mem.check_cont_inv
R6432 Mem.check_cont_inv
R6473 Mem.update_o
R6473 Mem.update_o
R6491 Mem.set_cont_outside
R6491 Mem.set_cont_outside
R6591 Mem.getN_setN_other
R6780 Coq.Init.Logic "A \/ B" type_scope
R6773 Coq.Init.Logic "x = y" type_scope
R6745 Mem.getN
R6757 Mem.setN
R6775 Mem.Cont
R6813 Coq.Init.Logic "x = y" type_scope
R6785 Mem.getN
R6797 Mem.setN
R6815 Mem.Undef
R6732 Coq.Init.Logic "x <> y" type_scope
R6735 Mem.Cont
R6719 Coq.ZArith.BinInt "x >= y" Z_scope
R6705 Coq.ZArith.BinInt "x + y" Z_scope
R6707 Coq.ZArith.BinInt.Z_of_nat
R6693 Coq.ZArith.BinInt "x >= y" Z_scope
R6679 Coq.ZArith.BinInt "x + y" Z_scope
R6681 Coq.ZArith.BinInt.Z_of_nat
R6665 Coq.Init.Logic "x <> y" type_scope
R6862 Mem.check_cont
R6886 Mem.setN
R6880 Coq.ZArith.BinInt "x + y" Z_scope
R6862 Mem.check_cont
R6886 Mem.setN
R6880 Coq.ZArith.BinInt "x + y" Z_scope
R6919 Coqlib.zlt
R6919 Coqlib.zlt
R6955 Coq.ZArith.BinInt "x <= y < z" Z_scope
R6951 Coq.ZArith.BinInt "x + y" Z_scope
R6970 Coq.ZArith.BinInt "x + y" Z_scope
R6966 Coq.ZArith.BinInt "x + y" Z_scope
R6972 Coq.ZArith.BinInt.Z_of_nat
R6955 Coq.ZArith.BinInt "x <= y < z" Z_scope
R6951 Coq.ZArith.BinInt "x + y" Z_scope
R6970 Coq.ZArith.BinInt "x + y" Z_scope
R6966 Coq.ZArith.BinInt "x + y" Z_scope
R6972 Coq.ZArith.BinInt.Z_of_nat
R7007 Mem.check_cont_inv
R7007 Mem.check_cont_inv
R7063 Mem.update_s
R7063 Mem.update_s
R7124 Mem.update_o
R7124 Mem.update_o
R7142 Mem.set_cont_inside
R7142 Mem.set_cont_inside
R7207 Mem.getN_setN_overlap
R7307 Coq.Init.Logic "A \/ B" type_scope
R7303 Coq.Init.Logic "x = y" type_scope
R7277 Mem.getN
R7288 Mem.setN
R7336 Coq.Init.Logic "x = y" type_scope
R7310 Mem.getN
R7321 Mem.setN
R7338 Mem.Undef
R7386 Mem.check_cont
R7409 Mem.setN
R7403 Coq.ZArith.BinInt "x + y" Z_scope
R7386 Mem.check_cont
R7409 Mem.setN
R7403 Coq.ZArith.BinInt "x + y" Z_scope
R7460 Mem.update_s
R7460 Mem.update_s
R7504 Mem.getN_setN_mismatch
R7584 Coq.Init.Logic "x = y" type_scope
R7558 Mem.getN
R7577 Mem.Undef
R7586 Mem.Undef
R7631 Mem.check_cont
R7662 Mem.Undef
R7647 Coq.ZArith.BinInt "x + y" Z_scope
R7631 Mem.check_cont
R7662 Mem.Undef
R7647 Coq.ZArith.BinInt "x + y" Z_scope
R7696 Mem.getN_init
R7814 Coq.Init.Specif "{ A } + { B }" type_scope
R7830 Coq.Init.Logic "A /\ B" type_scope
R7823 Coq.ZArith.BinInt "x <= y" Z_scope
R7818 Mem.low
R7856 Coq.ZArith.BinInt "x <= y" Z_scope
R7837 Coq.ZArith.BinInt "x + y" Z_scope
R7839 Mem.size_chunk
R7862 Mem.high
R7892 Coq.Init.Logic "A \/ B" type_scope
R7886 Coq.ZArith.BinInt "x > y" Z_scope
R7881 Mem.low
R7918 Coq.ZArith.BinInt "x > y" Z_scope
R7899 Coq.ZArith.BinInt "x + y" Z_scope
R7901 Mem.size_chunk
R7923 Mem.high
R7958 Coqlib.zle
R7990 Mem.high
R7967 Coq.ZArith.BinInt "x + y" Z_scope
R7969 Mem.size_chunk
R7941 Coqlib.zle
R7948 Mem.low
R8005 Coq.Init.Specif.left
R8014 Coq.Init.Specif.left
R8025 Coq.Init.Specif.left
R8033 Coq.Init.Logic.conj
R8049 Coq.Init.Specif.left
R8058 Coq.Init.Specif.right
R8070 Coq.Init.Specif.right
R8079 Coq.Init.Logic.or_intror
R8099 Coq.Init.Specif.right
R8114 Coq.Init.Specif.right
R8123 Coq.Init.Logic.or_introl
R7787 Mem.block_contents
R7780 Coq.ZArith.BinInt.Z
R7760 AST.memory_chunk
R8357 Coq.Init.Logic "x = y" type_scope
R8322 Mem.in_bounds
R8301 Coq.ZArith.BinInt "x <= y" Z_scope
R8282 Coq.ZArith.BinInt "x + y" Z_scope
R8284 Mem.size_chunk
R8307 Mem.high
R8268 Coq.ZArith.BinInt "x <= y" Z_scope
R8263 Mem.low
R8214 Mem.block_contents
R8207 Coq.ZArith.BinInt.Z
R8187 AST.memory_chunk
R8387 Mem.in_bounds
R8387 Mem.in_bounds
R8609 Coq.Init.Logic "x = y" type_scope
R8558 Mem.in_bounds
R8579 Mem.mkblock
R8596 Mem.high
R8588 Mem.low
R8613 Mem.in_bounds
R8541 Mem.contentmap
R8521 Mem.block_contents
R8514 Coq.ZArith.BinInt.Z
R8494 AST.memory_chunk
R8685 Mem.in_bounds_holds
R8701 Mem.in_bounds_exten
R8775 Coq.Init.Datatypes.bool
R8788 Coqlib.zlt
R8797 Mem.nextblock
R8956 Coq.Init.Datatypes.false
R8851 Coqlib.zle
R8858 Mem.low
R8942 Coq.Init.Datatypes.false
R8875 Coqlib.zlt
R8886 Mem.high
R8907 Coq.Init.Datatypes.false
R8897 Coq.Init.Datatypes.true
R8830 Mem.blocks
R8770 Coq.ZArith.BinInt.Z
R8757 Values.block
R8748 Mem.mem
R9073 Values.val
R9100 Mem.Size8
R9121 Mem.getN
R9151 Mem.Datum8
R9178 Values.Vundef
R9199 Mem.Size16
R9221 Mem.getN
R9251 Mem.Datum16
R9279 Values.Vundef
R9300 Mem.Size32
R9322 Mem.getN
R9352 Mem.Datum32
R9380 Values.Vundef
R9401 Mem.Size64
R9423 Mem.getN
R9453 Mem.Datum64
R9481 Values.Vundef
R9068 Coq.ZArith.BinInt.Z
R9050 Mem.contentmap
R9033 Mem.memory_size
R9591 Coq.Init.Datatypes.option
R9598 Values.val
R9610 Coqlib.zlt
R9619 Mem.nextblock
R9832 Coq.Init.Datatypes.None
R9673 Mem.in_bounds
R9815 Coq.Init.Datatypes.None
R9705 Coq.Init.Datatypes.Some
R9711 Values.load_result
R9754 Mem.load_contents
R9789 Mem.contents
R9769 Mem.mem_chunk
R9652 Mem.blocks
R9570 Coq.ZArith.BinInt.Z
R9557 Values.block
R9548 Mem.mem
R9530 AST.memory_chunk
R9901 Coq.Init.Datatypes.option
R9908 Values.val
R9937 Values.Vptr
R9951 Mem.load
R9967 Integers.signed
R9992 Coq.Init.Datatypes.None
R9894 Values.val
R9882 Mem.mem
R9864 AST.memory_chunk
R10185 Coq.Init.Logic "'exists' x , p" type_scope
R10214 Coq.Init.Logic "x = y" type_scope
R10195 Mem.load
R10216 Coq.Init.Datatypes.Some
R10162 Coq.ZArith.BinInt "x <= y" Z_scope
R10143 Coq.ZArith.BinInt "x + y" Z_scope
R10145 Mem.size_chunk
R10165 Mem.high_bound
R10127 Coq.ZArith.BinInt "x <= y" Z_scope
R10113 Mem.low_bound
R10092 Mem.valid_block
R10086 Coq.ZArith.BinInt.Z
R10073 Values.block
R10064 Mem.mem
R10046 AST.memory_chunk
R10262 Coqlib.zlt_true
R10262 Coqlib.zlt_true
R10288 Mem.in_bounds_holds
R10288 Mem.in_bounds_holds
R10316 Values.load_result
R10351 Mem.load_contents
R10411 Mem.contents
R10424 Mem.blocks
R10366 Mem.mem_chunk
R10316 Values.load_result
R10351 Mem.load_contents
R10411 Mem.contents
R10424 Mem.blocks
R10366 Mem.mem_chunk
R10672 Coq.Init.Logic "A /\ B" type_scope
R10656 Coq.ZArith.BinInt "x < y" Z_scope
R10661 Mem.nextblock
R10692 Coq.Init.Logic "A /\ B" type_scope
R10685 Coq.ZArith.BinInt "x <= y" Z_scope
R10680 Mem.low
R10732 Coq.Init.Logic "A /\ B" type_scope
R10720 Coq.ZArith.BinInt "x <= y" Z_scope
R10701 Coq.ZArith.BinInt "x + y" Z_scope
R10703 Mem.size_chunk
R10726 Mem.high
R10811 Coq.Init.Logic "x = y" type_scope
R10737 Values.load_result
R10760 Mem.load_contents
R10796 Mem.contents
R10775 Mem.mem_chunk
R10639 Mem.blocks
R10613 Coq.Init.Logic "x = y" type_scope
R10594 Mem.load
R10615 Coq.Init.Datatypes.Some
R10586 Values.val
R10579 Coq.ZArith.BinInt.Z
R10566 Values.block
R10557 Mem.mem
R10539 AST.memory_chunk
R10862 Coqlib.zlt
R10869 Mem.nextblock
R10862 Coqlib.zlt
R10869 Mem.nextblock
R10906 Mem.blocks
R10906 Mem.blocks
R10926 Mem.in_bounds
R10926 Mem.in_bounds
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R11040 Mem.load_in_bounds
R11055 Mem.load_inv
R11210 Mem.contentmap
R11244 Mem.Size8
R11259 Mem.setN
R11275 Mem.Datum8
R11291 Mem.Size16
R11307 Mem.setN
R11323 Mem.Datum16
R11340 Mem.Size32
R11356 Mem.setN
R11372 Mem.Datum32
R11389 Mem.Size64
R11405 Mem.setN
R11421 Mem.Datum64
R11203 Values.val
R11196 Coq.ZArith.BinInt.Z
R11152 Mem.contentmap
R11135 Mem.memory_size
R11665 Coq.Init.Logic "x = y" type_scope
R11637 Mem.store_contents
R11667 Mem.Undef
R11618 Coq.Init.Logic "A \/ B" type_scope
R11613 Coq.ZArith.BinInt "x < y" Z_scope
R11623 Coq.ZArith.BinInt "x >= y" Z_scope
R11586 Coq.Init.Logic "x = y" type_scope
R11588 Mem.Undef
R11568 Coq.Init.Logic "A \/ B" type_scope
R11563 Coq.ZArith.BinInt "x < y" Z_scope
R11573 Coq.ZArith.BinInt "x >= y" Z_scope
R11518 Coq.Init.Logic "A /\ B" type_scope
R11511 Coq.ZArith.BinInt "x <= y" Z_scope
R11539 Coq.ZArith.BinInt "x <= y" Z_scope
R11525 Coq.ZArith.BinInt "x + y" Z_scope
R11527 Mem.size_mem
R11851 Coq.Init.Logic "x = y" type_scope
R11834 Mem.setN
R11853 Mem.Undef
R11808 Coq.Init.Logic "A \/ B" type_scope
R11803 Coq.ZArith.BinInt "x < y" Z_scope
R11813 Coq.ZArith.BinInt "x >= y" Z_scope
R11780 Coq.ZArith.BinInt "x <= y" Z_scope
R11761 Coq.ZArith.BinInt "x + y" Z_scope
R11766 Coq.ZArith.BinInt "x + y" Z_scope
R11768 Coq.ZArith.BinInt.Z_of_nat
R11851 Coq.Init.Logic "x = y" type_scope
R11834 Mem.setN
R11853 Mem.Undef
R11808 Coq.Init.Logic "A \/ B" type_scope
R11803 Coq.ZArith.BinInt "x < y" Z_scope
R11813 Coq.ZArith.BinInt "x >= y" Z_scope
R11780 Coq.ZArith.BinInt "x <= y" Z_scope
R11761 Coq.ZArith.BinInt "x + y" Z_scope
R11766 Coq.ZArith.BinInt "x + y" Z_scope
R11768 Coq.ZArith.BinInt.Z_of_nat
R11894 Mem.update_o
R11894 Mem.update_o
R11934 Mem.set_cont_outside
R11934 Mem.set_cont_outside
R12080 Coq.ZArith.BinInt.Z_of_nat
R12299 Mem.mem
R12335 Mem.mkmem
R12637 Mem.nextblock_pos
R12619 Mem.nextblock
R12346 Mem.update
R12603 Mem.blocks
R12364 Mem.mkblock
R12478 Mem.store_contents_undef_outside
R12575 Mem.undef_outside
R12528 Mem.contents
R12508 Mem.mem_chunk
R12407 Mem.store_contents
R12443 Mem.contents
R12423 Mem.mem_chunk
R12383 Mem.high
R12375 Mem.low
R12320 Mem.blocks
R12236 Coq.Init.Logic "A /\ B" type_scope
R12229 Coq.ZArith.BinInt "x <= y" Z_scope
R12224 Mem.low
R12212 Mem.blocks
R12271 Coq.ZArith.BinInt "x <= y" Z_scope
R12252 Coq.ZArith.BinInt "x + y" Z_scope
R12254 Mem.size_chunk
R12290 Mem.high
R12278 Mem.blocks
R12194 Values.val
R12187 Coq.ZArith.BinInt.Z
R12169 Values.block
R12160 Mem.mem
R12142 AST.memory_chunk
R12750 Coq.Init.Datatypes.option
R12757 Mem.mem
R12769 Coqlib.zlt
R12778 Mem.nextblock
R12941 Coq.Init.Datatypes.None
R12804 Mem.in_bounds
R12828 Mem.blocks
R12850 Coq.Init.Specif.left
R12860 Coq.Init.Datatypes.Some
R12865 Mem.unchecked_store
R12906 Coq.Init.Specif.right
R12917 Coq.Init.Datatypes.None
R12743 Values.val
R12736 Coq.ZArith.BinInt.Z
R12706 Values.block
R12697 Mem.mem
R12679 AST.memory_chunk
R13013 Coq.Init.Datatypes.option
R13020 Mem.mem
R13049 Values.Vptr
R13063 Mem.store
R13080 Integers.signed
R13107 Coq.Init.Datatypes.None
R13006 Values.val
R13006 Values.val
R12992 Mem.mem
R12974 AST.memory_chunk
R13310 Coq.Init.Logic "'exists' x , p" type_scope
R13343 Coq.Init.Logic "x = y" type_scope
R13321 Mem.store
R13345 Coq.Init.Datatypes.Some
R13287 Coq.ZArith.BinInt "x <= y" Z_scope
R13268 Coq.ZArith.BinInt "x + y" Z_scope
R13270 Mem.size_chunk
R13290 Mem.high_bound
R13252 Coq.ZArith.BinInt "x <= y" Z_scope
R13238 Mem.low_bound
R13217 Mem.valid_block
R13209 Values.val
R13202 Coq.ZArith.BinInt.Z
R13189 Values.block
R13180 Mem.mem
R13162 AST.memory_chunk
R13395 Coqlib.zlt_true
R13395 Coqlib.zlt_true
R13420 Mem.in_bounds
R13441 Mem.blocks
R13420 Mem.in_bounds
R13441 Mem.blocks
R13474 Mem.unchecked_store
R13474 Mem.unchecked_store
R13774 Coq.Init.Logic "A /\ B" type_scope
R13758 Coq.ZArith.BinInt "x < y" Z_scope
R13763 Mem.nextblock
R13794 Coq.Init.Logic "A /\ B" type_scope
R13787 Coq.ZArith.BinInt "x <= y" Z_scope
R13782 Mem.low
R13834 Coq.Init.Logic "A /\ B" type_scope
R13822 Coq.ZArith.BinInt "x <= y" Z_scope
R13803 Coq.ZArith.BinInt "x + y" Z_scope
R13805 Mem.size_chunk
R13828 Mem.high
R13870 Coq.Init.Logic "A /\ B" type_scope
R13854 Coq.Init.Logic "x = y" type_scope
R13843 Mem.nextblock
R13859 Mem.nextblock
R13875 Coq.Init.Logic "'exists' x , p" type_scope
R13897 Coq.Init.Logic "x = y" type_scope
R13889 Mem.blocks
R13903 Mem.update
R14046 Mem.blocks
R13913 Mem.mkblock
R13963 Mem.store_contents
R13999 Mem.contents
R13979 Mem.mem_chunk
R13932 Mem.high
R13924 Mem.low
R13741 Mem.blocks
R13714 Coq.Init.Logic "x = y" type_scope
R13692 Mem.store
R13716 Coq.Init.Datatypes.Some
R13684 Values.val
R13677 Coq.ZArith.BinInt.Z
R13664 Values.block
R13655 Mem.mem
R13655 Mem.mem
R13634 AST.memory_chunk
R14102 Coqlib.zlt
R14109 Mem.nextblock
R14102 Coqlib.zlt
R14109 Mem.nextblock
R14146 Mem.blocks
R14146 Mem.blocks
R14166 Mem.in_bounds
R14166 Mem.in_bounds
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R14269 Mem.store_contents_undef_outside
R14368 Mem.undef_outside
R14357 Mem.high
R14349 Mem.low
R14330 Mem.contents
R14299 Mem.mem_chunk
R14269 Mem.store_contents_undef_outside
R14368 Mem.undef_outside
R14357 Mem.high
R14349 Mem.low
R14330 Mem.contents
R14299 Mem.mem_chunk
R14462 Mem.store_in_bounds
R14478 Mem.store_inv
R14624 Coq.Init.Logic "x <> y" type_scope
R14599 Coq.Init.Logic "~ x" type_scope
R14601 Mem.valid_block
R14580 Mem.valid_block
R14795 Coq.Init.Logic "~ x" type_scope
R14797 Mem.valid_block
R14782 Coq.Init.Logic "x = y" type_scope
R14767 Mem.alloc
R14784 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14756 Values.block
R14749 Coq.ZArith.BinInt.Z
R14749 Coq.ZArith.BinInt.Z
R14736 Mem.mem
R14736 Mem.mem
R15000 Mem.valid_block
R14987 Coq.Init.Logic "x = y" type_scope
R14972 Mem.alloc
R14989 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14961 Values.block
R14954 Coq.ZArith.BinInt.Z
R14954 Coq.ZArith.BinInt.Z
R14941 Mem.mem
R14941 Mem.mem
R15253 Mem.valid_block
R15233 Mem.valid_block
R15217 Coq.Init.Logic "x = y" type_scope
R15202 Mem.alloc
R15219 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15191 Values.block
R15191 Values.block
R15181 Coq.ZArith.BinInt.Z
R15181 Coq.ZArith.BinInt.Z
R15168 Mem.mem
R15168 Mem.mem
R15533 Mem.valid_block
R15513 Mem.valid_block
R15498 Coq.Init.Logic "x = y" type_scope
R15474 Mem.store
R15500 Coq.Init.Datatypes.Some
R15466 Values.val
R15459 Coq.ZArith.BinInt.Z
R15446 Values.block
R15446 Values.block
R15434 Mem.mem
R15434 Mem.mem
R15412 AST.memory_chunk
R15580 Mem.store_inv
R15580 Mem.store_inv
R15754 Mem.valid_block
R15767 Mem.free
R15735 Mem.valid_block
R15724 Values.block
R15724 Values.block
R15712 Mem.mem
R16086 Coq.Init.Logic "x = y" type_scope
R16066 Mem.load
R16088 Coq.Init.Datatypes.Some
R16052 Coq.Init.Logic "x = y" type_scope
R16032 Mem.load
R16054 Coq.Init.Datatypes.Some
R16016 Coq.Init.Logic "x = y" type_scope
R16001 Mem.alloc
R16018 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15993 Values.val
R15986 Coq.ZArith.BinInt.Z
R15986 Coq.ZArith.BinInt.Z
R15986 Coq.ZArith.BinInt.Z
R15967 Values.block
R15967 Values.block
R15946 Mem.mem
R15946 Mem.mem
R15924 AST.memory_chunk
R16183 Mem.load_inv
R16183 Mem.load_inv
R16266 Coqlib.zlt_true
R16266 Coqlib.zlt_true
R16294 Mem.update_o
R16294 Mem.update_o
R16294 Mem.update_o
R16294 Mem.update_o
R16315 Mem.in_bounds_holds
R16315 Mem.in_bounds_holds
R16481 Coq.Init.Logic "x = y" type_scope
R16443 Mem.load_contents
R16470 Mem.Undef
R16483 Values.Vundef
R16437 Coq.ZArith.BinInt.Z
R16418 Mem.memory_size
R16727 Coq.Init.Logic "x = y" type_scope
R16729 Values.Vundef
R16711 Coq.Init.Logic "x = y" type_scope
R16690 Mem.load
R16713 Coq.Init.Datatypes.Some
R16674 Coq.Init.Logic "x = y" type_scope
R16659 Mem.alloc
R16676 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16651 Values.val
R16644 Coq.ZArith.BinInt.Z
R16644 Coq.ZArith.BinInt.Z
R16644 Coq.ZArith.BinInt.Z
R16625 Values.block
R16625 Values.block
R16604 Mem.mem
R16604 Mem.mem
R16582 AST.memory_chunk
R16824 Mem.load_inv
R16824 Mem.load_inv
R16877 Mem.update_s
R16877 Mem.update_s
R16943 Mem.load_contents_init
R16943 Mem.load_contents_init
R17124 Coq.Init.Logic "x = y" type_scope
R17109 Mem.low_bound
R17129 Coqlib.zeq
R17151 Mem.low_bound
R17093 Coq.Init.Logic "x = y" type_scope
R17078 Mem.alloc
R17095 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17072 Coq.ZArith.BinInt.Z
R17072 Coq.ZArith.BinInt.Z
R17057 Values.block
R17057 Values.block
R17045 Mem.mem
R17045 Mem.mem
R17306 Coqlib.zeq
R17313 Mem.nextblock
R17306 Coqlib.zeq
R17313 Mem.nextblock
R17471 Coq.Init.Logic "x = y" type_scope
R17455 Mem.high_bound
R17476 Coqlib.zeq
R17498 Mem.high_bound
R17439 Coq.Init.Logic "x = y" type_scope
R17424 Mem.alloc
R17441 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17418 Coq.ZArith.BinInt.Z
R17418 Coq.ZArith.BinInt.Z
R17403 Values.block
R17403 Values.block
R17391 Mem.mem
R17391 Mem.mem
R17655 Coqlib.zeq
R17662 Mem.nextblock
R17655 Coqlib.zeq
R17662 Mem.nextblock
R17877 Coq.Init.Logic "'exists' x , p" type_scope
R17912 Coq.Init.Logic "x = y" type_scope
R17889 Mem.store
R17914 Coq.Init.Datatypes.Some
R17866 Coq.ZArith.BinInt "x <= y" Z_scope
R17847 Coq.ZArith.BinInt "x + y" Z_scope
R17849 Mem.size_chunk
R17833 Coq.ZArith.BinInt "x <= y" Z_scope
R17815 Coq.Init.Logic "x = y" type_scope
R17800 Mem.alloc
R17817 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17792 Values.val
R17785 Coq.ZArith.BinInt.Z
R17785 Coq.ZArith.BinInt.Z
R17785 Coq.ZArith.BinInt.Z
R17766 Values.block
R17757 Mem.mem
R17757 Mem.mem
R17735 AST.memory_chunk
R17993 Coq.ZArith.BinInt "x < y" Z_scope
R17999 Mem.nextblock
R17993 Coq.ZArith.BinInt "x < y" Z_scope
R17999 Mem.nextblock
R18075 Coq.ZArith.BinInt "x <= y" Z_scope
R18060 Mem.low_bound
R18075 Coq.ZArith.BinInt "x <= y" Z_scope
R18060 Mem.low_bound
R18138 Mem.update_s
R18138 Mem.update_s
R18205 Coq.ZArith.BinInt "x <= y" Z_scope
R18186 Coq.ZArith.BinInt "x + y" Z_scope
R18188 Mem.size_chunk
R18208 Mem.high_bound
R18205 Coq.ZArith.BinInt "x <= y" Z_scope
R18186 Coq.ZArith.BinInt "x + y" Z_scope
R18188 Mem.size_chunk
R18208 Mem.high_bound
R18281 Mem.update_s
R18281 Mem.update_s
R18321 Mem.store_in_bounds
R18321 Mem.store_in_bounds
R18381 Mem.store_alloc
R18393 Mem.high_bound_alloc
R18410 Mem.low_bound_alloc
R18426 Mem.load_alloc_same
R18442 Mem.load_contents_init
R18461 Mem.load_alloc_other
R18642 Coq.Init.Logic "x = y" type_scope
R18613 Mem.load
R18625 Mem.free
R18644 Mem.load
R18602 Coq.Init.Logic "x <> y" type_scope
R18594 Coq.ZArith.BinInt.Z
R18581 Values.block
R18581 Values.block
R18569 Mem.mem
R18551 AST.memory_chunk
R18715 Coqlib.zlt
R18722 Mem.nextblock
R18715 Coqlib.zlt
R18722 Mem.nextblock
R18755 Mem.update_o
R18755 Mem.update_o
R18889 Coq.Init.Logic "x = y" type_scope
R18865 Mem.low_bound
R18876 Mem.free
R18891 Mem.low_bound
R18854 Coq.Init.Logic "x <> y" type_scope
R18842 Values.block
R18842 Values.block
R18830 Mem.mem
R18964 Mem.update_o
R18964 Mem.update_o
R19084 Coq.Init.Logic "x = y" type_scope
R19059 Mem.high_bound
R19071 Mem.free
R19086 Mem.high_bound
R19048 Coq.Init.Logic "x <> y" type_scope
R19036 Values.block
R19036 Values.block
R19024 Mem.mem
R19161 Mem.update_o
R19161 Mem.update_o
R19195 Mem.load_free
R19205 Mem.low_bound_free
R19220 Mem.high_bound_free
R19391 Coq.Init.Logic "A /\ B" type_scope
R19384 Coq.ZArith.BinInt "x <= y" Z_scope
R19369 Mem.low_bound
R19417 Coq.ZArith.BinInt "x <= y" Z_scope
R19398 Coq.ZArith.BinInt "x + y" Z_scope
R19400 Mem.size_chunk
R19420 Mem.high_bound
R19354 Coq.Init.Logic "x = y" type_scope
R19331 Mem.store
R19356 Coq.Init.Datatypes.Some
R19466 Mem.store_inv
R19466 Mem.store_inv
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R19710 Coq.Init.Logic "x = y" type_scope
R19661 Mem.load_contents
R19679 Mem.store_contents
R19653 Values.val
R19646 Coq.ZArith.BinInt.Z
R19628 Mem.contentmap
R19611 Mem.memory_size
R19809 Mem.getN_setN_same
R19809 Mem.getN_setN_same
R19809 Mem.getN_setN_same
R19809 Mem.getN_setN_same
R19809 Mem.getN_setN_same
R20005 Coq.Init.Logic "x = y" type_scope
R19985 Mem.load
R20007 Coq.Init.Datatypes.Some
R20013 Values.load_result
R19970 Coq.Init.Logic "x = y" type_scope
R19947 Mem.store
R19972 Coq.Init.Datatypes.Some
R19939 Values.val
R19932 Coq.ZArith.BinInt.Z
R19919 Values.block
R19910 Mem.mem
R19910 Mem.mem
R19888 AST.memory_chunk
R20070 Mem.store_inv
R20070 Mem.store_inv
R20170 Coqlib.zlt_true
R20170 Coqlib.zlt_true
R20216 Mem.update_s
R20216 Mem.update_s
R20216 Mem.update_s
R20244 Mem.in_bounds_exten
R20244 Mem.in_bounds_exten
R20269 Mem.in_bounds_holds
R20269 Mem.in_bounds_holds
R20302 Mem.load_store_contents_same
R20302 Mem.load_store_contents_same
R20586 Coq.Init.Logic "x = y" type_scope
R20533 Mem.load_contents
R20552 Mem.store_contents
R20590 Mem.load_contents
R20497 Coq.Init.Logic "A \/ B" type_scope
R20489 Coq.ZArith.BinInt "x <= y" Z_scope
R20474 Coq.ZArith.BinInt "x + y" Z_scope
R20476 Mem.size_mem
R20520 Coq.ZArith.BinInt "x <= y" Z_scope
R20505 Coq.ZArith.BinInt "x + y" Z_scope
R20507 Mem.size_mem
R20461 Values.val
R20454 Coq.ZArith.BinInt.Z
R20454 Coq.ZArith.BinInt.Z
R20420 Mem.contentmap
R20403 Mem.memory_size
R20403 Mem.memory_size
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R20732 Mem.getN_setN_other
R20774 Coq.ZArith.BinInt.Z_of_nat
R21082 Coq.Init.Logic "x = y" type_scope
R21059 Mem.load
R21084 Mem.load
R20980 Coq.Init.Logic "A \/ B" type_scope
R20972 Coq.Init.Logic "x <> y" type_scope
R21018 Coq.Init.Logic "A \/ B" type_scope
R21008 Coq.ZArith.BinInt "x <= y" Z_scope
R20988 Coq.ZArith.BinInt "x + y" Z_scope
R20990 Mem.size_chunk
R21046 Coq.ZArith.BinInt "x <= y" Z_scope
R21026 Coq.ZArith.BinInt "x + y" Z_scope
R21028 Mem.size_chunk
R20954 Coq.Init.Logic "x = y" type_scope
R20928 Mem.store
R20956 Coq.Init.Datatypes.Some
R20920 Values.val
R20913 Coq.ZArith.BinInt.Z
R20913 Coq.ZArith.BinInt.Z
R20894 Values.block
R20894 Values.block
R20872 Mem.mem
R20872 Mem.mem
R20850 AST.memory_chunk
R20850 AST.memory_chunk
R21139 Mem.store_inv
R21139 Mem.store_inv
R21236 Coqlib.zlt
R21244 Mem.nextblock
R21236 Coqlib.zlt
R21244 Mem.nextblock
R21301 Coqlib.zeq
R21301 Coqlib.zeq
R21347 Mem.in_bounds_exten
R21347 Mem.in_bounds_exten
R21375 Mem.load_store_contents_other
R21375 Mem.load_store_contents_other
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R21697 Coq.Init.Logic "x = y" type_scope
R21499 Mem.getN
R21516 Mem.setN
R21554 Mem.Undef
R21575 Mem.Datum8
R21599 Mem.Datum16
R21624 Mem.Datum32
R21649 Mem.Datum64
R21674 Mem.Cont
R21715 Mem.getN_setN_overlap
R21902 Coq.ZArith.BinInt.Z_of_nat
R21930 Coq.ZArith.BinInt.Z_of_nat
R22228 Coq.Init.Logic "x = y" type_scope
R22175 Mem.load_contents
R22194 Mem.store_contents
R22230 Values.Vundef
R22163 Coq.ZArith.BinInt "x > y" Z_scope
R22148 Coq.ZArith.BinInt "x + y" Z_scope
R22150 Mem.size_mem
R22133 Coq.ZArith.BinInt "x > y" Z_scope
R22118 Coq.ZArith.BinInt "x + y" Z_scope
R22120 Mem.size_mem
R22100 Coq.Init.Logic "x <> y" type_scope
R22087 Values.val
R22080 Coq.ZArith.BinInt.Z
R22080 Coq.ZArith.BinInt.Z
R22046 Mem.contentmap
R22029 Mem.memory_size
R22029 Mem.memory_size
R22371 Coq.Init.Logic "x <> y" type_scope
R22620 Coq.Init.Logic "x = y" type_scope
R22424 Mem.getN
R22440 Mem.setN
R22477 Mem.Undef
R22498 Mem.Datum8
R22522 Mem.Datum16
R22547 Mem.Datum32
R22572 Mem.Datum64
R22597 Mem.Cont
R22638 Mem.getN_setN_mismatch
R22983 Coq.Init.Logic "x = y" type_scope
R22932 Mem.load_contents
R22951 Mem.store_contents
R22985 Values.Vundef
R22920 Coq.Init.Logic "x <> y" type_scope
R22908 Values.val
R22901 Coq.ZArith.BinInt.Z
R22873 Mem.contentmap
R22856 Mem.memory_size
R22856 Mem.memory_size
R23219 Coq.Init.Logic "x = y" type_scope
R23203 Mem.low_bound
R23221 Mem.low_bound
R23188 Coq.Init.Logic "x = y" type_scope
R23165 Mem.store
R23190 Coq.Init.Datatypes.Some
R23157 Values.val
R23150 Coq.ZArith.BinInt.Z
R23137 Values.block
R23137 Values.block
R23125 Mem.mem
R23125 Mem.mem
R23103 AST.memory_chunk
R23269 Mem.store_inv
R23269 Mem.store_inv
R23386 Coqlib.zeq
R23386 Coqlib.zeq
R23610 Coq.Init.Logic "x = y" type_scope
R23593 Mem.high_bound
R23612 Mem.high_bound
R23578 Coq.Init.Logic "x = y" type_scope
R23555 Mem.store
R23580 Coq.Init.Datatypes.Some
R23547 Values.val
R23540 Coq.ZArith.BinInt.Z
R23527 Values.block
R23527 Values.block
R23515 Mem.mem
R23515 Mem.mem
R23493 AST.memory_chunk
R23661 Mem.store_inv
R23661 Mem.store_inv
R23779 Coqlib.zeq
R23779 Coqlib.zeq
R23857 Mem.high_bound_store
R23874 Mem.low_bound_store
R23890 Mem.load_store_contents_mismatch
R23919 Mem.load_store_contents_overlap
R23947 Mem.load_store_other
R23964 Mem.store_is_in_bounds
R23985 Mem.load_store_contents_same
R24011 Mem.load_store_same
R24027 Mem.load_store_contents_other
R24202 Coq.Init.Logic "x = y" type_scope
R24180 Coq.ZArith.BinInt "x <= y < z" Z_scope
R24169 Coq.ZArith.BinInt.Z
R24139 Mem.contentmap
R24139 Mem.contentmap
R24128 Coq.ZArith.BinInt.Z
R24128 Coq.ZArith.BinInt.Z
R24285 Mem.contentmap_agree
R24326 Mem.contents
R24312 Mem.contents
R24264 Mem.block_contents
R24264 Mem.block_contents
R24253 Coq.ZArith.BinInt.Z
R24253 Coq.ZArith.BinInt.Z
R24401 Mem.block_contents_agree
R24454 Mem.blocks
R24438 Mem.blocks
R24391 Mem.mem
R24391 Mem.mem
R24380 Coq.ZArith.BinInt.Z
R24380 Coq.ZArith.BinInt.Z
R24365 Values.block
R24536 Mem.block_agree
R24530 Coq.ZArith.BinInt.Z
R24530 Coq.ZArith.BinInt.Z
R24515 Values.block
R24506 Mem.mem
R24698 Mem.block_agree
R24667 Mem.block_agree
R24661 Coq.ZArith.BinInt.Z
R24661 Coq.ZArith.BinInt.Z
R24646 Values.block
R24637 Mem.mem
R24637 Mem.mem
R24925 Mem.block_agree
R24894 Mem.block_agree
R24863 Mem.block_agree
R24857 Coq.ZArith.BinInt.Z
R24857 Coq.ZArith.BinInt.Z
R24842 Values.block
R24833 Mem.mem
R24833 Mem.mem
R24833 Mem.mem
R24999 Mem.contents
R25009 Mem.blocks
R24999 Mem.contents
R25009 Mem.blocks
R25257 Coq.Init.Logic "x = y" type_scope
R25237 Mem.check_cont
R25259 Mem.check_cont
R25226 Coq.ZArith.BinInt "x <= y" Z_scope
R25213 Coq.ZArith.BinInt "x + y" Z_scope
R25215 Coq.ZArith.BinInt.Z_of_nat
R25199 Coq.ZArith.BinInt "x <= y" Z_scope
R25190 Coq.ZArith.BinInt.Z
R25179 Coq.Init.Datatypes.nat
R25134 Mem.contentmap_agree
R25128 Coq.ZArith.BinInt.Z
R25128 Coq.ZArith.BinInt.Z
R25108 Mem.contentmap
R25108 Mem.contentmap
R25335 Coq.ZArith.Znat.inj_S
R25335 Coq.ZArith.Znat.inj_S
R25603 Coq.Init.Logic "x = y" type_scope
R25589 Mem.getN
R25605 Mem.getN
R25579 Coq.ZArith.BinInt "x < y" Z_scope
R25566 Coq.ZArith.BinInt "x + y" Z_scope
R25568 Coq.ZArith.BinInt.Z_of_nat
R25552 Coq.ZArith.BinInt "x <= y" Z_scope
R25543 Coq.ZArith.BinInt.Z
R25532 Coq.Init.Datatypes.nat
R25487 Mem.contentmap_agree
R25481 Coq.ZArith.BinInt.Z
R25481 Coq.ZArith.BinInt.Z
R25461 Mem.contentmap
R25461 Mem.contentmap
R25662 Mem.check_cont_agree
R25700 Coq.ZArith.BinInt "x + y" Z_scope
R25662 Mem.check_cont_agree
R25700 Coq.ZArith.BinInt "x + y" Z_scope
R25715 Mem.check_cont
R25733 Coq.ZArith.BinInt "x + y" Z_scope
R25715 Mem.check_cont
R25733 Coq.ZArith.BinInt "x + y" Z_scope
R25993 Coq.Init.Logic "x = y" type_scope
R25969 Mem.load_contents
R25995 Mem.load_contents
R25958 Coq.ZArith.BinInt "x <= y" Z_scope
R25944 Coq.ZArith.BinInt "x + y" Z_scope
R25946 Mem.size_mem
R25930 Coq.ZArith.BinInt "x <= y" Z_scope
R25893 Mem.contentmap_agree
R25887 Coq.ZArith.BinInt.Z
R25887 Coq.ZArith.BinInt.Z
R25887 Coq.ZArith.BinInt.Z
R25863 Mem.contentmap
R25863 Mem.contentmap
R25842 Mem.memory_size
R26126 Mem.getN_agree
R26166 Coq.ZArith.BinInt.Z_of_nat
R26126 Mem.getN_agree
R26126 Mem.getN_agree
R26126 Mem.getN_agree
R26126 Mem.getN_agree
R26166 Coq.ZArith.BinInt.Z_of_nat
R26166 Coq.ZArith.BinInt.Z_of_nat
R26166 Coq.ZArith.BinInt.Z_of_nat
R26166 Coq.ZArith.BinInt.Z_of_nat
R26306 Mem.contentmap_agree
R26350 Mem.set_cont
R26330 Mem.set_cont
R26272 Mem.contentmap_agree
R26266 Coq.ZArith.BinInt.Z
R26248 Mem.contentmap
R26248 Mem.contentmap
R26235 Coq.Init.Datatypes.nat
R26228 Coq.ZArith.BinInt.Z
R26228 Coq.ZArith.BinInt.Z
R26443 Coqlib.zeq
R26443 Coqlib.zeq
R26489 Mem.update_s
R26489 Mem.update_s
R26489 Mem.update_s
R26489 Mem.update_s
R26531 Mem.update_o
R26531 Mem.update_o
R26531 Mem.update_o
R26531 Mem.update_o
R26531 Mem.update_o
R26531 Mem.update_o
R26723 Mem.contentmap_agree
R26765 Mem.setN
R26747 Mem.setN
R26689 Mem.contentmap_agree
R26677 Mem.content
R26670 Coq.ZArith.BinInt.Z
R26652 Mem.contentmap
R26652 Mem.contentmap
R26639 Coq.Init.Datatypes.nat
R26632 Coq.ZArith.BinInt.Z
R26632 Coq.ZArith.BinInt.Z
R26838 Coqlib.zeq
R26838 Coqlib.zeq
R26884 Mem.update_s
R26884 Mem.update_s
R26884 Mem.update_s
R26884 Mem.update_s
R26926 Mem.update_o
R26926 Mem.update_o
R26926 Mem.update_o
R26926 Mem.update_o
R26953 Mem.set_cont_agree
R26987 Coq.ZArith.BinInt "x + y" Z_scope
R26953 Mem.set_cont_agree
R26987 Coq.ZArith.BinInt "x + y" Z_scope
R27146 Mem.contentmap_agree
R27206 Mem.store_contents
R27177 Mem.store_contents
R27112 Mem.contentmap_agree
R27104 Values.val
R27097 Coq.ZArith.BinInt.Z
R27097 Coq.ZArith.BinInt.Z
R27097 Coq.ZArith.BinInt.Z
R27073 Mem.contentmap
R27073 Mem.contentmap
R27052 Mem.memory_size
R27290 Mem.setN_agree
R27290 Mem.setN_agree
R27290 Mem.setN_agree
R27290 Mem.setN_agree
R27290 Mem.setN_agree
R27480 Mem.contentmap_agree
R27507 Mem.set_cont
R27462 Coq.Init.Logic "A \/ B" type_scope
R27456 Coq.ZArith.BinInt "x <= y" Z_scope
R27443 Coq.ZArith.BinInt "x + y" Z_scope
R27445 Coq.ZArith.BinInt.Z_of_nat
R27468 Coq.ZArith.BinInt "x <= y" Z_scope
R27405 Mem.contentmap_agree
R27399 Coq.ZArith.BinInt.Z
R27381 Mem.contentmap
R27381 Mem.contentmap
R27368 Coq.Init.Datatypes.nat
R27361 Coq.ZArith.BinInt.Z
R27361 Coq.ZArith.BinInt.Z
R27599 Coq.ZArith.Znat.inj_S
R27599 Coq.ZArith.Znat.inj_S
R27635 Coqlib.zeq
R27635 Coqlib.zeq
R27898 Mem.contentmap_agree
R27925 Mem.setN
R27880 Coq.Init.Logic "A \/ B" type_scope
R27875 Coq.ZArith.BinInt "x < y" Z_scope
R27862 Coq.ZArith.BinInt "x + y" Z_scope
R27864 Coq.ZArith.BinInt.Z_of_nat
R27886 Coq.ZArith.BinInt "x <= y" Z_scope
R27824 Mem.contentmap_agree
R27812 Mem.content
R27805 Coq.ZArith.BinInt.Z
R27787 Mem.contentmap
R27787 Mem.contentmap
R27774 Coq.Init.Datatypes.nat
R27767 Coq.ZArith.BinInt.Z
R27767 Coq.ZArith.BinInt.Z
R28013 Coqlib.zeq
R28013 Coqlib.zeq
R28063 Mem.set_cont_outside_agree
R28105 Coq.ZArith.BinInt "x + y" Z_scope
R28063 Mem.set_cont_outside_agree
R28105 Coq.ZArith.BinInt "x + y" Z_scope
R28323 Mem.contentmap_agree
R28350 Mem.store_contents
R28305 Coq.Init.Logic "A \/ B" type_scope
R28299 Coq.ZArith.BinInt "x <= y" Z_scope
R28285 Coq.ZArith.BinInt "x + y" Z_scope
R28287 Mem.size_mem
R28311 Coq.ZArith.BinInt "x <= y" Z_scope
R28247 Mem.contentmap_agree
R28239 Values.val
R28232 Coq.ZArith.BinInt.Z
R28232 Coq.ZArith.BinInt.Z
R28232 Coq.ZArith.BinInt.Z
R28208 Mem.contentmap
R28208 Mem.contentmap
R28187 Mem.memory_size
R28461 Mem.setN_outside_agree
R28493 Coq.ZArith.BinInt.Z_of_nat
R28461 Mem.setN_outside_agree
R28461 Mem.setN_outside_agree
R28461 Mem.setN_outside_agree
R28461 Mem.setN_outside_agree
R28493 Coq.ZArith.BinInt.Z_of_nat
R28493 Coq.ZArith.BinInt.Z_of_nat
R28493 Coq.ZArith.BinInt.Z_of_nat
R28493 Coq.ZArith.BinInt.Z_of_nat
R28788 Coq.Init.Logic "x = y" type_scope
R28770 Coq.Init.Logic "x = y" type_scope
R28750 Mem.load
R28772 Coq.Init.Datatypes.Some
R28735 Coq.Init.Logic "x = y" type_scope
R28715 Mem.load
R28737 Coq.Init.Datatypes.Some
R28704 Coq.ZArith.BinInt "x <= y" Z_scope
R28685 Coq.ZArith.BinInt "x + y" Z_scope
R28687 Mem.size_chunk
R28671 Coq.ZArith.BinInt "x <= y" Z_scope
R28637 Mem.block_agree
R28629 Values.val
R28629 Values.val
R28618 Coq.ZArith.BinInt.Z
R28609 Coq.ZArith.BinInt.Z
R28609 Coq.ZArith.BinInt.Z
R28594 Values.block
R28575 Mem.mem
R28575 Mem.mem
R28553 AST.memory_chunk
R28826 Mem.load_inv
R28826 Mem.load_inv
R28886 Mem.load_inv
R28886 Mem.load_inv
R28980 Mem.load_contentmap_agree
R28980 Mem.load_contentmap_agree
R29291 Mem.block_agree
R29275 Coq.Init.Logic "x = y" type_scope
R29251 Mem.store
R29277 Coq.Init.Datatypes.Some
R29235 Coq.Init.Logic "x = y" type_scope
R29211 Mem.store
R29237 Coq.Init.Datatypes.Some
R29180 Mem.block_agree
R29172 Values.val
R29165 Coq.ZArith.BinInt.Z
R29152 Values.block
R29135 Coq.ZArith.BinInt.Z
R29135 Coq.ZArith.BinInt.Z
R29120 Values.block
R29102 Mem.mem
R29102 Mem.mem
R29102 Mem.mem
R29102 Mem.mem
R29072 AST.memory_chunk
R29351 Mem.store_inv
R29351 Mem.store_inv
R29424 Mem.store_inv
R29424 Mem.store_inv
R29543 Coqlib.zeq
R29543 Coqlib.zeq
R29586 Mem.store_contentmap_agree
R29586 Mem.store_contentmap_agree
R29919 Mem.block_agree
R29903 Coq.Init.Logic "x = y" type_scope
R29879 Mem.store
R29905 Coq.Init.Datatypes.Some
R29829 Coq.Init.Logic "A \/ B" type_scope
R29823 Coq.Init.Logic "x <> y" type_scope
R29861 Coq.Init.Logic "A \/ B" type_scope
R29855 Coq.ZArith.BinInt "x <= y" Z_scope
R29836 Coq.ZArith.BinInt "x + y" Z_scope
R29838 Mem.size_chunk
R29867 Coq.ZArith.BinInt "x <= y" Z_scope
R29790 Mem.block_agree
R29782 Values.val
R29775 Coq.ZArith.BinInt.Z
R29762 Values.block
R29745 Coq.ZArith.BinInt.Z
R29745 Coq.ZArith.BinInt.Z
R29730 Values.block
R29712 Mem.mem
R29712 Mem.mem
R29712 Mem.mem
R29686 AST.memory_chunk
R29978 Mem.store_inv
R29978 Mem.store_inv
R30083 Coqlib.zeq
R30083 Coqlib.zeq
R30127 Mem.store_contentmap_outside_agree
R30127 Mem.store_contentmap_outside_agree
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R30334 Coq.Init.Logic "A /\ B" type_scope
R30322 Coq.ZArith.BinInt "x <= y" Z_scope
R30317 Mem.low
R30329 Mem.low
R30360 Coq.Init.Logic "A /\ B" type_scope
R30347 Coq.ZArith.BinInt "x <= y" Z_scope
R30341 Mem.high
R30354 Mem.high
R30365 Mem.contentmap_agree
R30419 Mem.contents
R30405 Mem.contents
R30395 Mem.high
R30386 Mem.low
R30292 Mem.block_contents
R30292 Mem.block_contents
R30500 Coq.Init.Logic "A /\ B" type_scope
R30483 Coq.Init.Logic "x = y" type_scope
R30472 Mem.nextblock
R30489 Mem.nextblock
R30550 Mem.block_contents_extends
R30594 Mem.blocks
R30578 Mem.blocks
R30528 Coq.ZArith.BinInt "x < y" Z_scope
R30534 Mem.nextblock
R30516 Values.block
R30458 Mem.mem
R30458 Mem.mem
R30648 Mem.extends
R30642 Mem.mem
R31002 Coq.Init.Logic "A /\ B" type_scope
R30997 Coq.Init.Logic "x = y" type_scope
R31005 Mem.extends
R30977 Coq.Init.Logic "x = y" type_scope
R30960 Mem.alloc
R30979 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R30943 Coq.Init.Logic "x = y" type_scope
R30926 Mem.alloc
R30945 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R30914 Coq.ZArith.BinInt "x <= y" Z_scope
R30900 Coq.ZArith.BinInt "x <= y" Z_scope
R30877 Mem.extends
R30867 Values.block
R30867 Values.block
R30856 Coq.ZArith.BinInt.Z
R30856 Coq.ZArith.BinInt.Z
R30856 Coq.ZArith.BinInt.Z
R30856 Coq.ZArith.BinInt.Z
R30833 Mem.mem
R30833 Mem.mem
R30833 Mem.mem
R30833 Mem.mem
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R31195 Coqlib.zeq
R31202 Mem.nextblock
R31195 Coqlib.zeq
R31202 Mem.nextblock
R31251 Mem.update_s
R31251 Mem.update_s
R31251 Mem.update_s
R31251 Mem.update_s
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R31332 Mem.update_o
R31332 Mem.update_o
R31332 Mem.update_o
R31332 Mem.update_o
R31332 Mem.update_o
R31332 Mem.update_o
R31458 Mem.extends
R31479 Mem.free
R31467 Mem.free
R31439 Mem.extends
R31429 Values.block
R31420 Mem.mem
R31420 Mem.mem
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R31582 Coqlib.zeq
R31582 Coqlib.zeq
R31628 Mem.update_s
R31628 Mem.update_s
R31628 Mem.update_s
R31628 Mem.update_s
R31732 Mem.update_o
R31732 Mem.update_o
R31732 Mem.update_o
R31732 Mem.update_o
R31732 Mem.update_o
R31732 Mem.update_o
R31956 Coq.Init.Logic "x = y" type_scope
R31936 Mem.load
R31958 Coq.Init.Datatypes.Some
R31922 Coq.Init.Logic "x = y" type_scope
R31902 Mem.load
R31924 Coq.Init.Datatypes.Some
R31883 Mem.extends
R31875 Values.val
R31868 Coq.ZArith.BinInt.Z
R31855 Values.block
R31846 Mem.mem
R31846 Mem.mem
R31824 AST.memory_chunk
R32023 Mem.load_inv
R32023 Mem.load_inv
R32110 Coqlib.zlt_true
R32110 Coqlib.zlt_true
R32176 Mem.in_bounds_holds
R32176 Mem.in_bounds_holds
R32272 Mem.low
R32277 Mem.blocks
R32303 Mem.high
R32309 Mem.blocks
R32234 Mem.load_contentmap_agree
R32272 Mem.low
R32277 Mem.blocks
R32303 Mem.high
R32309 Mem.blocks
R32234 Mem.load_contentmap_agree
R32522 Coq.Init.Logic "'exists' x , p" type_scope
R32568 Coq.Init.Logic "A /\ B" type_scope
R32557 Coq.Init.Logic "x = y" type_scope
R32534 Mem.store
R32559 Coq.Init.Datatypes.Some
R32571 Mem.extends
R32506 Coq.Init.Logic "x = y" type_scope
R32483 Mem.store
R32508 Coq.Init.Datatypes.Some
R32464 Mem.extends
R32456 Values.val
R32449 Coq.ZArith.BinInt.Z
R32436 Values.block
R32427 Mem.mem
R32427 Mem.mem
R32427 Mem.mem
R32401 AST.memory_chunk
R32653 Mem.store_inv
R32653 Mem.store_inv
R32798 Coqlib.zlt_true
R32798 Coqlib.zlt_true
R32822 Mem.in_bounds
R32840 Mem.blocks
R32822 Mem.in_bounds
R32840 Mem.blocks
R32872 Mem.unchecked_store
R32872 Mem.unchecked_store
R33108 Coqlib.zeq
R33108 Coqlib.zeq
R33182 Mem.store_contentmap_agree
R33182 Mem.store_contentmap_agree
R33512 Mem.extends
R33496 Coq.Init.Logic "x = y" type_scope
R33473 Mem.store
R33498 Coq.Init.Datatypes.Some
R33442 Coq.Init.Logic "A \/ B" type_scope
R33424 Coq.ZArith.BinInt "x <= y" Z_scope
R33405 Coq.ZArith.BinInt "x + y" Z_scope
R33407 Mem.size_chunk
R33427 Mem.low_bound
R33461 Coq.ZArith.BinInt "x <= y" Z_scope
R33445 Mem.high_bound
R33382 Mem.extends
R33374 Values.val
R33367 Coq.ZArith.BinInt.Z
R33354 Values.block
R33345 Mem.mem
R33345 Mem.mem
R33345 Mem.mem
R33319 AST.memory_chunk
R33600 Mem.store_inv
R33600 Mem.store_inv
R33740 Coqlib.zeq
R33740 Coqlib.zeq
R33860 Mem.store_contentmap_outside_agree
R33860 Mem.store_contentmap_outside_agree
R34146 Coq.Init.Logic "x = y" type_scope
R34092 Mem.block_contents_agree
R34126 Mem.high
R34117 Mem.low
R34075 Coq.Init.Logic "x = y" type_scope
R34069 Mem.high
R34081 Mem.high
R34049 Coq.Init.Logic "x = y" type_scope
R34044 Mem.low
R34055 Mem.low
R34021 Mem.block_contents
R34021 Mem.block_contents
R34310 Coq.Init.Logic "x = y" type_scope
R34310 Coq.Init.Logic "x = y" type_scope
R34347 Coqlib.extensionality
R34347 Coqlib.extensionality
R34380 Coqlib.zlt
R34380 Coqlib.zlt
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R34459 Coqlib.zlt
R34459 Coqlib.zlt
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R34576 Coq.Init.Logic "x = y" type_scope
R34576 Coq.Init.Logic "x = y" type_scope
R34594 Coqlib.proof_irrelevance
R34594 Coqlib.proof_irrelevance
R34769 Coq.Init.Logic "x = y" type_scope
R34744 Coq.Init.Logic "x = y" type_scope
R34734 Mem.blocks
R34750 Mem.blocks
R34697 Coq.Init.Logic "x = y" type_scope
R34686 Mem.nextblock
R34703 Mem.nextblock
R34905 Coq.Init.Logic "x = y" type_scope
R34905 Coq.Init.Logic "x = y" type_scope
R34920 Coqlib.extensionality
R34920 Coqlib.extensionality
R34967 Coq.Init.Logic "x = y" type_scope
R34967 Coq.Init.Logic "x = y" type_scope
R34986 Coqlib.proof_irrelevance
R34986 Coqlib.proof_irrelevance
R35102 Coq.Init.Datatypes.option
R35116 Coq.Init.Datatypes "x * y" type_scope
R35110 Values.block
R35118 Coq.ZArith.BinInt.Z
R35093 Values.block
R35141 Mem.meminj
R35179 Values.val
R35172 Values.val
R35251 Values.Vint
R35242 Values.Vint
R35320 Values.Vfloat
R35309 Values.Vfloat
R35486 Values.Vptr
R35471 Values.Vptr
R35422 Coq.Init.Logic "x = y" type_scope
R35424 Integers.add
R35438 Integers.repr
R35393 Coq.Init.Logic "x = y" type_scope
R35395 Coq.Init.Datatypes.Some
R35400 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R35549 Values.Vundef
R35573 Mem.val_inject_int
R35588 Mem.val_inject_float
R35605 Mem.val_inject_ptr
R35621 Mem.val_inject_undef
R35679 Coq.Lists.List.list
R35684 Values.val
R35667 Coq.Lists.List.list
R35672 Values.val
R35745 Coq.Lists.List.nil
R35741 Coq.Lists.List.nil
R35876 Coq.Lists.List "x :: y" list_scope
R35867 Coq.Lists.List "x :: y" list_scope
R35799 Mem.val_inject
R35940 Values.val
R35933 Values.val
R35918 Mem.memory_size
R36013 Mem.val_inject
R36208 Values.Vint
R36198 Values.Vint
R36191 Mem.Size8
R36140 Coq.Init.Logic "x = y" type_scope
R36119 Integers.cast8unsigned
R36142 Integers.cast8unsigned
R36362 Values.Vint
R36352 Values.Vint
R36344 Mem.Size16
R36292 Coq.Init.Logic "x = y" type_scope
R36270 Integers.cast16unsigned
R36294 Integers.cast16unsigned
R36520 Values.Vfloat
R36508 Values.Vfloat
R36500 Mem.Size32
R36447 Coq.Init.Logic "x = y" type_scope
R36424 Floats.singleoffloat
R36449 Floats.singleoffloat
R36546 Mem.val_content_inject_base
R36609 Mem.content
R36598 Mem.content
R36692 Mem.Undef
R36821 Mem.Datum8
R36809 Mem.Datum8
R36753 Mem.val_content_inject
R36772 Mem.Size8
R36956 Mem.Datum16
R36943 Mem.Datum16
R36886 Mem.val_content_inject
R36905 Mem.Size16
R37092 Mem.Datum32
R37079 Mem.Datum32
R37022 Mem.val_content_inject
R37041 Mem.Size32
R37228 Mem.Datum64
R37215 Mem.Datum64
R37158 Mem.val_content_inject
R37177 Mem.Size64
R37291 Mem.Cont
R37286 Mem.Cont
R37311 Mem.content_inject_undef
R37332 Mem.content_inject_datum8
R37355 Mem.content_inject_datum16
R37378 Mem.content_inject_datum32
R37401 Mem.content_inject_datum64
R37424 Mem.content_inject_cont
R37554 Mem.content_inject
R37583 Coq.ZArith.BinInt "x + y" Z_scope
R37537 Coq.ZArith.BinInt "x <= y < z" Z_scope
R37509 Coq.ZArith.BinInt.Z
R37509 Coq.ZArith.BinInt.Z
R37509 Coq.ZArith.BinInt.Z
R37483 Mem.contentmap
R37483 Mem.contentmap
R37632 Mem.block_contents
R37656 Coq.ZArith.BinInt.Z
R37729 Coq.ZArith.BinInt "x <= y <= z" Z_scope
R37714 Integers.min_signed
R37741 Integers.max_signed
R37783 Coq.Init.Logic "A \/ B" type_scope
R37779 Coq.Init.Logic "x = y" type_scope
R37830 Coq.Init.Logic "A /\ B" type_scope
R37818 Coq.ZArith.BinInt "x <= y" Z_scope
R37803 Integers.min_signed
R37825 Mem.low
R37843 Coq.ZArith.BinInt "x <= y" Z_scope
R37837 Mem.high
R37846 Integers.max_signed
R37950 Coq.ZArith.BinInt "x <= y < z" Z_scope
R37946 Mem.low
R37953 Coq.ZArith.BinInt "x + y" Z_scope
R37953 Coq.ZArith.BinInt "x + y" Z_scope
R37966 Mem.high
R37897 Coq.ZArith.BinInt "x <= y < z" Z_scope
R37893 Mem.low
R37908 Mem.high
R37999 Mem.contentmap_inject
R38058 Mem.high
R38049 Mem.low
R38035 Mem.contents
R38021 Mem.contents
R38102 Mem.mem
R38197 Coq.Init.Logic "x = y" type_scope
R38199 Coq.Init.Datatypes.None
R38172 Coq.ZArith.BinInt "x >= y" Z_scope
R38179 Mem.nextblock
R38308 Coq.Init.Logic "A /\ B" type_scope
R38291 Coq.ZArith.BinInt "x < y" Z_scope
R38297 Mem.nextblock
R38317 Mem.block_contents_inject
R38389 Mem.blocks
R38344 Mem.blocks
R38261 Coq.Init.Logic "x = y" type_scope
R38263 Coq.Init.Datatypes.Some
R38267 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R38610 Coq.Init.Logic "A \/ B" type_scope
R38596 Coq.Init.Logic "x <> y" type_scope
R38786 Coq.Init.Logic "x <> y" type_scope
R38778 Coq.ZArith.BinInt "x + y" Z_scope
R38791 Coq.ZArith.BinInt "x + y" Z_scope
R38718 Coq.ZArith.BinInt "x <= y < z" Z_scope
R38702 Mem.low_bound
R38726 Mem.high_bound
R38644 Coq.ZArith.BinInt "x <= y < z" Z_scope
R38628 Mem.low_bound
R38652 Mem.high_bound
R38562 Coq.Init.Logic "x = y" type_scope
R38564 Coq.Init.Datatypes.Some
R38569 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R38527 Coq.Init.Logic "x = y" type_scope
R38529 Coq.Init.Datatypes.Some
R38534 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R38507 Coq.Init.Logic "x <> y" type_scope
R38899 Coq.ZArith.BinInt "x > y" Z_scope
R38887 Mem.size_mem
R38997 Coq.ZArith.BinInt "x > y" Z_scope
R38980 Mem.size_chunk
R39042 Mem.size_mem_pos
R39042 Mem.size_mem_pos
R39341 Coq.Init.Logic "x = y" type_scope
R39325 Integers.signed
R39359 Coq.ZArith.BinInt "x + y" Z_scope
R39343 Integers.signed
R39292 Coq.Init.Logic "x = y" type_scope
R39294 Integers.add
R39308 Integers.repr
R39267 Coq.Init.Logic "x = y" type_scope
R39269 Coq.Init.Datatypes.Some
R39274 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R39230 Coq.ZArith.BinInt "x <= y" Z_scope
R39211 Coq.ZArith.BinInt "x + y" Z_scope
R39195 Integers.signed
R39213 Mem.size_chunk
R39251 Mem.high
R39238 Mem.blocks
R39171 Coq.ZArith.BinInt "x <= y" Z_scope
R39166 Mem.low
R39153 Mem.blocks
R39174 Integers.signed
R39126 Mem.mem_inject
R39396 Mem.size_chunk_pos
R39396 Mem.size_chunk_pos
R39440 Mem.mi_mappedblocks
R39440 Mem.mi_mappedblocks
R39567 Coq.ZArith.BinInt.Zplus_0_r
R39567 Coq.ZArith.BinInt.Zplus_0_r
R39587 Integers.add_zero
R39587 Integers.add_zero
R39666 Integers.add_signed
R39666 Integers.add_signed
R39697 Integers.signed_repr
R39697 Integers.signed_repr
R39697 Integers.signed_repr
R39697 Integers.signed_repr
R39697 Integers.signed_repr
R39697 Integers.signed_repr
R39697 Integers.signed_repr
R39697 Integers.signed_repr
R39758 Coq.ZArith.BinInt "x <= y < z" Z_scope
R39739 Mem.low
R39744 Mem.blocks
R39761 Integers.signed
R39761 Integers.signed
R39779 Mem.high
R39785 Mem.blocks
R39758 Coq.ZArith.BinInt "x <= y < z" Z_scope
R39739 Mem.low
R39744 Mem.blocks
R39761 Integers.signed
R39761 Integers.signed
R39779 Mem.high
R39785 Mem.blocks
R39838 Integers.signed
R39838 Integers.signed
R40058 Coq.ZArith.BinInt "x <= y <= z" Z_scope
R40043 Integers.min_signed
R40076 Coq.ZArith.BinInt "x + y" Z_scope
R40061 Integers.signed
R40078 Integers.signed
R40090 Integers.repr
R40076 Coq.ZArith.BinInt "x + y" Z_scope
R40061 Integers.signed
R40078 Integers.signed
R40090 Integers.repr
R40105 Integers.max_signed
R40024 Coq.Init.Logic "x = y" type_scope
R40026 Coq.Init.Datatypes.Some
R40030 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40008 Coq.Init.Logic "x = y" type_scope
R39972 Mem.valid_pointer
R39992 Integers.signed
R40010 Coq.Init.Datatypes.true
R39950 Mem.mem_inject
R40178 Coqlib.zlt
R40185 Mem.nextblock
R40178 Coqlib.zlt
R40185 Mem.nextblock
R40231 Coqlib.zle
R40256 Integers.signed
R40236 Mem.low
R40241 Mem.blocks
R40231 Coqlib.zle
R40256 Integers.signed
R40236 Mem.low
R40241 Mem.blocks
R40304 Coqlib.zlt
R40326 Mem.high
R40332 Mem.blocks
R40309 Integers.signed
R40304 Coqlib.zlt
R40326 Mem.high
R40332 Mem.blocks
R40309 Integers.signed
R40502 Integers.signed_repr
R40502 Integers.signed_repr
R40549 Coq.ZArith.BinInt.Zplus_0_r
R40549 Coq.ZArith.BinInt.Zplus_0_r
R40567 Integers.signed_range
R40567 Integers.signed_range
R40630 Coq.Init.Logic.conj
R40630 Coq.Init.Logic.conj
R40661 Integers.signed_repr
R40661 Integers.signed_repr
R40929 Coq.Init.Logic "x = y" type_scope
R40901 Mem.check_cont
R40917 Coq.ZArith.BinInt "x + y" Z_scope
R40931 Coq.Init.Datatypes.true
R40889 Coq.Init.Logic "x = y" type_scope
R40871 Mem.check_cont
R40891 Coq.Init.Datatypes.true
R40860 Coq.ZArith.BinInt "x <= y" Z_scope
R40847 Coq.ZArith.BinInt "x + y" Z_scope
R40849 Coq.ZArith.BinInt.Z_of_nat
R40837 Coq.ZArith.BinInt "x <= y" Z_scope
R40779 Mem.contentmap_inject
R40997 Mem.check_cont
R40997 Mem.check_cont
R41017 Coq.ZArith.Znat.inj_S
R41017 Coq.ZArith.Znat.inj_S
R41053 Coq.ZArith.BinInt "x <= y < z" Z_scope
R41053 Coq.ZArith.BinInt "x <= y < z" Z_scope
R41165 Coq.ZArith.BinInt "x + y" Z_scope
R41157 Coq.ZArith.BinInt "x + y" Z_scope
R41182 Coq.ZArith.BinInt "x + y" Z_scope
R41179 Coq.ZArith.BinInt "x + y" Z_scope
R41165 Coq.ZArith.BinInt "x + y" Z_scope
R41157 Coq.ZArith.BinInt "x + y" Z_scope
R41182 Coq.ZArith.BinInt "x + y" Z_scope
R41179 Coq.ZArith.BinInt "x + y" Z_scope
R41257 Mem.check_cont_inject
R41417 Mem.content_inject
R41447 Mem.getN
R41457 Coq.ZArith.BinInt "x + y" Z_scope
R41433 Mem.getN
R41407 Coq.ZArith.BinInt "x < y" Z_scope
R41394 Coq.ZArith.BinInt "x + y" Z_scope
R41396 Coq.ZArith.BinInt.Z_of_nat
R41384 Coq.ZArith.BinInt "x <= y" Z_scope
R41326 Mem.contentmap_inject
R41514 Coq.ZArith.BinInt "x <= y < z" Z_scope
R41514 Coq.ZArith.BinInt "x <= y < z" Z_scope
R41558 Mem.check_cont
R41574 Coq.ZArith.BinInt "x + y" Z_scope
R41558 Mem.check_cont
R41574 Coq.ZArith.BinInt "x + y" Z_scope
R41602 Mem.check_cont
R41626 Coq.ZArith.BinInt "x + y" Z_scope
R41618 Coq.ZArith.BinInt "x + y" Z_scope
R41640 Coq.Init.Datatypes.true
R41602 Mem.check_cont
R41626 Coq.ZArith.BinInt "x + y" Z_scope
R41618 Coq.ZArith.BinInt "x + y" Z_scope
R41640 Coq.Init.Datatypes.true
R41701 Coq.ZArith.BinInt "x + y" Z_scope
R41693 Coq.ZArith.BinInt "x + y" Z_scope
R41718 Coq.ZArith.BinInt "x + y" Z_scope
R41715 Coq.ZArith.BinInt "x + y" Z_scope
R41701 Coq.ZArith.BinInt "x + y" Z_scope
R41693 Coq.ZArith.BinInt "x + y" Z_scope
R41718 Coq.ZArith.BinInt "x + y" Z_scope
R41715 Coq.ZArith.BinInt "x + y" Z_scope
R41739 Mem.check_cont_inject
R41739 Mem.check_cont_inject
R41823 Mem.getN_inject
R41862 Coq.Init.Datatypes.nat
R41883 Coq.ZArith.BinInt.Z0
R41889 Coq.Init.Datatypes.O
R41893 Coq.ZArith.BinInt.Zpos
R41905 Coq.NArith.BinPos.nat_of_P
R41919 Coq.ZArith.BinInt.Zneg
R41928 Coq.Init.Datatypes.O
R41858 Coq.ZArith.BinInt.Z
R42079 Mem.val_content_inject
R42126 Mem.load_contents
R42149 Coq.ZArith.BinInt "x + y" Z_scope
R42102 Mem.load_contents
R42068 Coq.ZArith.BinInt "x <= y" Z_scope
R42054 Coq.ZArith.BinInt "x + y" Z_scope
R42056 Mem.size_mem
R42044 Coq.ZArith.BinInt "x <= y" Z_scope
R42000 Mem.contentmap_inject
R42183 Mem.content_inject
R42237 Mem.getN
R42269 Coq.ZArith.BinInt "x + y" Z_scope
R42262 Coq.Init.Peano "x - y" nat_scope
R42243 Mem.ztonat
R42250 Mem.size_mem
R42199 Mem.getN
R42225 Coq.Init.Peano "x - y" nat_scope
R42205 Mem.ztonat
R42213 Mem.size_mem
R42183 Mem.content_inject
R42237 Mem.getN
R42269 Coq.ZArith.BinInt "x + y" Z_scope
R42262 Coq.Init.Peano "x - y" nat_scope
R42243 Mem.ztonat
R42250 Mem.size_mem
R42199 Mem.getN
R42225 Coq.Init.Peano "x - y" nat_scope
R42205 Mem.ztonat
R42213 Mem.size_mem
R42308 Coq.ZArith.BinInt "x <= y < z" Z_scope
R42349 Mem.getN_inject
R42308 Coq.ZArith.BinInt "x <= y < z" Z_scope
R42308 Coq.ZArith.BinInt "x <= y < z" Z_scope
R42308 Coq.ZArith.BinInt "x <= y < z" Z_scope
R42308 Coq.ZArith.BinInt "x <= y < z" Z_scope
R42349 Mem.getN_inject
R42349 Mem.getN_inject
R42349 Mem.getN_inject
R42349 Mem.getN_inject
R42470 Mem.load_contents_inject
R42591 Mem.val_inject
R42630 Values.load_result
R42603 Values.load_result
R42543 Mem.val_content_inject
R42563 Mem.mem_chunk
R42774 Integers.cast8signed
R42800 Integers.cast8signed
R42774 Integers.cast8signed
R42800 Integers.cast8signed
R42841 Integers.cast8_signed_equal_if_unsigned_equal
R42841 Integers.cast8_signed_equal_if_unsigned_equal
R42923 Integers.cast16signed
R42950 Integers.cast16signed
R42923 Integers.cast16signed
R42950 Integers.cast16signed
R42992 Integers.cast16_signed_equal_if_unsigned_equal
R42992 Integers.cast16_signed_equal_if_unsigned_equal
R43100 Mem.val_inject_ptr
R43100 Mem.val_inject_ptr
R43308 Coq.Init.Logic "A /\ B" type_scope
R43295 Coq.ZArith.BinInt "x <= y" Z_scope
R43290 Mem.low
R43300 Coq.ZArith.BinInt "x + y" Z_scope
R43342 Coq.ZArith.BinInt "x <= y" Z_scope
R43321 Coq.ZArith.BinInt "x + y" Z_scope
R43314 Coq.ZArith.BinInt "x + y" Z_scope
R43325 Mem.size_chunk
R43349 Mem.high
R43244 Coq.Init.Logic "A /\ B" type_scope
R43239 Coq.ZArith.BinInt "x <= y" Z_scope
R43234 Mem.low
R43268 Coq.ZArith.BinInt "x <= y" Z_scope
R43249 Coq.ZArith.BinInt "x + y" Z_scope
R43251 Mem.size_chunk
R43275 Mem.high
R43191 Mem.block_contents_inject
R43403 Mem.size_chunk_pos
R43403 Mem.size_chunk_pos
R43450 Coq.ZArith.BinInt "x <= y < z" Z_scope
R43443 Mem.low
R43474 Coq.ZArith.BinInt "x - y" Z_scope
R43455 Coq.ZArith.BinInt "x + y" Z_scope
R43457 Mem.size_chunk
R43474 Coq.ZArith.BinInt "x - y" Z_scope
R43455 Coq.ZArith.BinInt "x + y" Z_scope
R43457 Mem.size_chunk
R43480 Mem.high
R43450 Coq.ZArith.BinInt "x <= y < z" Z_scope
R43443 Mem.low
R43474 Coq.ZArith.BinInt "x - y" Z_scope
R43455 Coq.ZArith.BinInt "x + y" Z_scope
R43457 Mem.size_chunk
R43474 Coq.ZArith.BinInt "x - y" Z_scope
R43455 Coq.ZArith.BinInt "x + y" Z_scope
R43457 Mem.size_chunk
R43480 Mem.high
R43557 Coq.ZArith.BinInt "x <= y < z" Z_scope
R43550 Mem.low
R43564 Mem.high
R43557 Coq.ZArith.BinInt "x <= y < z" Z_scope
R43550 Mem.low
R43564 Mem.high
R43775 Mem.val_content_inject
R43838 Mem.load_contents
R43872 Coq.ZArith.BinInt "x + y" Z_scope
R43859 Mem.contents
R43798 Mem.load_contents
R43819 Mem.contents
R43757 Coq.ZArith.BinInt "x <= y" Z_scope
R43743 Coq.ZArith.BinInt "x + y" Z_scope
R43745 Mem.size_mem
R43764 Mem.high
R43733 Coq.ZArith.BinInt "x <= y" Z_scope
R43728 Mem.low
R43687 Mem.block_contents_inject
R43948 Mem.low
R43957 Mem.high
R43918 Mem.load_contents_inject
R43948 Mem.low
R43957 Mem.high
R43918 Mem.load_contents_inject
R44132 Coq.Init.Logic "'exists' x , p" type_scope
R44184 Coq.Init.Logic "A /\ B" type_scope
R44174 Coq.Init.Logic "x = y" type_scope
R44143 Mem.load
R44165 Coq.ZArith.BinInt "x + y" Z_scope
R44176 Coq.Init.Datatypes.Some
R44187 Mem.val_inject
R44108 Coq.Init.Logic "x = y" type_scope
R44110 Coq.Init.Datatypes.Some
R44115 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44088 Coq.Init.Logic "x = y" type_scope
R44067 Mem.load
R44090 Coq.Init.Datatypes.Some
R44045 Mem.mem_inject
R44236 Mem.load_inv
R44236 Mem.load_inv
R44379 Values.load_result
R44402 Mem.load_contents
R44477 Coq.ZArith.BinInt "x + y" Z_scope
R44463 Mem.contents
R44450 Mem.blocks
R44417 Mem.mem_chunk
R44379 Values.load_result
R44402 Mem.load_contents
R44477 Coq.ZArith.BinInt "x + y" Z_scope
R44463 Mem.contents
R44450 Mem.blocks
R44417 Mem.mem_chunk
R44528 Mem.size_chunk_pos
R44528 Mem.size_chunk_pos
R44569 Coqlib.zlt_true
R44569 Coqlib.zlt_true
R44587 Mem.in_bounds_holds
R44587 Mem.in_bounds_holds
R44639 Coq.ZArith.BinInt "x <= y < z" Z_scope
R44620 Mem.low
R44625 Mem.blocks
R44648 Mem.high
R44654 Mem.blocks
R44639 Coq.ZArith.BinInt "x <= y < z" Z_scope
R44620 Mem.low
R44625 Mem.blocks
R44648 Mem.high
R44654 Mem.blocks
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R44751 Coq.ZArith.BinInt "x <= y < z" Z_scope
R44732 Mem.low
R44737 Mem.blocks
R44777 Coq.ZArith.BinInt "x - y" Z_scope
R44758 Coq.ZArith.BinInt "x + y" Z_scope
R44760 Mem.size_chunk
R44777 Coq.ZArith.BinInt "x - y" Z_scope
R44758 Coq.ZArith.BinInt "x + y" Z_scope
R44760 Mem.size_chunk
R44783 Mem.high
R44788 Mem.blocks
R44751 Coq.ZArith.BinInt "x <= y < z" Z_scope
R44732 Mem.low
R44737 Mem.blocks
R44777 Coq.ZArith.BinInt "x - y" Z_scope
R44758 Coq.ZArith.BinInt "x + y" Z_scope
R44760 Mem.size_chunk
R44777 Coq.ZArith.BinInt "x - y" Z_scope
R44758 Coq.ZArith.BinInt "x + y" Z_scope
R44760 Mem.size_chunk
R44783 Mem.high
R44788 Mem.blocks
R44892 Mem.load_result_inject
R44892 Mem.load_result_inject
R44922 Mem.load_contents_inject
R44922 Mem.load_contents_inject
R45087 Coq.Init.Logic "'exists' x , p" type_scope
R45126 Coq.Init.Logic "A /\ B" type_scope
R45116 Coq.Init.Logic "x = y" type_scope
R45098 Mem.loadv
R45118 Coq.Init.Datatypes.Some
R45129 Mem.val_inject
R45065 Mem.val_inject
R45050 Coq.Init.Logic "x = y" type_scope
R45032 Mem.loadv
R45052 Coq.Init.Datatypes.Some
R45010 Mem.mem_inject
R45237 Integers.signed
R45276 Coq.ZArith.BinInt "x + y" Z_scope
R45260 Integers.signed
R45237 Integers.signed
R45276 Coq.ZArith.BinInt "x + y" Z_scope
R45260 Integers.signed
R45290 Mem.load_inject
R45290 Mem.load_inject
R45351 Mem.load_inv
R45351 Mem.load_inv
R45405 Mem.address_inject
R45405 Mem.address_inject
R45629 Mem.contentmap_inject
R45666 Mem.set_cont
R45680 Coq.ZArith.BinInt "x + y" Z_scope
R45648 Mem.set_cont
R45618 Coq.ZArith.BinInt "x <= y" Z_scope
R45605 Coq.ZArith.BinInt "x + y" Z_scope
R45607 Coq.ZArith.BinInt.Z_of_nat
R45595 Coq.ZArith.BinInt "x <= y" Z_scope
R45537 Mem.contentmap_inject
R45830 Coqlib.zeq
R45830 Coqlib.zeq
R45866 Coqlib.zeq_true
R45866 Coqlib.zeq_true
R45897 Coqlib.zeq_false
R45897 Coqlib.zeq_false
R45927 Coq.ZArith.BinInt "x + y" Z_scope
R45919 Coq.ZArith.BinInt "x + y" Z_scope
R45944 Coq.ZArith.BinInt "x + y" Z_scope
R45941 Coq.ZArith.BinInt "x + y" Z_scope
R45927 Coq.ZArith.BinInt "x + y" Z_scope
R45919 Coq.ZArith.BinInt "x + y" Z_scope
R45944 Coq.ZArith.BinInt "x + y" Z_scope
R45941 Coq.ZArith.BinInt "x + y" Z_scope
R45982 Coq.ZArith.Znat.inj_S
R45982 Coq.ZArith.Znat.inj_S
R46196 Mem.contentmap_inject
R46232 Mem.setN
R46242 Coq.ZArith.BinInt "x + y" Z_scope
R46215 Mem.setN
R46186 Coq.ZArith.BinInt "x < y" Z_scope
R46173 Coq.ZArith.BinInt "x + y" Z_scope
R46175 Coq.ZArith.BinInt.Z_of_nat
R46163 Coq.ZArith.BinInt "x <= y" Z_scope
R46134 Mem.content_inject
R46093 Mem.contentmap_inject
R46360 Coqlib.zeq
R46360 Coqlib.zeq
R46397 Coqlib.zeq_true
R46397 Coqlib.zeq_true
R46429 Coqlib.zeq_false
R46429 Coqlib.zeq_false
R46462 Coq.ZArith.BinInt "x + y" Z_scope
R46454 Coq.ZArith.BinInt "x + y" Z_scope
R46479 Coq.ZArith.BinInt "x + y" Z_scope
R46476 Coq.ZArith.BinInt "x + y" Z_scope
R46462 Coq.ZArith.BinInt "x + y" Z_scope
R46454 Coq.ZArith.BinInt "x + y" Z_scope
R46479 Coq.ZArith.BinInt "x + y" Z_scope
R46476 Coq.ZArith.BinInt "x + y" Z_scope
R46499 Mem.set_cont_inject
R46499 Mem.set_cont_inject
R46772 Mem.contentmap_inject
R46840 Mem.store_contents
R46864 Coq.ZArith.BinInt "x + y" Z_scope
R46791 Mem.store_contents
R46761 Coq.ZArith.BinInt "x <= y" Z_scope
R46747 Coq.ZArith.BinInt "x + y" Z_scope
R46749 Mem.size_mem
R46737 Coq.ZArith.BinInt "x <= y" Z_scope
R46701 Mem.val_content_inject
R46660 Mem.contentmap_inject
R46960 Mem.setN_inject
R46960 Mem.setN_inject
R46960 Mem.setN_inject
R46960 Mem.setN_inject
R46960 Mem.setN_inject
R47118 Coq.Init.Logic "x = y" type_scope
R47100 Mem.set_cont
R47088 Coq.Init.Logic "x <> y" type_scope
R47061 Coq.ZArith.BinInt "x <= y < z" Z_scope
R47070 Coq.ZArith.BinInt "x + y" Z_scope
R47072 Coq.ZArith.BinInt.Z_of_nat
R47180 Coq.ZArith.Znat.inj_S
R47180 Coq.ZArith.Znat.inj_S
R47200 Mem.update_o
R47200 Mem.update_o
R47507 Mem.contentmap_inject
R47529 Mem.set_cont
R47487 Coq.Init.Logic "x <> y" type_scope
R47493 Coq.ZArith.BinInt "x + y" Z_scope
R47452 Coq.ZArith.BinInt "x <= y < z" Z_scope
R47406 Coq.ZArith.BinInt "x <= y < z" Z_scope
R47416 Coq.ZArith.BinInt "x + y" Z_scope
R47418 Coq.ZArith.BinInt.Z_of_nat
R47334 Mem.contentmap_inject
R47614 Mem.set_cont_outside1
R47614 Mem.set_cont_outside1
R47919 Mem.contentmap_inject
R47941 Mem.setN
R47899 Coq.Init.Logic "x <> y" type_scope
R47905 Coq.ZArith.BinInt "x + y" Z_scope
R47865 Coq.ZArith.BinInt "x <= y < z" Z_scope
R47815 Coq.ZArith.BinInt "x <= y < z" Z_scope
R47825 Coq.ZArith.BinInt "x + y" Z_scope
R47827 Coq.ZArith.BinInt.Z_of_nat
R47837 Coq.Init.Datatypes.S
R47757 Mem.contentmap_inject
R48020 Mem.update_o
R48020 Mem.update_o
R48038 Mem.set_cont_outside_inject
R48038 Mem.set_cont_outside_inject
R48108 Coq.ZArith.Znat.inj_S
R48108 Coq.ZArith.Znat.inj_S
R48155 Coq.ZArith.Znat.inj_S
R48155 Coq.ZArith.Znat.inj_S
R48413 Mem.contentmap_inject
R48435 Mem.store_contents
R48394 Coq.Init.Logic "x <> y" type_scope
R48400 Coq.ZArith.BinInt "x + y" Z_scope
R48360 Coq.ZArith.BinInt "x <= y < z" Z_scope
R48313 Coq.ZArith.BinInt "x <= y < z" Z_scope
R48323 Coq.ZArith.BinInt "x + y" Z_scope
R48325 Mem.size_mem
R48255 Mem.contentmap_inject
R48524 Mem.size_mem_pos
R48524 Mem.size_mem_pos
R48590 Mem.setN_outside_inject
R48590 Mem.setN_outside_inject
R48590 Mem.setN_outside_inject
R48590 Mem.setN_outside_inject
R48590 Mem.setN_outside_inject
R48849 Coq.Init.Logic "'exists' x , p" type_scope
R48913 Coq.Init.Logic "A /\ B" type_scope
R48899 Coq.Init.Logic "x = y" type_scope
R48864 Mem.store
R48887 Coq.ZArith.BinInt "x + y" Z_scope
R48901 Coq.Init.Datatypes.Some
R48916 Mem.mem_inject
R48801 Mem.val_content_inject
R48821 Mem.mem_chunk
R48777 Coq.Init.Logic "x = y" type_scope
R48779 Coq.Init.Datatypes.Some
R48784 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48757 Coq.Init.Logic "x = y" type_scope
R48732 Mem.store
R48759 Coq.Init.Datatypes.Some
R48710 Mem.mem_inject
R48962 Mem.size_chunk_pos
R48962 Mem.size_chunk_pos
R49012 Mem.store_inv
R49012 Mem.store_inv
R49161 Mem.in_bounds_inject
R49191 Coq.Init.Logic.conj
R49161 Mem.in_bounds_inject
R49191 Coq.Init.Logic.conj
R49223 Mem.unchecked_store
R49255 Coq.ZArith.BinInt "x + y" Z_scope
R49223 Mem.unchecked_store
R49255 Coq.ZArith.BinInt "x + y" Z_scope
R49301 Coqlib.zlt_true
R49301 Coqlib.zlt_true
R49323 Mem.in_bounds
R49354 Mem.blocks
R49344 Coq.ZArith.BinInt "x + y" Z_scope
R49323 Mem.in_bounds
R49354 Mem.blocks
R49344 Coq.ZArith.BinInt "x + y" Z_scope
R49387 Coq.Init.Logic "x = y" type_scope
R49387 Coq.Init.Logic "x = y" type_scope
R49401 Coqlib.proof_irrelevance
R49401 Coqlib.proof_irrelevance
R49688 Coqlib.zeq
R49688 Coqlib.zeq
R49725 Coq.Init.Logic "x = y" type_scope
R49725 Coq.Init.Logic "x = y" type_scope
R49770 Coq.Init.Logic "x = y" type_scope
R49770 Coq.Init.Logic "x = y" type_scope
R49814 Coqlib.zeq_true
R49814 Coqlib.zeq_true
R49869 Mem.store_contents_inject
R49869 Mem.store_contents_inject
R49977 Coqlib.zeq
R49977 Coqlib.zeq
R50059 Mem.store_contents_outside_inject
R50124 Coq.ZArith.BinInt "x + y" Z_scope
R50100 Mem.mem_chunk
R50059 Mem.store_contents_outside_inject
R50124 Coq.ZArith.BinInt "x + y" Z_scope
R50100 Mem.mem_chunk
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R50277 Coq.Init.Logic.sym_not_equal
R50277 Coq.Init.Logic.sym_not_equal
R50320 Coq.ZArith.BinInt "x + y" Z_scope
R50313 Coq.ZArith.BinInt "x - y" Z_scope
R50320 Coq.ZArith.BinInt "x + y" Z_scope
R50313 Coq.ZArith.BinInt "x - y" Z_scope
R50576 Coqlib.zeq
R50576 Coqlib.zeq
R50620 Coqlib.zeq_false
R50620 Coqlib.zeq_false
R50650 Coqlib.zeq
R50650 Coqlib.zeq
R50893 Coq.Init.Logic "'exists' x , p" type_scope
R50957 Coq.Init.Logic "A /\ B" type_scope
R50943 Coq.Init.Logic "x = y" type_scope
R50908 Mem.store
R50931 Coq.ZArith.BinInt "x + y" Z_scope
R50945 Coq.Init.Datatypes.Some
R50960 Mem.mem_inject
R50871 Mem.val_inject
R50847 Coq.Init.Logic "x = y" type_scope
R50849 Coq.Init.Datatypes.Some
R50854 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R50827 Coq.Init.Logic "x = y" type_scope
R50802 Mem.store
R50829 Coq.Init.Datatypes.Some
R50780 Mem.mem_inject
R51002 Mem.store_mapped_inject_1
R51002 Mem.store_mapped_inject_1
R51183 Mem.mem_inject
R51171 Coq.Init.Logic "x = y" type_scope
R51173 Coq.Init.Datatypes.None
R51151 Coq.Init.Logic "x = y" type_scope
R51126 Mem.store
R51153 Coq.Init.Datatypes.Some
R51104 Mem.mem_inject
R51241 Mem.store_inv
R51241 Mem.store_inv
R51432 Coqlib.zeq_false
R51432 Coqlib.zeq_false
R51509 Coq.Init.Logic "x = y" type_scope
R51494 Mem.low_bound
R51511 Mem.low_bound
R51509 Coq.Init.Logic "x = y" type_scope
R51494 Mem.low_bound
R51511 Mem.low_bound
R51590 Coqlib.zeq
R51590 Coqlib.zeq
R51679 Coq.Init.Logic "x = y" type_scope
R51663 Mem.high_bound
R51681 Mem.high_bound
R51679 Coq.Init.Logic "x = y" type_scope
R51663 Mem.high_bound
R51681 Mem.high_bound
R51762 Coqlib.zeq
R51762 Coqlib.zeq
R52065 Coq.Init.Logic "'exists' x , p" type_scope
R52112 Coq.Init.Logic "A /\ B" type_scope
R52102 Coq.Init.Logic "x = y" type_scope
R52080 Mem.storev
R52104 Coq.Init.Datatypes.Some
R52115 Mem.mem_inject
R52017 Mem.val_content_inject
R52037 Mem.mem_chunk
R51995 Mem.val_inject
R51980 Coq.Init.Logic "x = y" type_scope
R51958 Mem.storev
R51982 Coq.Init.Datatypes.Some
R51936 Mem.mem_inject
R52237 Integers.signed
R52273 Coq.ZArith.BinInt "x + y" Z_scope
R52260 Integers.signed
R52237 Integers.signed
R52273 Coq.ZArith.BinInt "x + y" Z_scope
R52260 Integers.signed
R52288 Mem.store_mapped_inject_1
R52288 Mem.store_mapped_inject_1
R52342 Mem.store_inv
R52342 Mem.store_inv
R52407 Mem.address_inject
R52407 Mem.address_inject
R52628 Coq.Init.Logic "'exists' x , p" type_scope
R52675 Coq.Init.Logic "A /\ B" type_scope
R52665 Coq.Init.Logic "x = y" type_scope
R52643 Mem.storev
R52667 Coq.Init.Datatypes.Some
R52678 Mem.mem_inject
R52606 Mem.val_inject
R52584 Mem.val_inject
R52569 Coq.Init.Logic "x = y" type_scope
R52547 Mem.storev
R52571 Coq.Init.Datatypes.Some
R52525 Mem.mem_inject
R52720 Mem.storev_mapped_inject_1
R52720 Mem.storev_mapped_inject_1
R52851 Mem.mem_inject
R52863 Mem.free
R52829 Mem.mem_inject
R53056 Coqlib.zeq
R53056 Coqlib.zeq
R53286 Coqlib.zeq
R53286 Coqlib.zeq
R53356 Coqlib.zeq
R53356 Coqlib.zeq
R53557 Mem.mem_inject
R53569 Mem.free_list
R53535 Mem.mem_inject
R53642 Mem.free_first_inject
R53642 Mem.free_first_inject
R53844 Mem.mem_inject
R53859 Mem.free
R53822 Mem.mem_inject
R53796 Coq.ZArith.BinInt "x >= y" Z_scope
R53780 Mem.low_bound
R53799 Mem.high_bound
R53739 Coq.Init.Logic "x = y" type_scope
R53741 Coq.Init.Datatypes.Some
R53745 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R54063 Coqlib.zeq
R54063 Coqlib.zeq
R54477 Coq.ZArith.BinInt "x >= y" Z_scope
R54461 Mem.low_bound
R54480 Mem.high_bound
R54450 Coq.Init.Logic "x = y" type_scope
R54440 Mem.free
R54600 Mem.update_s
R54600 Mem.update_s
R54744 Coq.ZArith.BinInt "x >= y" Z_scope
R54728 Mem.low_bound
R54747 Mem.high_bound
R54718 Coq.Lists.List.In
R54687 Mem.free_list
R54838 Coq.Lists.List.in_inv
R54838 Coq.Lists.List.in_inv
R54921 Mem.bounds_free_block
R54944 Coq.Lists.List.fold_right
R54985 Mem.free
R54977 Mem.mem
R54965 Values.block
R54921 Mem.bounds_free_block
R54944 Coq.Lists.List.fold_right
R54985 Mem.free
R54977 Mem.mem
R54965 Values.block
R55144 Coqlib.zeq
R55144 Coqlib.zeq
R55359 Mem.mem_inject
R55388 Mem.free
R55371 Mem.free_list
R55337 Mem.mem_inject
R55323 Coq.Lists.List.In
R55303 Coq.Init.Logic "x = y" type_scope
R55305 Coq.Init.Datatypes.Some
R55309 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55424 Mem.free_snd_inject
R55424 Mem.free_snd_inject
R55459 Mem.free_empty_bounds
R55459 Mem.free_empty_bounds
R55514 Mem.free_first_list_inject
R55514 Mem.free_first_list_inject
R55581 Mem.val_inject_int
R55596 Mem.val_inject_float
R55613 Mem.val_inject_ptr
R55628 Mem.val_inject_undef
R55659 Mem.val_nil_inject
R55674 Mem.val_cons_inject
R55796 Coq.Init.Logic "A \/ B" type_scope
R55789 Coq.Init.Logic "x = y" type_scope
R55804 Coq.Init.Logic "x = y" type_scope
R55806 Coq.Init.Datatypes.None
R55754 Mem.meminj
R55754 Mem.meminj
R55852 Mem.inject_incr
R56018 Mem.inject_incr
R55997 Mem.inject_incr
R55976 Mem.inject_incr
R56374 Mem.val_inject
R56350 Mem.val_inject
R56327 Mem.inject_incr
R56488 Mem.val_inject_ptr
R56488 Mem.val_inject_ptr
R56673 Mem.val_list_inject
R56642 Mem.val_list_inject
R56621 Mem.inject_incr
R56780 Mem.val_inject_incr
R56780 Mem.val_inject_incr
R56861 Mem.inject_incr_refl
R56878 Mem.val_inject_incr
R56894 Mem.val_list_inject_incr
R56960 Mem.meminj
R56985 Mem.inject_incr
R57097 Mem.val_content_inject
R57059 Mem.val_content_inject
R57169 Mem.val_content_inject_base
R57169 Mem.val_content_inject_base
R57201 Mem.val_inject_incr
R57201 Mem.val_inject_incr
R57233 Mem.val_content_inject_8
R57233 Mem.val_content_inject_8
R57269 Mem.val_content_inject_16
R57269 Mem.val_content_inject_16
R57306 Mem.val_content_inject_32
R57306 Mem.val_content_inject_32
R57409 Mem.content_inject
R57383 Mem.content_inject
R57475 Mem.val_content_inject_incr
R57475 Mem.val_content_inject_incr
R57475 Mem.val_content_inject_incr
R57475 Mem.val_content_inject_incr
R57475 Mem.val_content_inject_incr
R57616 Mem.contentmap_inject
R57572 Mem.contentmap_inject
R57706 Mem.content_inject_incr
R57706 Mem.content_inject_incr
R57837 Mem.block_contents_inject
R57796 Mem.block_contents_inject
R57931 Mem.contentmap_inject_incr
R57931 Mem.contentmap_inject_incr
R58102 Mem.meminj
R58127 Values.eq_block
R58092 Mem.meminj
R58068 Coq.Init.Datatypes.option
R58082 Coq.Init.Datatypes "x * y" type_scope
R58076 Values.block
R58084 Coq.ZArith.BinInt.Z
R58057 Values.block
R58220 Mem.inject_incr
R58235 Mem.extend_inject
R58208 Coq.Init.Logic "x = y" type_scope
R58210 Coq.Init.Datatypes.None
R58318 Values.eq_block
R58318 Values.eq_block
R58495 Mem.mem_inject
R58479 Coq.Init.Logic "x = y" type_scope
R58464 Mem.alloc
R58481 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R58440 Mem.mem_inject
R58745 Mem.update_o
R58745 Mem.update_o
R58947 Coq.Init.Logic "A /\ B" type_scope
R58904 Mem.mem_inject
R58916 Mem.extend_inject
R58932 Coq.Init.Datatypes.None
R58952 Mem.inject_incr
R58967 Mem.extend_inject
R58983 Coq.Init.Datatypes.None
R58888 Coq.Init.Logic "x = y" type_scope
R58873 Mem.alloc
R58890 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R58849 Mem.mem_inject
R59086 Mem.inject_incr
R59101 Mem.extend_inject
R59117 Coq.Init.Datatypes.None
R59086 Mem.inject_incr
R59101 Mem.extend_inject
R59117 Coq.Init.Datatypes.None
R59135 Mem.extend_inject_incr
R59135 Mem.extend_inject_incr
R59290 Values.eq_block
R59290 Values.eq_block
R59403 Values.eq_block
R59403 Values.eq_block
R59505 Mem.update_o
R59505 Mem.update_o
R59591 Mem.block_contents_inject_incr
R59591 Mem.block_contents_inject_incr
R59691 Values.eq_block
R59691 Values.eq_block
R59734 Values.eq_block
R59734 Values.eq_block
R59852 Mem.update_o
R59852 Mem.update_o
R59852 Mem.update_o
R59852 Mem.update_o
R59852 Mem.update_o
R59852 Mem.update_o
R60452 Coq.Init.Logic "A /\ B" type_scope
R60397 Mem.mem_inject
R60409 Mem.extend_inject
R60426 Coq.Init.Datatypes.Some
R60431 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R60457 Mem.inject_incr
R60472 Mem.extend_inject
R60489 Coq.Init.Datatypes.Some
R60494 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R60350 Coq.Init.Logic "A \/ B" type_scope
R60338 Coq.ZArith.BinInt "x <= y" Z_scope
R60331 Coq.ZArith.BinInt "x + y" Z_scope
R60314 Mem.high_bound
R60344 Coq.ZArith.BinInt "x + y" Z_scope
R60365 Coq.ZArith.BinInt "x <= y" Z_scope
R60359 Coq.ZArith.BinInt "x + y" Z_scope
R60384 Coq.ZArith.BinInt "x + y" Z_scope
R60368 Mem.low_bound
R60289 Coq.Init.Logic "x = y" type_scope
R60291 Coq.Init.Datatypes.Some
R60296 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R60238 Coq.ZArith.BinInt "x <= y" Z_scope
R60232 Coq.ZArith.BinInt "x + y" Z_scope
R60241 Mem.high_bound
R60212 Coq.ZArith.BinInt "x <= y" Z_scope
R60196 Mem.low_bound
R60218 Coq.ZArith.BinInt "x + y" Z_scope
R60173 Coq.ZArith.BinInt "x <= y" Z_scope
R60156 Mem.high_bound
R60176 Integers.max_signed
R60132 Coq.ZArith.BinInt "x <= y" Z_scope
R60117 Integers.min_signed
R60135 Mem.low_bound
R60087 Coq.ZArith.BinInt "x <= y <= z" Z_scope
R60072 Integers.min_signed
R60097 Integers.max_signed
R60049 Mem.valid_block
R60033 Coq.Init.Logic "x = y" type_scope
R60018 Mem.alloc
R60035 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R59994 Mem.mem_inject
R60551 Mem.low_bound_alloc
R60551 Mem.low_bound_alloc
R60622 Mem.high_bound_alloc
R60622 Mem.high_bound_alloc
R60774 Mem.inject_incr
R60789 Mem.extend_inject
R60806 Coq.Init.Datatypes.Some
R60811 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R60774 Mem.inject_incr
R60789 Mem.extend_inject
R60806 Coq.Init.Datatypes.Some
R60811 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R60835 Mem.extend_inject_incr
R60835 Mem.extend_inject_incr
R61010 Values.eq_block
R61010 Values.eq_block
R61185 Values.eq_block
R61185 Values.eq_block
R61331 Mem.update_s
R61331 Mem.update_s
R61615 Mem.update_o
R61615 Mem.update_o
R61639 Mem.block_contents_inject_incr
R61639 Mem.block_contents_inject_incr
R61812 Coqlib.zeq
R61829 Coqlib.zeq
R61812 Coqlib.zeq
R61829 Coqlib.zeq
R61829 Coqlib.zeq
R61911 Values.eq_block
R61911 Values.eq_block
R62068 Values.eq_block
R62068 Values.eq_block
FGlobalenvs
R281 Globalenvs.t
R268 AST.program
R337 Mem.mem
R324 AST.program
R396 Coq.Init.Datatypes.option
R389 Values.val
R382 Globalenvs.t
R466 Coq.Init.Datatypes.option
R457 Values.block
R450 Globalenvs.t
R533 Coq.Init.Datatypes.option
R540 Values.block
R524 AST.ident
R517 Globalenvs.t
R656 Coq.Init.Logic "'exists' x , p" type_scope
R668 Coq.Init.Logic "x = y" type_scope
R670 Values.Vptr
R677 Integers.zero
R644 Coq.Init.Logic "x = y" type_scope
R628 Globalenvs.find_funct
R646 Coq.Init.Datatypes.Some
R611 Values.val
R602 Globalenvs.t
R805 Coq.Init.Logic "x = y" type_scope
R773 Globalenvs.find_funct
R788 Values.Vptr
R795 Integers.zero
R807 Globalenvs.find_funct_ptr
R761 Values.block
R752 Globalenvs.t
R1025 Coq.Init.Logic "x = y" type_scope
R994 Globalenvs.find_funct_ptr
R1010 Globalenvs.globalenv
R1027 Coq.Init.Datatypes.Some
R953 Coq.Lists.List.In
R965 AST.prog_funct
R956 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R920 Values.block
R905 AST.program
R1229 Coq.Init.Logic "x = y" type_scope
R1202 Globalenvs.find_funct
R1214 Globalenvs.globalenv
R1231 Coq.Init.Datatypes.Some
R1161 Coq.Lists.List.In
R1173 AST.prog_funct
R1164 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R1130 Values.val
R1115 AST.program
R1369 Coq.Init.Logic "A /\ B" type_scope
R1347 Mem.valid_block
R1361 Mem.nullptr
R1395 Coq.Init.Logic "x = y" type_scope
R1379 Mem.blocks
R1387 Mem.nullptr
R1397 Mem.empty_block
R1329 Globalenvs.init_mem
R1304 AST.program
R1493 Coq.Init.Logic "'exists' x , p" type_scope
R1504 Coq.Init.Logic "'exists' x , p" type_scope
R1544 Coq.Init.Logic "x = y" type_scope
R1534 Mem.blocks
R1521 Globalenvs.init_mem
R1546 Mem.empty_block
R1481 Values.block
R1466 AST.program
R1701 Coq.ZArith.BinInt "x < y" Z_scope
R1687 Coq.Init.Logic "x = y" type_scope
R1656 Globalenvs.find_funct_ptr
R1672 Globalenvs.globalenv
R1689 Coq.Init.Datatypes.Some
R1637 Values.block
R1622 AST.program
R1842 Coq.ZArith.BinInt "x < y" Z_scope
R1844 Mem.nextblock
R1855 Globalenvs.init_mem
R1828 Coq.Init.Logic "x = y" type_scope
R1799 Globalenvs.find_symbol
R1812 Globalenvs.globalenv
R1830 Coq.Init.Datatypes.Some
R1787 Values.block
R1776 AST.ident
R1760 AST.program
R2087 Coq.Init.Logic "x = y" type_scope
R2029 Globalenvs.find_funct_ptr
R2045 Globalenvs.globalenv
R2056 AST.transform_program
R2089 Coq.Init.Datatypes.Some
R2013 Coq.Init.Logic "x = y" type_scope
R1982 Globalenvs.find_funct_ptr
R1998 Globalenvs.globalenv
R2015 Coq.Init.Datatypes.Some
R1963 Values.block
R1948 AST.program
R2310 Coq.Init.Logic "x = y" type_scope
R2256 Globalenvs.find_funct
R2268 Globalenvs.globalenv
R2279 AST.transform_program
R2312 Coq.Init.Datatypes.Some
R2240 Coq.Init.Logic "x = y" type_scope
R2213 Globalenvs.find_funct
R2225 Globalenvs.globalenv
R2242 Coq.Init.Datatypes.Some
R2196 Values.val
R2181 AST.program
R2487 Coq.Init.Logic "x = y" type_scope
R2432 Globalenvs.find_symbol
R2445 Globalenvs.globalenv
R2456 AST.transform_program
R2493 Globalenvs.find_symbol
R2506 Globalenvs.globalenv
R2420 AST.ident
R2405 AST.program
R2649 Coq.Init.Logic "x = y" type_scope
R2611 Globalenvs.init_mem
R2621 AST.transform_program
R2651 Globalenvs.init_mem
R2595 AST.program
R2972 Coq.Init.Logic "A /\ B" type_scope
R2961 Coq.Init.Logic "x = y" type_scope
R2929 Globalenvs.find_funct_ptr
R2945 Globalenvs.globalenv
R2984 Coq.Init.Logic "x <> y" type_scope
R2987 Coq.Init.Datatypes.None
R2913 Coq.Init.Logic "x = y" type_scope
R2882 Globalenvs.find_funct_ptr
R2898 Globalenvs.globalenv
R2915 Coq.Init.Datatypes.Some
R2863 Values.block
R2835 Coq.Init.Logic "x = y" type_scope
R2800 AST.transform_partial_program
R2837 Coq.Init.Datatypes.Some
R2784 AST.program
R2768 AST.program
R2743 Coq.Init.Datatypes.option
R3288 Coq.Init.Logic "A /\ B" type_scope
R3277 Coq.Init.Logic "x = y" type_scope
R3249 Globalenvs.find_funct
R3261 Globalenvs.globalenv
R3300 Coq.Init.Logic "x <> y" type_scope
R3303 Coq.Init.Datatypes.None
R3233 Coq.Init.Logic "x = y" type_scope
R3206 Globalenvs.find_funct
R3218 Globalenvs.globalenv
R3235 Coq.Init.Datatypes.Some
R3189 Values.val
R3161 Coq.Init.Logic "x = y" type_scope
R3126 AST.transform_partial_program
R3163 Coq.Init.Datatypes.Some
R3110 AST.program
R3094 AST.program
R3069 Coq.Init.Datatypes.option
R3547 Coq.Init.Logic "x = y" type_scope
R3518 Globalenvs.find_symbol
R3531 Globalenvs.globalenv
R3549 Globalenvs.find_symbol
R3562 Globalenvs.globalenv
R3506 AST.ident
R3478 Coq.Init.Logic "x = y" type_scope
R3443 AST.transform_partial_program
R3480 Coq.Init.Datatypes.Some
R3427 AST.program
R3411 AST.program
R3386 Coq.Init.Datatypes.option
R3773 Coq.Init.Logic "x = y" type_scope
R3761 Globalenvs.init_mem
R3775 Globalenvs.init_mem
R3744 Coq.Init.Logic "x = y" type_scope
R3709 AST.transform_partial_program
R3746 Coq.Init.Datatypes.Some
R3693 AST.program
R3677 AST.program
R3652 Coq.Init.Datatypes.option
R3945 Maps.t
R3953 Coq.Init.Datatypes.option
R4027 Coq.ZArith.BinInt.Z
R4041 Maps.t
R4049 Values.block
R4120 Globalenvs.genv
R4188 Globalenvs.genv
R4229 Globalenvs.mkgenv
R4314 Maps.set
R4344 Globalenvs.symbols
R4325 Coq.Init.Datatypes.fst
R4295 Coq.ZArith.BinInt.Zpred
R4237 Maps.set
R4273 Globalenvs.functions
R4249 Coq.Init.Datatypes.Some
R4255 Coq.Init.Datatypes.snd
R4210 Globalenvs.nextfunction
R4180 Globalenvs.genv
R4166 Coq.Init.Datatypes "x * y" type_scope
R4160 AST.ident
R4415 Globalenvs.genv
R4425 Globalenvs.mkgenv
R4482 Maps.set
R4502 Globalenvs.symbols
R4458 Globalenvs.nextfunction
R4435 Globalenvs.functions
R4407 Globalenvs.genv
R4396 Values.block
R4385 AST.ident
R4563 Coq.Init.Datatypes.option
R4581 Maps.get
R4595 Globalenvs.functions
R4554 Values.block
R4544 Globalenvs.genv
R4651 Coq.Init.Datatypes.option
R4686 Values.Vptr
R4709 Integers.eq
R4720 Integers.zero
R4758 Coq.Init.Datatypes.None
R4734 Globalenvs.find_funct_ptr
R4778 Coq.Init.Datatypes.None
R4644 Values.val
R4634 Globalenvs.genv
R4840 Coq.Init.Datatypes.option
R4847 Values.block
R4858 Maps.get
R4876 Globalenvs.symbols
R4831 AST.ident
R4818 Globalenvs.genv
R4977 Coq.Init.Logic "'exists' x , p" type_scope
R4989 Coq.Init.Logic "x = y" type_scope
R4991 Values.Vptr
R4998 Integers.zero
R4965 Coq.Init.Logic "x = y" type_scope
R4949 Globalenvs.find_funct
R4967 Coq.Init.Datatypes.Some
R4930 Values.val
R4923 Globalenvs.t
R5106 Integers.eq_spec
R5120 Integers.zero
R5106 Integers.eq_spec
R5120 Integers.zero
R5137 Integers.eq
R5146 Integers.zero
R5137 Integers.eq
R5146 Integers.zero
R5307 Coq.Init.Logic "x = y" type_scope
R5275 Globalenvs.find_funct
R5290 Values.Vptr
R5297 Integers.zero
R5309 Globalenvs.find_funct_ptr
R5265 Values.block
R5258 Globalenvs.t
R5370 Integers.eq_spec
R5391 Integers.zero
R5382 Integers.zero
R5370 Integers.eq_spec
R5391 Integers.zero
R5382 Integers.zero
R5410 Integers.eq
R5426 Integers.zero
R5417 Integers.zero
R5410 Integers.eq
R5426 Integers.zero
R5417 Integers.zero
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R5539 Globalenvs.genv
R5549 Globalenvs.mkgenv
R5579 Maps.empty
R5591 Values.block
R5557 Maps.init
R5567 Coq.Init.Datatypes.None
R5665 Globalenvs.genv
R5675 Coq.Lists.List.fold_right
R5691 Globalenvs.add_funct
R5641 Coq.Lists.List.list
R5653 Coq.Init.Datatypes "x * y" type_scope
R5647 AST.ident
R5629 Globalenvs.genv
R5795 Coq.Init.Datatypes "x * y" type_scope
R5790 Globalenvs.genv
R5797 Mem.mem
R5806 Coq.Lists.List.fold_right
R5957 Mem.alloc
R5985 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5986 Globalenvs.add_symbol
R5862 Coq.Init.Datatypes "x * y" type_scope
R5857 Globalenvs.genv
R5864 Mem.mem
R5845 Coq.Init.Datatypes "x * y" type_scope
R5839 AST.ident
R5847 Coq.ZArith.BinInt.Z
R5770 Coq.Lists.List.list
R5782 Coq.Init.Datatypes "x * y" type_scope
R5776 AST.ident
R5784 Coq.ZArith.BinInt.Z
R5756 Coq.Init.Datatypes "x * y" type_scope
R5751 Globalenvs.genv
R5758 Mem.mem
R6083 Coq.Init.Datatypes "x * y" type_scope
R6078 Globalenvs.genv
R6085 Mem.mem
R6095 Globalenvs.add_globals
R6163 AST.prog_vars
R6111 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R6112 Globalenvs.add_functs
R6132 AST.prog_funct
R6123 Globalenvs.empty
R6145 Mem.empty
R6060 AST.program
R6218 Globalenvs.genv
R6228 Coq.Init.Datatypes.fst
R6233 Globalenvs.globalenv_initmem
R6201 AST.program
R6297 Mem.mem
R6306 Coq.Init.Datatypes.snd
R6311 Globalenvs.globalenv_initmem
R6280 AST.program
R6416 Coq.Init.Logic "x = y" type_scope
R6392 Globalenvs.functions
R6403 Globalenvs.globalenv
R6418 Globalenvs.functions
R6429 Globalenvs.add_functs
R6449 AST.prog_funct
R6440 Globalenvs.empty
R6374 AST.program
R6577 Coq.Init.Logic "x = y" type_scope
R6537 Globalenvs.functions
R6548 Coq.Init.Datatypes.fst
R6553 Globalenvs.add_globals
R6579 Globalenvs.functions
R6590 Coq.Init.Datatypes.fst
R6513 Coq.Lists.List.list
R6525 Coq.Init.Datatypes "x * y" type_scope
R6519 AST.ident
R6527 Coq.ZArith.BinInt.Z
R6499 Coq.Init.Datatypes "x * y" type_scope
R6494 Globalenvs.genv
R6501 Mem.mem
R6577 Coq.Init.Logic "x = y" type_scope
R6537 Globalenvs.functions
R6548 Coq.Init.Datatypes.fst
R6553 Globalenvs.add_globals
R6579 Globalenvs.functions
R6590 Coq.Init.Datatypes.fst
R6513 Coq.Lists.List.list
R6525 Coq.Init.Datatypes "x * y" type_scope
R6519 AST.ident
R6527 Coq.ZArith.BinInt.Z
R6499 Coq.Init.Datatypes "x * y" type_scope
R6494 Globalenvs.genv
R6501 Mem.mem
R6666 Globalenvs.add_globals
R6666 Globalenvs.add_globals
R6932 Coq.Init.Logic "A /\ B" type_scope
R6910 Mem.valid_block
R6924 Mem.nullptr
R6956 Coq.Init.Logic "x = y" type_scope
R6940 Mem.blocks
R6948 Mem.nullptr
R6958 Mem.mkblock
R6988 Mem.undef_undef_outside
R6980 Mem.Undef
R6894 Globalenvs.init_mem
R6867 AST.program
R7302 Coq.Init.Logic "A /\ B" type_scope
R7285 Coq.ZArith.BinInt "x < y" Z_scope
R7291 Mem.nextblock
R7329 Coq.Init.Logic "x = y" type_scope
R7313 Mem.blocks
R7321 Mem.nullptr
R7331 Mem.mkblock
R7361 Mem.undef_undef_outside
R7353 Mem.Undef
R7248 Coq.Init.Datatypes.snd
R7253 Globalenvs.add_globals
R7215 Coq.Lists.List.list
R7227 Coq.Init.Datatypes "x * y" type_scope
R7221 AST.ident
R7229 Coq.ZArith.BinInt.Z
R7137 Coq.Init.Logic "x = y" type_scope
R7121 Mem.blocks
R7129 Mem.nullptr
R7139 Mem.mkblock
R7169 Mem.undef_undef_outside
R7161 Mem.Undef
R7093 Coq.ZArith.BinInt "x < y" Z_scope
R7099 Mem.nextblock
R7075 Coq.Init.Datatypes.snd
R7053 Coq.Init.Datatypes "x * y" type_scope
R7048 Globalenvs.genv
R7055 Mem.mem
R7302 Coq.Init.Logic "A /\ B" type_scope
R7285 Coq.ZArith.BinInt "x < y" Z_scope
R7291 Mem.nextblock
R7329 Coq.Init.Logic "x = y" type_scope
R7313 Mem.blocks
R7321 Mem.nullptr
R7331 Mem.mkblock
R7361 Mem.undef_undef_outside
R7353 Mem.Undef
R7248 Coq.Init.Datatypes.snd
R7253 Globalenvs.add_globals
R7215 Coq.Lists.List.list
R7227 Coq.Init.Datatypes "x * y" type_scope
R7221 AST.ident
R7229 Coq.ZArith.BinInt.Z
R7137 Coq.Init.Logic "x = y" type_scope
R7121 Mem.blocks
R7129 Mem.nullptr
R7139 Mem.mkblock
R7169 Mem.undef_undef_outside
R7161 Mem.Undef
R7093 Coq.ZArith.BinInt "x < y" Z_scope
R7099 Mem.nextblock
R7075 Coq.Init.Datatypes.snd
R7053 Coq.Init.Datatypes "x * y" type_scope
R7048 Globalenvs.genv
R7055 Mem.mem
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R7455 Globalenvs.add_globals
R7455 Globalenvs.add_globals
R7592 Mem.update_o
R7592 Mem.update_o
R7614 Coq.Init.Logic.sym_not_equal
R7614 Coq.Init.Logic.sym_not_equal
R7635 Coq.ZArith.Zorder.Zlt_not_eq
R7635 Coq.ZArith.Zorder.Zlt_not_eq
R7839 Coq.Init.Logic "'exists' x , p" type_scope
R7850 Coq.Init.Logic "'exists' x , p" type_scope
R7888 Coq.Init.Logic "x = y" type_scope
R7878 Mem.blocks
R7865 Globalenvs.init_mem
R7890 Mem.empty_block
R7829 Values.block
R7810 AST.program
R8007 Coq.Init.Logic "'exists' x , p" type_scope
R8018 Coq.Init.Logic "'exists' x , p" type_scope
R8049 Coq.Init.Logic "x = y" type_scope
R8039 Mem.blocks
R8051 Mem.empty_block
R7988 Coq.Init.Logic "x = y" type_scope
R7955 Globalenvs.add_globals
R7967 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7972 Mem.empty
R7990 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8007 Coq.Init.Logic "'exists' x , p" type_scope
R8018 Coq.Init.Logic "'exists' x , p" type_scope
R8049 Coq.Init.Logic "x = y" type_scope
R8039 Mem.blocks
R8051 Mem.empty_block
R7988 Coq.Init.Logic "x = y" type_scope
R7955 Globalenvs.add_globals
R7967 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7972 Mem.empty
R7990 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8195 Globalenvs.add_globals
R8207 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8212 Mem.empty
R8195 Globalenvs.add_globals
R8207 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8212 Mem.empty
R8358 Coqlib.zeq
R8365 Mem.nextblock
R8358 Coqlib.zeq
R8365 Mem.nextblock
R8443 Globalenvs.globalenv_initmem
R8443 Globalenvs.globalenv_initmem
R8659 Coq.ZArith.BinInt "x < y" Z_scope
R8623 Globalenvs.nextfunction
R8637 Globalenvs.add_functs
R8648 Globalenvs.empty
R8863 Coq.ZArith.BinInt "x < y" Z_scope
R8849 Coq.Init.Logic "x = y" type_scope
R8818 Globalenvs.find_funct_ptr
R8834 Globalenvs.globalenv
R8851 Coq.Init.Datatypes.Some
R8797 Values.block
R8778 AST.program
R8975 Coq.ZArith.BinInt "x < y" Z_scope
R8961 Coq.Init.Logic "x = y" type_scope
R8915 Maps.get
R8927 Globalenvs.functions
R8938 Globalenvs.add_functs
R8949 Globalenvs.empty
R8963 Coq.Init.Datatypes.Some
R8975 Coq.ZArith.BinInt "x < y" Z_scope
R8961 Coq.Init.Logic "x = y" type_scope
R8915 Maps.get
R8927 Globalenvs.functions
R8938 Globalenvs.add_functs
R8949 Globalenvs.empty
R8963 Coq.Init.Datatypes.Some
R9019 Maps.gi
R9019 Maps.gi
R9052 Maps.gsspec
R9052 Maps.gsspec
R9071 Maps.eq
R9086 Globalenvs.nextfunction
R9100 Globalenvs.add_functs
R9111 Globalenvs.empty
R9071 Maps.eq
R9086 Globalenvs.nextfunction
R9100 Globalenvs.add_functs
R9111 Globalenvs.empty
R9160 Globalenvs.nextfunction_add_functs_neg
R9160 Globalenvs.nextfunction_add_functs_neg
R9233 Globalenvs.functions_globalenv
R9233 Globalenvs.functions_globalenv
R9400 Coq.ZArith.BinInt "x < y" Z_scope
R9402 Mem.nextblock
R9413 Globalenvs.init_mem
R9386 Coq.Init.Logic "x = y" type_scope
R9357 Globalenvs.find_symbol
R9370 Globalenvs.globalenv
R9388 Coq.Init.Datatypes.Some
R9347 Values.block
R9336 AST.ident
R9316 AST.program
R9514 Coq.ZArith.BinInt "x < y" Z_scope
R9500 Coq.Init.Logic "x = y" type_scope
R9494 Maps "a ! b"
R9464 Globalenvs.symbols
R9473 Globalenvs.add_functs
R9484 Globalenvs.empty
R9502 Coq.Init.Datatypes.Some
R9514 Coq.ZArith.BinInt "x < y" Z_scope
R9500 Coq.Init.Logic "x = y" type_scope
R9494 Maps "a ! b"
R9464 Globalenvs.symbols
R9473 Globalenvs.add_functs
R9484 Globalenvs.empty
R9502 Coq.Init.Datatypes.Some
R9570 Maps.gempty
R9570 Maps.gempty
R9606 Maps.gsspec
R9606 Maps.gsspec
R9645 Coqlib.peq
R9645 Coqlib.peq
R9694 Globalenvs.nextfunction_add_functs_neg
R9694 Globalenvs.nextfunction_add_functs_neg
R9870 Coq.ZArith.BinInt "x < y" Z_scope
R9872 Mem.nextblock
R9852 Coq.Init.Logic "x = y" type_scope
R9848 Maps "a ! b"
R9839 Globalenvs.symbols
R9854 Coq.Init.Datatypes.Some
R9822 Coq.Init.Logic "x = y" type_scope
R9771 Globalenvs.add_globals
R9783 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9784 Globalenvs.add_functs
R9795 Globalenvs.empty
R9806 Mem.empty
R9824 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9870 Coq.ZArith.BinInt "x < y" Z_scope
R9872 Mem.nextblock
R9852 Coq.Init.Logic "x = y" type_scope
R9848 Maps "a ! b"
R9839 Globalenvs.symbols
R9854 Coq.Init.Datatypes.Some
R9822 Coq.Init.Logic "x = y" type_scope
R9771 Globalenvs.add_globals
R9783 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9784 Globalenvs.add_functs
R9795 Globalenvs.empty
R9806 Mem.empty
R9824 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10028 Globalenvs.add_globals
R10040 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10041 Globalenvs.add_functs
R10052 Globalenvs.empty
R10063 Mem.empty
R10028 Globalenvs.add_globals
R10040 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10041 Globalenvs.add_functs
R10052 Globalenvs.empty
R10063 Mem.empty
R10175 Maps.gsspec
R10175 Maps.gsspec
R10195 Coqlib.peq
R10195 Coqlib.peq
R10392 Globalenvs.add_globals
R10472 AST.prog_vars
R10404 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10405 Globalenvs.add_functs
R10423 AST.prog_funct
R10416 Globalenvs.empty
R10438 Mem.empty
R10392 Globalenvs.add_globals
R10472 AST.prog_vars
R10404 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10405 Globalenvs.add_functs
R10423 AST.prog_funct
R10416 Globalenvs.empty
R10438 Mem.empty
R10754 Coq.Init.Logic "x = y" type_scope
R10723 Globalenvs.find_funct_ptr
R10739 Globalenvs.globalenv
R10756 Coq.Init.Datatypes.Some
R10684 Coq.Lists.List.In
R10696 AST.prog_funct
R10687 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10653 Values.block
R10638 AST.program
R10831 Globalenvs.functions_globalenv
R10831 Globalenvs.functions_globalenv
R10866 AST.prog_funct
R10866 AST.prog_funct
R10911 Maps.gi
R10911 Maps.gi
R10952 Maps.gsspec
R10952 Maps.gsspec
R10973 Maps.eq
R10988 Globalenvs.nextfunction
R11002 Globalenvs.add_functs
R11014 Globalenvs.empty
R10973 Maps.eq
R10988 Globalenvs.nextfunction
R11002 Globalenvs.add_functs
R11014 Globalenvs.empty
R11053 Coq.Init.Datatypes.fst
R11053 Coq.Init.Datatypes.fst
R11336 Coq.Init.Logic "x = y" type_scope
R11309 Globalenvs.find_funct
R11321 Globalenvs.globalenv
R11338 Coq.Init.Datatypes.Some
R11270 Coq.Lists.List.In
R11282 AST.prog_funct
R11273 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R11241 Values.val
R11226 AST.program
R11450 Integers.eq
R11459 Integers.zero
R11450 Integers.eq
R11459 Integers.zero
R11519 Globalenvs.find_funct_ptr_prop
R11519 Globalenvs.find_funct_ptr_prop
R11683 Coq.Init.Datatypes.option
R11705 AST.program
R11729 AST.program
R11797 Coq.Init.Logic "x = y" type_scope
R11762 AST.transform_partial_program
R11799 Coq.Init.Datatypes.Some
R12059 Coq.Init.Logic "A /\ B" type_scope
R12042 Coq.Init.Logic "x = y" type_scope
R12026 Globalenvs.nextfunction
R12044 Globalenvs.nextfunction
R12087 Coq.Init.Logic "A /\ B" type_scope
R12075 Coq.Init.Logic "x = y" type_scope
R12064 Globalenvs.symbols
R12077 Globalenvs.symbols
R12196 Coq.Init.Logic "A /\ B" type_scope
R12185 Coq.Init.Logic "x = y" type_scope
R12159 Maps.get
R12171 Globalenvs.functions
R12208 Coq.Init.Logic "x <> y" type_scope
R12211 Coq.Init.Datatypes.None
R12145 Coq.Init.Logic "x = y" type_scope
R12120 Maps.get
R12132 Globalenvs.functions
R12147 Coq.Init.Datatypes.Some
R12103 Values.block
R11995 Globalenvs.add_functs
R12007 Globalenvs.empty
R11955 Globalenvs.add_functs
R11967 Globalenvs.empty
R11929 Coq.Init.Logic "x = y" type_scope
R11895 AST.transf_partial_program
R11931 Coq.Init.Datatypes.Some
R11874 Coq.Lists.List.list
R11886 Coq.Init.Datatypes "x * y" type_scope
R11880 AST.ident
R11849 Coq.Lists.List.list
R11861 Coq.Init.Datatypes "x * y" type_scope
R11855 AST.ident
R12370 Maps.gi
R12370 Maps.gi
R12370 Maps.gi
R12370 Maps.gi
R12473 AST.transf_partial_program
R12473 AST.transf_partial_program
R12729 Coqlib.zeq
R12736 Globalenvs.nextfunction
R12750 Globalenvs.add_functs
R12762 Globalenvs.empty
R12729 Coqlib.zeq
R12736 Globalenvs.nextfunction
R12750 Globalenvs.add_functs
R12762 Globalenvs.empty
R12813 Maps.gss
R12813 Maps.gss
R12813 Maps.gss
R12813 Maps.gss
R12936 Maps.gso
R12936 Maps.gso
R12936 Maps.gso
R13142 Coq.Init.Logic "x = y" type_scope
R13111 Coq.Init.Datatypes.snd
R13116 Globalenvs.add_globals
R13128 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13144 Coq.Init.Datatypes.snd
R13149 Globalenvs.add_globals
R13161 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13090 Coq.Lists.List.list
R13102 Coq.Init.Datatypes "x * y" type_scope
R13096 AST.ident
R13104 Coq.ZArith.BinInt.Z
R13078 Mem.mem
R13066 Globalenvs.genv
R13053 Globalenvs.genv
R13247 Globalenvs.add_globals
R13259 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13247 Globalenvs.add_globals
R13259 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13286 Globalenvs.add_globals
R13298 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13286 Globalenvs.add_globals
R13298 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13549 Coq.Init.Logic "x = y" type_scope
R13508 Globalenvs.symbols
R13517 Coq.Init.Datatypes.fst
R13522 Globalenvs.add_globals
R13534 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13553 Globalenvs.symbols
R13562 Coq.Init.Datatypes.fst
R13567 Globalenvs.add_globals
R13579 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13487 Coq.Lists.List.list
R13499 Coq.Init.Datatypes "x * y" type_scope
R13493 AST.ident
R13501 Coq.ZArith.BinInt.Z
R13455 Coq.Init.Logic "x = y" type_scope
R13444 Globalenvs.symbols
R13457 Globalenvs.symbols
R13436 Mem.mem
R13424 Globalenvs.genv
R13411 Globalenvs.genv
R13655 Globalenvs.mem_add_globals_transf
R13655 Globalenvs.mem_add_globals_transf
R13724 Globalenvs.add_globals
R13736 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13724 Globalenvs.add_globals
R13736 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13763 Globalenvs.add_globals
R13775 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13763 Globalenvs.add_globals
R13775 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13954 Coq.Init.Logic "x = y" type_scope
R13909 AST.transf_partial_program
R13942 AST.prog_funct
R13956 Coq.Init.Datatypes.Some
R13965 AST.prog_funct
R14051 AST.transf_partial_program
R14082 AST.prog_funct
R14051 AST.transf_partial_program
R14082 AST.prog_funct
R14347 Coq.Init.Logic "A /\ B" type_scope
R14336 Coq.Init.Logic "x = y" type_scope
R14304 Globalenvs.find_funct_ptr
R14320 Globalenvs.globalenv
R14359 Coq.Init.Logic "x <> y" type_scope
R14362 Coq.Init.Datatypes.None
R14290 Coq.Init.Logic "x = y" type_scope
R14259 Globalenvs.find_funct_ptr
R14275 Globalenvs.globalenv
R14292 Coq.Init.Datatypes.Some
R14242 Values.block
R14408 Globalenvs.add_functs_transf
R14441 Globalenvs.prog_funct_transf_OK
R14429 AST.prog_funct
R14408 Globalenvs.add_functs_transf
R14441 Globalenvs.prog_funct_transf_OK
R14429 AST.prog_funct
R14528 Globalenvs.functions_globalenv
R14528 Globalenvs.functions_globalenv
R14528 Globalenvs.functions_globalenv
R14528 Globalenvs.functions_globalenv
R14712 Coq.Init.Logic "A /\ B" type_scope
R14701 Coq.Init.Logic "x = y" type_scope
R14673 Globalenvs.find_funct
R14685 Globalenvs.globalenv
R14724 Coq.Init.Logic "x <> y" type_scope
R14727 Coq.Init.Datatypes.None
R14659 Coq.Init.Logic "x = y" type_scope
R14632 Globalenvs.find_funct
R14644 Globalenvs.globalenv
R14661 Coq.Init.Datatypes.Some
R14617 Values.val
R14840 Integers.eq
R14851 Integers.zero
R14840 Integers.eq
R14851 Integers.zero
R14898 Globalenvs.find_funct_ptr_transf_partial
R14898 Globalenvs.find_funct_ptr_transf_partial
R14988 Coq.Init.Logic "x = y" type_scope
R14965 Globalenvs.symbols
R14974 Globalenvs.globalenv
R14990 Globalenvs.symbols
R14999 Globalenvs.globalenv
R15080 Globalenvs.add_functs_transf
R15113 Globalenvs.prog_funct_transf_OK
R15101 AST.prog_funct
R15080 Globalenvs.add_functs_transf
R15113 Globalenvs.prog_funct_transf_OK
R15101 AST.prog_funct
R15224 AST.transf_partial_program
R15255 AST.prog_funct
R15224 AST.transf_partial_program
R15255 AST.prog_funct
R15345 Globalenvs.symbols_add_globals_transf
R15345 Globalenvs.symbols_add_globals_transf
R15513 Coq.Init.Logic "x = y" type_scope
R15484 Globalenvs.find_symbol
R15497 Globalenvs.globalenv
R15515 Globalenvs.find_symbol
R15528 Globalenvs.globalenv
R15474 AST.ident
R15592 Globalenvs.symbols_init_transf
R15592 Globalenvs.symbols_init_transf
R15672 Coq.Init.Logic "x = y" type_scope
R15660 Globalenvs.init_mem
R15674 Globalenvs.init_mem
R15807 AST.transf_partial_program
R15838 AST.prog_funct
R15807 AST.transf_partial_program
R15838 AST.prog_funct
R15928 Globalenvs.mem_add_globals_transf
R15928 Globalenvs.mem_add_globals_transf
R16093 AST.program
R16114 AST.transform_program
R16178 Coq.Init.Datatypes.option
R16190 Coq.Init.Datatypes.Some
R16331 Coq.Init.Logic "x = y" type_scope
R16289 AST.transf_partial_program
R16312 Globalenvs.transf_partial
R16335 Coq.Init.Datatypes.Some
R16341 AST.transf_program
R16268 Coq.Lists.List.list
R16280 Coq.Init.Datatypes "x * y" type_scope
R16274 AST.ident
R16561 Coq.Init.Logic "x = y" type_scope
R16518 AST.transform_partial_program
R16544 Globalenvs.transf_partial
R16563 Coq.Init.Datatypes.Some
R16655 Globalenvs.transf_program_transf_partial_program
R16655 Globalenvs.transf_program_transf_partial_program
R16853 Coq.Init.Logic "x = y" type_scope
R16821 Globalenvs.find_funct_ptr
R16837 Globalenvs.globalenv
R16855 Coq.Init.Datatypes.Some
R16807 Coq.Init.Logic "x = y" type_scope
R16776 Globalenvs.find_funct_ptr
R16792 Globalenvs.globalenv
R16809 Coq.Init.Datatypes.Some
R16759 Values.block
R16903 Globalenvs.find_funct_ptr_transf_partial
R16968 Globalenvs.transform_program_transform_partial_program
R16933 Globalenvs.transf_partial
R16903 Globalenvs.find_funct_ptr_transf_partial
R16968 Globalenvs.transform_program_transform_partial_program
R16933 Globalenvs.transf_partial
R17189 Coq.Init.Logic "x = y" type_scope
R17161 Globalenvs.find_funct
R17173 Globalenvs.globalenv
R17191 Coq.Init.Datatypes.Some
R17147 Coq.Init.Logic "x = y" type_scope
R17120 Globalenvs.find_funct
R17132 Globalenvs.globalenv
R17149 Coq.Init.Datatypes.Some
R17105 Values.val
R17239 Globalenvs.find_funct_transf_partial
R17300 Globalenvs.transform_program_transform_partial_program
R17265 Globalenvs.transf_partial
R17239 Globalenvs.find_funct_transf_partial
R17300 Globalenvs.transform_program_transform_partial_program
R17265 Globalenvs.transf_partial
R17477 Coq.Init.Logic "x = y" type_scope
R17448 Globalenvs.find_symbol
R17461 Globalenvs.globalenv
R17479 Globalenvs.find_symbol
R17492 Globalenvs.globalenv
R17438 AST.ident
R17565 Globalenvs.transf_partial
R17533 Globalenvs.find_symbol_transf_partial
R17565 Globalenvs.transf_partial
R17533 Globalenvs.find_symbol_transf_partial
R17589 Globalenvs.transform_program_transform_partial_program
R17589 Globalenvs.transform_program_transform_partial_program
R17679 Coq.Init.Logic "x = y" type_scope
R17667 Globalenvs.init_mem
R17681 Globalenvs.init_mem
R17737 Globalenvs.transf_partial
R17708 Globalenvs.init_mem_transf_partial
R17737 Globalenvs.transf_partial
R17708 Globalenvs.init_mem_transf_partial
R17761 Globalenvs.transform_program_transform_partial_program
R17761 Globalenvs.transform_program_transform_partial_program
FOp
R263 AST.comparison
R337 AST.comparison
R428 Integers.int
R414 AST.comparison
R523 Integers.int
R509 AST.comparison
R604 AST.comparison
R680 AST.comparison
R767 Integers.int
R846 Integers.int
R1006 Integers.int
R1097 Floats.float
R1193 Integers.int
R1184 AST.ident
R1294 Integers.int
R1726 Integers.int
R1857 Integers.int
R1980 Integers.int
R2247 Integers.int
R2369 Integers.int
R2493 Integers.int
R2884 Integers.int
R2956 Integers.int
R3106 Integers.int
R3099 Integers.int
R4092 Op.condition
R4222 Integers.int
R4370 Integers.int
R4361 AST.ident
R4445 Integers.int
R4436 AST.ident
R4518 Integers.int
R4644 Coq.Init.Datatypes.option
R4651 Coq.Init.Datatypes.bool
R4664 Integers.eq
R4673 Integers.zero
R4763 Coq.Init.Datatypes.None
R4703 AST.Ceq
R4710 Coq.Init.Datatypes.Some
R4715 Coq.Init.Datatypes.false
R4723 AST.Cne
R4730 Coq.Init.Datatypes.Some
R4735 Coq.Init.Datatypes.true
R4747 Coq.Init.Datatypes.None
R4637 Integers.int
R4621 AST.comparison
R4831 Coq.Init.Datatypes.option
R4838 Coq.Init.Datatypes.bool
R4872 Op.Ccomp
R4889 Coq.Lists.List "x :: y" list_scope
R4881 Values.Vint
R4900 Coq.Lists.List "x :: y" list_scope
R4892 Values.Vint
R4903 Coq.Lists.List.nil
R4916 Coq.Init.Datatypes.Some
R4922 Integers.cmp
R4943 Op.Ccomp
R4963 Coq.Lists.List "x :: y" list_scope
R4952 Values.Vptr
R4977 Coq.Lists.List "x :: y" list_scope
R4966 Values.Vptr
R4980 Coq.Lists.List.nil
R4996 Values.eq_block
R5044 Coq.Init.Datatypes.None
R5016 Coq.Init.Datatypes.Some
R5022 Integers.cmp
R5053 Op.Ccomp
R5073 Coq.Lists.List "x :: y" list_scope
R5062 Values.Vptr
R5084 Coq.Lists.List "x :: y" list_scope
R5076 Values.Vint
R5087 Coq.Lists.List.nil
R5100 Op.eval_compare_null
R5127 Op.Ccomp
R5144 Coq.Lists.List "x :: y" list_scope
R5136 Values.Vint
R5158 Coq.Lists.List "x :: y" list_scope
R5147 Values.Vptr
R5161 Coq.Lists.List.nil
R5174 Op.eval_compare_null
R5201 Op.Ccompu
R5219 Coq.Lists.List "x :: y" list_scope
R5211 Values.Vint
R5230 Coq.Lists.List "x :: y" list_scope
R5222 Values.Vint
R5233 Coq.Lists.List.nil
R5246 Coq.Init.Datatypes.Some
R5252 Integers.cmpu
R5274 Op.Ccompu
R5295 Coq.Lists.List "x :: y" list_scope
R5284 Values.Vptr
R5309 Coq.Lists.List "x :: y" list_scope
R5298 Values.Vptr
R5312 Coq.Lists.List.nil
R5328 Values.eq_block
R5377 Coq.Init.Datatypes.None
R5348 Coq.Init.Datatypes.Some
R5354 Integers.cmpu
R5386 Op.Ccompu
R5407 Coq.Lists.List "x :: y" list_scope
R5396 Values.Vptr
R5418 Coq.Lists.List "x :: y" list_scope
R5410 Values.Vint
R5421 Coq.Lists.List.nil
R5434 Op.eval_compare_null
R5461 Op.Ccompu
R5479 Coq.Lists.List "x :: y" list_scope
R5471 Values.Vint
R5493 Coq.Lists.List "x :: y" list_scope
R5482 Values.Vptr
R5496 Coq.Lists.List.nil
R5509 Op.eval_compare_null
R5536 Op.Ccompimm
R5558 Coq.Lists.List "x :: y" list_scope
R5550 Values.Vint
R5561 Coq.Lists.List.nil
R5574 Coq.Init.Datatypes.Some
R5580 Integers.cmp
R5600 Op.Ccompimm
R5625 Coq.Lists.List "x :: y" list_scope
R5614 Values.Vptr
R5628 Coq.Lists.List.nil
R5641 Op.eval_compare_null
R5667 Op.Ccompuimm
R5690 Coq.Lists.List "x :: y" list_scope
R5682 Values.Vint
R5693 Coq.Lists.List.nil
R5706 Coq.Init.Datatypes.Some
R5712 Integers.cmpu
R5733 Op.Ccompuimm
R5759 Coq.Lists.List "x :: y" list_scope
R5748 Values.Vptr
R5762 Coq.Lists.List.nil
R5775 Op.eval_compare_null
R5801 Op.Ccompf
R5821 Coq.Lists.List "x :: y" list_scope
R5811 Values.Vfloat
R5834 Coq.Lists.List "x :: y" list_scope
R5824 Values.Vfloat
R5837 Coq.Lists.List.nil
R5850 Coq.Init.Datatypes.Some
R5856 Floats.cmp
R5879 Op.Cnotcompf
R5902 Coq.Lists.List "x :: y" list_scope
R5892 Values.Vfloat
R5915 Coq.Lists.List "x :: y" list_scope
R5905 Values.Vfloat
R5918 Coq.Lists.List.nil
R5931 Coq.Init.Datatypes.Some
R5937 Coq.Bool.Bool.negb
R5943 Floats.cmp
R5967 Op.Cmaskzero
R5988 Coq.Lists.List "x :: y" list_scope
R5980 Values.Vint
R5991 Coq.Lists.List.nil
R6004 Coq.Init.Datatypes.Some
R6010 Integers.eq
R6032 Integers.zero
R6018 Integers.and
R6046 Op.Cmasknotzero
R6070 Coq.Lists.List "x :: y" list_scope
R6062 Values.Vint
R6073 Coq.Lists.List.nil
R6086 Coq.Init.Datatypes.Some
R6092 Coq.Bool.Bool.negb
R6098 Integers.eq
R6120 Integers.zero
R6106 Integers.and
R6149 Coq.Init.Datatypes.None
R4819 Coq.Lists.List.list
R4824 Values.val
R4803 Op.condition
R6208 Coq.Init.Datatypes.option
R6215 Values.val
R6242 Values.Vptr
R6254 Coq.Init.Datatypes.Some
R6260 Values.Vptr
R6268 Integers.add
R6295 Coq.Init.Datatypes.None
R6201 Integers.int
R6188 Values.val
R6411 Coq.Init.Datatypes.option
R6418 Values.val
R6449 Op.Omove
R6458 Coq.Lists.List "x :: y" list_scope
R6460 Coq.Lists.List.nil
R6467 Coq.Init.Datatypes.Some
R6479 Op.Ointconst
R6492 Coq.Lists.List.nil
R6499 Coq.Init.Datatypes.Some
R6505 Values.Vint
R6517 Op.Ofloatconst
R6532 Coq.Lists.List.nil
R6539 Coq.Init.Datatypes.Some
R6545 Values.Vfloat
R6559 Op.Oaddrsymbol
R6578 Coq.Lists.List.nil
R6597 Globalenvs.find_symbol
R6634 Coq.Init.Datatypes.None
R6642 Coq.Init.Datatypes.None
R6655 Coq.Init.Datatypes.Some
R6665 Coq.Init.Datatypes.Some
R6671 Values.Vptr
R6697 Op.Oaddrstack
R6713 Coq.Lists.List.nil
R6720 Op.offset_sp
R6741 Op.Oundef
R6749 Coq.Lists.List.nil
R6756 Coq.Init.Datatypes.Some
R6761 Values.Vundef
R6772 Op.Ocast8signed
R6794 Coq.Lists.List "x :: y" list_scope
R6786 Values.Vint
R6797 Coq.Lists.List.nil
R6804 Coq.Init.Datatypes.Some
R6810 Values.Vint
R6816 Integers.cast8signed
R6841 Op.Ocast16signed
R6864 Coq.Lists.List "x :: y" list_scope
R6856 Values.Vint
R6867 Coq.Lists.List.nil
R6874 Coq.Init.Datatypes.Some
R6880 Values.Vint
R6886 Integers.cast16signed
R6912 Op.Oadd
R6926 Coq.Lists.List "x :: y" list_scope
R6918 Values.Vint
R6937 Coq.Lists.List "x :: y" list_scope
R6929 Values.Vint
R6940 Coq.Lists.List.nil
R6947 Coq.Init.Datatypes.Some
R6953 Values.Vint
R6959 Integers.add
R6979 Op.Oadd
R6993 Coq.Lists.List "x :: y" list_scope
R6985 Values.Vint
R7007 Coq.Lists.List "x :: y" list_scope
R6996 Values.Vptr
R7010 Coq.Lists.List.nil
R7017 Coq.Init.Datatypes.Some
R7023 Values.Vptr
R7032 Integers.add
R7052 Op.Oadd
R7069 Coq.Lists.List "x :: y" list_scope
R7058 Values.Vptr
R7080 Coq.Lists.List "x :: y" list_scope
R7072 Values.Vint
R7083 Coq.Lists.List.nil
R7090 Coq.Init.Datatypes.Some
R7096 Values.Vptr
R7105 Integers.add
R7125 Op.Oaddimm
R7144 Coq.Lists.List "x :: y" list_scope
R7136 Values.Vint
R7147 Coq.Lists.List.nil
R7154 Coq.Init.Datatypes.Some
R7160 Values.Vint
R7166 Integers.add
R7185 Op.Oaddimm
R7207 Coq.Lists.List "x :: y" list_scope
R7196 Values.Vptr
R7210 Coq.Lists.List.nil
R7217 Coq.Init.Datatypes.Some
R7223 Values.Vptr
R7232 Integers.add
R7251 Op.Osub
R7265 Coq.Lists.List "x :: y" list_scope
R7257 Values.Vint
R7276 Coq.Lists.List "x :: y" list_scope
R7268 Values.Vint
R7279 Coq.Lists.List.nil
R7286 Coq.Init.Datatypes.Some
R7292 Values.Vint
R7298 Integers.sub
R7318 Op.Osub
R7335 Coq.Lists.List "x :: y" list_scope
R7324 Values.Vptr
R7346 Coq.Lists.List "x :: y" list_scope
R7338 Values.Vint
R7349 Coq.Lists.List.nil
R7356 Coq.Init.Datatypes.Some
R7362 Values.Vptr
R7371 Integers.sub
R7391 Op.Osub
R7408 Coq.Lists.List "x :: y" list_scope
R7397 Values.Vptr
R7422 Coq.Lists.List "x :: y" list_scope
R7411 Values.Vptr
R7425 Coq.Lists.List.nil
R7441 Values.eq_block
R7494 Coq.Init.Datatypes.None
R7461 Coq.Init.Datatypes.Some
R7467 Values.Vint
R7473 Integers.sub
R7503 Op.Osubimm
R7522 Coq.Lists.List "x :: y" list_scope
R7514 Values.Vint
R7525 Coq.Lists.List.nil
R7532 Coq.Init.Datatypes.Some
R7538 Values.Vint
R7544 Integers.sub
R7563 Op.Omul
R7577 Coq.Lists.List "x :: y" list_scope
R7569 Values.Vint
R7588 Coq.Lists.List "x :: y" list_scope
R7580 Values.Vint
R7591 Coq.Lists.List.nil
R7598 Coq.Init.Datatypes.Some
R7604 Values.Vint
R7610 Integers.mul
R7630 Op.Omulimm
R7649 Coq.Lists.List "x :: y" list_scope
R7641 Values.Vint
R7652 Coq.Lists.List.nil
R7659 Coq.Init.Datatypes.Some
R7665 Values.Vint
R7671 Integers.mul
R7690 Op.Odiv
R7704 Coq.Lists.List "x :: y" list_scope
R7696 Values.Vint
R7715 Coq.Lists.List "x :: y" list_scope
R7707 Values.Vint
R7718 Coq.Lists.List.nil
R7734 Integers.eq
R7744 Integers.zero
R7768 Coq.Init.Datatypes.Some
R7774 Values.Vint
R7780 Integers.divs
R7758 Coq.Init.Datatypes.None
R7801 Op.Odivu
R7816 Coq.Lists.List "x :: y" list_scope
R7808 Values.Vint
R7827 Coq.Lists.List "x :: y" list_scope
R7819 Values.Vint
R7830 Coq.Lists.List.nil
R7846 Integers.eq
R7856 Integers.zero
R7880 Coq.Init.Datatypes.Some
R7886 Values.Vint
R7892 Integers.divu
R7870 Coq.Init.Datatypes.None
R7913 Op.Oand
R7927 Coq.Lists.List "x :: y" list_scope
R7919 Values.Vint
R7938 Coq.Lists.List "x :: y" list_scope
R7930 Values.Vint
R7941 Coq.Lists.List.nil
R7948 Coq.Init.Datatypes.Some
R7954 Values.Vint
R7960 Integers.and
R7980 Op.Oandimm
R7999 Coq.Lists.List "x :: y" list_scope
R7991 Values.Vint
R8002 Coq.Lists.List.nil
R8009 Coq.Init.Datatypes.Some
R8015 Values.Vint
R8021 Integers.and
R8040 Op.Oor
R8053 Coq.Lists.List "x :: y" list_scope
R8045 Values.Vint
R8064 Coq.Lists.List "x :: y" list_scope
R8056 Values.Vint
R8067 Coq.Lists.List.nil
R8074 Coq.Init.Datatypes.Some
R8080 Values.Vint
R8086 Integers.or
R8105 Op.Oorimm
R8123 Coq.Lists.List "x :: y" list_scope
R8115 Values.Vint
R8126 Coq.Lists.List.nil
R8133 Coq.Init.Datatypes.Some
R8139 Values.Vint
R8145 Integers.or
R8163 Op.Oxor
R8177 Coq.Lists.List "x :: y" list_scope
R8169 Values.Vint
R8188 Coq.Lists.List "x :: y" list_scope
R8180 Values.Vint
R8191 Coq.Lists.List.nil
R8198 Coq.Init.Datatypes.Some
R8204 Values.Vint
R8210 Integers.xor
R8230 Op.Oxorimm
R8249 Coq.Lists.List "x :: y" list_scope
R8241 Values.Vint
R8252 Coq.Lists.List.nil
R8259 Coq.Init.Datatypes.Some
R8265 Values.Vint
R8271 Integers.xor
R8290 Op.Onand
R8305 Coq.Lists.List "x :: y" list_scope
R8297 Values.Vint
R8316 Coq.Lists.List "x :: y" list_scope
R8308 Values.Vint
R8319 Coq.Lists.List.nil
R8326 Coq.Init.Datatypes.Some
R8332 Values.Vint
R8338 Integers.not
R8347 Integers.and
R8368 Op.Onor
R8382 Coq.Lists.List "x :: y" list_scope
R8374 Values.Vint
R8393 Coq.Lists.List "x :: y" list_scope
R8385 Values.Vint
R8396 Coq.Lists.List.nil
R8403 Coq.Init.Datatypes.Some
R8409 Values.Vint
R8415 Integers.not
R8424 Integers.or
R8444 Op.Onxor
R8459 Coq.Lists.List "x :: y" list_scope
R8451 Values.Vint
R8470 Coq.Lists.List "x :: y" list_scope
R8462 Values.Vint
R8473 Coq.Lists.List.nil
R8480 Coq.Init.Datatypes.Some
R8486 Values.Vint
R8492 Integers.not
R8501 Integers.xor
R8522 Op.Oshl
R8536 Coq.Lists.List "x :: y" list_scope
R8528 Values.Vint
R8547 Coq.Lists.List "x :: y" list_scope
R8539 Values.Vint
R8550 Coq.Lists.List.nil
R8566 Integers.ltu
R8578 Integers.repr
R8629 Coq.Init.Datatypes.None
R8596 Coq.Init.Datatypes.Some
R8602 Values.Vint
R8608 Integers.shl
R8638 Op.Oshr
R8652 Coq.Lists.List "x :: y" list_scope
R8644 Values.Vint
R8663 Coq.Lists.List "x :: y" list_scope
R8655 Values.Vint
R8666 Coq.Lists.List.nil
R8682 Integers.ltu
R8694 Integers.repr
R8745 Coq.Init.Datatypes.None
R8712 Coq.Init.Datatypes.Some
R8718 Values.Vint
R8724 Integers.shr
R8754 Op.Oshrimm
R8773 Coq.Lists.List "x :: y" list_scope
R8765 Values.Vint
R8776 Coq.Lists.List.nil
R8792 Integers.ltu
R8803 Integers.repr
R8853 Coq.Init.Datatypes.None
R8821 Coq.Init.Datatypes.Some
R8827 Values.Vint
R8833 Integers.shr
R8862 Op.Oshrximm
R8882 Coq.Lists.List "x :: y" list_scope
R8874 Values.Vint
R8885 Coq.Lists.List.nil
R8901 Integers.ltu
R8912 Integers.repr
R8963 Coq.Init.Datatypes.None
R8930 Coq.Init.Datatypes.Some
R8936 Values.Vint
R8942 Integers.shrx
R8972 Op.Oshru
R8987 Coq.Lists.List "x :: y" list_scope
R8979 Values.Vint
R8998 Coq.Lists.List "x :: y" list_scope
R8990 Values.Vint
R9001 Coq.Lists.List.nil
R9017 Integers.ltu
R9029 Integers.repr
R9081 Coq.Init.Datatypes.None
R9047 Coq.Init.Datatypes.Some
R9053 Values.Vint
R9059 Integers.shru
R9090 Op.Orolm
R9117 Coq.Lists.List "x :: y" list_scope
R9109 Values.Vint
R9120 Coq.Lists.List.nil
R9133 Coq.Init.Datatypes.Some
R9139 Values.Vint
R9145 Integers.rolm
R9175 Op.Onegf
R9192 Coq.Lists.List "x :: y" list_scope
R9182 Values.Vfloat
R9195 Coq.Lists.List.nil
R9202 Coq.Init.Datatypes.Some
R9208 Values.Vfloat
R9216 Floats.neg
R9235 Op.Oabsf
R9252 Coq.Lists.List "x :: y" list_scope
R9242 Values.Vfloat
R9255 Coq.Lists.List.nil
R9262 Coq.Init.Datatypes.Some
R9268 Values.Vfloat
R9276 Floats.abs
R9295 Op.Oaddf
R9312 Coq.Lists.List "x :: y" list_scope
R9302 Values.Vfloat
R9325 Coq.Lists.List "x :: y" list_scope
R9315 Values.Vfloat
R9328 Coq.Lists.List.nil
R9335 Coq.Init.Datatypes.Some
R9341 Values.Vfloat
R9349 Floats.add
R9371 Op.Osubf
R9388 Coq.Lists.List "x :: y" list_scope
R9378 Values.Vfloat
R9401 Coq.Lists.List "x :: y" list_scope
R9391 Values.Vfloat
R9404 Coq.Lists.List.nil
R9411 Coq.Init.Datatypes.Some
R9417 Values.Vfloat
R9425 Floats.sub
R9447 Op.Omulf
R9464 Coq.Lists.List "x :: y" list_scope
R9454 Values.Vfloat
R9477 Coq.Lists.List "x :: y" list_scope
R9467 Values.Vfloat
R9480 Coq.Lists.List.nil
R9487 Coq.Init.Datatypes.Some
R9493 Values.Vfloat
R9501 Floats.mul
R9523 Op.Odivf
R9540 Coq.Lists.List "x :: y" list_scope
R9530 Values.Vfloat
R9553 Coq.Lists.List "x :: y" list_scope
R9543 Values.Vfloat
R9556 Coq.Lists.List.nil
R9563 Coq.Init.Datatypes.Some
R9569 Values.Vfloat
R9577 Floats.div
R9599 Op.Omuladdf
R9619 Coq.Lists.List "x :: y" list_scope
R9609 Values.Vfloat
R9632 Coq.Lists.List "x :: y" list_scope
R9622 Values.Vfloat
R9645 Coq.Lists.List "x :: y" list_scope
R9635 Values.Vfloat
R9648 Coq.Lists.List.nil
R9661 Coq.Init.Datatypes.Some
R9667 Values.Vfloat
R9675 Floats.add
R9686 Floats.mul
R9712 Op.Omulsubf
R9732 Coq.Lists.List "x :: y" list_scope
R9722 Values.Vfloat
R9745 Coq.Lists.List "x :: y" list_scope
R9735 Values.Vfloat
R9758 Coq.Lists.List "x :: y" list_scope
R9748 Values.Vfloat
R9761 Coq.Lists.List.nil
R9774 Coq.Init.Datatypes.Some
R9780 Values.Vfloat
R9788 Floats.sub
R9799 Floats.mul
R9825 Op.Osingleoffloat
R9851 Coq.Lists.List "x :: y" list_scope
R9841 Values.Vfloat
R9854 Coq.Lists.List.nil
R9867 Coq.Init.Datatypes.Some
R9873 Values.Vfloat
R9881 Floats.singleoffloat
R9910 Op.Ointoffloat
R9933 Coq.Lists.List "x :: y" list_scope
R9923 Values.Vfloat
R9936 Coq.Lists.List.nil
R9950 Coq.Init.Datatypes.Some
R9956 Values.Vint
R9962 Floats.intoffloat
R9988 Op.Ofloatofint
R10009 Coq.Lists.List "x :: y" list_scope
R10001 Values.Vint
R10012 Coq.Lists.List.nil
R10026 Coq.Init.Datatypes.Some
R10032 Values.Vfloat
R10040 Floats.floatofint
R10066 Op.Ofloatofintu
R10088 Coq.Lists.List "x :: y" list_scope
R10080 Values.Vint
R10091 Coq.Lists.List.nil
R10105 Coq.Init.Datatypes.Some
R10111 Values.Vfloat
R10119 Floats.floatofintu
R10146 Op.Ocmp
R10171 Op.eval_condition
R10204 Coq.Init.Datatypes.None
R10212 Coq.Init.Datatypes.None
R10225 Coq.Init.Datatypes.Some
R10230 Coq.Init.Datatypes.false
R10239 Coq.Init.Datatypes.Some
R10244 Values.Vfalse
R10259 Coq.Init.Datatypes.Some
R10264 Coq.Init.Datatypes.true
R10272 Coq.Init.Datatypes.Some
R10277 Values.Vtrue
R10305 Coq.Init.Datatypes.None
R6399 Coq.Lists.List.list
R6404 Values.val
R6383 Op.operation
R6369 Values.val
R6354 Globalenvs.t
R10425 Coq.Init.Datatypes.option
R10432 Values.val
R10465 Op.Aindexed
R10488 Coq.Lists.List "x :: y" list_scope
R10477 Values.Vptr
R10491 Coq.Lists.List.nil
R10504 Coq.Init.Datatypes.Some
R10510 Values.Vptr
R10519 Integers.add
R10538 Op.Aindexed2
R10560 Coq.Lists.List "x :: y" list_scope
R10549 Values.Vptr
R10571 Coq.Lists.List "x :: y" list_scope
R10563 Values.Vint
R10574 Coq.Lists.List.nil
R10587 Coq.Init.Datatypes.Some
R10593 Values.Vptr
R10602 Integers.add
R10622 Op.Aindexed2
R10641 Coq.Lists.List "x :: y" list_scope
R10633 Values.Vint
R10655 Coq.Lists.List "x :: y" list_scope
R10644 Values.Vptr
R10658 Coq.Lists.List.nil
R10671 Coq.Init.Datatypes.Some
R10677 Values.Vptr
R10686 Integers.add
R10706 Op.Aglobal
R10721 Coq.Lists.List.nil
R10740 Globalenvs.find_symbol
R10777 Coq.Init.Datatypes.None
R10785 Coq.Init.Datatypes.None
R10798 Coq.Init.Datatypes.Some
R10808 Coq.Init.Datatypes.Some
R10814 Values.Vptr
R10840 Op.Abased
R10862 Coq.Lists.List "x :: y" list_scope
R10854 Values.Vint
R10865 Coq.Lists.List.nil
R10884 Globalenvs.find_symbol
R10921 Coq.Init.Datatypes.None
R10929 Coq.Init.Datatypes.None
R10942 Coq.Init.Datatypes.Some
R10952 Coq.Init.Datatypes.Some
R10958 Values.Vptr
R10966 Integers.add
R10997 Op.Ainstack
R11011 Coq.Lists.List.nil
R11024 Op.offset_sp
R11053 Coq.Init.Datatypes.None
R10413 Coq.Lists.List.list
R10418 Values.val
R10396 Op.addressing
R10380 Values.val
R10365 Globalenvs.t
R11113 Op.condition
R11148 Op.Ccomp
R11159 Op.Ccomp
R11165 AST.negate_comparison
R11190 Op.Ccompu
R11202 Op.Ccompu
R11209 AST.negate_comparison
R11234 Op.Ccompimm
R11250 Op.Ccompimm
R11260 AST.negate_comparison
R11287 Op.Ccompuimm
R11304 Op.Ccompuimm
R11315 AST.negate_comparison
R11342 Op.Ccompf
R11354 Op.Cnotcompf
R11370 Op.Cnotcompf
R11385 Op.Ccompf
R11398 Op.Cmaskzero
R11413 Op.Cmasknotzero
R11432 Op.Cmasknotzero
R11450 Op.Cmaskzero
R11101 Op.condition
R11553 Coq.Init.Logic "x = y" type_scope
R11526 Coq.Lists.List.nil
R11539 Coq.Lists.List "x :: y" list_scope
R11555 Coq.Init.Datatypes.Some
R11711 Coq.Init.Logic "x = y" type_scope
R11649 Values.Vundef
R11663 Values.Vint
R11677 Values.Vfloat
R11693 Values.Vptr
R11713 Coq.Init.Datatypes.Some
R11800 Coq.Init.Logic "x = y" type_scope
R11793 Coq.Init.Datatypes.Some
R11802 Coq.Init.Datatypes.Some
R12020 Coq.Init.Logic "x = y" type_scope
R11978 Op.eval_compare_null
R11997 AST.negate_comparison
R12022 Coq.Init.Datatypes.Some
R12028 Coq.Bool.Bool.negb
R11964 Coq.Init.Logic "x = y" type_scope
R11942 Op.eval_compare_null
R11966 Coq.Init.Datatypes.Some
R12096 Integers.eq
R12105 Integers.zero
R12096 Integers.eq
R12105 Integers.zero
R12380 Coq.Init.Logic "x = y" type_scope
R12338 Op.eval_condition
R12354 Op.negate_condition
R12382 Coq.Init.Datatypes.Some
R12388 Coq.Bool.Bool.negb
R12324 Coq.Init.Logic "x = y" type_scope
R12301 Op.eval_condition
R12326 Coq.Init.Datatypes.Some
R12292 Coq.Init.Datatypes.bool
R12278 Coq.Lists.List.list
R12283 Values.val
R12262 Op.condition
R12483 Integers.negate_cmp
R12483 Integers.negate_cmp
R12513 Op.eval_negate_compare_null
R12513 Op.eval_negate_compare_null
R12553 Op.eval_negate_compare_null
R12553 Op.eval_negate_compare_null
R12597 Values.eq_block
R12597 Values.eq_block
R12622 Integers.negate_cmp
R12622 Integers.negate_cmp
R12676 Integers.negate_cmpu
R12676 Integers.negate_cmpu
R12707 Op.eval_negate_compare_null
R12707 Op.eval_negate_compare_null
R12747 Op.eval_negate_compare_null
R12747 Op.eval_negate_compare_null
R12791 Values.eq_block
R12791 Values.eq_block
R12816 Integers.negate_cmpu
R12816 Integers.negate_cmpu
R12871 Integers.negate_cmp
R12871 Integers.negate_cmp
R12901 Op.eval_negate_compare_null
R12901 Op.eval_negate_compare_null
R12943 Integers.negate_cmpu
R12943 Integers.negate_cmpu
R12974 Op.eval_negate_compare_null
R12974 Op.eval_negate_compare_null
R13024 Coq.Bool.Bool.negb_elim
R13024 Coq.Bool.Bool.negb_elim
R13059 Coq.Bool.Bool.negb_elim
R13059 Coq.Bool.Bool.negb_elim
R13139 Globalenvs.t
R13164 Globalenvs.t
R13248 Coq.Init.Logic "x = y" type_scope
R13225 Globalenvs.find_symbol
R13250 Globalenvs.find_symbol
R13217 AST.ident
R13356 Coq.Init.Logic "x = y" type_scope
R13328 Op.eval_operation
R13358 Op.eval_operation
R13580 Coq.Init.Logic "x = y" type_scope
R13549 Op.eval_addressing
R13582 Op.eval_addressing
R13854 Coq.Init.Datatypes.option
R13892 Op.Omove
R13903 Coq.Lists.List "x :: y" list_scope
R13906 Coq.Lists.List.nil
R13913 Coq.Init.Datatypes.Some
R13934 Coq.Init.Datatypes.None
R13844 Coq.Lists.List.list
R13826 Op.operation
R14090 Coq.Init.Logic "A /\ B" type_scope
R14082 Coq.Init.Logic "x = y" type_scope
R14084 Op.Omove
R14098 Coq.Init.Logic "x = y" type_scope
R14102 Coq.Lists.List "x :: y" list_scope
R14105 Coq.Lists.List.nil
R14065 Coq.Init.Logic "x = y" type_scope
R14039 Op.is_move_operation
R14067 Coq.Init.Datatypes.Some
R14021 Coq.Lists.List.list
R14003 Op.operation
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R14381 Coq.Lists.List.list
R14386 AST.typ
R14412 Op.Ccomp
R14428 Coq.Lists.List "x :: y" list_scope
R14423 AST.Tint
R14436 Coq.Lists.List "x :: y" list_scope
R14431 AST.Tint
R14439 Coq.Lists.List.nil
R14447 Op.Ccompu
R14464 Coq.Lists.List "x :: y" list_scope
R14459 AST.Tint
R14472 Coq.Lists.List "x :: y" list_scope
R14467 AST.Tint
R14475 Coq.Lists.List.nil
R14483 Op.Ccompimm
R14504 Coq.Lists.List "x :: y" list_scope
R14499 AST.Tint
R14507 Coq.Lists.List.nil
R14515 Op.Ccompuimm
R14537 Coq.Lists.List "x :: y" list_scope
R14532 AST.Tint
R14540 Coq.Lists.List.nil
R14548 Op.Ccompf
R14567 Coq.Lists.List "x :: y" list_scope
R14560 AST.Tfloat
R14577 Coq.Lists.List "x :: y" list_scope
R14570 AST.Tfloat
R14580 Coq.Lists.List.nil
R14588 Op.Cnotcompf
R14610 Coq.Lists.List "x :: y" list_scope
R14603 AST.Tfloat
R14620 Coq.Lists.List "x :: y" list_scope
R14613 AST.Tfloat
R14623 Coq.Lists.List.nil
R14631 Op.Cmaskzero
R14651 Coq.Lists.List "x :: y" list_scope
R14646 AST.Tint
R14654 Coq.Lists.List.nil
R14662 Op.Cmasknotzero
R14685 Coq.Lists.List "x :: y" list_scope
R14680 AST.Tint
R14688 Coq.Lists.List.nil
R14368 Op.condition
R14756 Coq.Init.Datatypes "x * y" type_scope
R14747 Coq.Lists.List.list
R14752 AST.typ
R14758 AST.typ
R14785 Op.Omove
R14794 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14795 Coq.Lists.List.nil
R14800 AST.Tint
R14836 Op.Ointconst
R14851 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14852 Coq.Lists.List.nil
R14857 AST.Tint
R14867 Op.Ofloatconst
R14884 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14885 Coq.Lists.List.nil
R14890 AST.Tfloat
R14902 Op.Oaddrsymbol
R14921 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14922 Coq.Lists.List.nil
R14927 AST.Tint
R14937 Op.Oaddrstack
R14953 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14954 Coq.Lists.List.nil
R14959 AST.Tint
R14969 Op.Oundef
R14979 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14980 Coq.Lists.List.nil
R14985 AST.Tint
R15020 Op.Ocast8signed
R15036 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15042 Coq.Lists.List "x :: y" list_scope
R15037 AST.Tint
R15045 Coq.Lists.List.nil
R15050 AST.Tint
R15060 Op.Ocast16signed
R15077 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15083 Coq.Lists.List "x :: y" list_scope
R15078 AST.Tint
R15086 Coq.Lists.List.nil
R15091 AST.Tint
R15101 Op.Oadd
R15109 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15115 Coq.Lists.List "x :: y" list_scope
R15110 AST.Tint
R15123 Coq.Lists.List "x :: y" list_scope
R15118 AST.Tint
R15126 Coq.Lists.List.nil
R15131 AST.Tint
R15141 Op.Oaddimm
R15154 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15160 Coq.Lists.List "x :: y" list_scope
R15155 AST.Tint
R15163 Coq.Lists.List.nil
R15168 AST.Tint
R15178 Op.Osub
R15186 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15192 Coq.Lists.List "x :: y" list_scope
R15187 AST.Tint
R15200 Coq.Lists.List "x :: y" list_scope
R15195 AST.Tint
R15203 Coq.Lists.List.nil
R15208 AST.Tint
R15218 Op.Osubimm
R15231 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15237 Coq.Lists.List "x :: y" list_scope
R15232 AST.Tint
R15240 Coq.Lists.List.nil
R15245 AST.Tint
R15255 Op.Omul
R15263 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15269 Coq.Lists.List "x :: y" list_scope
R15264 AST.Tint
R15277 Coq.Lists.List "x :: y" list_scope
R15272 AST.Tint
R15280 Coq.Lists.List.nil
R15285 AST.Tint
R15295 Op.Omulimm
R15308 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15314 Coq.Lists.List "x :: y" list_scope
R15309 AST.Tint
R15317 Coq.Lists.List.nil
R15322 AST.Tint
R15332 Op.Odiv
R15340 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15346 Coq.Lists.List "x :: y" list_scope
R15341 AST.Tint
R15354 Coq.Lists.List "x :: y" list_scope
R15349 AST.Tint
R15357 Coq.Lists.List.nil
R15362 AST.Tint
R15372 Op.Odivu
R15381 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15387 Coq.Lists.List "x :: y" list_scope
R15382 AST.Tint
R15395 Coq.Lists.List "x :: y" list_scope
R15390 AST.Tint
R15398 Coq.Lists.List.nil
R15403 AST.Tint
R15413 Op.Oand
R15421 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15427 Coq.Lists.List "x :: y" list_scope
R15422 AST.Tint
R15435 Coq.Lists.List "x :: y" list_scope
R15430 AST.Tint
R15438 Coq.Lists.List.nil
R15443 AST.Tint
R15453 Op.Oandimm
R15466 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15472 Coq.Lists.List "x :: y" list_scope
R15467 AST.Tint
R15475 Coq.Lists.List.nil
R15480 AST.Tint
R15490 Op.Oor
R15497 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15503 Coq.Lists.List "x :: y" list_scope
R15498 AST.Tint
R15511 Coq.Lists.List "x :: y" list_scope
R15506 AST.Tint
R15514 Coq.Lists.List.nil
R15519 AST.Tint
R15529 Op.Oorimm
R15541 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15547 Coq.Lists.List "x :: y" list_scope
R15542 AST.Tint
R15550 Coq.Lists.List.nil
R15555 AST.Tint
R15565 Op.Oxor
R15573 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15579 Coq.Lists.List "x :: y" list_scope
R15574 AST.Tint
R15587 Coq.Lists.List "x :: y" list_scope
R15582 AST.Tint
R15590 Coq.Lists.List.nil
R15595 AST.Tint
R15605 Op.Oxorimm
R15618 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15624 Coq.Lists.List "x :: y" list_scope
R15619 AST.Tint
R15627 Coq.Lists.List.nil
R15632 AST.Tint
R15642 Op.Onand
R15651 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15657 Coq.Lists.List "x :: y" list_scope
R15652 AST.Tint
R15665 Coq.Lists.List "x :: y" list_scope
R15660 AST.Tint
R15668 Coq.Lists.List.nil
R15673 AST.Tint
R15683 Op.Onor
R15691 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15697 Coq.Lists.List "x :: y" list_scope
R15692 AST.Tint
R15705 Coq.Lists.List "x :: y" list_scope
R15700 AST.Tint
R15708 Coq.Lists.List.nil
R15713 AST.Tint
R15723 Op.Onxor
R15732 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15738 Coq.Lists.List "x :: y" list_scope
R15733 AST.Tint
R15746 Coq.Lists.List "x :: y" list_scope
R15741 AST.Tint
R15749 Coq.Lists.List.nil
R15754 AST.Tint
R15764 Op.Oshl
R15772 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15778 Coq.Lists.List "x :: y" list_scope
R15773 AST.Tint
R15786 Coq.Lists.List "x :: y" list_scope
R15781 AST.Tint
R15789 Coq.Lists.List.nil
R15794 AST.Tint
R15804 Op.Oshr
R15812 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15818 Coq.Lists.List "x :: y" list_scope
R15813 AST.Tint
R15826 Coq.Lists.List "x :: y" list_scope
R15821 AST.Tint
R15829 Coq.Lists.List.nil
R15834 AST.Tint
R15844 Op.Oshrimm
R15857 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15863 Coq.Lists.List "x :: y" list_scope
R15858 AST.Tint
R15866 Coq.Lists.List.nil
R15871 AST.Tint
R15881 Op.Oshrximm
R15895 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15901 Coq.Lists.List "x :: y" list_scope
R15896 AST.Tint
R15904 Coq.Lists.List.nil
R15909 AST.Tint
R15919 Op.Oshru
R15928 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15934 Coq.Lists.List "x :: y" list_scope
R15929 AST.Tint
R15942 Coq.Lists.List "x :: y" list_scope
R15937 AST.Tint
R15945 Coq.Lists.List.nil
R15950 AST.Tint
R15960 Op.Orolm
R15973 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15979 Coq.Lists.List "x :: y" list_scope
R15974 AST.Tint
R15982 Coq.Lists.List.nil
R15987 AST.Tint
R15997 Op.Onegf
R16006 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16014 Coq.Lists.List "x :: y" list_scope
R16007 AST.Tfloat
R16017 Coq.Lists.List.nil
R16022 AST.Tfloat
R16034 Op.Oabsf
R16043 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16051 Coq.Lists.List "x :: y" list_scope
R16044 AST.Tfloat
R16054 Coq.Lists.List.nil
R16059 AST.Tfloat
R16071 Op.Oaddf
R16080 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16088 Coq.Lists.List "x :: y" list_scope
R16081 AST.Tfloat
R16098 Coq.Lists.List "x :: y" list_scope
R16091 AST.Tfloat
R16101 Coq.Lists.List.nil
R16106 AST.Tfloat
R16118 Op.Osubf
R16127 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16135 Coq.Lists.List "x :: y" list_scope
R16128 AST.Tfloat
R16145 Coq.Lists.List "x :: y" list_scope
R16138 AST.Tfloat
R16148 Coq.Lists.List.nil
R16153 AST.Tfloat
R16165 Op.Omulf
R16174 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16182 Coq.Lists.List "x :: y" list_scope
R16175 AST.Tfloat
R16192 Coq.Lists.List "x :: y" list_scope
R16185 AST.Tfloat
R16195 Coq.Lists.List.nil
R16200 AST.Tfloat
R16212 Op.Odivf
R16221 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16229 Coq.Lists.List "x :: y" list_scope
R16222 AST.Tfloat
R16239 Coq.Lists.List "x :: y" list_scope
R16232 AST.Tfloat
R16242 Coq.Lists.List.nil
R16247 AST.Tfloat
R16259 Op.Omuladdf
R16271 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16279 Coq.Lists.List "x :: y" list_scope
R16272 AST.Tfloat
R16289 Coq.Lists.List "x :: y" list_scope
R16282 AST.Tfloat
R16299 Coq.Lists.List "x :: y" list_scope
R16292 AST.Tfloat
R16302 Coq.Lists.List.nil
R16307 AST.Tfloat
R16319 Op.Omulsubf
R16331 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16339 Coq.Lists.List "x :: y" list_scope
R16332 AST.Tfloat
R16349 Coq.Lists.List "x :: y" list_scope
R16342 AST.Tfloat
R16359 Coq.Lists.List "x :: y" list_scope
R16352 AST.Tfloat
R16362 Coq.Lists.List.nil
R16367 AST.Tfloat
R16379 Op.Osingleoffloat
R16397 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16405 Coq.Lists.List "x :: y" list_scope
R16398 AST.Tfloat
R16408 Coq.Lists.List.nil
R16413 AST.Tfloat
R16425 Op.Ointoffloat
R16440 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16448 Coq.Lists.List "x :: y" list_scope
R16441 AST.Tfloat
R16451 Coq.Lists.List.nil
R16456 AST.Tint
R16466 Op.Ofloatofint
R16481 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16487 Coq.Lists.List "x :: y" list_scope
R16482 AST.Tint
R16490 Coq.Lists.List.nil
R16495 AST.Tfloat
R16507 Op.Ofloatofintu
R16523 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16529 Coq.Lists.List "x :: y" list_scope
R16524 AST.Tint
R16532 Coq.Lists.List.nil
R16537 AST.Tfloat
R16549 Op.Ocmp
R16559 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16560 Op.type_of_condition
R16581 AST.Tint
R14734 Op.operation
R16646 Coq.Lists.List.list
R16651 AST.typ
R16680 Op.Aindexed
R16699 Coq.Lists.List "x :: y" list_scope
R16694 AST.Tint
R16702 Coq.Lists.List.nil
R16710 Op.Aindexed2
R16728 Coq.Lists.List "x :: y" list_scope
R16723 AST.Tint
R16736 Coq.Lists.List "x :: y" list_scope
R16731 AST.Tint
R16739 Coq.Lists.List.nil
R16747 Op.Aglobal
R16762 Coq.Lists.List.nil
R16770 Op.Abased
R16789 Coq.Lists.List "x :: y" list_scope
R16784 AST.Tint
R16792 Coq.Lists.List.nil
R16800 Op.Ainstack
R16814 Coq.Lists.List.nil
R16632 Op.addressing
R16871 AST.typ
R16897 AST.Mint8signed
R16912 AST.Tint
R16921 AST.Mint8unsigned
R16938 AST.Tint
R16947 AST.Mint16signed
R16963 AST.Tint
R16972 AST.Mint16unsigned
R16990 AST.Tint
R16999 AST.Mint32
R17009 AST.Tint
R17018 AST.Mfloat32
R17030 AST.Tfloat
R17041 AST.Mfloat64
R17053 AST.Tfloat
R16855 AST.memory_chunk
R17120 Globalenvs.t
R17261 Values.has_type
R17277 Coq.Init.Datatypes.snd
R17282 Op.type_of_operation
R17247 Coq.Init.Logic "x = y" type_scope
R17218 Op.eval_operation
R17249 Coq.Init.Datatypes.Some
R17203 Coq.Init.Logic "x <> y" type_scope
R17206 Op.Oundef
R17188 Coq.Init.Logic "x <> y" type_scope
R17191 Op.Omove
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17383 Coq.Init.Logic.I
R17412 Globalenvs.find_symbol
R17476 Coq.Init.Logic.I
R17412 Globalenvs.find_symbol
R17476 Coq.Init.Logic.I
R17565 Coq.Init.Logic.I
R17565 Coq.Init.Logic.I
R17580 Values.eq_block
R17580 Values.eq_block
R17632 Coq.Init.Logic.I
R17632 Coq.Init.Logic.I
R17663 Integers.eq
R17673 Integers.zero
R17663 Integers.eq
R17673 Integers.zero
R17737 Coq.Init.Logic.I
R17737 Coq.Init.Logic.I
R17752 Integers.eq
R17762 Integers.zero
R17752 Integers.eq
R17762 Integers.zero
R17826 Coq.Init.Logic.I
R17826 Coq.Init.Logic.I
R17841 Integers.ltu
R17853 Integers.repr
R17841 Integers.ltu
R17853 Integers.repr
R17906 Coq.Init.Logic.I
R17906 Coq.Init.Logic.I
R17935 Integers.ltu
R17947 Integers.repr
R17935 Integers.ltu
R17947 Integers.repr
R18000 Coq.Init.Logic.I
R18000 Coq.Init.Logic.I
R18029 Integers.ltu
R18040 Integers.repr
R18029 Integers.ltu
R18040 Integers.repr
R18093 Coq.Init.Logic.I
R18093 Coq.Init.Logic.I
R18122 Integers.ltu
R18133 Integers.repr
R18122 Integers.ltu
R18133 Integers.repr
R18186 Coq.Init.Logic.I
R18186 Coq.Init.Logic.I
R18215 Integers.ltu
R18227 Integers.repr
R18215 Integers.ltu
R18227 Integers.repr
R18280 Coq.Init.Logic.I
R18280 Coq.Init.Logic.I
R18309 Op.eval_condition
R18309 Op.eval_condition
R18382 Coq.Init.Logic.I
R18382 Coq.Init.Logic.I
R18382 Coq.Init.Logic.I
R18500 Values.has_type
R18516 Op.type_of_chunk
R18486 Coq.Init.Logic "x = y" type_scope
R18463 Mem.loadv
R18488 Coq.Init.Datatypes.Some
R18580 Values.has_type
R18620 Op.type_of_chunk
R18594 Values.load_result
R18580 Values.has_type
R18620 Op.type_of_chunk
R18594 Values.load_result
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18679 Coq.Init.Logic.I
R18776 Mem.load_inv
R18776 Mem.load_inv
R19092 Globalenvs.t
R19158 Values.val
R19173 Globalenvs.find_symbol
R19207 Coq.Init.Datatypes.Some
R19217 Values.Vptr
R19232 Coq.Init.Datatypes.None
R19240 Values.Vundef
R19151 Integers.int
R19138 AST.ident
R19322 Values.val
R19355 Op.Ccomp
R19366 Coq.Lists.List "x :: y" list_scope
R19370 Coq.Lists.List "x :: y" list_scope
R19372 Coq.Lists.List.nil
R19379 Values.cmp
R19399 Op.Ccompu
R19411 Coq.Lists.List "x :: y" list_scope
R19415 Coq.Lists.List "x :: y" list_scope
R19417 Coq.Lists.List.nil
R19424 Values.cmpu
R19445 Op.Ccompimm
R19461 Coq.Lists.List "x :: y" list_scope
R19463 Coq.Lists.List.nil
R19470 Values.cmp
R19484 Values.Vint
R19496 Op.Ccompuimm
R19513 Coq.Lists.List "x :: y" list_scope
R19515 Coq.Lists.List.nil
R19522 Values.cmpu
R19537 Values.Vint
R19549 Op.Ccompf
R19561 Coq.Lists.List "x :: y" list_scope
R19565 Coq.Lists.List "x :: y" list_scope
R19567 Coq.Lists.List.nil
R19574 Values.cmpf
R19595 Op.Cnotcompf
R19610 Coq.Lists.List "x :: y" list_scope
R19614 Coq.Lists.List "x :: y" list_scope
R19616 Coq.Lists.List.nil
R19623 Values.notbool
R19635 Values.cmpf
R19657 Op.Cmaskzero
R19672 Coq.Lists.List "x :: y" list_scope
R19674 Coq.Lists.List.nil
R19681 Values.notbool
R19694 Values.and
R19706 Values.Vint
R19719 Op.Cmasknotzero
R19737 Coq.Lists.List "x :: y" list_scope
R19739 Coq.Lists.List.nil
R19746 Values.notbool
R19758 Values.notbool
R19771 Values.and
R19783 Values.Vint
R19805 Values.Vundef
R19310 Coq.Lists.List.list
R19315 Values.val
R19294 Op.condition
R19895 Values.val
R19926 Op.Omove
R19935 Coq.Lists.List "x :: y" list_scope
R19937 Coq.Lists.List.nil
R19951 Op.Ointconst
R19964 Coq.Lists.List.nil
R19971 Values.Vint
R19982 Op.Ofloatconst
R19997 Coq.Lists.List.nil
R20004 Values.Vfloat
R20017 Op.Oaddrsymbol
R20036 Coq.Lists.List.nil
R20043 Op.find_symbol_offset
R20072 Op.Oaddrstack
R20088 Coq.Lists.List.nil
R20095 Values.add
R20107 Values.Vint
R20121 Op.Oundef
R20129 Coq.Lists.List.nil
R20136 Values.Vundef
R20147 Op.Ocast8signed
R20163 Coq.Lists.List "x :: y" list_scope
R20165 Coq.Lists.List.nil
R20172 Values.cast8signed
R20195 Op.Ocast16signed
R20212 Coq.Lists.List "x :: y" list_scope
R20214 Coq.Lists.List.nil
R20221 Values.cast16signed
R20245 Op.Oadd
R20253 Coq.Lists.List "x :: y" list_scope
R20257 Coq.Lists.List "x :: y" list_scope
R20259 Coq.Lists.List.nil
R20266 Values.add
R20284 Op.Oaddimm
R20297 Coq.Lists.List "x :: y" list_scope
R20299 Coq.Lists.List.nil
R20306 Values.add
R20318 Values.Vint
R20330 Op.Osub
R20338 Coq.Lists.List "x :: y" list_scope
R20342 Coq.Lists.List "x :: y" list_scope
R20344 Coq.Lists.List.nil
R20351 Values.sub
R20369 Op.Osubimm
R20382 Coq.Lists.List "x :: y" list_scope
R20384 Coq.Lists.List.nil
R20391 Values.sub
R20400 Values.Vint
R20415 Op.Omul
R20423 Coq.Lists.List "x :: y" list_scope
R20427 Coq.Lists.List "x :: y" list_scope
R20429 Coq.Lists.List.nil
R20436 Values.mul
R20454 Op.Omulimm
R20467 Coq.Lists.List "x :: y" list_scope
R20469 Coq.Lists.List.nil
R20476 Values.mul
R20488 Values.Vint
R20500 Op.Odiv
R20508 Coq.Lists.List "x :: y" list_scope
R20512 Coq.Lists.List "x :: y" list_scope
R20514 Coq.Lists.List.nil
R20521 Values.divs
R20540 Op.Odivu
R20549 Coq.Lists.List "x :: y" list_scope
R20553 Coq.Lists.List "x :: y" list_scope
R20555 Coq.Lists.List.nil
R20562 Values.divu
R20581 Op.Oand
R20589 Coq.Lists.List "x :: y" list_scope
R20593 Coq.Lists.List "x :: y" list_scope
R20595 Coq.Lists.List.nil
R20602 Values.and
R20620 Op.Oandimm
R20633 Coq.Lists.List "x :: y" list_scope
R20635 Coq.Lists.List.nil
R20642 Values.and
R20654 Values.Vint
R20666 Op.Oor
R20673 Coq.Lists.List "x :: y" list_scope
R20677 Coq.Lists.List "x :: y" list_scope
R20679 Coq.Lists.List.nil
R20686 Values.or
R20703 Op.Oorimm
R20715 Coq.Lists.List "x :: y" list_scope
R20717 Coq.Lists.List.nil
R20724 Values.or
R20735 Values.Vint
R20747 Op.Oxor
R20755 Coq.Lists.List "x :: y" list_scope
R20759 Coq.Lists.List "x :: y" list_scope
R20761 Coq.Lists.List.nil
R20768 Values.xor
R20786 Op.Oxorimm
R20799 Coq.Lists.List "x :: y" list_scope
R20801 Coq.Lists.List.nil
R20808 Values.xor
R20820 Values.Vint
R20832 Op.Onand
R20841 Coq.Lists.List "x :: y" list_scope
R20845 Coq.Lists.List "x :: y" list_scope
R20847 Coq.Lists.List.nil
R20854 Values.notint
R20865 Values.and
R20884 Op.Onor
R20892 Coq.Lists.List "x :: y" list_scope
R20896 Coq.Lists.List "x :: y" list_scope
R20898 Coq.Lists.List.nil
R20905 Values.notint
R20916 Values.or
R20934 Op.Onxor
R20943 Coq.Lists.List "x :: y" list_scope
R20947 Coq.Lists.List "x :: y" list_scope
R20949 Coq.Lists.List.nil
R20956 Values.notint
R20967 Values.xor
R20986 Op.Oshl
R20994 Coq.Lists.List "x :: y" list_scope
R20998 Coq.Lists.List "x :: y" list_scope
R21000 Coq.Lists.List.nil
R21007 Values.shl
R21025 Op.Oshr
R21033 Coq.Lists.List "x :: y" list_scope
R21037 Coq.Lists.List "x :: y" list_scope
R21039 Coq.Lists.List.nil
R21046 Values.shr
R21064 Op.Oshrimm
R21077 Coq.Lists.List "x :: y" list_scope
R21079 Coq.Lists.List.nil
R21086 Values.shr
R21098 Values.Vint
R21110 Op.Oshrximm
R21124 Coq.Lists.List "x :: y" list_scope
R21126 Coq.Lists.List.nil
R21133 Values.shrx
R21146 Values.Vint
R21158 Op.Oshru
R21167 Coq.Lists.List "x :: y" list_scope
R21171 Coq.Lists.List "x :: y" list_scope
R21173 Coq.Lists.List.nil
R21180 Values.shru
R21199 Op.Orolm
R21220 Coq.Lists.List "x :: y" list_scope
R21222 Coq.Lists.List.nil
R21229 Values.rolm
R21257 Op.Onegf
R21266 Coq.Lists.List "x :: y" list_scope
R21268 Coq.Lists.List.nil
R21275 Values.negf
R21291 Op.Oabsf
R21300 Coq.Lists.List "x :: y" list_scope
R21302 Coq.Lists.List.nil
R21309 Values.absf
R21325 Op.Oaddf
R21334 Coq.Lists.List "x :: y" list_scope
R21338 Coq.Lists.List "x :: y" list_scope
R21340 Coq.Lists.List.nil
R21347 Values.addf
R21366 Op.Osubf
R21375 Coq.Lists.List "x :: y" list_scope
R21379 Coq.Lists.List "x :: y" list_scope
R21381 Coq.Lists.List.nil
R21388 Values.subf
R21407 Op.Omulf
R21416 Coq.Lists.List "x :: y" list_scope
R21420 Coq.Lists.List "x :: y" list_scope
R21422 Coq.Lists.List.nil
R21429 Values.mulf
R21448 Op.Odivf
R21457 Coq.Lists.List "x :: y" list_scope
R21461 Coq.Lists.List "x :: y" list_scope
R21463 Coq.Lists.List.nil
R21470 Values.divf
R21489 Op.Omuladdf
R21501 Coq.Lists.List "x :: y" list_scope
R21505 Coq.Lists.List "x :: y" list_scope
R21509 Coq.Lists.List "x :: y" list_scope
R21511 Coq.Lists.List.nil
R21518 Values.addf
R21528 Values.mulf
R21551 Op.Omulsubf
R21563 Coq.Lists.List "x :: y" list_scope
R21567 Coq.Lists.List "x :: y" list_scope
R21571 Coq.Lists.List "x :: y" list_scope
R21573 Coq.Lists.List.nil
R21580 Values.subf
R21590 Values.mulf
R21613 Op.Osingleoffloat
R21631 Coq.Lists.List "x :: y" list_scope
R21633 Coq.Lists.List.nil
R21640 Values.singleoffloat
R21665 Op.Ointoffloat
R21680 Coq.Lists.List "x :: y" list_scope
R21682 Coq.Lists.List.nil
R21689 Values.intoffloat
R21711 Op.Ofloatofint
R21726 Coq.Lists.List "x :: y" list_scope
R21728 Coq.Lists.List.nil
R21735 Values.floatofint
R21757 Op.Ofloatofintu
R21773 Coq.Lists.List "x :: y" list_scope
R21775 Coq.Lists.List.nil
R21782 Values.floatofintu
R21805 Op.Ocmp
R21818 Op.eval_condition_total
R21856 Values.Vundef
R19883 Coq.Lists.List.list
R19888 Values.val
R19867 Op.operation
R19857 Values.val
R21954 Values.val
R21987 Op.Aindexed
R22001 Coq.Lists.List "x :: y" list_scope
R22003 Coq.Lists.List.nil
R22010 Values.add
R22022 Values.Vint
R22034 Op.Aindexed2
R22047 Coq.Lists.List "x :: y" list_scope
R22051 Coq.Lists.List "x :: y" list_scope
R22053 Coq.Lists.List.nil
R22060 Values.add
R22078 Op.Aglobal
R22093 Coq.Lists.List.nil
R22100 Op.find_symbol_offset
R22129 Op.Abased
R22145 Coq.Lists.List "x :: y" list_scope
R22147 Coq.Lists.List.nil
R22154 Values.add
R22163 Op.find_symbol_offset
R22196 Op.Ainstack
R22210 Coq.Lists.List.nil
R22217 Values.add
R22229 Values.Vint
R22251 Values.Vundef
R21942 Coq.Lists.List.list
R21947 Values.val
R21925 Op.addressing
R21913 Values.val
R22409 Coq.Init.Logic "x = y" type_scope
R22356 Integers.eq
R22365 Integers.zero
R22403 Values.Vundef
R22379 Values.cmp_mismatch
R22413 Values.of_bool
R22338 Coq.Init.Logic "x = y" type_scope
R22316 Op.eval_compare_null
R22340 Coq.Init.Datatypes.Some
R22484 Integers.eq
R22493 Integers.zero
R22484 Integers.eq
R22493 Integers.zero
R22694 Coq.Init.Logic "x = y" type_scope
R22668 Op.eval_condition_total
R22696 Values.of_bool
R22654 Coq.Init.Logic "x = y" type_scope
R22634 Op.eval_condition
R22656 Coq.Init.Datatypes.Some
R22832 Op.eval_compare_null_weaken
R22832 Op.eval_compare_null_weaken
R22832 Op.eval_compare_null_weaken
R22832 Op.eval_compare_null_weaken
R22832 Op.eval_compare_null_weaken
R22832 Op.eval_compare_null_weaken
R22832 Op.eval_compare_null_weaken
R22832 Op.eval_compare_null_weaken
R22832 Op.eval_compare_null_weaken
R22832 Op.eval_compare_null_weaken
R22832 Op.eval_compare_null_weaken
R22899 Coqlib.zeq
R22899 Coqlib.zeq
R22957 Coqlib.zeq
R22957 Coqlib.zeq
R22999 Values.notbool_negb_1
R22999 Values.notbool_negb_1
R23038 Values.notbool_negb_1
R23038 Values.notbool_negb_1
R23190 Coq.Init.Logic "x = y" type_scope
R23160 Op.eval_operation_total
R23146 Coq.Init.Logic "x = y" type_scope
R23117 Op.eval_operation
R23148 Coq.Init.Datatypes.Some
R23345 Globalenvs.find_symbol
R23345 Globalenvs.find_symbol
R23515 Coqlib.zeq
R23515 Coqlib.zeq
R23550 Integers.eq
R23560 Integers.zero
R23550 Integers.eq
R23560 Integers.zero
R23595 Integers.eq
R23605 Integers.zero
R23595 Integers.eq
R23605 Integers.zero
R23640 Integers.ltu
R23652 Integers.repr
R23640 Integers.ltu
R23652 Integers.repr
R23691 Integers.ltu
R23703 Integers.repr
R23691 Integers.ltu
R23703 Integers.repr
R23742 Integers.ltu
R23753 Integers.repr
R23742 Integers.ltu
R23753 Integers.repr
R23792 Integers.ltu
R23803 Integers.repr
R23792 Integers.ltu
R23803 Integers.repr
R23842 Integers.ltu
R23854 Integers.repr
R23842 Integers.ltu
R23854 Integers.repr
R23891 Op.eval_condition
R23891 Op.eval_condition
R23956 Values.of_bool
R23956 Values.of_bool
R23980 Op.eval_condition_weaken
R23980 Op.eval_condition_weaken
R24198 Coq.Init.Logic "x = y" type_scope
R24165 Op.eval_addressing_total
R24151 Coq.Init.Logic "x = y" type_scope
R24119 Op.eval_addressing
R24153 Coq.Init.Datatypes.Some
R24329 Integers.add_commut
R24329 Integers.add_commut
R24387 Globalenvs.find_symbol
R24387 Globalenvs.find_symbol
R24466 Globalenvs.find_symbol
R24466 Globalenvs.find_symbol
R24653 Values.is_bool
R24666 Op.eval_condition_total
R24754 Values.undef_is_bool
R24798 Values.undef_is_bool
R24847 Values.undef_is_bool
R24754 Values.undef_is_bool
R24754 Values.undef_is_bool
R24754 Values.undef_is_bool
R24754 Values.undef_is_bool
R24754 Values.undef_is_bool
R24754 Values.undef_is_bool
R24754 Values.undef_is_bool
R24754 Values.undef_is_bool
R24754 Values.undef_is_bool
R24754 Values.undef_is_bool
R24754 Values.undef_is_bool
R24754 Values.undef_is_bool
R24754 Values.undef_is_bool
R24754 Values.undef_is_bool
R24754 Values.undef_is_bool
R24754 Values.undef_is_bool
R24798 Values.undef_is_bool
R24798 Values.undef_is_bool
R24798 Values.undef_is_bool
R24798 Values.undef_is_bool
R24798 Values.undef_is_bool
R24798 Values.undef_is_bool
R24798 Values.undef_is_bool
R24798 Values.undef_is_bool
R24798 Values.undef_is_bool
R24798 Values.undef_is_bool
R24798 Values.undef_is_bool
R24798 Values.undef_is_bool
R24798 Values.undef_is_bool
R24798 Values.undef_is_bool
R24798 Values.undef_is_bool
R24798 Values.undef_is_bool
R24847 Values.undef_is_bool
R24847 Values.undef_is_bool
R24847 Values.undef_is_bool
R24847 Values.undef_is_bool
R24847 Values.undef_is_bool
R24847 Values.undef_is_bool
R24847 Values.undef_is_bool
R24847 Values.undef_is_bool
R24882 Values.cmp_is_bool
R24882 Values.cmp_is_bool
R24907 Values.cmpu_is_bool
R24907 Values.cmpu_is_bool
R24933 Values.cmp_is_bool
R24933 Values.cmp_is_bool
R24958 Values.cmpu_is_bool
R24958 Values.cmpu_is_bool
R24984 Values.cmpf_is_bool
R24984 Values.cmpf_is_bool
R25010 Values.notbool_is_bool
R25010 Values.notbool_is_bool
R25039 Values.notbool_is_bool
R25039 Values.notbool_is_bool
R25068 Values.notbool_is_bool
R25068 Values.notbool_is_bool
FCminor
R260 AST.ident
R288 AST.ident
R320 Op.operation
R378 Op.addressing
R362 AST.memory_chunk
R438 Op.addressing
R422 AST.memory_chunk
R489 AST.signature
R623 Coq.Init.Datatypes.nat
R714 Op.condition
R931 Cminor.expr
R961 Cminor.condexpr
R1070 Coq.Init.Datatypes.nat
R1095 Coq.Init.Datatypes.option
R1102 Cminor.expr
R1248 AST.signature
R1272 Coq.Lists.List.list
R1277 AST.ident
R1295 Coq.Lists.List.list
R1300 AST.ident
R1324 Coq.ZArith.BinInt.Z
R1338 Cminor.stmtlist
R1373 AST.program
R1385 Cminor.function
R1489 Coq.Init.Datatypes.nat
R1520 Coq.Init.Datatypes.option
R1527 Values.val
R1669 Cminor.Out_normal
R1681 Coq.Init.Datatypes.None
R1691 Coq.Init.Logic "x = y" type_scope
R1693 Values.Vundef
R1704 Cminor.Out_return
R1715 Coq.Init.Datatypes.None
R1721 Coq.Init.Datatypes.None
R1731 Coq.Init.Logic "x = y" type_scope
R1733 Values.Vundef
R1744 Cminor.Out_return
R1756 Coq.Init.Datatypes.Some
R1766 Coq.Init.Datatypes.Some
R1779 Coq.Init.Logic "x = y" type_scope
R1796 Coq.Init.Logic.False
R1629 Values.val
R1613 Coq.Init.Datatypes.option
R1620 AST.typ
R1599 Cminor.outcome
R1852 Cminor.outcome
R1884 Cminor.Out_normal
R1898 Cminor.Out_normal
R1913 Cminor.Out_exit
R1922 Coq.Init.Datatypes.O
R1927 Cminor.Out_normal
R1942 Cminor.Out_exit
R1952 Coq.Init.Datatypes.S
R1960 Cminor.Out_exit
R1975 Cminor.Out_return
R1994 Cminor.Out_return
R1841 Cminor.outcome
R2037 Globalenvs.t
R2044 Cminor.function
R2072 Maps.t
R2080 Values.val
R2106 Coq.Lists.List.list
R2111 Values.val
R2183 Cminor.env
R2157 Coq.Lists.List.list
R2162 AST.ident
R2142 Coq.Lists.List.list
R2147 Values.val
R2217 Coq.Lists.List "x :: y" list_scope
R2227 Coq.Lists.List "x :: y" list_scope
R2236 Maps.set
R2278 Coq.Lists.List "x :: y" list_scope
R2285 Coq.Lists.List.nil
R2292 Maps.set
R2324 Coq.Lists.List.nil
R2305 Values.Vundef
R2344 Maps.empty
R2356 Values.val
R2157 Coq.Lists.List.list
R2162 AST.ident
R2142 Coq.Lists.List.list
R2147 Values.val
R2428 Cminor.env
R2409 Cminor.env
R2393 Coq.Lists.List.list
R2398 AST.ident
R2455 Coq.Lists.List.nil
R2471 Coq.Lists.List "x :: y" list_scope
R2480 Maps.set
R2493 Values.Vundef
R2409 Cminor.env
R2393 Coq.Lists.List.list
R2398 AST.ident
R2556 Cminor.genv
R2664 Values.val
R2657 Mem.mem
R2650 Cminor.env
R2633 Cminor.expr
R2626 Mem.mem
R2619 Cminor.env
R2600 Cminor.letenv
R2593 Values.val
R4702 Coq.Init.Datatypes.bool
R4695 Mem.mem
R4688 Cminor.env
R4667 Cminor.condexpr
R4660 Mem.mem
R4653 Cminor.env
R4634 Cminor.letenv
R4627 Values.val
R5446 Coq.Lists.List.list
R5451 Values.val
R5439 Mem.mem
R5432 Cminor.env
R5411 Cminor.exprlist
R5404 Mem.mem
R5397 Cminor.env
R5378 Cminor.letenv
R5371 Values.val
R5829 Values.val
R5822 Mem.mem
R5802 Coq.Lists.List.list
R5807 Values.val
R5790 Cminor.function
R5783 Mem.mem
R6303 Cminor.outcome
R6296 Mem.mem
R6289 Cminor.env
R6272 Cminor.stmt
R6265 Mem.mem
R6258 Cminor.env
R6242 Values.val
R7681 Cminor.outcome
R7674 Mem.mem
R7667 Cminor.env
R7646 Cminor.stmtlist
R7639 Mem.mem
R7632 Cminor.env
R7616 Values.val
R2783 Cminor.Evar
R2744 Coq.Init.Logic "x = y" type_scope
R2729 Maps.get
R2746 Coq.Init.Datatypes.Some
R2934 Maps.set
R2919 Cminor.Eassign
R3130 Cminor.Eop
R3091 Coq.Init.Logic "x = y" type_scope
R3064 Op.eval_operation
R3093 Coq.Init.Datatypes.Some
R3375 Cminor.Eload
R3336 Coq.Init.Logic "x = y" type_scope
R3315 Mem.loadv
R3338 Coq.Init.Datatypes.Some
R3297 Coq.Init.Logic "x = y" type_scope
R3267 Op.eval_addressing
R3299 Coq.Init.Datatypes.Some
R3687 Cminor.Estore
R3647 Coq.Init.Logic "x = y" type_scope
R3623 Mem.storev
R3649 Coq.Init.Datatypes.Some
R3605 Coq.Init.Logic "x = y" type_scope
R3575 Op.eval_addressing
R3607 Coq.Init.Datatypes.Some
R4023 Cminor.Ecall
R3946 Coq.Init.Logic "x = y" type_scope
R3938 Cminor.fn_sig
R3917 Coq.Init.Logic "x = y" type_scope
R3895 Globalenvs.find_funct
R3919 Coq.Init.Datatypes.Some
R4252 Cminor.Econdition
R4455 Cminor.Elet
R4402 Coq.Lists.List "x :: y" list_scope
R4580 Cminor.Eletvar
R4541 Coq.Init.Logic "x = y" type_scope
R4526 Coq.Lists.List.nth_error
R4543 Coq.Init.Datatypes.Some
R4800 Coq.Init.Datatypes.true
R4789 Cminor.CEtrue
R4889 Coq.Init.Datatypes.false
R4877 Cminor.CEfalse
R5072 Cminor.CEcond
R5029 Coq.Init.Logic "x = y" type_scope
R5006 Op.eval_condition
R5031 Coq.Init.Datatypes.Some
R5312 Cminor.CEcondition
R5544 Coq.Lists.List.nil
R5535 Cminor.Enil
R5748 Coq.Lists.List "x :: y" list_scope
R5727 Cminor.Econs
R6195 Mem.free
R6111 Cminor.outcome_result_value
R6148 AST.sig_res
R6139 Cminor.fn_sig
R6083 Cminor.fn_body
R6057 Values.Vptr
R6065 Integers.zero
R6029 Coq.Init.Logic "x = y" type_scope
R5973 Cminor.set_locals
R5997 Cminor.set_params
R6017 Cminor.fn_params
R5987 Cminor.fn_vars
R5953 Coq.Init.Logic "x = y" type_scope
R5921 Mem.alloc
R5938 Cminor.fn_stackspace
R5955 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R6448 Cminor.Out_normal
R6433 Cminor.Sexpr
R6388 Coq.Lists.List.nil
R6668 Cminor.Sifthenelse
R6554 Coq.Lists.List.nil
R6885 Cminor.Sloop
R6838 Cminor.Sloop
R6798 Cminor.Out_normal
R7054 Cminor.Sloop
R7013 Coq.Init.Logic "x <> y" type_scope
R7016 Cminor.Out_normal
R7210 Cminor.outcome_block
R7192 Cminor.Sblock
R7306 Cminor.Out_exit
R7292 Cminor.Sexit
R7405 Cminor.Out_return
R7416 Coq.Init.Datatypes.None
R7386 Cminor.Sreturn
R7394 Coq.Init.Datatypes.None
R7565 Cminor.Out_return
R7577 Coq.Init.Datatypes.Some
R7540 Cminor.Sreturn
R7549 Coq.Init.Datatypes.Some
R7495 Coq.Lists.List.nil
R7772 Cminor.Out_normal
R7763 Cminor.Snil
R7968 Cminor.Scons
R7881 Cminor.Out_normal
R8140 Cminor.Scons
R8095 Coq.Init.Logic "x <> y" type_scope
R8098 Cminor.Out_normal
R8298 Coq.Init.Logic "'exists' x , p" type_scope
R8308 Coq.Init.Logic "'exists' x , p" type_scope
R8318 Coq.Init.Logic "'exists' x , p" type_scope
R8373 Coq.Init.Logic "A /\ B" type_scope
R8364 Coq.Init.Logic "x = y" type_scope
R8330 Globalenvs.find_symbol
R8353 AST.prog_main
R8366 Coq.Init.Datatypes.Some
R8412 Coq.Init.Logic "A /\ B" type_scope
R8403 Coq.Init.Logic "x = y" type_scope
R8378 Globalenvs.find_funct_ptr
R8405 Coq.Init.Datatypes.Some
R8458 Coq.Init.Logic "A /\ B" type_scope
R8428 Coq.Init.Logic "x = y" type_scope
R8420 Cminor.fn_sig
R8430 AST.mksignature
R8447 Coq.Init.Datatypes.Some
R8452 AST.Tint
R8442 Coq.Lists.List.nil
R8463 Cminor.eval_funcall
R8484 Coq.Lists.List.nil
R8277 Globalenvs.init_mem
R8245 Globalenvs.globalenv
R8218 Values.val
R8205 Cminor.program
FCmconstr
R378 Cminor.expr
R360 Cminor.expr
R351 Coq.Init.Datatypes.nat
R1026 Cminor.condexpr
R1004 Cminor.condexpr
R995 Coq.Init.Datatypes.nat
R1316 Cminor.exprlist
R1294 Cminor.exprlist
R1285 Coq.Init.Datatypes.nat
R405 Cminor.Evar
R416 Cminor.Evar
R428 Cminor.Eassign
R444 Cminor.Eassign
R475 Cminor.Eop
R488 Cminor.Eop
R520 Cminor.Eload
R543 Cminor.Eload
R585 Cminor.Estore
R617 Cminor.Estore
R676 Cminor.Ecall
R694 Cminor.Ecall
R745 Cminor.Econdition
R771 Cminor.Econdition
R838 Cminor.Elet
R850 Cminor.Elet
R883 Coq.Init.Datatypes.S
R895 Cminor.Eletvar
R917 Coq.Arith.Compare_dec.le_gt_dec
R955 Cminor.Eletvar
R936 Cminor.Eletvar
R945 Coq.Init.Datatypes.S
R360 Cminor.expr
R351 Coq.Init.Datatypes.nat
R1057 Cminor.CEtrue
R1067 Cminor.CEtrue
R1078 Cminor.CEfalse
R1089 Cminor.CEfalse
R1101 Cminor.CEcond
R1119 Cminor.CEcond
R1156 Cminor.CEcondition
R1183 Cminor.CEcondition
R1004 Cminor.condexpr
R995 Coq.Init.Datatypes.nat
R1347 Cminor.Enil
R1355 Cminor.Enil
R1364 Cminor.Econs
R1378 Cminor.Econs
R1294 Cminor.exprlist
R1285 Coq.Init.Datatypes.nat
R1456 Cminor.expr
R1464 Cmconstr.lift_expr
R1474 Coq.Init.Datatypes.O
R1449 Cminor.expr
R1495 Cminor.Econs
R1636 Cminor.Eop
R1662 Cmconstr "x ::: y" cminor_scope
R1666 Cminor.Enil
R1641 Op.Osubimm
R1649 Integers.zero
R1627 Cminor.expr
R1706 Cminor.Eop
R1719 Cmconstr "x ::: y" cminor_scope
R1723 Cminor.Enil
R1710 Op.Onegf
R1697 Cminor.expr
R1763 Cminor.Eop
R1776 Cmconstr "x ::: y" cminor_scope
R1780 Cminor.Enil
R1767 Op.Oabsf
R1754 Cminor.expr
R1822 Cminor.Eop
R1841 Cmconstr "x ::: y" cminor_scope
R1845 Cminor.Enil
R1826 Op.Ointoffloat
R1813 Cminor.expr
R1887 Cminor.Eop
R1906 Cmconstr "x ::: y" cminor_scope
R1910 Cminor.Enil
R1891 Op.Ofloatofint
R1878 Cminor.expr
R1953 Cminor.Eop
R1973 Cmconstr "x ::: y" cminor_scope
R1977 Cminor.Enil
R1957 Op.Ofloatofintu
R1944 Cminor.expr
R2313 Cminor.expr
R2401 Cminor.Eop
R2413 Cmconstr "x ::: y" cminor_scope
R2418 Cmconstr "x ::: y" cminor_scope
R2421 Cminor.Enil
R2405 Op.Oand
R2374 Cminor.expr
R2363 Cminor.expr
R2502 Cminor.Eop
R2513 Cmconstr "x ::: y" cminor_scope
R2518 Cmconstr "x ::: y" cminor_scope
R2521 Cminor.Enil
R2506 Op.Oor
R2475 Cminor.expr
R2464 Cminor.expr
R2602 Cminor.Eop
R2614 Cmconstr "x ::: y" cminor_scope
R2619 Cmconstr "x ::: y" cminor_scope
R2622 Cminor.Enil
R2606 Op.Oxor
R2575 Cminor.expr
R2564 Cminor.expr
R2666 Cminor.expr
R2756 Cmconstr.notint_cases
R2781 Cminor.Eop
R2785 Op.Oand
R2793 Cmconstr "x ::: y" cminor_scope
R2798 Cmconstr "x ::: y" cminor_scope
R2801 Cminor.Enil
R2816 Cmconstr.notint_case1
R2839 Cminor.Eop
R2843 Op.Oor
R2850 Cmconstr "x ::: y" cminor_scope
R2855 Cmconstr "x ::: y" cminor_scope
R2858 Cminor.Enil
R2873 Cmconstr.notint_case2
R2896 Cminor.Eop
R2900 Op.Oxor
R2908 Cmconstr "x ::: y" cminor_scope
R2913 Cmconstr "x ::: y" cminor_scope
R2916 Cminor.Enil
R2931 Cmconstr.notint_case3
R2965 Cmconstr.notint_default
R2724 Cminor.expr
R3029 Cmconstr.notint_match
R3053 Cmconstr.notint_case1
R3081 Cminor.Eop
R3094 Cmconstr "x ::: y" cminor_scope
R3099 Cmconstr "x ::: y" cminor_scope
R3102 Cminor.Enil
R3085 Op.Onand
R3112 Cmconstr.notint_case2
R3140 Cminor.Eop
R3152 Cmconstr "x ::: y" cminor_scope
R3157 Cmconstr "x ::: y" cminor_scope
R3160 Cminor.Enil
R3144 Op.Onor
R3170 Cmconstr.notint_case3
R3198 Cminor.Eop
R3211 Cmconstr "x ::: y" cminor_scope
R3216 Cmconstr "x ::: y" cminor_scope
R3219 Cminor.Enil
R3202 Op.Onxor
R3229 Cmconstr.notint_default
R3255 Cminor.Elet
R3263 Cminor.Eop
R3283 Cmconstr "x ::: y" cminor_scope
R3273 Cminor.Eletvar
R3281 Coq.Init.Datatypes.O
R3297 Cmconstr "x ::: y" cminor_scope
R3287 Cminor.Eletvar
R3295 Coq.Init.Datatypes.O
R3301 Cminor.Enil
R3267 Op.Onor
R3012 Cminor.expr
R3355 Cminor.Eop
R3394 Cmconstr "x ::: y" cminor_scope
R3398 Cminor.Enil
R3360 Op.Ocmp
R3366 Op.Ccompuimm
R3380 Integers.zero
R3376 AST.Ceq
R3344 Cminor.expr
R3446 Cminor.expr
R3427 Cminor.expr
R3473 Cminor.Eop
R3478 Op.Ointconst
R3491 Cminor.Enil
R3505 Cminor.Eop
R3571 Cminor.Enil
R3510 Op.Ointconst
R3524 Integers.eq
R3533 Integers.zero
R3560 Integers.zero
R3547 Integers.one
R3580 Cminor.Eop
R3585 Op.Ocmp
R3610 Cminor.Eop
R3615 Op.Ocmp
R3621 Op.negate_condition
R3654 Cminor.Econdition
R3683 Cminor.Econdition
R3738 Cmconstr.notbool_base
R3427 Cminor.expr
R3797 Cminor.Eop
R3817 Cmconstr "x ::: y" cminor_scope
R3821 Cminor.Enil
R3801 Op.Ocast8signed
R3788 Cminor.expr
R3869 Cminor.Eop
R3908 Cmconstr "x ::: y" cminor_scope
R3912 Cminor.Enil
R3874 Op.Orolm
R3890 Integers.repr
R3880 Integers.zero
R3858 Cminor.expr
R3958 Cminor.Eop
R3979 Cmconstr "x ::: y" cminor_scope
R3983 Cminor.Enil
R3962 Op.Ocast16signed
R3947 Cminor.expr
R4031 Cminor.Eop
R4072 Cmconstr "x ::: y" cminor_scope
R4076 Cminor.Enil
R4036 Op.Orolm
R4052 Integers.repr
R4042 Integers.zero
R4020 Cminor.expr
R4123 Cminor.Eop
R4145 Cmconstr "x ::: y" cminor_scope
R4149 Cminor.Enil
R4127 Op.Osingleoffloat
R4112 Cminor.expr
R4619 Cminor.expr
R4694 Cminor.Eop
R4712 Cminor.Enil
R4699 Op.Ointconst
R4668 Integers.int
R4790 Cminor.Eop
R4812 Cminor.Enil
R4795 Op.Oaddrsymbol
R4764 Integers.int
R4753 AST.ident
R4879 Cminor.Eop
R4898 Cminor.Enil
R4884 Op.Oaddrstack
R4853 Integers.int
R4975 Cminor.Eop
R4994 Cmconstr "x ::: y" cminor_scope
R4998 Cminor.Enil
R4980 Op.Oaddimm
R4948 Cminor.expr
R4939 Integers.int
R5042 Cminor.expr
R5132 Cmconstr.addimm_cases
R5157 Cminor.Eop
R5162 Op.Ointconst
R5175 Cminor.Enil
R5189 Cmconstr.addimm_case1
R5208 Cminor.Eop
R5213 Op.Oaddrsymbol
R5230 Cminor.Enil
R5244 Cmconstr.addimm_case2
R5265 Cminor.Eop
R5270 Op.Oaddrstack
R5284 Cminor.Enil
R5298 Cmconstr.addimm_case3
R5317 Cminor.Eop
R5322 Op.Oaddimm
R5336 Cmconstr "x ::: y" cminor_scope
R5340 Cminor.Enil
R5355 Cmconstr.addimm_case4
R5387 Cmconstr.addimm_default
R5100 Cminor.expr
R5457 Integers.eq
R5466 Integers.zero
R5495 Cmconstr.addimm_match
R5519 Cmconstr.addimm_case1
R5543 Cminor.Eop
R5572 Cminor.Enil
R5548 Op.Ointconst
R5558 Integers.add
R5581 Cmconstr.addimm_case2
R5607 Cminor.Eop
R5641 Cminor.Enil
R5612 Op.Oaddrsymbol
R5627 Integers.add
R5650 Cmconstr.addimm_case3
R5674 Cminor.Eop
R5705 Cminor.Enil
R5679 Op.Oaddrstack
R5691 Integers.add
R5714 Cmconstr.addimm_case4
R5740 Cminor.Eop
R5770 Cmconstr "x ::: y" cminor_scope
R5774 Cminor.Enil
R5745 Op.Oaddimm
R5753 Integers.add
R5784 Cmconstr.addimm_default
R5810 Cminor.Eop
R5829 Cmconstr "x ::: y" cminor_scope
R5833 Cminor.Enil
R5815 Op.Oaddimm
R5443 Cminor.expr
R5434 Integers.int
R6372 Cminor.expr
R6361 Cminor.expr
R6453 Cminor.Eop
R6472 Cminor.Enil
R6458 Op.Ointconst
R6429 Cminor.expr
R6419 Integers.int
R6602 Cminor.Eop
R6622 Cmconstr "x ::: y" cminor_scope
R6625 Cminor.Enil
R6607 Op.Oaddimm
R6571 Cminor.Eop
R6591 Cmconstr "x ::: y" cminor_scope
R6594 Cminor.Enil
R6576 Op.Oaddimm
R6547 Cminor.expr
R6537 Integers.int
R6526 Cminor.expr
R6516 Integers.int
R6710 Cminor.Eop
R6729 Cmconstr "x ::: y" cminor_scope
R6732 Cminor.Enil
R6714 Op.Oaddimm
R6686 Cminor.expr
R6675 Cminor.expr
R6665 Integers.int
R6816 Cminor.Eop
R6835 Cminor.Enil
R6821 Op.Ointconst
R6788 Integers.int
R6777 Cminor.expr
R6924 Cminor.Eop
R6944 Cmconstr "x ::: y" cminor_scope
R6947 Cminor.Enil
R6929 Op.Oaddimm
R6895 Cminor.expr
R6885 Integers.int
R6874 Cminor.expr
R7000 Cminor.expr
R6989 Cminor.expr
R7105 Cmconstr.add_cases
R7130 Cminor.Eop
R7135 Op.Ointconst
R7149 Cminor.Enil
R7163 Cmconstr.add_case4
R7183 Cminor.Eop
R7188 Op.Oaddimm
R7203 Cmconstr "x ::: y" cminor_scope
R7206 Cminor.Enil
R7221 Cmconstr.add_case5
R7256 Cmconstr.add_default
R7072 Cminor.expr
R7061 Cminor.expr
R7362 Cmconstr.add_cases
R7387 Cminor.Eop
R7392 Op.Ointconst
R7406 Cminor.Enil
R7424 Cmconstr.add_case1
R7444 Cminor.Eop
R7449 Op.Oaddimm
R7464 Cmconstr "x ::: y" cminor_scope
R7467 Cminor.Enil
R7474 Cminor.Eop
R7479 Op.Oaddimm
R7494 Cmconstr "x ::: y" cminor_scope
R7497 Cminor.Enil
R7512 Cmconstr.add_case2
R7538 Cminor.Eop
R7542 Op.Oaddimm
R7557 Cmconstr "x ::: y" cminor_scope
R7560 Cminor.Enil
R7579 Cmconstr.add_case3
R7618 Cmconstr.add_match_aux
R7319 Cminor.expr
R7308 Cminor.expr
R7694 Cmconstr.add_match
R7719 Cmconstr.add_case1
R7744 Cmconstr.addimm
R7761 Cmconstr.add_case2
R7792 Cmconstr.addimm
R7816 Cminor.Eop
R7828 Cmconstr "x ::: y" cminor_scope
R7833 Cmconstr "x ::: y" cminor_scope
R7836 Cminor.Enil
R7820 Op.Oadd
R7800 Integers.add
R7847 Cmconstr.add_case3
R7875 Cmconstr.addimm
R7886 Cminor.Eop
R7898 Cmconstr "x ::: y" cminor_scope
R7903 Cmconstr "x ::: y" cminor_scope
R7906 Cminor.Enil
R7890 Op.Oadd
R7917 Cmconstr.add_case4
R7942 Cmconstr.addimm
R7959 Cmconstr.add_case5
R7987 Cmconstr.addimm
R7998 Cminor.Eop
R8010 Cmconstr "x ::: y" cminor_scope
R8015 Cmconstr "x ::: y" cminor_scope
R8018 Cminor.Enil
R8002 Op.Oadd
R8029 Cmconstr.add_default
R8056 Cminor.Eop
R8068 Cmconstr "x ::: y" cminor_scope
R8073 Cmconstr "x ::: y" cminor_scope
R8076 Cminor.Enil
R8060 Op.Oadd
R7677 Cminor.expr
R7666 Cminor.expr
R8590 Cminor.expr
R8579 Cminor.expr
R8676 Cminor.Eop
R8695 Cminor.Enil
R8681 Op.Ointconst
R8648 Integers.int
R8637 Cminor.expr
R8820 Cminor.Eop
R8840 Cmconstr "x ::: y" cminor_scope
R8843 Cminor.Enil
R8825 Op.Oaddimm
R8789 Cminor.Eop
R8809 Cmconstr "x ::: y" cminor_scope
R8812 Cminor.Enil
R8794 Op.Oaddimm
R8765 Cminor.expr
R8755 Integers.int
R8744 Cminor.expr
R8734 Integers.int
R8928 Cminor.Eop
R8948 Cmconstr "x ::: y" cminor_scope
R8951 Cminor.Enil
R8933 Op.Oaddimm
R8904 Cminor.expr
R8893 Cminor.expr
R8883 Integers.int
R9046 Cminor.Eop
R9066 Cmconstr "x ::: y" cminor_scope
R9069 Cminor.Enil
R9051 Op.Oaddimm
R9017 Cminor.expr
R9007 Integers.int
R8996 Cminor.expr
R9122 Cminor.expr
R9111 Cminor.expr
R9227 Cmconstr.sub_cases
R9252 Cminor.Eop
R9257 Op.Oaddimm
R9272 Cmconstr "x ::: y" cminor_scope
R9275 Cminor.Enil
R9290 Cmconstr.sub_case3
R9325 Cmconstr.sub_default
R9194 Cminor.expr
R9183 Cminor.expr
R9431 Cmconstr.sub_cases
R9456 Cminor.Eop
R9461 Op.Ointconst
R9475 Cminor.Enil
R9493 Cmconstr.sub_case1
R9513 Cminor.Eop
R9518 Op.Oaddimm
R9533 Cmconstr "x ::: y" cminor_scope
R9536 Cminor.Enil
R9543 Cminor.Eop
R9548 Op.Oaddimm
R9563 Cmconstr "x ::: y" cminor_scope
R9566 Cminor.Enil
R9581 Cmconstr.sub_case2
R9607 Cminor.Eop
R9612 Op.Oaddimm
R9627 Cmconstr "x ::: y" cminor_scope
R9630 Cminor.Enil
R9649 Cmconstr.sub_case4
R9688 Cmconstr.sub_match_aux
R9388 Cminor.expr
R9377 Cminor.expr
R9764 Cmconstr.sub_match
R9789 Cmconstr.sub_case1
R9814 Cmconstr.addimm
R9822 Integers.neg
R9841 Cmconstr.sub_case2
R9872 Cmconstr.addimm
R9896 Cminor.Eop
R9908 Cmconstr "x ::: y" cminor_scope
R9913 Cmconstr "x ::: y" cminor_scope
R9916 Cminor.Enil
R9900 Op.Osub
R9880 Integers.sub
R9927 Cmconstr.sub_case3
R9955 Cmconstr.addimm
R9966 Cminor.Eop
R9978 Cmconstr "x ::: y" cminor_scope
R9983 Cmconstr "x ::: y" cminor_scope
R9986 Cminor.Enil
R9970 Op.Osub
R9997 Cmconstr.sub_case4
R10025 Cmconstr.addimm
R10046 Cminor.Eop
R10058 Cmconstr "x ::: y" cminor_scope
R10063 Cmconstr "x ::: y" cminor_scope
R10066 Cminor.Enil
R10050 Op.Osub
R10033 Integers.neg
R10077 Cmconstr.sub_default
R10104 Cminor.Eop
R10116 Cmconstr "x ::: y" cminor_scope
R10121 Cmconstr "x ::: y" cminor_scope
R10124 Cminor.Enil
R10108 Op.Osub
R9747 Cminor.expr
R9736 Cminor.expr
R10665 Cminor.expr
R10737 Cminor.Eop
R10756 Cminor.Enil
R10742 Op.Ointconst
R10713 Integers.int
R10849 Cminor.Eop
R10878 Cmconstr "x ::: y" cminor_scope
R10881 Cminor.Enil
R10854 Op.Orolm
R10824 Cminor.expr
R10814 Integers.int
R10801 Integers.int
R10924 Cminor.expr
R11013 Cmconstr.rolm_cases
R11036 Cminor.Eop
R11041 Op.Ointconst
R11055 Cminor.Enil
R11069 Cmconstr.rolm_case1
R11087 Cminor.Eop
R11092 Op.Orolm
R11116 Cmconstr "x ::: y" cminor_scope
R11119 Cminor.Enil
R11134 Cmconstr.rolm_case2
R11178 Cmconstr.rolm_default
R10980 Cminor.expr
R11261 Cmconstr.rolm_match
R11284 Cmconstr.rolm_case1
R11307 Cminor.Eop
R11359 Cminor.Enil
R11312 Op.Ointconst
R11322 Integers.and
R11331 Integers.rol
R11368 Cmconstr.rolm_case2
R11538 Integers.is_rlw_mask
R11617 Cminor.Eop
R11646 Cmconstr "x ::: y" cminor_scope
R11649 Cminor.Enil
R11622 Op.Orolm
R11570 Cminor.Eop
R11597 Cmconstr "x ::: y" cminor_scope
R11600 Cminor.Enil
R11575 Op.Orolm
R11488 Integers.and
R11497 Integers.rol
R11419 Integers.and
R11454 Integers.repr
R11428 Integers.add
R11659 Cmconstr.rolm_default
R11684 Cminor.Eop
R11713 Cmconstr "x ::: y" cminor_scope
R11716 Cminor.Enil
R11689 Op.Orolm
R11245 Integers.int
R11245 Integers.int
R11223 Cminor.expr
R11777 Integers.eq
R11787 Integers.zero
R11818 Integers.ltu
R11830 Integers.repr
R11896 Cminor.Eop
R11908 Cmconstr "x ::: y" cminor_scope
R11934 Cmconstr "x ::: y" cminor_scope
R11911 Cminor.Eop
R11930 Cminor.Enil
R11916 Op.Ointconst
R11937 Cminor.Enil
R11900 Op.Oshl
R11852 Cmconstr.rolm
R11864 Integers.shl
R11872 Integers.mone
R11764 Integers.int
R11753 Cminor.expr
R11993 Integers.eq
R12003 Integers.zero
R12034 Integers.ltu
R12046 Integers.repr
R12137 Cminor.Eop
R12150 Cmconstr "x ::: y" cminor_scope
R12176 Cmconstr "x ::: y" cminor_scope
R12153 Cminor.Eop
R12172 Cminor.Enil
R12158 Op.Ointconst
R12179 Cminor.Enil
R12141 Op.Oshru
R12068 Cmconstr.rolm
R12104 Integers.shru
R12113 Integers.mone
R12077 Integers.sub
R12086 Integers.repr
R11980 Integers.int
R11969 Cminor.expr
R12242 Integers.one_bits
R12269 Coq.Lists.List "x :: y" list_scope
R12272 Coq.Lists.List.nil
R12285 Cmconstr.shlimm
R12303 Coq.Lists.List "x :: y" list_scope
R12308 Coq.Lists.List "x :: y" list_scope
R12311 Coq.Lists.List.nil
R12324 Cminor.Elet
R12341 Cminor.Eop
R12372 Cmconstr "x ::: y" cminor_scope
R12351 Cmconstr.shlimm
R12359 Cminor.Eletvar
R12416 Cmconstr "x ::: y" cminor_scope
R12395 Cmconstr.shlimm
R12403 Cminor.Eletvar
R12420 Cminor.Enil
R12345 Op.Oadd
R12442 Cminor.Eop
R12462 Cmconstr "x ::: y" cminor_scope
R12465 Cminor.Enil
R12447 Op.Omulimm
R12225 Cminor.expr
R12215 Integers.int
R12758 Cminor.expr
R12834 Cminor.Eop
R12853 Cminor.Enil
R12839 Op.Ointconst
R12808 Integers.int
R12932 Cminor.Eop
R12952 Cmconstr "x ::: y" cminor_scope
R12955 Cminor.Enil
R12937 Op.Oaddimm
R12905 Cminor.expr
R12895 Integers.int
R13000 Cminor.expr
R13093 Cmconstr.mulimm_cases
R13118 Cminor.Eop
R13123 Op.Ointconst
R13137 Cminor.Enil
R13151 Cmconstr.mulimm_case1
R13171 Cminor.Eop
R13176 Op.Oaddimm
R13191 Cmconstr "x ::: y" cminor_scope
R13194 Cminor.Enil
R13209 Cmconstr.mulimm_case2
R13244 Cmconstr.mulimm_default
R13060 Cminor.expr
R13317 Integers.eq
R13327 Integers.zero
R13396 Integers.eq
R13406 Integers.one
R13439 Cmconstr.mulimm_match
R13464 Cmconstr.mulimm_case1
R13489 Cminor.Eop
R13520 Cminor.Enil
R13494 Op.Ointconst
R13504 Integers.mul
R13529 Cmconstr.mulimm_case2
R13557 Cmconstr.addimm
R13581 Cmconstr.mulimm_base
R13565 Integers.mul
R13604 Cmconstr.mulimm_default
R13631 Cmconstr.mulimm_base
R13346 Cminor.Elet
R13355 Cminor.Eop
R13380 Cminor.Enil
R13360 Op.Ointconst
R13370 Integers.zero
R13303 Cminor.expr
R13293 Integers.int
R13909 Cminor.expr
R13898 Cminor.expr
R13990 Cminor.Eop
R14009 Cminor.Enil
R13995 Op.Ointconst
R13966 Cminor.expr
R13956 Integers.int
R14092 Cminor.Eop
R14111 Cminor.Enil
R14097 Op.Ointconst
R14064 Integers.int
R14053 Cminor.expr
R14163 Cminor.expr
R14152 Cminor.expr
R14268 Cmconstr.mul_cases
R14293 Cminor.Eop
R14298 Op.Ointconst
R14312 Cminor.Enil
R14326 Cmconstr.mul_case2
R14358 Cmconstr.mul_default
R14235 Cminor.expr
R14224 Cminor.expr
R14454 Cmconstr.mul_cases
R14479 Cminor.Eop
R14484 Op.Ointconst
R14498 Cminor.Enil
R14512 Cmconstr.mul_case1
R14544 Cmconstr.mul_match_aux
R14421 Cminor.expr
R14410 Cminor.expr
R14620 Cmconstr.mul_match
R14645 Cmconstr.mul_case1
R14670 Cmconstr.mulimm
R14687 Cmconstr.mul_case2
R14712 Cmconstr.mulimm
R14729 Cmconstr.mul_default
R14756 Cminor.Eop
R14768 Cmconstr "x ::: y" cminor_scope
R14773 Cmconstr "x ::: y" cminor_scope
R14776 Cminor.Enil
R14760 Op.Omul
R14603 Cminor.expr
R14592 Cminor.expr
R14831 Cminor.Eop
R14843 Cmconstr "x ::: y" cminor_scope
R14848 Cmconstr "x ::: y" cminor_scope
R14851 Cminor.Enil
R14835 Op.Odiv
R14822 Cminor.expr
R14811 Cminor.expr
R14916 Cminor.Elet
R14929 Cminor.Elet
R14951 Cminor.Eop
R14971 Cmconstr "x ::: y" cminor_scope
R14961 Cminor.Eletvar
R15125 Cmconstr "x ::: y" cminor_scope
R14992 Cminor.Eop
R15047 Cmconstr "x ::: y" cminor_scope
R15002 Cminor.Eop
R15023 Cmconstr "x ::: y" cminor_scope
R15013 Cminor.Eletvar
R15037 Cmconstr "x ::: y" cminor_scope
R15027 Cminor.Eletvar
R15041 Cminor.Enil
R15088 Cmconstr "x ::: y" cminor_scope
R15078 Cminor.Eletvar
R15119 Cminor.Enil
R14996 Op.Omul
R15146 Cminor.Enil
R14955 Op.Osub
R14935 Cmconstr.lift
R14905 Cminor.expr
R14905 Cminor.expr
R14886 Op.operation
R15175 Cmconstr.mod_aux
R15183 Op.Odiv
R15224 Cminor.expr
R15296 Cminor.Eop
R15315 Cminor.Enil
R15301 Op.Ointconst
R15272 Integers.int
R15357 Cminor.expr
R15446 Cmconstr.divu_cases
R15469 Cminor.Eop
R15474 Op.Ointconst
R15488 Cminor.Enil
R15502 Cmconstr.divu_case1
R15532 Cmconstr.divu_default
R15413 Cminor.expr
R15605 Cmconstr.divu_match
R15628 Cmconstr.divu_case1
R15657 Integers.is_power2
R15687 Coq.Init.Datatypes.Some
R15698 Cmconstr.shruimm
R15720 Coq.Init.Datatypes.None
R15731 Cminor.Eop
R15744 Cmconstr "x ::: y" cminor_scope
R15749 Cmconstr "x ::: y" cminor_scope
R15752 Cminor.Enil
R15735 Op.Odivu
R15772 Cmconstr.divu_default
R15797 Cminor.Eop
R15810 Cmconstr "x ::: y" cminor_scope
R15815 Cmconstr "x ::: y" cminor_scope
R15818 Cminor.Enil
R15801 Op.Odivu
R15588 Cminor.expr
R15577 Cminor.expr
R15881 Cmconstr.divu_match
R15904 Cmconstr.divu_case1
R15933 Integers.is_power2
R15963 Coq.Init.Datatypes.Some
R15974 Cmconstr.rolm
R15992 Integers.sub
R16003 Integers.one
R15982 Integers.zero
R16020 Coq.Init.Datatypes.None
R16031 Cmconstr.mod_aux
R16039 Op.Odivu
R16065 Cmconstr.divu_default
R16090 Cmconstr.mod_aux
R16098 Op.Odivu
R15864 Cminor.expr
R15853 Cminor.expr
R16165 Integers.is_rlw_mask
R16218 Cminor.Eop
R16238 Cmconstr "x ::: y" cminor_scope
R16241 Cminor.Enil
R16223 Op.Oandimm
R16191 Cmconstr.rolm
R16199 Integers.zero
R16151 Cminor.expr
R16141 Integers.int
R16297 Cmconstr.mul_match
R16322 Cmconstr.mul_case1
R16347 Cmconstr.andimm
R16364 Cmconstr.mul_case2
R16389 Cmconstr.andimm
R16406 Cmconstr.mul_default
R16433 Cminor.Eop
R16445 Cmconstr "x ::: y" cminor_scope
R16450 Cmconstr "x ::: y" cminor_scope
R16453 Cminor.Enil
R16437 Op.Oand
R16280 Cminor.expr
R16269 Cminor.expr
R16534 Cminor.Evar
R16543 Cminor.Evar
R16557 AST.ident_eq
R16587 Coq.Init.Datatypes.false
R16577 Coq.Init.Datatypes.true
R16605 Coq.Init.Datatypes.false
R16501 Cminor.expr
R16501 Cminor.expr
R16662 Cminor.expr
R16651 Cminor.expr
R16868 Cminor.Eop
R16897 Cmconstr "x ::: y" cminor_scope
R16900 Cminor.Enil
R16873 Op.Orolm
R16811 Cminor.Eop
R16841 Cmconstr "x ::: y" cminor_scope
R16844 Cminor.Enil
R16816 Op.Orolm
R16788 Cminor.expr
R16778 Integers.int
R16765 Integers.int
R16736 Cminor.expr
R16726 Integers.int
R16713 Integers.int
R16952 Cminor.expr
R16941 Cminor.expr
R17061 Cmconstr.or_cases
R17085 Cminor.Eop
R17090 Op.Orolm
R17115 Cmconstr "x ::: y" cminor_scope
R17118 Cminor.Enil
R17129 Cminor.Eop
R17134 Op.Orolm
R17158 Cmconstr "x ::: y" cminor_scope
R17161 Cminor.Enil
R17176 Cmconstr.or_case1
R17239 Cmconstr.or_default
R17018 Cminor.expr
R17007 Cminor.expr
R17311 Cmconstr.or_match
R17335 Cmconstr.or_case1
R17465 Coq.Bool.Bool "x && y" bool_scope
R17419 Coq.Bool.Bool "x && y" bool_scope
R17390 Integers.eq
R17422 Integers.is_rlw_mask
R17439 Integers.or
R17468 Cmconstr.same_expr_pure
R17564 Cminor.Eop
R17575 Cmconstr "x ::: y" cminor_scope
R17580 Cmconstr "x ::: y" cminor_scope
R17583 Cminor.Enil
R17568 Op.Oor
R17500 Cminor.Eop
R17544 Cmconstr "x ::: y" cminor_scope
R17547 Cminor.Enil
R17505 Op.Orolm
R17520 Integers.or
R17593 Cmconstr.or_default
R17619 Cminor.Eop
R17630 Cmconstr "x ::: y" cminor_scope
R17635 Cmconstr "x ::: y" cminor_scope
R17638 Cminor.Enil
R17623 Op.Oor
R17294 Cminor.expr
R17283 Cminor.expr
R17684 Cminor.Eop
R17696 Cmconstr "x ::: y" cminor_scope
R17701 Cmconstr "x ::: y" cminor_scope
R17704 Cminor.Enil
R17688 Op.Oxor
R17675 Cminor.expr
R17675 Cminor.expr
R17747 Cminor.expr
R17821 Cminor.Eop
R17840 Cminor.Enil
R17826 Op.Ointconst
R17796 Integers.int
R17883 Cminor.expr
R17974 Cmconstr.shift_cases
R17998 Cminor.Eop
R18003 Op.Ointconst
R18017 Cminor.Enil
R18031 Cmconstr.shift_case1
R18062 Cmconstr.shift_default
R17941 Cminor.expr
R18135 Cmconstr.shift_match
R18159 Cmconstr.shift_case1
R18183 Cmconstr.shlimm
R18200 Cmconstr.shift_default
R18226 Cminor.Eop
R18238 Cmconstr "x ::: y" cminor_scope
R18243 Cmconstr "x ::: y" cminor_scope
R18246 Cminor.Enil
R18230 Op.Oshl
R18118 Cminor.expr
R18107 Cminor.expr
R18294 Cminor.Eop
R18306 Cmconstr "x ::: y" cminor_scope
R18311 Cmconstr "x ::: y" cminor_scope
R18314 Cminor.Enil
R18298 Op.Oshr
R18283 Cminor.expr
R18283 Cminor.expr
R18371 Cmconstr.shift_match
R18395 Cmconstr.shift_case1
R18419 Cmconstr.shruimm
R18437 Cmconstr.shift_default
R18463 Cminor.Eop
R18476 Cmconstr "x ::: y" cminor_scope
R18481 Cmconstr "x ::: y" cminor_scope
R18484 Cminor.Enil
R18467 Op.Oshru
R18354 Cminor.expr
R18343 Cminor.expr
R18817 Cminor.expr
R18806 Cminor.expr
R18912 Cminor.Eop
R18925 Cmconstr "x ::: y" cminor_scope
R18930 Cmconstr "x ::: y" cminor_scope
R18933 Cminor.Enil
R18916 Op.Omulf
R18887 Cminor.expr
R18876 Cminor.expr
R18865 Cminor.expr
R19031 Cminor.Eop
R19044 Cmconstr "x ::: y" cminor_scope
R19049 Cmconstr "x ::: y" cminor_scope
R19052 Cminor.Enil
R19035 Op.Omulf
R19001 Cminor.expr
R18990 Cminor.expr
R18979 Cminor.expr
R19106 Cminor.expr
R19095 Cminor.expr
R19213 Cmconstr.addf_cases
R19239 Cminor.Eop
R19243 Op.Omulf
R19252 Cmconstr "x ::: y" cminor_scope
R19257 Cmconstr "x ::: y" cminor_scope
R19260 Cminor.Enil
R19275 Cmconstr.addf_case2
R19311 Cmconstr.addf_default
R19180 Cminor.expr
R19169 Cminor.expr
R19409 Cmconstr.addf_cases
R19435 Cminor.Eop
R19439 Op.Omulf
R19448 Cmconstr "x ::: y" cminor_scope
R19453 Cmconstr "x ::: y" cminor_scope
R19456 Cminor.Enil
R19471 Cmconstr.addf_case1
R19507 Cmconstr.addf_match_aux
R19376 Cminor.expr
R19365 Cminor.expr
R19585 Cmconstr.addf_match
R19611 Cmconstr.addf_case1
R19640 Cminor.Eop
R19656 Cmconstr "x ::: y" cminor_scope
R19661 Cmconstr "x ::: y" cminor_scope
R19666 Cmconstr "x ::: y" cminor_scope
R19669 Cminor.Enil
R19644 Op.Omuladdf
R19679 Cmconstr.addf_case2
R19708 Cminor.Elet
R19717 Cminor.Eop
R19738 Cmconstr "x ::: y" cminor_scope
R19731 Cmconstr.lift
R19748 Cmconstr "x ::: y" cminor_scope
R19741 Cmconstr.lift
R19760 Cmconstr "x ::: y" cminor_scope
R19751 Cminor.Eletvar
R19763 Cminor.Enil
R19721 Op.Omuladdf
R19774 Cmconstr.addf_default
R19802 Cminor.Eop
R19815 Cmconstr "x ::: y" cminor_scope
R19820 Cmconstr "x ::: y" cminor_scope
R19823 Cminor.Enil
R19806 Op.Oaddf
R19568 Cminor.expr
R19557 Cminor.expr
R20073 Cminor.expr
R20062 Cminor.expr
R20168 Cminor.Eop
R20181 Cmconstr "x ::: y" cminor_scope
R20186 Cmconstr "x ::: y" cminor_scope
R20189 Cminor.Enil
R20172 Op.Omulf
R20143 Cminor.expr
R20132 Cminor.expr
R20121 Cminor.expr
R20248 Cminor.expr
R20237 Cminor.expr
R20351 Cmconstr.subf_cases
R20377 Cminor.Eop
R20381 Op.Omulf
R20390 Cmconstr "x ::: y" cminor_scope
R20395 Cmconstr "x ::: y" cminor_scope
R20398 Cminor.Enil
R20413 Cmconstr.subf_case1
R20449 Cmconstr.subf_default
R20318 Cminor.expr
R20307 Cminor.expr
R20525 Cmconstr.subf_match
R20551 Cmconstr.subf_case1
R20580 Cminor.Eop
R20596 Cmconstr "x ::: y" cminor_scope
R20601 Cmconstr "x ::: y" cminor_scope
R20606 Cmconstr "x ::: y" cminor_scope
R20609 Cminor.Enil
R20584 Op.Omulsubf
R20619 Cmconstr.subf_default
R20647 Cminor.Eop
R20660 Cmconstr "x ::: y" cminor_scope
R20665 Cmconstr "x ::: y" cminor_scope
R20668 Cminor.Enil
R20651 Op.Osubf
R20508 Cminor.expr
R20497 Cminor.expr
R20715 Cminor.Eop
R20728 Cmconstr "x ::: y" cminor_scope
R20733 Cmconstr "x ::: y" cminor_scope
R20736 Cminor.Enil
R20719 Op.Omulf
R20706 Cminor.expr
R20706 Cminor.expr
R20776 Cminor.Eop
R20789 Cmconstr "x ::: y" cminor_scope
R20794 Cmconstr "x ::: y" cminor_scope
R20797 Cminor.Enil
R20780 Op.Odivf
R20767 Cminor.expr
R20767 Cminor.expr
R20855 Cminor.Eop
R20879 Cmconstr "x ::: y" cminor_scope
R20884 Cmconstr "x ::: y" cminor_scope
R20887 Cminor.Enil
R20860 Op.Ocmp
R20866 Op.Ccomp
R20844 Cminor.expr
R20844 Cminor.expr
R20824 AST.comparison
R20945 Cminor.Eop
R20970 Cmconstr "x ::: y" cminor_scope
R20975 Cmconstr "x ::: y" cminor_scope
R20978 Cminor.Enil
R20950 Op.Ocmp
R20956 Op.Ccompu
R20934 Cminor.expr
R20934 Cminor.expr
R20914 AST.comparison
R21036 Cminor.Eop
R21061 Cmconstr "x ::: y" cminor_scope
R21066 Cmconstr "x ::: y" cminor_scope
R21069 Cminor.Enil
R21041 Op.Ocmp
R21047 Op.Ccompf
R21025 Cminor.expr
R21025 Cminor.expr
R21005 AST.comparison
R21115 Cminor.condexpr
R21107 Cminor.expr
R21146 Cminor.Eop
R21151 Op.Ointconst
R21164 Cminor.Enil
R21181 Integers.eq
R21190 Integers.zero
R21217 Cminor.CEtrue
R21204 Cminor.CEfalse
R21228 Cminor.Eop
R21233 Op.Ocmp
R21247 Cminor.CEcond
R21263 Cminor.Econdition
R21292 Cminor.CEcondition
R21360 Cminor.CEcond
R21394 Cmconstr "x ::: y" cminor_scope
R21397 Cminor.Enil
R21368 Op.Ccompuimm
R21382 Integers.zero
R21378 AST.Cne
R21107 Cminor.expr
R21457 Cminor.expr
R21467 Cminor.Econdition
R21479 Cmconstr.condexpr_of_expr
R21449 Cminor.expr
R21449 Cminor.expr
R21449 Cminor.expr
R21948 Cminor.expr
R22042 Cminor.Eop
R22064 Cminor.Enil
R22047 Op.Oaddrsymbol
R22012 Integers.int
R22001 AST.ident
R22139 Cminor.Eop
R22158 Cminor.Enil
R22144 Op.Oaddrstack
R22109 Integers.int
R22263 Cminor.Eop
R22299 Cmconstr "x ::: y" cminor_scope
R22273 Cminor.Eop
R22295 Cminor.Enil
R22278 Op.Oaddrsymbol
R22304 Cmconstr "x ::: y" cminor_scope
R22307 Cminor.Enil
R22267 Op.Oadd
R22224 Cminor.expr
R22214 Integers.int
R22203 AST.ident
R22394 Cminor.Eop
R22413 Cmconstr "x ::: y" cminor_scope
R22416 Cminor.Enil
R22399 Op.Oaddimm
R22363 Cminor.expr
R22353 Integers.int
R22505 Cminor.Eop
R22517 Cmconstr "x ::: y" cminor_scope
R22522 Cmconstr "x ::: y" cminor_scope
R22525 Cminor.Enil
R22509 Op.Oadd
R22474 Cminor.expr
R22463 Cminor.expr
R22573 Cminor.expr
R22671 Cmconstr.addressing_cases
R22700 Cminor.Eop
R22705 Op.Oaddrsymbol
R22722 Cminor.Enil
R22736 Cmconstr.addressing_case1
R22761 Cminor.Eop
R22766 Op.Oaddrstack
R22780 Cminor.Enil
R22794 Cmconstr.addressing_case2
R22817 Cminor.Eop
R22821 Op.Oadd
R22853 Cmconstr "x ::: y" cminor_scope
R22827 Cminor.Eop
R22832 Op.Oaddrsymbol
R22849 Cminor.Enil
R22858 Cmconstr "x ::: y" cminor_scope
R22861 Cminor.Enil
R22876 Cmconstr.addressing_case3
R22904 Cminor.Eop
R22909 Op.Oaddimm
R22923 Cmconstr "x ::: y" cminor_scope
R22926 Cminor.Enil
R22941 Cmconstr.addressing_case4
R22967 Cminor.Eop
R22971 Op.Oadd
R22979 Cmconstr "x ::: y" cminor_scope
R22984 Cmconstr "x ::: y" cminor_scope
R22987 Cminor.Enil
R23002 Cmconstr.addressing_case5
R23040 Cmconstr.addressing_default
R22639 Cminor.expr
R23112 Cmconstr.addressing_match
R23140 Cmconstr.addressing_case1
R23170 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23171 Op.Aglobal
R23184 Cminor.Enil
R23194 Cmconstr.addressing_case2
R23222 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23223 Op.Ainstack
R23235 Cminor.Enil
R23245 Cmconstr.addressing_case3
R23278 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23279 Op.Abased
R23293 Cmconstr "x ::: y" cminor_scope
R23296 Cminor.Enil
R23306 Cmconstr.addressing_case4
R23337 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23338 Op.Aindexed
R23352 Cmconstr "x ::: y" cminor_scope
R23355 Cminor.Enil
R23365 Cmconstr.addressing_case5
R23397 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23398 Op.Aindexed2
R23411 Cmconstr "x ::: y" cminor_scope
R23416 Cmconstr "x ::: y" cminor_scope
R23419 Cminor.Enil
R23429 Cmconstr.addressing_default
R23459 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23460 Op.Aindexed
R23469 Integers.zero
R23480 Cmconstr "x ::: y" cminor_scope
R23483 Cminor.Enil
R23095 Cminor.expr
R23557 Cmconstr.addressing
R23580 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23596 Cminor.Eload
R23540 Cminor.expr
R23521 AST.memory_chunk
R23690 Cmconstr.addressing
R23713 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23729 Cminor.Estore
R23673 Cminor.expr
R23673 Cminor.expr
R23651 AST.memory_chunk
R23820 Cminor.stmt
R23830 Cminor.Sifthenelse
R23843 Cmconstr.condexpr_of_expr
R23808 Cminor.stmtlist
R23808 Cminor.stmtlist
R23789 Cminor.expr
FCmconstrproof
R355 Cminor.genv
R431 Cminor.letenv
R424 Values.val
R417 Coq.Init.Datatypes.nat
R407 Cminor.letenv
R515 Coq.Lists.List "x :: y" list_scope
R508 Coq.Init.Datatypes.O
R639 Coq.Lists.List "x :: y" list_scope
R629 Coq.Init.Datatypes.S
R621 Coq.Lists.List "x :: y" list_scope
R801 Coq.Init.Logic "x = y" type_scope
R785 Coq.Lists.List.nth_error
R803 Coq.Init.Datatypes.Some
R771 Coq.Init.Peano "x > y" nat_scope
R756 Coq.Init.Logic "x = y" type_scope
R741 Coq.Lists.List.nth_error
R758 Coq.Init.Datatypes.Some
R699 Cmconstrproof.insert_lenv
R1103 Coq.Init.Logic "x = y" type_scope
R1083 Coq.Lists.List.nth_error
R1098 Coq.Init.Datatypes.S
R1105 Coq.Init.Datatypes.Some
R1068 Coq.Init.Peano "x <= y" nat_scope
R1053 Coq.Init.Logic "x = y" type_scope
R1038 Coq.Lists.List.nth_error
R1055 Coq.Init.Datatypes.Some
R996 Cmconstrproof.insert_lenv
R1466 Cminor.eval_Evar
R1476 Cminor.eval_Eassign
R1489 Cminor.eval_Eop
R1498 Cminor.eval_Eload
R1509 Cminor.eval_Estore
R1534 Cminor.eval_Ecall
R1545 Cminor.eval_Econdition
R1574 Cminor.eval_Elet
R1584 Cminor.eval_Eletvar
R1611 Cminor.eval_CEtrue
R1623 Cminor.eval_CEfalse
R1636 Cminor.eval_CEcond
R1661 Cminor.eval_CEcondition
R1678 Cminor.eval_Enil
R1688 Cminor.eval_Econs
R1851 Cminor.eval_expr
R1878 Cmconstr.lift_expr
R1823 Cmconstrproof.insert_lenv
R1769 Cminor.eval_expr
R1930 Cmconstrproof.eval_expr_ind_3
R2321 Cminor.eval_exprlist
R2352 Cmconstr.lift_exprlist
R2289 Cmconstrproof.insert_lenv
R2173 Cminor.eval_condexpr
R2204 Cmconstr.lift_condexpr
R2141 Cmconstrproof.insert_lenv
R2035 Cminor.eval_expr
R2062 Cmconstr.lift_expr
R2003 Cmconstrproof.insert_lenv
R1930 Cmconstrproof.eval_expr_ind_3
R2321 Cminor.eval_exprlist
R2352 Cmconstr.lift_exprlist
R2289 Cmconstrproof.insert_lenv
R2173 Cminor.eval_condexpr
R2204 Cmconstr.lift_condexpr
R2141 Cmconstrproof.insert_lenv
R2035 Cminor.eval_expr
R2062 Cmconstr.lift_expr
R2003 Cmconstrproof.insert_lenv
R2445 Cminor.eval_Econdition
R2445 Cminor.eval_Econdition
R2445 Cminor.eval_Econdition
R2523 Cminor.eval_Elet
R2523 Cminor.eval_Elet
R2557 Cmconstrproof.insert_lenv_S
R2557 Cmconstrproof.insert_lenv_S
R2587 Coq.Arith.Compare_dec.le_gt_dec
R2587 Coq.Arith.Compare_dec.le_gt_dec
R2619 Cminor.eval_Eletvar
R2619 Cminor.eval_Eletvar
R2640 Cmconstrproof.insert_lenv_lookup2
R2640 Cmconstrproof.insert_lenv_lookup2
R2676 Cminor.eval_Eletvar
R2676 Cminor.eval_Eletvar
R2697 Cmconstrproof.insert_lenv_lookup1
R2697 Cmconstrproof.insert_lenv_lookup1
R2749 Cminor.eval_CEcondition
R2749 Cminor.eval_CEcondition
R2749 Cminor.eval_CEcondition
R2917 Cminor.eval_expr
R2948 Cmconstr.lift
R2935 Coq.Lists.List "x :: y" list_scope
R2877 Cminor.eval_expr
R3002 Cmconstrproof.eval_lift_expr
R3002 Cmconstrproof.eval_lift_expr
R3036 Cmconstrproof.insert_lenv_0
R3036 Cmconstrproof.insert_lenv_0
R3070 Cmconstrproof.eval_lift
R3129 Cminor.eval_Eop
R3333 Coq.Init.Logic "A /\ B" type_scope
R3328 Coq.Init.Logic "x = y" type_scope
R3344 Coq.Init.Logic "A /\ B" type_scope
R3339 Coq.Init.Logic "x = y" type_scope
R3375 Coq.Init.Logic "x = y" type_scope
R3347 Op.eval_operation
R3371 Coq.Lists.List.nil
R3377 Coq.Init.Datatypes.Some
R3273 Cminor.eval_expr
R3299 Cminor.Eop
R3306 Cminor.Enil
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R3584 Coq.Init.Logic "'exists' x , p" type_scope
R3634 Coq.Init.Logic "A /\ B" type_scope
R3597 Cminor.eval_expr
R3675 Coq.Init.Logic "x = y" type_scope
R3639 Op.eval_operation
R3667 Coq.Lists.List "x :: y" list_scope
R3670 Coq.Lists.List.nil
R3677 Coq.Init.Datatypes.Some
R3523 Cminor.eval_expr
R3549 Cminor.Eop
R3560 Cmconstr "x ::: y" cminor_scope
R3564 Cminor.Enil
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R3964 Coq.Init.Logic "'exists' x , p" type_scope
R3975 Coq.Init.Logic "'exists' x , p" type_scope
R3986 Coq.Init.Logic "'exists' x , p" type_scope
R3997 Coq.Init.Logic "'exists' x , p" type_scope
R4047 Coq.Init.Logic "A /\ B" type_scope
R4010 Cminor.eval_expr
R4089 Coq.Init.Logic "A /\ B" type_scope
R4052 Cminor.eval_expr
R4136 Coq.Init.Logic "x = y" type_scope
R4094 Op.eval_operation
R4122 Coq.Lists.List "x :: y" list_scope
R4128 Coq.Lists.List "x :: y" list_scope
R4131 Coq.Lists.List.nil
R4138 Coq.Init.Datatypes.Some
R3896 Cminor.eval_expr
R3922 Cminor.Eop
R3933 Cmconstr "x ::: y" cminor_scope
R3940 Cmconstr "x ::: y" cminor_scope
R3944 Cminor.Enil
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R4386 Cminor.eval_expr
R4415 Cminor.Eop
R4423 Cminor.Enil
R4720 Cminor.eval_expr
R4749 Cminor.Eop
R4762 Cmconstr "x ::: y" cminor_scope
R4766 Cminor.Enil
R5027 Cminor.eval_expr
R5056 Cminor.Eop
R5069 Cmconstr "x ::: y" cminor_scope
R5077 Cmconstr "x ::: y" cminor_scope
R5081 Cminor.Enil
R5144 Cmconstrproof.inv_eval_Eop_2
R4829 Cmconstrproof.inv_eval_Eop_1
R4485 Cmconstrproof.inv_eval_Eop_0
R5640 Cminor.eval_expr
R5683 Values.Vint
R5689 Integers.neg
R5666 Cmconstr.negint
R5593 Cminor.eval_expr
R5627 Values.Vint
R5721 Cmconstr.negint
R5842 Cminor.eval_expr
R5887 Values.Vfloat
R5895 Floats.neg
R5868 Cmconstr.negfloat
R5793 Cminor.eval_expr
R5827 Values.Vfloat
R5929 Cmconstr.negfloat
R6051 Cminor.eval_expr
R6096 Values.Vfloat
R6104 Floats.abs
R6077 Cmconstr.absfloat
R6002 Cminor.eval_expr
R6036 Values.Vfloat
R6138 Cmconstr.absfloat
R6262 Cminor.eval_expr
R6309 Values.Vint
R6315 Floats.intoffloat
R6288 Cmconstr.intoffloat
R6213 Cminor.eval_expr
R6247 Values.Vfloat
R6356 Cmconstr.intoffloat
R6480 Cminor.eval_expr
R6527 Values.Vfloat
R6535 Floats.floatofint
R6506 Cmconstr.floatofint
R6433 Cminor.eval_expr
R6467 Values.Vint
R6576 Cmconstr.floatofint
R6701 Cminor.eval_expr
R6749 Values.Vfloat
R6757 Floats.floatofintu
R6727 Cmconstr.floatofintu
R6654 Cminor.eval_expr
R6688 Values.Vint
R6799 Cmconstr.floatofintu
R6920 Cminor.eval_expr
R6963 Values.Vint
R6969 Integers.not
R6946 Cmconstr.notint
R6873 Cminor.eval_expr
R6907 Values.Vint
R7028 Cmconstr.notint_match
R7028 Cmconstr.notint_match
R7212 Cminor.eval_Elet
R7212 Cminor.eval_Elet
R7243 Cminor.eval_Eop
R7243 Cminor.eval_Eop
R7262 Cminor.eval_Econs
R7262 Cminor.eval_Econs
R7280 Cminor.eval_Eletvar
R7280 Cminor.eval_Eletvar
R7323 Cminor.eval_Econs
R7323 Cminor.eval_Econs
R7341 Cminor.eval_Eletvar
R7341 Cminor.eval_Eletvar
R7383 Cminor.eval_Enil
R7383 Cminor.eval_Enil
R7412 Integers.or_idem
R7412 Integers.or_idem
R7563 Cminor.eval_expr
R7612 Values.of_bool
R7625 Coq.Bool.Bool.negb
R7589 Cmconstr.notbool_base
R7538 Values.bool_of_val
R7498 Cminor.eval_expr
R7655 Cmconstr.notbool_base
R7704 Integers.eq_false
R7704 Integers.eq_false
R7734 Integers.eq_true
R7734 Integers.eq_true
R7787 Values.bool_of_true_val
R7808 Values.bool_of_false_val
R7843 Values.bool_of_true_val_inv
R7868 Values.bool_of_false_val_inv
R8030 Cminor.eval_expr
R8074 Values.of_bool
R8087 Coq.Bool.Bool.negb
R8056 Cmconstr.notbool
R8005 Values.bool_of_val
R7965 Cminor.eval_expr
R8171 Values.is_true
R8184 Values.of_bool
R8197 Coq.Bool.Bool.negb
R8148 Values.bool_of_val
R8130 Values.is_false
R8171 Values.is_true
R8184 Values.of_bool
R8197 Coq.Bool.Bool.negb
R8148 Values.bool_of_val
R8130 Values.is_false
R8290 Integers.one_not_zero
R8290 Integers.one_not_zero
R8389 Values.is_false
R8403 Values.of_bool
R8416 Coq.Bool.Bool.negb
R8366 Values.bool_of_val
R8349 Values.is_true
R8389 Values.is_false
R8403 Values.of_bool
R8416 Coq.Bool.Bool.negb
R8366 Values.bool_of_val
R8349 Values.is_true
R8547 Cmconstrproof.eval_notbool_base
R8547 Cmconstrproof.eval_notbool_base
R8547 Cmconstrproof.eval_notbool_base
R8547 Cmconstrproof.eval_notbool_base
R8547 Cmconstrproof.eval_notbool_base
R8547 Cmconstrproof.eval_notbool_base
R8547 Cmconstrproof.eval_notbool_base
R8547 Cmconstrproof.eval_notbool_base
R8547 Cmconstrproof.eval_notbool_base
R8547 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8600 Cmconstrproof.eval_notbool_base
R8753 Integers.eq_false
R8753 Integers.eq_false
R8814 Integers.eq_true
R8814 Integers.eq_true
R8864 Cmconstrproof.eval_notbool_base
R8864 Cmconstrproof.eval_notbool_base
R8964 Cminor.eval_Eop
R8964 Cminor.eval_Eop
R8998 Op.eval_condition
R8998 Op.eval_condition
R9063 Coq.Init.Logic "x = y" type_scope
R9063 Coq.Init.Logic "x = y" type_scope
R9150 Op.eval_negate_condition
R9150 Op.eval_negate_condition
R9369 Cminor.eval_Econdition
R9369 Cminor.eval_Econdition
R9533 Cminor.eval_expr
R9581 Values.Vint
R9587 Integers.cast8signed
R9559 Cmconstr.cast8signed
R9486 Cminor.eval_expr
R9520 Values.Vint
R9625 Cmconstr.cast8signed
R9753 Cminor.eval_expr
R9803 Values.Vint
R9809 Integers.cast8unsigned
R9779 Cmconstr.cast8unsigned
R9706 Cminor.eval_expr
R9740 Values.Vint
R9852 Cmconstr.cast8unsigned
R9885 Integers.rolm_zero
R9885 Integers.rolm_zero
R9908 Integers.cast8unsigned_and
R9908 Integers.cast8unsigned_and
R10055 Cminor.eval_expr
R10104 Values.Vint
R10110 Integers.cast16signed
R10081 Cmconstr.cast16signed
R10008 Cminor.eval_expr
R10042 Values.Vint
R10149 Cmconstr.cast16signed
R10279 Cminor.eval_expr
R10330 Values.Vint
R10336 Integers.cast16unsigned
R10305 Cmconstr.cast16unsigned
R10232 Cminor.eval_expr
R10266 Values.Vint
R10380 Cmconstr.cast16unsigned
R10414 Integers.rolm_zero
R10414 Integers.rolm_zero
R10437 Integers.cast16unsigned_and
R10437 Integers.cast16unsigned_and
R10584 Cminor.eval_expr
R10634 Values.Vfloat
R10642 Floats.singleoffloat
R10610 Cmconstr.singleoffloat
R10535 Cminor.eval_expr
R10569 Values.Vfloat
R10687 Cmconstr.singleoffloat
R10813 Cminor.eval_expr
R10858 Values.Vint
R10864 Integers.add
R10839 Cmconstr.addimm
R10766 Cminor.eval_expr
R10800 Values.Vint
R10933 Integers.eq_spec
R10947 Integers.zero
R10933 Integers.eq_spec
R10947 Integers.zero
R10964 Integers.eq
R10973 Integers.zero
R10964 Integers.eq
R10973 Integers.zero
R11010 Integers.add_zero
R11010 Integers.add_zero
R11038 Cmconstr.addimm_match
R11038 Cmconstr.addimm_match
R11100 Integers.add_commut
R11100 Integers.add_commut
R11146 Globalenvs.find_symbol
R11146 Globalenvs.find_symbol
R11300 Integers.add_assoc
R11300 Integers.add_assoc
R11342 Integers.add_commut
R11342 Integers.add_commut
R11492 Cminor.eval_expr
R11537 Values.Vptr
R11545 Integers.add
R11518 Cmconstr.addimm
R11441 Cminor.eval_expr
R11475 Values.Vptr
R11618 Integers.eq_spec
R11632 Integers.zero
R11618 Integers.eq_spec
R11632 Integers.zero
R11649 Integers.eq
R11658 Integers.zero
R11649 Integers.eq
R11658 Integers.zero
R11695 Integers.add_zero
R11695 Integers.add_zero
R11723 Cmconstr.addimm_match
R11723 Cmconstr.addimm_match
R11807 Globalenvs.find_symbol
R11807 Globalenvs.find_symbol
R11844 Integers.add_commut
R11844 Integers.add_commut
R12006 Integers.add_assoc
R12006 Integers.add_assoc
R12034 Integers.add_commut
R12034 Integers.add_commut
R12123 Integers.add_commut
R12123 Integers.add_commut
R12152 Integers.add_assoc
R12152 Integers.add_assoc
R12346 Cminor.eval_expr
R12388 Values.Vint
R12394 Integers.add
R12372 Cmconstr.add
R12299 Cminor.eval_expr
R12333 Values.Vint
R12252 Cminor.eval_expr
R12286 Values.Vint
R12452 Cmconstr.add_match
R12452 Cmconstr.add_match
R12497 Integers.add_commut
R12497 Integers.add_commut
R12519 Cmconstrproof.eval_addimm
R12519 Cmconstrproof.eval_addimm
R12601 Integers.add
R12620 Integers.add
R12644 Integers.add
R12629 Integers.add
R12601 Integers.add
R12620 Integers.add
R12644 Integers.add
R12629 Integers.add
R12671 Cmconstrproof.eval_addimm
R12671 Cmconstrproof.eval_addimm
R12735 Integers.add_assoc
R12735 Integers.add_assoc
R12735 Integers.add_assoc
R12735 Integers.add_assoc
R12763 Integers.add_permut
R12763 Integers.add_permut
R12816 Integers.add
R12835 Integers.add
R12844 Integers.add
R12816 Integers.add
R12835 Integers.add
R12844 Integers.add
R12872 Cmconstrproof.eval_addimm
R12872 Cmconstrproof.eval_addimm
R12921 Integers.add_assoc
R12921 Integers.add_assoc
R12921 Integers.add_assoc
R12921 Integers.add_assoc
R12949 Integers.add_commut
R12949 Integers.add_commut
R12998 Cmconstrproof.eval_addimm
R12998 Cmconstrproof.eval_addimm
R13054 Integers.add
R13073 Integers.add
R13082 Integers.add
R13054 Integers.add
R13073 Integers.add
R13082 Integers.add
R13110 Cmconstrproof.eval_addimm
R13110 Cmconstrproof.eval_addimm
R13152 Integers.add_assoc
R13152 Integers.add_assoc
R13353 Cminor.eval_expr
R13395 Values.Vptr
R13403 Integers.add
R13379 Cmconstr.add
R13306 Cminor.eval_expr
R13340 Values.Vint
R13257 Cminor.eval_expr
R13291 Values.Vptr
R13461 Cmconstr.add_match
R13461 Cmconstr.add_match
R13556 Integers.add
R13575 Integers.add
R13599 Integers.add
R13584 Integers.add
R13556 Integers.add
R13575 Integers.add
R13599 Integers.add
R13584 Integers.add
R13626 Cmconstrproof.eval_addimm_ptr
R13626 Cmconstrproof.eval_addimm_ptr
R13703 Integers.add_assoc
R13703 Integers.add_assoc
R13703 Integers.add_assoc
R13703 Integers.add_assoc
R13731 Integers.add_permut
R13731 Integers.add_permut
R13784 Integers.add
R13803 Integers.add
R13812 Integers.add
R13784 Integers.add
R13803 Integers.add
R13812 Integers.add
R13840 Cmconstrproof.eval_addimm_ptr
R13840 Cmconstrproof.eval_addimm_ptr
R13903 Integers.add_assoc
R13903 Integers.add_assoc
R13903 Integers.add_assoc
R13903 Integers.add_assoc
R13931 Integers.add_commut
R13931 Integers.add_commut
R13967 Cmconstrproof.eval_addimm_ptr
R13967 Cmconstrproof.eval_addimm_ptr
R14027 Integers.add
R14046 Integers.add
R14055 Integers.add
R14027 Integers.add
R14046 Integers.add
R14055 Integers.add
R14083 Cmconstrproof.eval_addimm_ptr
R14083 Cmconstrproof.eval_addimm_ptr
R14129 Integers.add_assoc
R14129 Integers.add_assoc
R14332 Cminor.eval_expr
R14374 Values.Vptr
R14382 Integers.add
R14358 Cmconstr.add
R14283 Cminor.eval_expr
R14317 Values.Vptr
R14236 Cminor.eval_expr
R14270 Values.Vint
R14440 Cmconstr.add_match
R14440 Cmconstr.add_match
R14488 Cmconstrproof.eval_addimm_ptr
R14488 Cmconstrproof.eval_addimm_ptr
R14568 Integers.add
R14587 Integers.add
R14611 Integers.add
R14596 Integers.add
R14568 Integers.add
R14587 Integers.add
R14611 Integers.add
R14596 Integers.add
R14638 Cmconstrproof.eval_addimm_ptr
R14638 Cmconstrproof.eval_addimm_ptr
R14715 Integers.add_assoc
R14715 Integers.add_assoc
R14715 Integers.add_assoc
R14715 Integers.add_assoc
R14751 Integers.add_commut
R14751 Integers.add_commut
R14780 Integers.add_permut
R14780 Integers.add_permut
R14833 Integers.add
R14852 Integers.add
R14861 Integers.add
R14833 Integers.add
R14852 Integers.add
R14861 Integers.add
R14889 Cmconstrproof.eval_addimm_ptr
R14889 Cmconstrproof.eval_addimm_ptr
R14943 Integers.add_assoc
R14943 Integers.add_assoc
R14943 Integers.add_assoc
R15016 Integers.add
R15035 Integers.add
R15044 Integers.add
R15016 Integers.add
R15035 Integers.add
R15044 Integers.add
R15072 Cmconstrproof.eval_addimm_ptr
R15072 Cmconstrproof.eval_addimm_ptr
R15148 Integers.add_assoc
R15148 Integers.add_assoc
R15148 Integers.add_assoc
R15148 Integers.add_assoc
R15176 Integers.add_commut
R15176 Integers.add_commut
R15364 Cminor.eval_expr
R15406 Values.Vint
R15412 Integers.sub
R15390 Cmconstr.sub
R15317 Cminor.eval_expr
R15351 Values.Vint
R15270 Cminor.eval_expr
R15304 Values.Vint
R15472 Cmconstr.sub_match
R15472 Cmconstr.sub_match
R15518 Integers.sub_add_opp
R15518 Integers.sub_add_opp
R15546 Cmconstrproof.eval_addimm
R15546 Cmconstrproof.eval_addimm
R15627 Integers.sub
R15646 Integers.add
R15670 Integers.sub
R15655 Integers.sub
R15627 Integers.sub
R15646 Integers.add
R15670 Integers.sub
R15655 Integers.sub
R15697 Cmconstrproof.eval_addimm
R15697 Cmconstrproof.eval_addimm
R15759 Integers.sub_add_opp
R15759 Integers.sub_add_opp
R15759 Integers.sub_add_opp
R15759 Integers.sub_add_opp
R15759 Integers.sub_add_opp
R15795 Integers.add_assoc
R15795 Integers.add_assoc
R15795 Integers.add_assoc
R15795 Integers.add_assoc
R15830 Integers.add_permut
R15830 Integers.add_permut
R15869 Integers.neg_add_distr
R15869 Integers.neg_add_distr
R15924 Integers.sub
R15943 Integers.add
R15952 Integers.sub
R15924 Integers.sub
R15943 Integers.add
R15952 Integers.sub
R15980 Cmconstrproof.eval_addimm
R15980 Cmconstrproof.eval_addimm
R16022 Integers.sub_add_l
R16022 Integers.sub_add_l
R16080 Integers.sub
R16099 Integers.add
R16122 Integers.neg
R16108 Integers.sub
R16080 Integers.sub
R16099 Integers.add
R16122 Integers.neg
R16108 Integers.sub
R16146 Cmconstrproof.eval_addimm
R16146 Cmconstrproof.eval_addimm
R16189 Integers.add_commut
R16189 Integers.add_commut
R16227 Integers.sub_add_r
R16227 Integers.sub_add_r
R16427 Cminor.eval_expr
R16469 Values.Vptr
R16477 Integers.sub
R16453 Cmconstr.sub
R16380 Cminor.eval_expr
R16414 Values.Vint
R16331 Cminor.eval_expr
R16365 Values.Vptr
R16537 Cmconstr.sub_match
R16537 Cmconstr.sub_match
R16583 Integers.sub_add_opp
R16583 Integers.sub_add_opp
R16611 Cmconstrproof.eval_addimm_ptr
R16611 Cmconstrproof.eval_addimm_ptr
R16710 Integers.sub
R16729 Integers.add
R16753 Integers.sub
R16738 Integers.sub
R16710 Integers.sub
R16729 Integers.add
R16753 Integers.sub
R16738 Integers.sub
R16780 Cmconstrproof.eval_addimm_ptr
R16780 Cmconstrproof.eval_addimm_ptr
R16846 Integers.sub_add_opp
R16846 Integers.sub_add_opp
R16846 Integers.sub_add_opp
R16846 Integers.sub_add_opp
R16846 Integers.sub_add_opp
R16882 Integers.add_assoc
R16882 Integers.add_assoc
R16882 Integers.add_assoc
R16882 Integers.add_assoc
R16917 Integers.add_permut
R16917 Integers.add_permut
R16956 Integers.neg_add_distr
R16956 Integers.neg_add_distr
R17020 Integers.sub
R17039 Integers.add
R17048 Integers.sub
R17020 Integers.sub
R17039 Integers.add
R17048 Integers.sub
R17076 Cmconstrproof.eval_addimm_ptr
R17076 Cmconstrproof.eval_addimm_ptr
R17122 Integers.sub_add_l
R17122 Integers.sub_add_l
R17180 Integers.sub
R17199 Integers.add
R17222 Integers.neg
R17208 Integers.sub
R17180 Integers.sub
R17199 Integers.add
R17222 Integers.neg
R17208 Integers.sub
R17246 Cmconstrproof.eval_addimm_ptr
R17246 Cmconstrproof.eval_addimm_ptr
R17293 Integers.add_commut
R17293 Integers.add_commut
R17331 Integers.sub_add_r
R17331 Integers.sub_add_r
R17533 Cminor.eval_expr
R17575 Values.Vint
R17581 Integers.sub
R17559 Cmconstr.sub
R17484 Cminor.eval_expr
R17518 Values.Vptr
R17435 Cminor.eval_expr
R17469 Values.Vptr
R17641 Cmconstr.sub_match
R17641 Cmconstr.sub_match
R17736 Integers.sub
R17755 Integers.add
R17779 Integers.sub
R17764 Integers.sub
R17736 Integers.sub
R17755 Integers.add
R17779 Integers.sub
R17764 Integers.sub
R17806 Cmconstrproof.eval_addimm
R17806 Cmconstrproof.eval_addimm
R17884 Coqlib.zeq_true
R17884 Coqlib.zeq_true
R17941 Integers.sub_add_opp
R17941 Integers.sub_add_opp
R17941 Integers.sub_add_opp
R17941 Integers.sub_add_opp
R17941 Integers.sub_add_opp
R17977 Integers.add_assoc
R17977 Integers.add_assoc
R17977 Integers.add_assoc
R17977 Integers.add_assoc
R18012 Integers.add_permut
R18012 Integers.add_permut
R18051 Integers.neg_add_distr
R18051 Integers.neg_add_distr
R18115 Integers.sub
R18134 Integers.add
R18143 Integers.sub
R18115 Integers.sub
R18134 Integers.add
R18143 Integers.sub
R18171 Cmconstrproof.eval_addimm
R18171 Cmconstrproof.eval_addimm
R18228 Coqlib.zeq_true
R18228 Coqlib.zeq_true
R18265 Integers.sub_add_l
R18265 Integers.sub_add_l
R18332 Integers.sub
R18351 Integers.add
R18374 Integers.neg
R18360 Integers.sub
R18332 Integers.sub
R18351 Integers.add
R18374 Integers.neg
R18360 Integers.sub
R18398 Cmconstrproof.eval_addimm
R18398 Cmconstrproof.eval_addimm
R18455 Coqlib.zeq_true
R18455 Coqlib.zeq_true
R18493 Integers.add_commut
R18493 Integers.add_commut
R18531 Integers.sub_add_r
R18531 Integers.sub_add_r
R18589 Coqlib.zeq_true
R18589 Coqlib.zeq_true
R18721 Cminor.eval_expr
R18774 Values.Vint
R18780 Integers.rolm
R18747 Cmconstr.rolm
R18674 Cminor.eval_expr
R18708 Values.Vint
R18850 Cmconstr.rolm_match
R18850 Cmconstr.rolm_match
R18916 Integers.is_rlw_mask
R18933 Integers.and
R18942 Integers.rol
R18916 Integers.is_rlw_mask
R18933 Integers.and
R18942 Integers.rol
R19047 Integers.and
R19081 Integers.repr
R19056 Integers.add
R19106 Integers.modu
R19141 Integers.repr
R19116 Integers.add
R19047 Integers.and
R19081 Integers.repr
R19056 Integers.add
R19106 Integers.modu
R19141 Integers.repr
R19116 Integers.add
R19174 Integers.rolm_rolm
R19174 Integers.rolm_rolm
R19219 Integers.sub
R19241 Integers.one
R19228 Integers.repr
R19200 Integers.repr
R19219 Integers.sub
R19241 Integers.one
R19228 Integers.repr
R19200 Integers.repr
R19278 Integers.repr
R19259 Integers.modu_and
R19278 Integers.repr
R19259 Integers.modu_and
R19471 Cminor.eval_expr
R19516 Values.Vint
R19522 Integers.shl
R19497 Cmconstr.shlimm
R19459 Coq.Init.Logic "x = y" type_scope
R19435 Integers.ltu
R19446 Integers.repr
R19461 Coq.Init.Datatypes.true
R19388 Cminor.eval_expr
R19422 Values.Vint
R19584 Integers.eq_spec
R19598 Integers.zero
R19615 Integers.eq
R19624 Integers.zero
R19584 Integers.eq_spec
R19598 Integers.zero
R19615 Integers.eq
R19624 Integers.zero
R19661 Integers.shl_zero
R19661 Integers.shl_zero
R19706 Integers.shl
R19725 Integers.rolm
R19739 Integers.shl
R19747 Integers.mone
R19706 Integers.shl
R19725 Integers.rolm
R19739 Integers.shl
R19747 Integers.mone
R19769 Cmconstrproof.eval_rolm
R19769 Cmconstrproof.eval_rolm
R19802 Integers.shl_rolm
R19802 Integers.shl_rolm
R19973 Cminor.eval_expr
R20019 Values.Vint
R20025 Integers.shru
R19999 Cmconstr.shruimm
R19961 Coq.Init.Logic "x = y" type_scope
R19937 Integers.ltu
R19948 Integers.repr
R19963 Coq.Init.Datatypes.true
R19890 Cminor.eval_expr
R19924 Values.Vint
R20089 Integers.eq_spec
R20103 Integers.zero
R20120 Integers.eq
R20129 Integers.zero
R20089 Integers.eq_spec
R20103 Integers.zero
R20120 Integers.eq
R20129 Integers.zero
R20166 Integers.shru_zero
R20166 Integers.shru_zero
R20212 Integers.shru
R20232 Integers.rolm
R20270 Integers.shru
R20279 Integers.mone
R20244 Integers.sub
R20253 Integers.repr
R20212 Integers.shru
R20232 Integers.rolm
R20270 Integers.shru
R20279 Integers.mone
R20244 Integers.sub
R20253 Integers.repr
R20301 Cmconstrproof.eval_rolm
R20301 Cmconstrproof.eval_rolm
R20334 Integers.shru_rolm
R20334 Integers.shru_rolm
R20472 Cminor.eval_expr
R20522 Values.Vint
R20528 Integers.mul
R20498 Cmconstr.mulimm_base
R20425 Cminor.eval_expr
R20459 Values.Vint
R20595 Integers.one_bits_decomp
R20595 Integers.one_bits_decomp
R20634 Integers.one_bits_range
R20634 Integers.one_bits_range
R20667 Coq.ZArith.BinInt.Z_of_nat
R20676 Integers.wordsize
R20667 Coq.ZArith.BinInt.Z_of_nat
R20676 Integers.wordsize
R20707 Integers.one_bits
R20707 Integers.one_bits
R20797 Integers.add_zero
R20797 Integers.add_zero
R20822 Integers.shl_mul
R20822 Integers.shl_mul
R20843 Cmconstrproof.eval_shlimm
R20843 Cmconstrproof.eval_shlimm
R20933 Values.Vint
R20911 Cminor.eval_Elet
R20933 Values.Vint
R20911 Cminor.eval_Elet
R20977 Integers.add_zero
R20977 Integers.add_zero
R21002 Integers.mul_add_distr_r
R21002 Integers.mul_add_distr_r
R21036 Integers.shl_mul
R21036 Integers.shl_mul
R21062 Integers.shl_mul
R21062 Integers.shl_mul
R21092 Cminor.eval_Econs
R21092 Cminor.eval_Econs
R21113 Cmconstrproof.eval_shlimm
R21113 Cmconstrproof.eval_shlimm
R21132 Cminor.eval_Eletvar
R21132 Cminor.eval_Eletvar
R21196 Cminor.eval_Econs
R21196 Cminor.eval_Econs
R21216 Cmconstrproof.eval_shlimm
R21216 Cmconstrproof.eval_shlimm
R21235 Cminor.eval_Eletvar
R21235 Cminor.eval_Eletvar
R21455 Cminor.eval_expr
R21500 Values.Vint
R21506 Integers.mul
R21481 Cmconstr.mulimm
R21408 Cminor.eval_expr
R21442 Values.Vint
R21575 Integers.eq_spec
R21589 Integers.zero
R21606 Integers.eq
R21615 Integers.zero
R21575 Integers.eq_spec
R21589 Integers.zero
R21606 Integers.eq
R21615 Integers.zero
R21652 Integers.mul_zero
R21652 Integers.mul_zero
R21702 Integers.eq_spec
R21716 Integers.one
R21732 Integers.eq
R21741 Integers.one
R21702 Integers.eq_spec
R21716 Integers.one
R21732 Integers.eq
R21741 Integers.one
R21777 Integers.mul_one
R21777 Integers.mul_one
R21804 Cmconstr.mulimm_match
R21804 Cmconstr.mulimm_match
R21859 Integers.mul_commut
R21859 Integers.mul_commut
R21923 Integers.mul
R21942 Integers.add
R21965 Integers.mul
R21951 Integers.mul
R21923 Integers.mul
R21942 Integers.add
R21965 Integers.mul
R21951 Integers.mul
R21989 Cmconstrproof.eval_addimm
R21989 Cmconstrproof.eval_addimm
R22008 Cmconstrproof.eval_mulimm_base
R22008 Cmconstrproof.eval_mulimm_base
R22051 Integers.mul_add_distr_l
R22051 Integers.mul_add_distr_l
R22085 Integers.mul_commut
R22085 Integers.mul_commut
R22109 Cmconstrproof.eval_mulimm_base
R22109 Cmconstrproof.eval_mulimm_base
R22301 Cminor.eval_expr
R22343 Values.Vint
R22349 Integers.mul
R22327 Cmconstr.mul
R22254 Cminor.eval_expr
R22288 Values.Vint
R22207 Cminor.eval_expr
R22241 Values.Vint
R22409 Cmconstr.mul_match
R22409 Cmconstr.mul_match
R22454 Integers.mul_commut
R22454 Integers.mul_commut
R22476 Cmconstrproof.eval_mulimm
R22476 Cmconstrproof.eval_mulimm
R22515 Cmconstrproof.eval_mulimm
R22515 Cmconstrproof.eval_mulimm
R22726 Cminor.eval_expr
R22769 Values.Vint
R22775 Integers.divs
R22752 Cmconstr.divs
R22709 Coq.Init.Logic "x <> y" type_scope
R22712 Integers.zero
R22660 Cminor.eval_expr
R22694 Values.Vint
R22613 Cminor.eval_expr
R22647 Values.Vint
R22810 Cmconstr.divs
R22835 Integers.eq
R22842 Integers.eq_spec
R22856 Integers.zero
R23225 Cminor.eval_expr
R23280 Values.Vint
R23286 Integers.sub
R23297 Integers.mul
R23251 Cmconstr.mod_aux
R23208 Coq.Init.Logic "x <> y" type_scope
R23211 Integers.zero
R23159 Cminor.eval_expr
R23193 Values.Vint
R23112 Cminor.eval_expr
R23146 Values.Vint
R23032 Coq.Init.Logic "x = y" type_scope
R22979 Op.eval_operation
R23014 Coq.Lists.List "x :: y" list_scope
R23007 Values.Vint
R23024 Coq.Lists.List "x :: y" list_scope
R23017 Values.Vint
R23027 Coq.Lists.List.nil
R23037 Coq.Init.Datatypes.Some
R23043 Values.Vint
R22961 Coq.Init.Logic "x <> y" type_scope
R22964 Integers.zero
R23368 Cminor.eval_Elet
R23368 Cminor.eval_Elet
R23397 Cminor.eval_Elet
R23397 Cminor.eval_Elet
R23417 Cmconstrproof.eval_lift
R23417 Cmconstrproof.eval_lift
R23448 Cminor.eval_Eop
R23448 Cminor.eval_Eop
R23465 Cminor.eval_Econs
R23465 Cminor.eval_Econs
R23487 Cminor.eval_Eletvar
R23487 Cminor.eval_Eletvar
R23530 Cminor.eval_Econs
R23530 Cminor.eval_Econs
R23549 Cminor.eval_Eop
R23549 Cminor.eval_Eop
R23569 Cminor.eval_Econs
R23569 Cminor.eval_Econs
R23588 Cminor.eval_Eop
R23588 Cminor.eval_Eop
R23607 Cminor.eval_Econs
R23607 Cminor.eval_Econs
R23625 Cminor.eval_Eletvar
R23625 Cminor.eval_Eletvar
R23668 Cminor.eval_Econs
R23668 Cminor.eval_Econs
R23686 Cminor.eval_Eletvar
R23686 Cminor.eval_Eletvar
R23728 Cminor.eval_Enil
R23728 Cminor.eval_Enil
R23769 Cminor.eval_Econs
R23769 Cminor.eval_Econs
R23787 Cminor.eval_Eletvar
R23787 Cminor.eval_Eletvar
R23829 Cminor.eval_Enil
R23829 Cminor.eval_Enil
R23866 Cminor.eval_Enil
R23866 Cminor.eval_Enil
R24075 Cminor.eval_expr
R24118 Values.Vint
R24124 Integers.mods
R24101 Cmconstr.mods
R24058 Coq.Init.Logic "x <> y" type_scope
R24061 Integers.zero
R24009 Cminor.eval_expr
R24043 Values.Vint
R23962 Cminor.eval_expr
R23996 Values.Vint
R24181 Integers.mods_divs
R24181 Integers.mods_divs
R24206 Cmconstrproof.eval_mod_aux
R24206 Cmconstrproof.eval_mod_aux
R24254 Integers.eq
R24261 Integers.eq_spec
R24276 Integers.zero
R24495 Cminor.eval_expr
R24558 Values.Vint
R24564 Integers.divu
R24521 Cminor.Eop
R24534 Cmconstr "x ::: y" cminor_scope
R24540 Cmconstr "x ::: y" cminor_scope
R24544 Cminor.Enil
R24525 Op.Odivu
R24478 Coq.Init.Logic "x <> y" type_scope
R24481 Integers.zero
R24429 Cminor.eval_expr
R24463 Values.Vint
R24382 Cminor.eval_expr
R24416 Values.Vint
R24624 Integers.eq
R24631 Integers.eq_spec
R24645 Integers.zero
R24858 Cminor.eval_expr
R24901 Values.Vint
R24907 Integers.divu
R24884 Cmconstr.divu
R24841 Coq.Init.Logic "x <> y" type_scope
R24844 Integers.zero
R24792 Cminor.eval_expr
R24826 Values.Vint
R24745 Cminor.eval_expr
R24779 Values.Vint
R24969 Cmconstr.divu_match
R24969 Cmconstr.divu_match
R25014 Integers.is_power2
R25014 Integers.is_power2
R25052 Integers.divu_pow2
R25052 Integers.divu_pow2
R25085 Cmconstrproof.eval_shruimm
R25085 Cmconstrproof.eval_shruimm
R25113 Integers.is_power2_range
R25113 Integers.is_power2_range
R25174 Cmconstrproof.eval_divu_base
R25174 Cmconstrproof.eval_divu_base
R25223 Cmconstrproof.eval_divu_base
R25223 Cmconstrproof.eval_divu_base
R25428 Cminor.eval_expr
R25471 Values.Vint
R25477 Integers.modu
R25454 Cmconstr.modu
R25411 Coq.Init.Logic "x <> y" type_scope
R25414 Integers.zero
R25362 Cminor.eval_expr
R25396 Values.Vint
R25315 Cminor.eval_expr
R25349 Values.Vint
R25537 Cmconstr.divu_match
R25537 Cmconstr.divu_match
R25582 Integers.is_power2
R25582 Integers.is_power2
R25620 Integers.modu_and
R25620 Integers.modu_and
R25657 Integers.rolm_zero
R25657 Integers.rolm_zero
R25678 Cmconstrproof.eval_rolm
R25678 Cmconstrproof.eval_rolm
R25712 Integers.modu_divu
R25712 Integers.modu_divu
R25734 Cmconstrproof.eval_mod_aux
R25734 Cmconstrproof.eval_mod_aux
R25775 Integers.eq
R25782 Integers.eq_spec
R25797 Integers.zero
R25872 Integers.modu_divu
R25872 Integers.modu_divu
R25894 Cmconstrproof.eval_mod_aux
R25894 Cmconstrproof.eval_mod_aux
R25935 Integers.eq
R25942 Integers.eq_spec
R25957 Integers.zero
R26135 Cminor.eval_expr
R26180 Values.Vint
R26186 Integers.and
R26161 Cmconstr.andimm
R26088 Cminor.eval_expr
R26122 Values.Vint
R26240 Integers.is_rlw_mask
R26240 Integers.is_rlw_mask
R26273 Integers.rolm_zero
R26273 Integers.rolm_zero
R26294 Cmconstrproof.eval_rolm
R26294 Cmconstrproof.eval_rolm
R26484 Cminor.eval_expr
R26526 Values.Vint
R26532 Integers.and
R26510 Cmconstr.and
R26437 Cminor.eval_expr
R26471 Values.Vint
R26390 Cminor.eval_expr
R26424 Values.Vint
R26590 Cmconstr.mul_match
R26590 Cmconstr.mul_match
R26635 Integers.and_commut
R26635 Integers.and_commut
R26657 Cmconstrproof.eval_andimm
R26657 Cmconstrproof.eval_andimm
R26696 Cmconstrproof.eval_andimm
R26696 Cmconstrproof.eval_andimm
R26932 Coq.Init.Logic "A /\ B" type_scope
R26927 Coq.Init.Logic "x = y" type_scope
R26943 Coq.Init.Logic "A /\ B" type_scope
R26938 Coq.Init.Logic "x = y" type_scope
R26954 Coq.Init.Logic "A /\ B" type_scope
R26949 Coq.Init.Logic "x = y" type_scope
R26960 Coq.Init.Logic "x = y" type_scope
R26882 Cminor.eval_expr
R26840 Cminor.eval_expr
R26828 Coq.Init.Logic "x = y" type_scope
R26807 Cmconstr.same_expr_pure
R26830 Coq.Init.Datatypes.true
R27101 AST.ident_eq
R27101 AST.ident_eq
R27179 Coq.Init.Logic "x = y" type_scope
R27179 Coq.Init.Logic "x = y" type_scope
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R27380 Cminor.eval_expr
R27421 Values.Vint
R27427 Integers.or
R27406 Cmconstr.or
R27333 Cminor.eval_expr
R27367 Values.Vint
R27286 Cminor.eval_expr
R27320 Values.Vint
R27483 Cmconstr.or_match
R27483 Cmconstr.or_match
R27520 Integers.eq_spec
R27556 Integers.eq
R27520 Integers.eq_spec
R27556 Integers.eq
R27596 Integers.is_rlw_mask
R27613 Integers.or
R27596 Integers.is_rlw_mask
R27613 Integers.or
R27645 Cmconstr.same_expr_pure
R27645 Cmconstr.same_expr_pure
R27740 Cmconstrproof.eval_same_expr_pure
R27740 Cmconstrproof.eval_same_expr_pure
R27959 Integers.or_rolm
R27959 Integers.or_rolm
R28204 Cminor.eval_expr
R28246 Values.Vint
R28252 Integers.xor
R28230 Cmconstr.xor
R28157 Cminor.eval_expr
R28191 Values.Vint
R28110 Cminor.eval_expr
R28144 Values.Vint
R28284 Cmconstr.xor
R28487 Cminor.eval_expr
R28529 Values.Vint
R28535 Integers.shl
R28513 Cmconstr.shl
R28475 Coq.Init.Logic "x = y" type_scope
R28451 Integers.ltu
R28462 Integers.repr
R28477 Coq.Init.Datatypes.true
R28404 Cminor.eval_expr
R28438 Values.Vint
R28357 Cminor.eval_expr
R28391 Values.Vint
R28593 Cmconstr.shift_match
R28593 Cmconstr.shift_match
R28637 Cmconstrproof.eval_shlimm
R28637 Cmconstrproof.eval_shlimm
R28889 Cminor.eval_expr
R28931 Values.Vint
R28937 Integers.shr
R28915 Cmconstr.shr
R28877 Coq.Init.Logic "x = y" type_scope
R28853 Integers.ltu
R28864 Integers.repr
R28879 Coq.Init.Datatypes.true
R28806 Cminor.eval_expr
R28840 Values.Vint
R28759 Cminor.eval_expr
R28793 Values.Vint
R28971 Cmconstr.shr
R29200 Cminor.eval_expr
R29243 Values.Vint
R29249 Integers.shru
R29226 Cmconstr.shru
R29188 Coq.Init.Logic "x = y" type_scope
R29164 Integers.ltu
R29175 Integers.repr
R29190 Coq.Init.Datatypes.true
R29117 Cminor.eval_expr
R29151 Values.Vint
R29070 Cminor.eval_expr
R29104 Values.Vint
R29309 Cmconstr.shift_match
R29309 Cmconstr.shift_match
R29353 Cmconstrproof.eval_shruimm
R29353 Cmconstrproof.eval_shruimm
R29575 Cminor.eval_expr
R29618 Values.Vfloat
R29626 Floats.add
R29601 Cmconstr.addf
R29526 Cminor.eval_expr
R29560 Values.Vfloat
R29477 Cminor.eval_expr
R29511 Values.Vfloat
R29687 Cmconstr.addf_match
R29687 Cmconstr.addf_match
R29801 Cminor.eval_Elet
R29801 Cminor.eval_Elet
R29840 Cminor.eval_Econs
R29840 Cminor.eval_Econs
R29858 Cmconstrproof.eval_lift
R29858 Cmconstrproof.eval_lift
R29889 Cminor.eval_Econs
R29889 Cminor.eval_Econs
R29907 Cmconstrproof.eval_lift
R29907 Cmconstrproof.eval_lift
R29939 Cminor.eval_Econs
R29939 Cminor.eval_Econs
R29957 Cminor.eval_Eletvar
R29957 Cminor.eval_Eletvar
R29999 Cminor.eval_Enil
R29999 Cminor.eval_Enil
R30030 Floats.addf_commut
R30030 Floats.addf_commut
R30240 Cminor.eval_expr
R30283 Values.Vfloat
R30291 Floats.sub
R30266 Cmconstr.subf
R30191 Cminor.eval_expr
R30225 Values.Vfloat
R30142 Cminor.eval_expr
R30176 Values.Vfloat
R30352 Cmconstr.subf_match
R30352 Cmconstr.subf_match
R30606 Cminor.eval_expr
R30649 Values.Vfloat
R30657 Floats.mul
R30632 Cmconstr.mulf
R30557 Cminor.eval_expr
R30591 Values.Vfloat
R30508 Cminor.eval_expr
R30542 Values.Vfloat
R30691 Cmconstr.mulf
R30864 Cminor.eval_expr
R30907 Values.Vfloat
R30915 Floats.div
R30890 Cmconstr.divf
R30815 Cminor.eval_expr
R30849 Values.Vfloat
R30766 Cminor.eval_expr
R30800 Values.Vfloat
R30949 Cmconstr.divf
R31119 Cminor.eval_expr
R31163 Values.of_bool
R31176 Integers.cmp
R31145 Cmconstr.cmp
R31072 Cminor.eval_expr
R31106 Values.Vint
R31025 Cminor.eval_expr
R31059 Values.Vint
R31213 Cmconstr.cmp
R31234 Integers.cmp
R31234 Integers.cmp
R31493 Cminor.eval_expr
R31519 Cmconstr.cmp
R31460 Coq.Init.Logic "A \/ B" type_scope
R31447 Coq.Init.Logic "A /\ B" type_scope
R31441 Coq.Init.Logic "x = y" type_scope
R31443 AST.Ceq
R31452 Coq.Init.Logic "x = y" type_scope
R31454 Values.Vfalse
R31474 Coq.Init.Logic "A /\ B" type_scope
R31468 Coq.Init.Logic "x = y" type_scope
R31470 AST.Cne
R31479 Coq.Init.Logic "x = y" type_scope
R31481 Values.Vtrue
R31384 Cminor.eval_expr
R31418 Values.Vint
R31423 Integers.zero
R31335 Cminor.eval_expr
R31369 Values.Vptr
R31559 Cmconstr.cmp
R31869 Cminor.eval_expr
R31895 Cmconstr.cmp
R31836 Coq.Init.Logic "A \/ B" type_scope
R31823 Coq.Init.Logic "A /\ B" type_scope
R31817 Coq.Init.Logic "x = y" type_scope
R31819 AST.Ceq
R31828 Coq.Init.Logic "x = y" type_scope
R31830 Values.Vfalse
R31850 Coq.Init.Logic "A /\ B" type_scope
R31844 Coq.Init.Logic "x = y" type_scope
R31846 AST.Cne
R31855 Coq.Init.Logic "x = y" type_scope
R31857 Values.Vtrue
R31765 Cminor.eval_expr
R31799 Values.Vptr
R31711 Cminor.eval_expr
R31745 Values.Vint
R31750 Integers.zero
R31935 Cmconstr.cmp
R32182 Cminor.eval_expr
R32226 Values.of_bool
R32239 Integers.cmp
R32208 Cmconstr.cmp
R32133 Cminor.eval_expr
R32167 Values.Vptr
R32084 Cminor.eval_expr
R32118 Values.Vptr
R32276 Cmconstr.cmp
R32316 Coqlib.zeq_true
R32316 Coqlib.zeq_true
R32335 Integers.cmp
R32335 Integers.cmp
R32522 Cminor.eval_expr
R32567 Values.of_bool
R32580 Integers.cmpu
R32548 Cmconstr.cmpu
R32475 Cminor.eval_expr
R32509 Values.Vint
R32428 Cminor.eval_expr
R32462 Values.Vint
R32618 Cmconstr.cmpu
R32640 Integers.cmpu
R32640 Integers.cmpu
R32832 Cminor.eval_expr
R32877 Values.of_bool
R32890 Floats.cmp
R32858 Cmconstr.cmpf
R32783 Cminor.eval_expr
R32817 Values.Vfloat
R32734 Cminor.eval_expr
R32768 Values.Vfloat
R32929 Cmconstr.cmpf
R32951 Floats.cmp
R32951 Floats.cmp
R33125 Cminor.eval_condexpr
R33172 Cminor.CEcond
R33207 Cmconstr "x ::: y" cminor_scope
R33211 Cminor.Enil
R33180 Op.Ccompuimm
R33194 Integers.zero
R33190 AST.Cne
R33100 Values.bool_of_val
R33060 Cminor.eval_expr
R33051 Coq.Init.Datatypes.bool
R33270 Cminor.eval_CEcond
R33270 Cminor.eval_CEcond
R33336 Integers.eq_false
R33336 Integers.eq_false
R33513 Cminor.eval_condexpr
R33543 Cmconstr.condexpr_of_expr
R33488 Values.bool_of_val
R33448 Cminor.eval_expr
R33439 Coq.Init.Datatypes.bool
R33625 Cmconstrproof.eval_base_condition_of_expr
R33625 Cmconstrproof.eval_base_condition_of_expr
R33625 Cmconstrproof.eval_base_condition_of_expr
R33625 Cmconstrproof.eval_base_condition_of_expr
R33625 Cmconstrproof.eval_base_condition_of_expr
R33625 Cmconstrproof.eval_base_condition_of_expr
R33625 Cmconstrproof.eval_base_condition_of_expr
R33625 Cmconstrproof.eval_base_condition_of_expr
R33625 Cmconstrproof.eval_base_condition_of_expr
R33625 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33694 Cmconstrproof.eval_base_condition_of_expr
R33910 Integers.eq_false
R33910 Integers.eq_false
R33962 Integers.eq_true
R33962 Integers.eq_true
R33997 Cmconstrproof.eval_base_condition_of_expr
R33997 Cmconstrproof.eval_base_condition_of_expr
R34056 Cminor.eval_CEcond
R34056 Cminor.eval_CEcond
R34102 Op.eval_condition
R34102 Op.eval_condition
R34466 Cminor.eval_expr
R34492 Cmconstr.conditionalexpr
R34424 Cminor.eval_expr
R34404 Values.is_true
R34362 Cminor.eval_expr
R34604 Coq.Init.Datatypes.true
R34577 Cminor.eval_Econdition
R34604 Coq.Init.Datatypes.true
R34577 Cminor.eval_Econdition
R34625 Cmconstrproof.eval_condition_of_expr
R34625 Cmconstrproof.eval_condition_of_expr
R34869 Cminor.eval_expr
R34895 Cmconstr.conditionalexpr
R34827 Cminor.eval_expr
R34806 Values.is_false
R34764 Cminor.eval_expr
R35007 Coq.Init.Datatypes.false
R34980 Cminor.eval_Econdition
R35007 Coq.Init.Datatypes.false
R34980 Cminor.eval_Econdition
R35029 Cmconstrproof.eval_condition_of_expr
R35029 Cmconstrproof.eval_condition_of_expr
R35210 Cmconstr.addressing
R35228 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R35248 Coq.Init.Logic "'exists' x , p" type_scope
R35306 Coq.Init.Logic "A /\ B" type_scope
R35263 Cminor.eval_exprlist
R35344 Coq.Init.Logic "x = y" type_scope
R35314 Op.eval_addressing
R35346 Coq.Init.Datatypes.Some
R35186 Coq.Init.Logic "x = y" type_scope
R35188 Values.Vptr
R35144 Cminor.eval_expr
R35410 Cmconstr.addressing_match
R35410 Cmconstr.addressing_match
R35461 Coq.Lists.List.nil
R35465 Values.val
R35461 Coq.Lists.List.nil
R35465 Values.val
R35537 Coq.Lists.List.nil
R35541 Values.val
R35537 Coq.Lists.List.nil
R35541 Values.val
R35667 Coq.Lists.List "x :: y" list_scope
R35659 Values.Vint
R35670 Coq.Lists.List.nil
R35667 Coq.Lists.List "x :: y" list_scope
R35659 Values.Vint
R35670 Coq.Lists.List.nil
R35735 Globalenvs.find_symbol
R35735 Globalenvs.find_symbol
R35826 Globalenvs.find_symbol
R35826 Globalenvs.find_symbol
R35899 Coq.Lists.List "x :: y" list_scope
R35891 Values.Vint
R35902 Coq.Lists.List.nil
R35899 Coq.Lists.List "x :: y" list_scope
R35891 Values.Vint
R35902 Coq.Lists.List.nil
R35958 Globalenvs.find_symbol
R35958 Globalenvs.find_symbol
R36072 Coq.Lists.List "x :: y" list_scope
R36062 Values.Vptr
R36075 Coq.Lists.List.nil
R36072 Coq.Lists.List "x :: y" list_scope
R36062 Values.Vptr
R36075 Coq.Lists.List.nil
R36191 Coq.Lists.List "x :: y" list_scope
R36184 Values.Vint
R36205 Coq.Lists.List "x :: y" list_scope
R36194 Values.Vptr
R36208 Coq.Lists.List.nil
R36191 Coq.Lists.List "x :: y" list_scope
R36184 Values.Vint
R36205 Coq.Lists.List "x :: y" list_scope
R36194 Values.Vptr
R36208 Coq.Lists.List.nil
R36266 Integers.add_commut
R36266 Integers.add_commut
R36316 Coq.Lists.List "x :: y" list_scope
R36306 Values.Vptr
R36327 Coq.Lists.List "x :: y" list_scope
R36319 Values.Vint
R36330 Coq.Lists.List.nil
R36316 Coq.Lists.List "x :: y" list_scope
R36306 Values.Vptr
R36327 Coq.Lists.List "x :: y" list_scope
R36319 Values.Vint
R36330 Coq.Lists.List.nil
R36399 Coq.Lists.List "x :: y" list_scope
R36402 Coq.Lists.List.nil
R36399 Coq.Lists.List "x :: y" list_scope
R36402 Coq.Lists.List.nil
R36465 Integers.add_zero
R36465 Integers.add_zero
R36629 Cminor.eval_expr
R36655 Cmconstr.load
R36614 Coq.Init.Logic "x = y" type_scope
R36593 Mem.loadv
R36616 Coq.Init.Datatypes.Some
R36553 Cminor.eval_expr
R36785 Cmconstrproof.eval_addressing
R36824 Coq.Init.Logic.refl_equal
R36785 Cmconstrproof.eval_addressing
R36824 Coq.Init.Logic.refl_equal
R36852 Cmconstr.addressing
R36852 Cmconstr.addressing
R36898 Cminor.eval_Eload
R36898 Cminor.eval_Eload
R37126 Cminor.eval_expr
R37152 Cmconstr.store
R37111 Coq.Init.Logic "x = y" type_scope
R37085 Mem.storev
R37113 Coq.Init.Datatypes.Some
R37043 Cminor.eval_expr
R37001 Cminor.eval_expr
R37288 Cmconstrproof.eval_addressing
R37327 Coq.Init.Logic.refl_equal
R37288 Cmconstrproof.eval_addressing
R37327 Coq.Init.Logic.refl_equal
R37355 Cmconstr.addressing
R37355 Cmconstr.addressing
R37402 Cminor.eval_Estore
R37402 Cminor.eval_Estore
R37617 Cminor.exec_stmt
R37640 Cmconstr.ifthenelse
R37571 Cminor.exec_stmtlist
R37552 Values.is_true
R37511 Cminor.eval_expr
R37527 Coq.Lists.List.nil
R37748 Coq.Init.Datatypes.true
R37720 Cminor.exec_Sifthenelse
R37748 Coq.Init.Datatypes.true
R37720 Cminor.exec_Sifthenelse
R37763 Cmconstrproof.eval_condition_of_expr
R37763 Cmconstrproof.eval_condition_of_expr
R38014 Cminor.exec_stmt
R38037 Cmconstr.ifthenelse
R37967 Cminor.exec_stmtlist
R37947 Values.is_false
R37906 Cminor.eval_expr
R37922 Coq.Lists.List.nil
R38145 Coq.Init.Datatypes.false
R38117 Cminor.exec_Sifthenelse
R38145 Coq.Init.Datatypes.false
R38117 Cminor.exec_Sifthenelse
R38161 Cmconstrproof.eval_condition_of_expr
R38161 Cmconstrproof.eval_condition_of_expr
FCminorplus
R250 Integers.int
R284 Floats.float
R954 AST.comparison
R989 AST.comparison
R1024 AST.comparison
R1085 AST.ident
R1113 AST.ident
R1141 AST.ident
R1173 Cminorplus.operation
R1215 AST.memory_chunk
R1257 AST.memory_chunk
R1306 AST.signature
R1436 Coq.Init.Datatypes.nat
R1568 Cminorplus.expr
R1598 Cminorplus.expr
R1703 Coq.Init.Datatypes.nat
R1728 Coq.Init.Datatypes.option
R1735 Cminorplus.expr
R1881 AST.memory_chunk
R1925 Coq.ZArith.BinInt.Z
R1995 AST.signature
R2019 Coq.Lists.List.list
R2031 Coq.Init.Datatypes "x * y" type_scope
R2025 AST.ident
R2033 AST.memory_chunk
R2059 Coq.Lists.List.list
R2071 Coq.Init.Datatypes "x * y" type_scope
R2065 AST.ident
R2073 Cminorplus.local_variable
R2101 Cminorplus.stmtlist
R2136 AST.program
R2148 Cminorplus.function
R2252 Coq.Init.Datatypes.nat
R2283 Coq.Init.Datatypes.option
R2290 Values.val
R2432 Cminorplus.Out_normal
R2444 Coq.Init.Datatypes.None
R2454 Coq.Init.Logic "x = y" type_scope
R2456 Values.Vundef
R2467 Cminorplus.Out_return
R2478 Coq.Init.Datatypes.None
R2484 Coq.Init.Datatypes.None
R2494 Coq.Init.Logic "x = y" type_scope
R2496 Values.Vundef
R2507 Cminorplus.Out_return
R2519 Coq.Init.Datatypes.Some
R2529 Coq.Init.Datatypes.Some
R2542 Coq.Init.Logic "x = y" type_scope
R2559 Coq.Init.Logic.False
R2392 Values.val
R2376 Coq.Init.Datatypes.option
R2383 AST.typ
R2362 Cminorplus.outcome
R2615 Cminorplus.outcome
R2647 Cminorplus.Out_normal
R2661 Cminorplus.Out_normal
R2676 Cminorplus.Out_exit
R2685 Coq.Init.Datatypes.O
R2690 Cminorplus.Out_normal
R2705 Cminorplus.Out_exit
R2715 Coq.Init.Datatypes.S
R2723 Cminorplus.Out_exit
R2738 Cminorplus.Out_return
R2757 Cminorplus.Out_return
R2604 Cminorplus.outcome
R2800 Globalenvs.t
R2807 Cminorplus.function
R2835 Maps.t
R2850 Coq.Init.Datatypes "x * y" type_scope
R2844 Values.block
R2852 Cminorplus.local_variable
R2892 Cminorplus.env
R2899 Maps.empty
R2918 Coq.Init.Datatypes "x * y" type_scope
R2912 Values.block
R2920 Cminorplus.local_variable
R2958 Coq.Lists.List.list
R2963 Values.val
R3010 Coq.ZArith.BinInt.Z
R3035 Cminorplus.LVscalar
R3053 Mem.size_chunk
R3074 Cminorplus.LVarray
R3088 Coq.ZArith.Zmin.Zmax
R2992 Cminorplus.local_variable
R3236 Coq.Lists.List "x ++ y" list_scope
R3149 Coq.Lists.List.map
R3223 Cminorplus.fn_params
R3179 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3180 Coq.Init.Datatypes.fst
R3194 Cminorplus.LVscalar
R3204 Coq.Init.Datatypes.snd
R3242 Cminorplus.fn_vars
R3134 Cminorplus.function
R3299 Coq.Lists.List.map
R3337 Cminorplus.fn_params
R3310 Coq.Init.Datatypes.fst
R3320 AST.memory_chunk
R3314 AST.ident
R3284 Cminorplus.function
R3394 Coq.Lists.List.map
R3434 Cminorplus.fn_vars
R3405 Coq.Init.Datatypes.fst
R3415 Cminorplus.local_variable
R3409 AST.ident
R3379 Cminorplus.function
R3502 Coq.Init.Datatypes.option
R3509 Values.val
R3521 Integers.eq
R3530 Integers.zero
R3622 Coq.Init.Datatypes.None
R3560 AST.Ceq
R3567 Coq.Init.Datatypes.Some
R3572 Values.Vfalse
R3581 AST.Cne
R3588 Coq.Init.Datatypes.Some
R3593 Values.Vtrue
R3606 Coq.Init.Datatypes.None
R3495 Integers.int
R3479 AST.comparison
R3696 Coq.Init.Datatypes.option
R3703 Values.val
R3734 Cminorplus.Ointconst
R3747 Coq.Lists.List.nil
R3754 Coq.Init.Datatypes.Some
R3760 Values.Vint
R3772 Cminorplus.Ofloatconst
R3787 Coq.Lists.List.nil
R3794 Coq.Init.Datatypes.Some
R3800 Values.Vfloat
R3814 Cminorplus.Ocast8unsigned
R3838 Coq.Lists.List "x :: y" list_scope
R3830 Values.Vint
R3841 Coq.Lists.List.nil
R3848 Coq.Init.Datatypes.Some
R3854 Values.Vint
R3860 Integers.cast8unsigned
R3887 Cminorplus.Ocast8signed
R3909 Coq.Lists.List "x :: y" list_scope
R3901 Values.Vint
R3912 Coq.Lists.List.nil
R3919 Coq.Init.Datatypes.Some
R3925 Values.Vint
R3931 Integers.cast8signed
R3956 Cminorplus.Ocast16unsigned
R3981 Coq.Lists.List "x :: y" list_scope
R3973 Values.Vint
R3984 Coq.Lists.List.nil
R3991 Coq.Init.Datatypes.Some
R3997 Values.Vint
R4003 Integers.cast16unsigned
R4031 Cminorplus.Ocast16signed
R4054 Coq.Lists.List "x :: y" list_scope
R4046 Values.Vint
R4057 Coq.Lists.List.nil
R4064 Coq.Init.Datatypes.Some
R4070 Values.Vint
R4076 Integers.cast16signed
R4102 Cminorplus.Onotint
R4119 Coq.Lists.List "x :: y" list_scope
R4111 Values.Vint
R4122 Coq.Lists.List.nil
R4129 Coq.Init.Datatypes.Some
R4135 Values.Vint
R4141 Integers.not
R4158 Cminorplus.Oadd
R4172 Coq.Lists.List "x :: y" list_scope
R4164 Values.Vint
R4183 Coq.Lists.List "x :: y" list_scope
R4175 Values.Vint
R4186 Coq.Lists.List.nil
R4193 Coq.Init.Datatypes.Some
R4199 Values.Vint
R4205 Integers.add
R4225 Cminorplus.Oadd
R4239 Coq.Lists.List "x :: y" list_scope
R4231 Values.Vint
R4253 Coq.Lists.List "x :: y" list_scope
R4242 Values.Vptr
R4256 Coq.Lists.List.nil
R4263 Coq.Init.Datatypes.Some
R4269 Values.Vptr
R4278 Integers.add
R4298 Cminorplus.Oadd
R4315 Coq.Lists.List "x :: y" list_scope
R4304 Values.Vptr
R4326 Coq.Lists.List "x :: y" list_scope
R4318 Values.Vint
R4329 Coq.Lists.List.nil
R4336 Coq.Init.Datatypes.Some
R4342 Values.Vptr
R4351 Integers.add
R4371 Cminorplus.Osub
R4385 Coq.Lists.List "x :: y" list_scope
R4377 Values.Vint
R4396 Coq.Lists.List "x :: y" list_scope
R4388 Values.Vint
R4399 Coq.Lists.List.nil
R4406 Coq.Init.Datatypes.Some
R4412 Values.Vint
R4418 Integers.sub
R4438 Cminorplus.Osub
R4455 Coq.Lists.List "x :: y" list_scope
R4444 Values.Vptr
R4466 Coq.Lists.List "x :: y" list_scope
R4458 Values.Vint
R4469 Coq.Lists.List.nil
R4476 Coq.Init.Datatypes.Some
R4482 Values.Vptr
R4491 Integers.sub
R4511 Cminorplus.Osub
R4528 Coq.Lists.List "x :: y" list_scope
R4517 Values.Vptr
R4542 Coq.Lists.List "x :: y" list_scope
R4531 Values.Vptr
R4545 Coq.Lists.List.nil
R4561 Values.eq_block
R4614 Coq.Init.Datatypes.None
R4581 Coq.Init.Datatypes.Some
R4587 Values.Vint
R4593 Integers.sub
R4623 Cminorplus.Omul
R4637 Coq.Lists.List "x :: y" list_scope
R4629 Values.Vint
R4648 Coq.Lists.List "x :: y" list_scope
R4640 Values.Vint
R4651 Coq.Lists.List.nil
R4658 Coq.Init.Datatypes.Some
R4664 Values.Vint
R4670 Integers.mul
R4690 Cminorplus.Odiv
R4704 Coq.Lists.List "x :: y" list_scope
R4696 Values.Vint
R4715 Coq.Lists.List "x :: y" list_scope
R4707 Values.Vint
R4718 Coq.Lists.List.nil
R4734 Integers.eq
R4744 Integers.zero
R4768 Coq.Init.Datatypes.Some
R4774 Values.Vint
R4780 Integers.divs
R4758 Coq.Init.Datatypes.None
R4801 Cminorplus.Odivu
R4816 Coq.Lists.List "x :: y" list_scope
R4808 Values.Vint
R4827 Coq.Lists.List "x :: y" list_scope
R4819 Values.Vint
R4830 Coq.Lists.List.nil
R4846 Integers.eq
R4856 Integers.zero
R4880 Coq.Init.Datatypes.Some
R4886 Values.Vint
R4892 Integers.divu
R4870 Coq.Init.Datatypes.None
R4913 Cminorplus.Omod
R4927 Coq.Lists.List "x :: y" list_scope
R4919 Values.Vint
R4938 Coq.Lists.List "x :: y" list_scope
R4930 Values.Vint
R4941 Coq.Lists.List.nil
R4957 Integers.eq
R4967 Integers.zero
R4991 Coq.Init.Datatypes.Some
R4997 Values.Vint
R5003 Integers.mods
R4981 Coq.Init.Datatypes.None
R5024 Cminorplus.Omodu
R5039 Coq.Lists.List "x :: y" list_scope
R5031 Values.Vint
R5050 Coq.Lists.List "x :: y" list_scope
R5042 Values.Vint
R5053 Coq.Lists.List.nil
R5069 Integers.eq
R5079 Integers.zero
R5103 Coq.Init.Datatypes.Some
R5109 Values.Vint
R5115 Integers.modu
R5093 Coq.Init.Datatypes.None
R5136 Cminorplus.Oand
R5150 Coq.Lists.List "x :: y" list_scope
R5142 Values.Vint
R5161 Coq.Lists.List "x :: y" list_scope
R5153 Values.Vint
R5164 Coq.Lists.List.nil
R5171 Coq.Init.Datatypes.Some
R5177 Values.Vint
R5183 Integers.and
R5203 Cminorplus.Oor
R5216 Coq.Lists.List "x :: y" list_scope
R5208 Values.Vint
R5227 Coq.Lists.List "x :: y" list_scope
R5219 Values.Vint
R5230 Coq.Lists.List.nil
R5237 Coq.Init.Datatypes.Some
R5243 Values.Vint
R5249 Integers.or
R5268 Cminorplus.Oxor
R5282 Coq.Lists.List "x :: y" list_scope
R5274 Values.Vint
R5293 Coq.Lists.List "x :: y" list_scope
R5285 Values.Vint
R5296 Coq.Lists.List.nil
R5303 Coq.Init.Datatypes.Some
R5309 Values.Vint
R5315 Integers.xor
R5335 Cminorplus.Oshl
R5349 Coq.Lists.List "x :: y" list_scope
R5341 Values.Vint
R5360 Coq.Lists.List "x :: y" list_scope
R5352 Values.Vint
R5363 Coq.Lists.List.nil
R5379 Integers.ltu
R5391 Integers.repr
R5442 Coq.Init.Datatypes.None
R5409 Coq.Init.Datatypes.Some
R5415 Values.Vint
R5421 Integers.shl
R5451 Cminorplus.Oshr
R5465 Coq.Lists.List "x :: y" list_scope
R5457 Values.Vint
R5476 Coq.Lists.List "x :: y" list_scope
R5468 Values.Vint
R5479 Coq.Lists.List.nil
R5495 Integers.ltu
R5507 Integers.repr
R5558 Coq.Init.Datatypes.None
R5525 Coq.Init.Datatypes.Some
R5531 Values.Vint
R5537 Integers.shr
R5567 Cminorplus.Oshru
R5582 Coq.Lists.List "x :: y" list_scope
R5574 Values.Vint
R5593 Coq.Lists.List "x :: y" list_scope
R5585 Values.Vint
R5596 Coq.Lists.List.nil
R5612 Integers.ltu
R5624 Integers.repr
R5676 Coq.Init.Datatypes.None
R5642 Coq.Init.Datatypes.Some
R5648 Values.Vint
R5654 Integers.shru
R5685 Cminorplus.Onegf
R5702 Coq.Lists.List "x :: y" list_scope
R5692 Values.Vfloat
R5705 Coq.Lists.List.nil
R5712 Coq.Init.Datatypes.Some
R5718 Values.Vfloat
R5726 Floats.neg
R5745 Cminorplus.Oabsf
R5762 Coq.Lists.List "x :: y" list_scope
R5752 Values.Vfloat
R5765 Coq.Lists.List.nil
R5772 Coq.Init.Datatypes.Some
R5778 Values.Vfloat
R5786 Floats.abs
R5805 Cminorplus.Oaddf
R5822 Coq.Lists.List "x :: y" list_scope
R5812 Values.Vfloat
R5835 Coq.Lists.List "x :: y" list_scope
R5825 Values.Vfloat
R5838 Coq.Lists.List.nil
R5845 Coq.Init.Datatypes.Some
R5851 Values.Vfloat
R5859 Floats.add
R5881 Cminorplus.Osubf
R5898 Coq.Lists.List "x :: y" list_scope
R5888 Values.Vfloat
R5911 Coq.Lists.List "x :: y" list_scope
R5901 Values.Vfloat
R5914 Coq.Lists.List.nil
R5921 Coq.Init.Datatypes.Some
R5927 Values.Vfloat
R5935 Floats.sub
R5957 Cminorplus.Omulf
R5974 Coq.Lists.List "x :: y" list_scope
R5964 Values.Vfloat
R5987 Coq.Lists.List "x :: y" list_scope
R5977 Values.Vfloat
R5990 Coq.Lists.List.nil
R5997 Coq.Init.Datatypes.Some
R6003 Values.Vfloat
R6011 Floats.mul
R6033 Cminorplus.Odivf
R6050 Coq.Lists.List "x :: y" list_scope
R6040 Values.Vfloat
R6063 Coq.Lists.List "x :: y" list_scope
R6053 Values.Vfloat
R6066 Coq.Lists.List.nil
R6073 Coq.Init.Datatypes.Some
R6079 Values.Vfloat
R6087 Floats.div
R6109 Cminorplus.Osingleoffloat
R6135 Coq.Lists.List "x :: y" list_scope
R6125 Values.Vfloat
R6138 Coq.Lists.List.nil
R6151 Coq.Init.Datatypes.Some
R6157 Values.Vfloat
R6165 Floats.singleoffloat
R6194 Cminorplus.Ointoffloat
R6217 Coq.Lists.List "x :: y" list_scope
R6207 Values.Vfloat
R6220 Coq.Lists.List.nil
R6234 Coq.Init.Datatypes.Some
R6240 Values.Vint
R6246 Floats.intoffloat
R6272 Cminorplus.Ofloatofint
R6293 Coq.Lists.List "x :: y" list_scope
R6285 Values.Vint
R6296 Coq.Lists.List.nil
R6310 Coq.Init.Datatypes.Some
R6316 Values.Vfloat
R6324 Floats.floatofint
R6350 Cminorplus.Ofloatofintu
R6372 Coq.Lists.List "x :: y" list_scope
R6364 Values.Vint
R6375 Coq.Lists.List.nil
R6389 Coq.Init.Datatypes.Some
R6395 Values.Vfloat
R6403 Floats.floatofintu
R6430 Cminorplus.Ocmp
R6446 Coq.Lists.List "x :: y" list_scope
R6438 Values.Vint
R6457 Coq.Lists.List "x :: y" list_scope
R6449 Values.Vint
R6460 Coq.Lists.List.nil
R6473 Coq.Init.Datatypes.Some
R6479 Values.of_bool
R6491 Integers.cmp
R6513 Cminorplus.Ocmp
R6532 Coq.Lists.List "x :: y" list_scope
R6521 Values.Vptr
R6546 Coq.Lists.List "x :: y" list_scope
R6535 Values.Vptr
R6549 Coq.Lists.List.nil
R6606 Coq.Bool.Bool "x && y" bool_scope
R6565 Mem.valid_pointer
R6585 Integers.signed
R6609 Mem.valid_pointer
R6629 Integers.signed
R6744 Coq.Init.Datatypes.None
R6660 Values.eq_block
R6720 Coq.Init.Datatypes.None
R6680 Coq.Init.Datatypes.Some
R6685 Values.of_bool
R6697 Integers.cmp
R6753 Cminorplus.Ocmp
R6772 Coq.Lists.List "x :: y" list_scope
R6761 Values.Vptr
R6783 Coq.Lists.List "x :: y" list_scope
R6775 Values.Vint
R6786 Coq.Lists.List.nil
R6793 Cminorplus.eval_compare_null
R6820 Cminorplus.Ocmp
R6836 Coq.Lists.List "x :: y" list_scope
R6828 Values.Vint
R6850 Coq.Lists.List "x :: y" list_scope
R6839 Values.Vptr
R6853 Coq.Lists.List.nil
R6860 Cminorplus.eval_compare_null
R6887 Cminorplus.Ocmpu
R6904 Coq.Lists.List "x :: y" list_scope
R6896 Values.Vint
R6915 Coq.Lists.List "x :: y" list_scope
R6907 Values.Vint
R6918 Coq.Lists.List.nil
R6931 Coq.Init.Datatypes.Some
R6937 Values.of_bool
R6949 Integers.cmpu
R6972 Cminorplus.Ocmpf
R6991 Coq.Lists.List "x :: y" list_scope
R6981 Values.Vfloat
R7004 Coq.Lists.List "x :: y" list_scope
R6994 Values.Vfloat
R7007 Coq.Lists.List.nil
R7020 Coq.Init.Datatypes.Some
R7026 Values.of_bool
R7039 Floats.cmp
R7071 Coq.Init.Datatypes.None
R3690 Mem.mem
R3676 Coq.Lists.List.list
R3681 Values.val
R3660 Cminorplus.operation
R7133 Coq.Init.Datatypes.option
R7140 Values.val
R7173 AST.Mint8signed
R7186 Values.Vint
R7196 Coq.Init.Datatypes.Some
R7202 Values.Vint
R7208 Integers.cast8signed
R7232 AST.Mint8unsigned
R7247 Values.Vint
R7257 Coq.Init.Datatypes.Some
R7263 Values.Vint
R7269 Integers.cast8unsigned
R7295 AST.Mint16signed
R7309 Values.Vint
R7319 Coq.Init.Datatypes.Some
R7325 Values.Vint
R7331 Integers.cast16signed
R7356 AST.Mint16unsigned
R7372 Values.Vint
R7382 Coq.Init.Datatypes.Some
R7388 Values.Vint
R7394 Integers.cast16unsigned
R7421 AST.Mint32
R7429 Values.Vint
R7439 Coq.Init.Datatypes.Some
R7444 Values.Vint
R7456 AST.Mint32
R7464 Values.Vptr
R7478 Coq.Init.Datatypes.Some
R7483 Values.Vptr
R7499 AST.Mfloat32
R7509 Values.Vfloat
R7521 Coq.Init.Datatypes.Some
R7526 Values.Vfloat
R7533 Floats.singleoffloat
R7561 AST.Mfloat64
R7571 Values.Vfloat
R7583 Coq.Init.Datatypes.Some
R7588 Values.Vfloat
R7610 Coq.Init.Datatypes.None
R7126 Values.val
R7108 AST.memory_chunk
R7765 Coq.Lists.List.list
R7770 Values.block
R7758 Mem.mem
R7751 Cminorplus.env
R7691 Coq.Lists.List.list
R7703 Coq.Init.Datatypes "x * y" type_scope
R7697 AST.ident
R7705 Cminorplus.local_variable
R7657 Mem.mem
R7650 Cminorplus.env
R7864 Coq.Lists.List.nil
R7856 Coq.Lists.List.nil
R8107 Coq.Lists.List "x :: y" list_scope
R8088 Coq.Lists.List "x :: y" list_scope
R8079 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8007 Maps.set
R8020 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7970 Coq.Init.Logic "x = y" type_scope
R7944 Mem.alloc
R7959 Cminorplus.sizeof
R7972 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8254 Mem.mem
R8215 Coq.Lists.List.list
R8220 Values.val
R8184 Coq.Lists.List.list
R8196 Coq.Init.Datatypes "x * y" type_scope
R8190 AST.ident
R8198 AST.memory_chunk
R8177 Mem.mem
R8143 Cminorplus.env
R8342 Coq.Lists.List.nil
R8338 Coq.Lists.List.nil
R8649 Coq.Lists.List "x :: y" list_scope
R8634 Coq.Lists.List "x :: y" list_scope
R8622 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8539 Coq.Init.Logic "x = y" type_scope
R8514 Mem.store
R8541 Coq.Init.Datatypes.Some
R8495 Coq.Init.Logic "x = y" type_scope
R8481 Cminorplus.cast
R8497 Coq.Init.Datatypes.Some
R8446 Coq.Init.Logic "x = y" type_scope
R8431 Maps.get
R8448 Coq.Init.Datatypes.Some
R8452 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8456 Cminorplus.LVscalar
R8691 Cminorplus.genv
R8776 Values.val
R8769 Mem.mem
R8761 Cminorplus.expr
R8754 Mem.mem
R8738 Cminorplus.env
R8728 Cminorplus.letenv
R11257 Coq.Lists.List.list
R11262 Values.val
R11250 Mem.mem
R11229 Cminorplus.exprlist
R11222 Mem.mem
R11206 Cminorplus.env
R11196 Cminorplus.letenv
R11604 Values.val
R11597 Mem.mem
R11577 Coq.Lists.List.list
R11582 Values.val
R11565 Cminorplus.function
R11558 Mem.mem
R12102 Cminorplus.outcome
R12095 Mem.mem
R12078 Cminorplus.stmt
R12071 Mem.mem
R12055 Cminorplus.env
R13544 Cminorplus.outcome
R13537 Mem.mem
R13516 Cminorplus.stmtlist
R13509 Mem.mem
R13493 Cminorplus.env
R8954 Cminorplus.Evar
R8918 Coq.Init.Logic "x = y" type_scope
R8897 Mem.load
R8920 Coq.Init.Datatypes.Some
R8861 Coq.Init.Logic "x = y" type_scope
R8846 Maps.get
R8863 Coq.Init.Datatypes.Some
R8868 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8872 Cminorplus.LVscalar
R9218 Cminorplus.Eassign
R9181 Coq.Init.Logic "x = y" type_scope
R9155 Mem.store
R9183 Coq.Init.Datatypes.Some
R9136 Coq.Init.Logic "x = y" type_scope
R9122 Cminorplus.cast
R9138 Coq.Init.Datatypes.Some
R9086 Coq.Init.Logic "x = y" type_scope
R9071 Maps.get
R9088 Coq.Init.Datatypes.Some
R9093 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9097 Cminorplus.LVscalar
R9369 Values.Vptr
R9376 Integers.zero
R9354 Cminorplus.Eaddrof
R9312 Coq.Init.Logic "x = y" type_scope
R9297 Maps.get
R9314 Coq.Init.Datatypes.Some
R9319 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9548 Values.Vptr
R9555 Integers.zero
R9533 Cminorplus.Eaddrof
R9497 Coq.Init.Logic "x = y" type_scope
R9474 Globalenvs.find_symbol
R9499 Coq.Init.Datatypes.Some
R9458 Coq.Init.Logic "x = y" type_scope
R9443 Maps.get
R9460 Coq.Init.Datatypes.None
R9719 Cminorplus.Eop
R9683 Coq.Init.Logic "x = y" type_scope
R9659 Cminorplus.eval_operation
R9685 Coq.Init.Datatypes.Some
R9886 Cminorplus.Eload
R9850 Coq.Init.Logic "x = y" type_scope
R9828 Mem.loadv
R9852 Coq.Init.Datatypes.Some
R10143 Cminorplus.Estore
R10106 Coq.Init.Logic "x = y" type_scope
R10080 Mem.storev
R10108 Coq.Init.Datatypes.Some
R10061 Coq.Init.Logic "x = y" type_scope
R10047 Cminorplus.cast
R10063 Coq.Init.Datatypes.Some
R10446 Cminorplus.Ecall
R10372 Coq.Init.Logic "x = y" type_scope
R10364 Cminorplus.fn_sig
R10343 Coq.Init.Logic "x = y" type_scope
R10321 Globalenvs.find_funct
R10345 Coq.Init.Datatypes.Some
R10652 Cminorplus.Econdition
R10575 Values.is_true
R10860 Cminorplus.Econdition
R10782 Values.is_false
R11035 Cminorplus.Elet
R10989 Coq.Lists.List "x :: y" list_scope
R11151 Cminorplus.Eletvar
R11115 Coq.Init.Logic "x = y" type_scope
R11100 Coq.Lists.List.nth_error
R11117 Coq.Init.Datatypes.Some
R11347 Coq.Lists.List.nil
R11340 Cminorplus.Enil
R11523 Coq.Lists.List "x :: y" list_scope
R11505 Cminorplus.Econs
R12003 Mem.free_list
R11919 Cminorplus.outcome_result_value
R11956 AST.sig_res
R11947 Cminorplus.fn_sig
R11894 Cminorplus.fn_body
R11819 Cminorplus.bind_parameters
R11843 Cminorplus.fn_params
R11757 Cminorplus.alloc_variables
R11786 Cminorplus.fn_variables
R11773 Cminorplus.empty_env
R11696 Coqlib.list_norepet
R11728 Coq.Lists.List "x ++ y" list_scope
R11710 Cminorplus.fn_params_names
R11731 Cminorplus.fn_vars_names
R12229 Cminorplus.Out_normal
R12217 Cminorplus.Sexpr
R12178 Coq.Lists.List.nil
R12427 Cminorplus.Sifthenelse
R12349 Values.is_true
R12324 Coq.Lists.List.nil
R12646 Cminorplus.Sifthenelse
R12567 Values.is_false
R12542 Coq.Lists.List.nil
R12835 Cminorplus.Sloop
R12794 Cminorplus.Sloop
R12758 Cminorplus.Out_normal
R12986 Cminorplus.Sloop
R12948 Coq.Init.Logic "x <> y" type_scope
R12951 Cminorplus.Out_normal
R13121 Cminorplus.outcome_block
R13106 Cminorplus.Sblock
R13209 Cminorplus.Out_exit
R13197 Cminorplus.Sexit
R13300 Cminorplus.Out_return
R13311 Coq.Init.Datatypes.None
R13283 Cminorplus.Sreturn
R13291 Coq.Init.Datatypes.None
R13442 Cminorplus.Out_return
R13454 Coq.Init.Datatypes.Some
R13420 Cminorplus.Sreturn
R13429 Coq.Init.Datatypes.Some
R13381 Coq.Lists.List.nil
R13627 Cminorplus.Out_normal
R13620 Cminorplus.Snil
R13798 Cminorplus.Scons
R13721 Cminorplus.Out_normal
R13952 Cminorplus.Scons
R13910 Coq.Init.Logic "x <> y" type_scope
R13913 Cminorplus.Out_normal
R14431 Coq.Init.Logic "'exists' x , p" type_scope
R14441 Coq.Init.Logic "'exists' x , p" type_scope
R14451 Coq.Init.Logic "'exists' x , p" type_scope
R14506 Coq.Init.Logic "A /\ B" type_scope
R14497 Coq.Init.Logic "x = y" type_scope
R14463 Globalenvs.find_symbol
R14486 AST.prog_main
R14499 Coq.Init.Datatypes.Some
R14545 Coq.Init.Logic "A /\ B" type_scope
R14536 Coq.Init.Logic "x = y" type_scope
R14511 Globalenvs.find_funct_ptr
R14538 Coq.Init.Datatypes.Some
R14591 Coq.Init.Logic "A /\ B" type_scope
R14561 Coq.Init.Logic "x = y" type_scope
R14553 Cminorplus.fn_sig
R14563 AST.mksignature
R14580 Coq.Init.Datatypes.Some
R14585 AST.Tint
R14575 Coq.Lists.List.nil
R14596 Cminorplus.eval_funcall
R14617 Coq.Lists.List.nil
R14410 Globalenvs.init_mem
R14378 Globalenvs.globalenv
R14351 Values.val
R14338 Cminorplus.program
FCminorgen
R323 Coq.Init.Datatypes.option
R330 Cminor.expr
R358 Cminor.Enil
R394 Cminorgen.Ointconst
R411 Coq.Init.Datatypes.Some
R416 Cminor.Eop
R434 Cminor.Enil
R421 Op.Ointconst
R448 Cminorgen.Ofloatconst
R467 Coq.Init.Datatypes.Some
R472 Cminor.Eop
R492 Cminor.Enil
R477 Op.Ofloatconst
R511 Coq.Init.Datatypes.None
R530 Cminor.Econs
R539 Cminor.Enil
R575 Cminorgen.Ocast8unsigned
R595 Coq.Init.Datatypes.Some
R600 Cmconstr.cast8unsigned
R635 Cminorgen.Ocast8signed
R653 Coq.Init.Datatypes.Some
R658 Cmconstr.cast8signed
R691 Cminorgen.Ocast16unsigned
R712 Coq.Init.Datatypes.Some
R717 Cmconstr.cast16unsigned
R753 Cminorgen.Ocast16signed
R772 Coq.Init.Datatypes.Some
R777 Cmconstr.cast16signed
R811 Cminorgen.Onotint
R824 Coq.Init.Datatypes.Some
R829 Cmconstr.notint
R857 Cminorgen.Onegf
R868 Coq.Init.Datatypes.Some
R873 Cmconstr.negfloat
R903 Cminorgen.Oabsf
R914 Coq.Init.Datatypes.Some
R919 Cmconstr.absfloat
R949 Cminorgen.Osingleoffloat
R969 Coq.Init.Datatypes.Some
R974 Cmconstr.singleoffloat
R1009 Cminorgen.Ointoffloat
R1026 Coq.Init.Datatypes.Some
R1031 Cmconstr.intoffloat
R1063 Cminorgen.Ofloatofint
R1080 Coq.Init.Datatypes.Some
R1085 Cmconstr.floatofint
R1117 Cminorgen.Ofloatofintu
R1135 Coq.Init.Datatypes.Some
R1140 Cmconstr.floatofintu
R1178 Coq.Init.Datatypes.None
R1197 Cminor.Econs
R1207 Cminor.Econs
R1216 Cminor.Enil
R1253 Cminorgen.Oadd
R1263 Coq.Init.Datatypes.Some
R1268 Cmconstr.add
R1296 Cminorgen.Osub
R1306 Coq.Init.Datatypes.Some
R1311 Cmconstr.sub
R1339 Cminorgen.Omul
R1349 Coq.Init.Datatypes.Some
R1354 Cmconstr.mul
R1382 Cminorgen.Odiv
R1392 Coq.Init.Datatypes.Some
R1397 Cmconstr.divs
R1426 Cminorgen.Odivu
R1437 Coq.Init.Datatypes.Some
R1442 Cmconstr.divu
R1471 Cminorgen.Omod
R1481 Coq.Init.Datatypes.Some
R1486 Cmconstr.mods
R1515 Cminorgen.Omodu
R1526 Coq.Init.Datatypes.Some
R1531 Cmconstr.modu
R1560 Cminorgen.Oand
R1570 Coq.Init.Datatypes.Some
R1575 Cmconstr.and
R1603 Cminorgen.Oor
R1612 Coq.Init.Datatypes.Some
R1617 Cmconstr.or
R1644 Cminorgen.Oxor
R1654 Coq.Init.Datatypes.Some
R1659 Cmconstr.xor
R1687 Cminorgen.Oshl
R1697 Coq.Init.Datatypes.Some
R1702 Cmconstr.shl
R1730 Cminorgen.Oshr
R1740 Coq.Init.Datatypes.Some
R1745 Cmconstr.shr
R1773 Cminorgen.Oshru
R1784 Coq.Init.Datatypes.Some
R1789 Cmconstr.shru
R1818 Cminorgen.Oaddf
R1829 Coq.Init.Datatypes.Some
R1834 Cmconstr.addf
R1863 Cminorgen.Osubf
R1874 Coq.Init.Datatypes.Some
R1879 Cmconstr.subf
R1908 Cminorgen.Omulf
R1919 Coq.Init.Datatypes.Some
R1924 Cmconstr.mulf
R1953 Cminorgen.Odivf
R1964 Coq.Init.Datatypes.Some
R1969 Cmconstr.divf
R1998 Cminorgen.Ocmp
R2010 Coq.Init.Datatypes.Some
R2015 Cmconstr.cmp
R2045 Cminorgen.Ocmpu
R2058 Coq.Init.Datatypes.Some
R2063 Cmconstr.cmpu
R2094 Cminorgen.Ocmpf
R2107 Coq.Init.Datatypes.Some
R2112 Cmconstr.cmpf
R2148 Coq.Init.Datatypes.None
R2172 Coq.Init.Datatypes.None
R312 Cminor.exprlist
R294 Cminorgen.operation
R2239 Cminor.expr
R2270 AST.Mint8signed
R2285 Cmconstr.cast8signed
R2312 AST.Mint8unsigned
R2329 Cmconstr.cast8unsigned
R2358 AST.Mint16signed
R2374 Cmconstr.cast16signed
R2402 AST.Mint16unsigned
R2420 Cmconstr.cast16unsigned
R2450 AST.Mint32
R2466 AST.Mfloat32
R2478 Cmconstr.singleoffloat
R2507 AST.Mfloat64
R2232 Cminor.expr
R2214 AST.memory_chunk
R2583 Cminor.expr
R2593 Cmconstr.load
R2576 Cminor.expr
R2558 AST.memory_chunk
R2676 Cminor.expr
R2686 Cminorgen.make_cast
R2703 Cmconstr.store
R2669 Cminor.expr
R2669 Cminor.expr
R2647 AST.memory_chunk
R2769 Cminor.expr
R2779 Cminor.Eop
R2811 Cminor.Enil
R2784 Op.Oaddrstack
R2796 Integers.repr
R2765 Coq.ZArith.BinInt.Z
R2860 AST.memory_chunk
R2923 Coq.ZArith.BinInt.Z
R2907 AST.memory_chunk
R2958 Coq.ZArith.BinInt.Z
R3023 Maps.t
R3030 Cminorgen.var_info
R3091 Coq.Init.Datatypes.option
R3098 Cminor.expr
R3114 Maps.get
R3140 Cminorgen.Var_local
R3159 Coq.Init.Datatypes.Some
R3164 Cminor.Evar
R3177 Cminorgen.Var_stack_scalar
R3207 Coq.Init.Datatypes.Some
R3212 Cminorgen.make_load
R3229 Cminorgen.make_stackaddr
R3254 Cminorgen.Var_stack_array
R3277 Coq.Init.Datatypes.None
R3286 Cminorgen.Var_global
R3300 Coq.Init.Datatypes.None
R3083 AST.ident
R3067 Cminorgen.compilenv
R3375 Coq.Init.Datatypes.option
R3382 Cminor.expr
R3398 Maps.get
R3424 Cminorgen.Var_local
R3443 Coq.Init.Datatypes.Some
R3448 Cminor.Eassign
R3460 Cminorgen.make_cast
R3486 Cminorgen.Var_stack_scalar
R3522 Coq.Init.Datatypes.Some
R3527 Cminorgen.make_store
R3545 Cminorgen.make_stackaddr
R3574 Cminorgen.Var_stack_array
R3597 Coq.Init.Datatypes.None
R3606 Cminorgen.Var_global
R3620 Coq.Init.Datatypes.None
R3368 Cminor.expr
R3355 AST.ident
R3339 Cminorgen.compilenv
R3684 Coq.Init.Datatypes.option
R3691 Cminor.expr
R3707 Maps.get
R3733 Cminorgen.Var_local
R3752 Coq.Init.Datatypes.None
R3761 Cminorgen.Var_stack_scalar
R3791 Coq.Init.Datatypes.Some
R3797 Cminorgen.make_stackaddr
R3821 Cminorgen.Var_stack_array
R3844 Coq.Init.Datatypes.Some
R3850 Cminorgen.make_stackaddr
R3874 Cminorgen.Var_global
R3888 Coq.Init.Datatypes.Some
R3894 Cminor.Eop
R3924 Cminor.Enil
R3899 Op.Oaddrsymbol
R3914 Integers.zero
R3676 AST.ident
R3660 Cminorgen.compilenv
R3999 Coq.Init.Datatypes.option
R4030 Coq.Init.Datatypes.None
R4038 Coq.Init.Datatypes.None
R4047 Coq.Init.Datatypes.Some
R3988 Coq.Init.Datatypes.option
R3969 Coq.Init.Datatypes.option
R4100 Cminorgen.bind
R4269 Coq.Init.Datatypes.option
R4276 Cminor.expr
R4228 Cminorgen.expr
R4213 Cminorgen.compilenv
R5323 Coq.Init.Datatypes.option
R5330 Cminor.exprlist
R5277 Cminorgen.exprlist
R5261 Cminorgen.compilenv
R4303 Cminorgen.Evar
R4316 Cminorgen.var_get
R4336 Cminorgen.Eaddrof
R4352 Cminorgen.var_addr
R4373 Cminorgen.Eassign
R4397 Cminorgen "'do' X <- A ; B"
R4426 Cminorgen.var_set
R4449 Cminorgen.Eop
R4470 Cminorgen "'do' X <- A ; B"
R4505 Cminorgen.make_op
R4524 Cminorgen.Eload
R4549 Cminorgen "'do' X <- A ; B"
R4578 Coq.Init.Datatypes.Some
R4584 Cminorgen.make_load
R4608 Cminorgen.Estore
R4638 Cminorgen "'do' X <- A ; B"
R4675 Cminorgen "'do' X <- A ; B"
R4712 Coq.Init.Datatypes.Some
R4718 Cminorgen.make_store
R4748 Cminorgen.Ecall
R4774 Cminorgen "'do' X <- A ; B"
R4809 Cminorgen "'do' X <- A ; B"
R4850 Coq.Init.Datatypes.Some
R4856 Cminor.Ecall
R4878 Cminorgen.Econdition
R4909 Cminorgen "'do' X <- A ; B"
R4946 Cminorgen "'do' X <- A ; B"
R4983 Cminorgen "'do' X <- A ; B"
R5020 Coq.Init.Datatypes.Some
R5026 Cmconstr.conditionalexpr
R5068 Cminorgen.Elet
R5090 Cminorgen "'do' X <- A ; B"
R5127 Cminorgen "'do' X <- A ; B"
R5164 Coq.Init.Datatypes.Some
R5170 Cminor.Elet
R5188 Cminorgen.Eletvar
R5209 Coq.Init.Datatypes.Some
R5215 Cminor.Eletvar
R4228 Cminorgen.expr
R4213 Cminorgen.compilenv
R5362 Cminorgen.Enil
R5378 Coq.Init.Datatypes.Some
R5383 Cminor.Enil
R5392 Cminorgen.Econs
R5415 Cminorgen "'do' X <- A ; B"
R5452 Cminorgen "'do' X <- A ; B"
R5493 Coq.Init.Datatypes.Some
R5499 Cminor.Econs
R5277 Cminorgen.exprlist
R5261 Cminorgen.compilenv
R5606 Coq.Init.Datatypes.option
R5613 Cminor.stmt
R5565 Cminorgen.stmt
R5550 Cminorgen.compilenv
R6324 Coq.Init.Datatypes.option
R6331 Cminor.stmtlist
R6279 Cminorgen.stmtlist
R6264 Cminorgen.compilenv
R5640 Cminorgen.Sexpr
R5659 Cminorgen "'do' X <- A ; B"
R5668 Cminorgen.transl_expr
R5688 Coq.Init.Datatypes.Some
R5693 Cminor.Sexpr
R5707 Cminorgen.Sifthenelse
R5738 Cminorgen "'do' X <- A ; B"
R5747 Cminorgen.transl_expr
R5773 Cminorgen "'do' X <- A ; B"
R5814 Cminorgen "'do' X <- A ; B"
R5855 Coq.Init.Datatypes.Some
R5861 Cmconstr.ifthenelse
R5897 Cminorgen.Sloop
R5916 Cminorgen "'do' X <- A ; B"
R5955 Coq.Init.Datatypes.Some
R5961 Cminor.Sloop
R5975 Cminorgen.Sblock
R5995 Cminorgen "'do' X <- A ; B"
R6034 Coq.Init.Datatypes.Some
R6040 Cminor.Sblock
R6055 Cminorgen.Sexit
R6074 Coq.Init.Datatypes.Some
R6080 Cminor.Sexit
R6093 Cminorgen.Sreturn
R6103 Coq.Init.Datatypes.None
R6117 Coq.Init.Datatypes.Some
R6123 Cminor.Sreturn
R6131 Coq.Init.Datatypes.None
R6141 Cminorgen.Sreturn
R6152 Coq.Init.Datatypes.Some
R6169 Cminorgen "'do' X <- A ; B"
R6178 Cminorgen.transl_expr
R6204 Coq.Init.Datatypes.Some
R6210 Cminor.Sreturn
R6219 Coq.Init.Datatypes.Some
R5565 Cminorgen.stmt
R5550 Cminorgen.compilenv
R6362 Cminorgen.Snil
R6372 Coq.Init.Datatypes.Some
R6377 Cminor.Snil
R6386 Cminorgen.Scons
R6409 Cminorgen "'do' X <- A ; B"
R6446 Cminorgen "'do' X <- A ; B"
R6487 Coq.Init.Datatypes.Some
R6493 Cminor.Scons
R6279 Cminorgen.stmtlist
R6264 Cminorgen.compilenv
R6590 Cminorgen.t
R6581 Cminorgen.expr
R7311 Cminorgen.t
R7298 Cminorgen.exprlist
R6623 Cminorgen.Evar
R6636 Cminorgen.empty
R6655 Cminorgen.Eaddrof
R6671 Cminorgen.add
R6687 Cminorgen.empty
R6706 Cminorgen.Eassign
R6746 Cminorgen.Eop
R6788 Cminorgen.Eload
R6829 Cminorgen.Estore
R6859 Cminorgen.union
R6920 Cminorgen.Ecall
R6946 Cminorgen.union
R7010 Cminorgen.Econdition
R7041 Cminorgen.union
R7087 Cminorgen.union
R7149 Cminorgen.Elet
R7171 Cminorgen.union
R7232 Cminorgen.Eletvar
R7247 Cminorgen.empty
R6581 Cminorgen.expr
R7344 Cminorgen.Enil
R7354 Cminorgen.empty
R7373 Cminorgen.Econs
R7396 Cminorgen.union
R7298 Cminorgen.exprlist
R7503 Cminorgen.t
R7494 Cminorgen.stmt
R7953 Cminorgen.t
R7940 Cminorgen.stmtlist
R7536 Cminorgen.Sexpr
R7549 Cminorgen.addr_taken_expr
R7571 Cminorgen.Sifthenelse
R7602 Cminorgen.union
R7646 Cminorgen.union
R7618 Cminorgen.addr_taken_expr
R7716 Cminorgen.Sloop
R7755 Cminorgen.Sblock
R7795 Cminorgen.Sexit
R7808 Cminorgen.empty
R7827 Cminorgen.Sreturn
R7837 Coq.Init.Datatypes.None
R7845 Cminorgen.empty
R7864 Cminorgen.Sreturn
R7875 Coq.Init.Datatypes.Some
R7886 Cminorgen.addr_taken_expr
R7494 Cminorgen.stmt
R7986 Cminorgen.Snil
R7996 Cminorgen.empty
R8015 Cminorgen.Scons
R8038 Cminorgen.union
R7940 Cminorgen.stmtlist
R8174 Coq.ZArith.BinInt "x * y" Z_scope
R8164 Coq.ZArith.Zdiv "x / y" Z_scope
R8161 Coq.ZArith.BinInt "x - y" Z_scope
R8152 Coq.ZArith.BinInt "x + y" Z_scope
R8140 Coq.ZArith.BinInt.Z
R8128 Coq.ZArith.BinInt.Z
R8320 Coq.Init.Datatypes "x * y" type_scope
R8310 Cminorgen.compilenv
R8322 Coq.ZArith.BinInt.Z
R8395 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8400 Cminorplus.LVarray
R8459 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8460 Maps.set
R8473 Cminorgen.Var_stack_array
R8504 Coq.ZArith.BinInt "x + y" Z_scope
R8506 Coq.ZArith.Zmin.Zmax
R8432 Cminorgen.align
R8521 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8526 Cminorplus.LVscalar
R8554 Cminorgen.mem
R8747 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8748 Maps.set
R8761 Cminorgen.Var_local
R8670 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8671 Maps.set
R8684 Cminorgen.Var_stack_scalar
R8722 Coq.ZArith.BinInt "x + y" Z_scope
R8640 Cminorgen.align
R8597 Mem.size_chunk
R8303 Coq.Init.Datatypes "x * y" type_scope
R8293 Cminorgen.compilenv
R8305 Coq.ZArith.BinInt.Z
R8254 Coq.Init.Datatypes "x * y" type_scope
R8248 AST.ident
R8256 Cminorplus.local_variable
R8224 Cminorgen.t
R8970 Coq.Init.Datatypes "x * y" type_scope
R8960 Cminorgen.compilenv
R8972 Coq.ZArith.BinInt.Z
R8930 Coq.Init.Datatypes "x * y" type_scope
R8920 Cminorgen.compilenv
R8932 Coq.ZArith.BinInt.Z
R8868 Coq.Lists.List.list
R8880 Coq.Init.Datatypes "x * y" type_scope
R8874 AST.ident
R8882 Cminorplus.local_variable
R8839 Cminorgen.t
R9005 Coq.Lists.List.nil
R9037 Coq.Lists.List "x :: y" list_scope
R9079 Cminorgen.assign_variable
R8930 Coq.Init.Datatypes "x * y" type_scope
R8920 Cminorgen.compilenv
R8932 Coq.ZArith.BinInt.Z
R8868 Coq.Lists.List.list
R8880 Coq.Init.Datatypes "x * y" type_scope
R8874 AST.ident
R8882 Cminorplus.local_variable
R8839 Cminorgen.t
R9184 Coq.Init.Datatypes "x * y" type_scope
R9174 Cminorgen.compilenv
R9186 Coq.ZArith.BinInt.Z
R9193 Cminorgen.assign_variables
R9275 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9276 Maps.init
R9286 Cminorgen.Var_global
R9255 Cminorplus.fn_variables
R9215 Cminorgen.addr_taken_stmtlist
R9238 Cminorgen.fn_body
R9160 Cminorgen.function
R9417 Cminor.stmtlist
R9363 Coq.Lists.List.list
R9375 Coq.Init.Datatypes "x * y" type_scope
R9369 AST.ident
R9377 AST.memory_chunk
R9343 Cminorgen.compilenv
R9453 Coq.Lists.List.nil
R9460 Cminor.Snil
R9481 Coq.Lists.List "x :: y" list_scope
R9469 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9503 Maps.get
R9533 Cminorgen.Var_local
R9562 Cminor.Scons
R9569 Cminor.Sexpr
R9576 Cminor.Eassign
R9588 Cminorgen.make_cast
R9605 Cminor.Evar
R9669 Cminorgen.Var_stack_scalar
R9709 Cminor.Scons
R9716 Cminor.Sexpr
R9723 Cminorgen.make_store
R9762 Cminor.Evar
R9741 Cminorgen.make_stackaddr
R9840 Cminor.Snil
R9363 Coq.Lists.List.list
R9375 Coq.Init.Datatypes "x * y" type_scope
R9369 AST.ident
R9377 AST.memory_chunk
R9343 Cminorgen.compilenv
R9933 Coq.Init.Datatypes.option
R9940 Cminor.function
R9979 Cminorgen.build_compilenv
R10005 Coqlib.zle
R10019 Integers.max_signed
R10321 Coq.Init.Datatypes.None
R10043 Cminorgen "'do' X <- A ; B"
R10055 Cminorgen.transl_stmtlist
R10079 Cminorgen.fn_body
R10098 Coq.Init.Datatypes.Some
R10104 Cminor.mkfunction
R10251 Cminor.Scons
R10258 Cminor.Sblock
R10266 Cminorgen.store_parameters
R10291 Cminorgen.fn_params
R10193 Cminorgen.fn_vars_names
R10157 Cminorgen.fn_params_names
R10130 Cminorgen.fn_sig
R9920 Cminorgen.function
R10371 Coq.Init.Datatypes.option
R10378 Cminor.program
R10391 AST.transform_partial_program
R10417 Cminorgen.transl_function
R10358 Cminorgen.program
FCminorgenproof
R1141 Cminorgenproof.program
R1168 Cminor.program
R1216 Coq.Init.Logic "x = y" type_scope
R1196 Cminorgen.transl_program
R1218 Coq.Init.Datatypes.Some
R1239 Cminorgenproof.genv
R1249 Globalenvs.globalenv
R1279 Cminor.genv
R1287 Globalenvs.globalenv
R1379 Coq.Init.Logic "x = y" type_scope
R1356 Globalenvs.find_symbol
R1381 Globalenvs.find_symbol
R1348 AST.ident
R1482 Cminorgen.transl_function
R1445 Globalenvs.find_symbol_transf_partial
R1482 Cminorgen.transl_function
R1445 Globalenvs.find_symbol_transf_partial
R1630 Coq.Init.Logic "'exists' x , p" type_scope
R1679 Coq.Init.Logic "A /\ B" type_scope
R1669 Coq.Init.Logic "x = y" type_scope
R1643 Globalenvs.find_funct_ptr
R1671 Coq.Init.Datatypes.Some
R1700 Coq.Init.Logic "x = y" type_scope
R1682 Cminorgen.transl_function
R1702 Coq.Init.Datatypes.Some
R1616 Coq.Init.Logic "x = y" type_scope
R1591 Globalenvs.find_funct_ptr
R1618 Coq.Init.Datatypes.Some
R1576 Cminorgenproof.function
R1565 Values.block
R1747 Globalenvs.find_funct_ptr_transf_partial
R1782 Cminorgen.transl_function
R1747 Globalenvs.find_funct_ptr_transf_partial
R1782 Cminorgen.transl_function
R1817 Cminorgen.transl_function
R1817 Cminorgen.transl_function
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R2017 Coq.Init.Logic "'exists' x , p" type_scope
R2062 Coq.Init.Logic "A /\ B" type_scope
R2052 Coq.Init.Logic "x = y" type_scope
R2030 Globalenvs.find_funct
R2054 Coq.Init.Datatypes.Some
R2083 Coq.Init.Logic "x = y" type_scope
R2065 Cminorgen.transl_function
R2085 Coq.Init.Datatypes.Some
R2003 Coq.Init.Logic "x = y" type_scope
R1982 Globalenvs.find_funct
R2005 Coq.Init.Datatypes.Some
R1967 Cminorgenproof.function
R1958 Values.val
R2130 Globalenvs.find_funct_transf_partial
R2161 Cminorgen.transl_function
R2130 Globalenvs.find_funct_transf_partial
R2161 Cminorgen.transl_function
R2196 Cminorgen.transl_function
R2196 Cminorgen.transl_function
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R2388 Mem.meminj
R2531 Coq.Init.Logic "A /\ B" type_scope
R2517 Coq.Init.Logic "x = y" type_scope
R2519 Coq.Init.Datatypes.Some
R2524 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2558 Coq.Init.Logic "x = y" type_scope
R2534 Globalenvs.find_symbol
R2560 Coq.Init.Datatypes.Some
R2495 Coq.Init.Logic "x = y" type_scope
R2472 Globalenvs.find_symbol
R2497 Coq.Init.Datatypes.Some
R2615 Coq.Init.Logic "x = y" type_scope
R2617 Coq.Init.Datatypes.Some
R2621 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2604 Coq.ZArith.BinInt "x < y" Z_scope
R2658 Mem.meminj
R2671 AST.ident
R2702 Cminorgenproof.env
R2713 Mem.mem
R2723 Cminor.env
R2733 Values.block
R2763 Cminorgen.var_info
R3035 Cminorgen.Var_local
R2982 Mem.val_inject
R2963 Coq.Init.Logic "x = y" type_scope
R2947 Maps.get
R2965 Coq.Init.Datatypes.Some
R2931 Coq.Init.Logic "x = y" type_scope
R2933 Coq.Init.Datatypes.None
R2909 Coq.Init.Logic "x = y" type_scope
R2888 Mem.load
R2911 Coq.Init.Datatypes.Some
R2852 Coq.Init.Logic "x = y" type_scope
R2837 Maps.get
R2854 Coq.Init.Datatypes.Some
R2859 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2863 Cminorplus.LVscalar
R3254 Cminorgen.Var_stack_scalar
R3163 Mem.val_inject
R3195 Values.Vptr
R3204 Integers.repr
R3177 Values.Vptr
R3184 Integers.zero
R3127 Coq.Init.Logic "x = y" type_scope
R3112 Maps.get
R3129 Coq.Init.Datatypes.Some
R3134 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3138 Cminorplus.LVscalar
R3476 Cminorgen.Var_stack_array
R3385 Mem.val_inject
R3417 Values.Vptr
R3426 Integers.repr
R3399 Values.Vptr
R3406 Integers.zero
R3353 Coq.Init.Logic "x = y" type_scope
R3338 Maps.get
R3355 Coq.Init.Datatypes.Some
R3360 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3364 Cminorplus.LVarray
R3582 Cminorgen.Var_global
R3540 Coq.Init.Logic "x = y" type_scope
R3525 Maps.get
R3542 Coq.Init.Datatypes.None
R3617 Mem.meminj
R3632 Cminorgen.compilenv
R3664 Cminorgenproof.env
R3675 Mem.mem
R3685 Cminor.env
R3695 Values.block
R3727 Coq.ZArith.BinInt.Z
R3787 Cminorgenproof.match_var
R3813 Maps.get
R3858 Coq.ZArith.BinInt "x <= y" Z_scope
R3938 Coq.ZArith.BinInt "x <= y < z" Z_scope
R3918 Coq.Init.Logic "x = y" type_scope
R3903 Maps.get
R3920 Coq.Init.Datatypes.Some
R3924 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4102 Coq.Init.Logic "x <> y" type_scope
R4089 Coq.Init.Logic "x <> y" type_scope
R4060 Coq.Init.Logic "x = y" type_scope
R4044 Maps.get
R4062 Coq.Init.Datatypes.Some
R4066 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4019 Coq.Init.Logic "x = y" type_scope
R4003 Maps.get
R4021 Coq.Init.Datatypes.Some
R4025 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4177 Coq.ZArith.BinInt "x <= y < z" Z_scope
R4153 Coq.Init.Logic "x = y" type_scope
R4155 Coq.Init.Datatypes.Some
R4159 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4270 Coq.ZArith.BinInt "x < y" Z_scope
R4259 Coq.ZArith.BinInt "x < y" Z_scope
R4236 Coq.Init.Logic "x = y" type_scope
R4238 Coq.Init.Datatypes.Some
R4242 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4328 Cminorgen.compilenv
R4349 Cminorgenproof.env
R4367 Cminor.env
R4383 Values.block
R4402 Coq.ZArith.BinInt.Z
R4418 Coq.ZArith.BinInt.Z
R4456 Coq.Lists.List.list
R4461 Cminorgenproof.frame
R4529 Mem.mem
R4524 Coq.ZArith.BinInt.Z
R4519 Coq.ZArith.BinInt.Z
R4506 Cminorgenproof.callstack
R4496 Mem.meminj
R4640 Coq.Lists.List.nil
R4594 Cminorgenproof.match_globalenvs
R4900 Coq.Lists.List "x :: y" list_scope
R4873 Cminorgenproof.mkframe
R4774 Cminorgenproof.match_env
R4756 Coq.ZArith.BinInt "x < y" Z_scope
R4735 Coq.ZArith.BinInt "x <= y" Z_scope
R5134 Cminorgenproof.match_env
R5095 Cminorgenproof.match_env
R5080 Coq.Init.Logic "x = y" type_scope
R5057 Mem.store
R5082 Coq.Init.Datatypes.Some
R5044 Coq.Init.Logic "x <> y" type_scope
R5047 Coq.Init.Datatypes.None
R5337 Mem.load_store_other
R5337 Mem.load_store_other
R5576 Cminorgenproof.match_callstack
R5561 Coq.Init.Logic "x = y" type_scope
R5538 Mem.store
R5563 Coq.Init.Datatypes.Some
R5525 Coq.Init.Logic "x <> y" type_scope
R5528 Coq.Init.Datatypes.None
R5452 Cminorgenproof.match_callstack
R5674 Cminorgenproof.match_env_store_mapped
R5674 Cminorgenproof.match_env_store_mapped
R5815 Coq.Init.Logic "'exists' x , p" type_scope
R5828 Coq.Init.Logic "x = y" type_scope
R5830 Values.load_result
R5798 Values.val
R5780 AST.memory_chunk
R5949 Coq.Init.Logic "x = y" type_scope
R5901 Values.load_result
R5924 Values.load_result
R5953 Values.load_result
R6038 Integers.cast8_signed_idem
R6038 Integers.cast8_signed_idem
R6077 Integers.cast8_unsigned_idem
R6077 Integers.cast8_unsigned_idem
R6118 Integers.cast16_signed_idem
R6118 Integers.cast16_signed_idem
R6158 Integers.cast16_unsigned_idem
R6158 Integers.cast16_unsigned_idem
R6200 Floats.singleoffloat_idem
R6200 Floats.singleoffloat_idem
R6338 Coq.Init.Logic "x = y" type_scope
R6314 Values.load_result
R6288 Cminorgenproof.val_normalized
R6394 Cminorgenproof.load_result_idem
R6394 Cminorgenproof.load_result_idem
R6666 Cminorgenproof.match_env
R6689 Maps.set
R6627 Cminorgenproof.match_env
R6612 Coq.Init.Logic "x = y" type_scope
R6591 Mem.store
R6614 Coq.Init.Datatypes.Some
R6562 Cminorgenproof.val_normalized
R6539 Mem.val_inject
R6508 Coq.Init.Logic "x = y" type_scope
R6504 Maps "a ! b"
R6510 Coq.Init.Datatypes.Some
R6514 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R6518 Cminorplus.LVscalar
R6855 Coqlib.peq
R6855 Coqlib.peq
R6954 Cminorplus.local_variable
R6932 Cminorgenproof.local_variable
R6954 Cminorplus.local_variable
R6932 Cminorgenproof.local_variable
R7084 Mem.load_store_same
R7084 Mem.load_store_same
R7127 Maps.gss
R7127 Maps.gss
R7172 Values.load_result
R7172 Values.load_result
R7209 Mem.load_result_inject
R7209 Mem.load_result_inject
R7263 Cminorgenproof.load_result_normalized
R7263 Cminorgenproof.load_result_normalized
R7379 Mem.load_store_other
R7379 Mem.load_store_other
R7417 Maps.gso
R7417 Maps.gso
R7743 Cminorgenproof.match_env
R7704 Cminorgenproof.match_env
R7694 Coq.ZArith.BinInt "x <= y" Z_scope
R7676 Coq.Init.Logic "x = y" type_scope
R7655 Mem.store
R7678 Coq.Init.Datatypes.Some
R7932 Mem.load_store_other
R7932 Mem.load_store_other
R8217 Cminorgenproof.match_callstack
R8207 Coq.ZArith.BinInt "x <= y" Z_scope
R8186 Coq.Init.Logic "x = y" type_scope
R8165 Mem.store
R8188 Coq.Init.Datatypes.Some
R8100 Cminorgenproof.match_callstack
R8315 Cminorgenproof.match_env_store_above
R8315 Cminorgenproof.match_env_store_above
R8735 Cminorgenproof.match_callstack
R8799 Coq.Lists.List "x :: y" list_scope
R8754 Cminorgenproof.mkframe
R8770 Maps.set
R8661 Cminorgenproof.match_callstack
R8707 Coq.Lists.List "x :: y" list_scope
R8680 Cminorgenproof.mkframe
R8646 Coq.Init.Logic "x = y" type_scope
R8625 Mem.store
R8648 Coq.Init.Datatypes.Some
R8596 Cminorgenproof.val_normalized
R8573 Mem.val_inject
R8542 Coq.Init.Logic "x = y" type_scope
R8538 Maps "a ! b"
R8544 Coq.Init.Datatypes.Some
R8548 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8552 Cminorplus.LVscalar
R8882 Cminorgenproof.match_env_store_local
R8882 Cminorgenproof.match_env_store_local
R8921 Cminorgenproof.match_callstack_store_above
R8921 Cminorgenproof.match_callstack_store_above
R9176 Cminorgenproof.match_env
R9161 Coq.Init.Logic "x = y" type_scope
R9157 Maps "a ! b"
R9166 Maps "a ! b"
R9089 Cminorgenproof.match_env
R9703 Cminorgenproof.match_callstack
R9749 Coq.Lists.List "x :: y" list_scope
R9722 Cminorgenproof.mkframe
R9629 Cminorgenproof.match_callstack
R9675 Coq.Lists.List "x :: y" list_scope
R9648 Cminorgenproof.mkframe
R9614 Coq.Init.Logic "x = y" type_scope
R9610 Maps "a ! b"
R9616 Coq.Init.Datatypes.Some
R9593 Coq.Init.Logic "x = y" type_scope
R9572 Mem.store
R9595 Coq.Init.Datatypes.Some
R9543 Cminorgenproof.val_normalized
R9520 Mem.val_inject
R9489 Coq.Init.Logic "x = y" type_scope
R9485 Maps "a ! b"
R9491 Coq.Init.Datatypes.Some
R9495 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9499 Cminorplus.LVscalar
R9859 Maps.set
R9831 Cminorgenproof.match_env_extensional
R9859 Maps.set
R9831 Cminorgenproof.match_env_extensional
R9889 Cminorgenproof.match_env_store_local
R9889 Cminorgenproof.match_env_store_local
R9937 Maps.gsspec
R9937 Maps.gsspec
R9960 Coqlib.peq
R9960 Coqlib.peq
R10008 Cminorgenproof.match_callstack_store_above
R10008 Cminorgenproof.match_callstack_store_above
R10285 Cminorgenproof.match_callstack
R10269 Coq.ZArith.BinInt "x <= y" Z_scope
R10249 Coq.ZArith.BinInt "x <= y" Z_scope
R10177 Cminorgenproof.match_callstack
R10519 Coq.Init.Logic "x = y" type_scope
R10484 Mem.load
R10496 Mem.free_list
R10521 Mem.load
R10472 Coq.Init.Logic "x <> y" type_scope
R10456 Coq.Lists.List.In
R10598 Mem.load_free
R10598 Mem.load_free
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R10657 Coq.Init.Logic.sym_not_equal
R10657 Coq.Init.Logic.sym_not_equal
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R10834 Cminorgenproof.match_env
R10854 Mem.free_list
R10823 Coq.ZArith.BinInt "x <= y" Z_scope
R10808 Coq.Lists.List.In
R10759 Cminorgenproof.match_env
R11039 Cminorgenproof.load_freelist
R11039 Cminorgenproof.load_freelist
R11324 Cminorgenproof.match_callstack
R11359 Mem.free_list
R11313 Coq.ZArith.BinInt "x <= y" Z_scope
R11295 Coq.Lists.List.In
R11229 Cminorgenproof.match_callstack
R11435 Cminorgenproof.match_env_freelist
R11435 Cminorgenproof.match_env_freelist
R11787 Cminorgenproof.match_callstack
R11822 Mem.free_list
R11714 Cminorgenproof.match_callstack
R11760 Coq.Lists.List "x :: y" list_scope
R11733 Cminorgenproof.mkframe
R11703 Coq.ZArith.BinInt "x <= y" Z_scope
R11688 Coq.Lists.List.In
R11894 Cminorgenproof.match_callstack_incr_bound
R11894 Cminorgenproof.match_callstack_incr_bound
R11941 Cminorgenproof.match_callstack_freelist_rec
R11941 Cminorgenproof.match_callstack_freelist_rec
R12135 Coq.Init.Logic "x = y" type_scope
R12117 Mem.load
R12137 Coq.Init.Datatypes.Some
R12142 Values.Vundef
R12102 Coq.Init.Logic "x = y" type_scope
R12072 Mem.alloc
R12084 Mem.size_chunk
R12104 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12178 Mem.valid_block
R12178 Mem.valid_block
R12204 Mem.valid_new_block
R12204 Mem.valid_new_block
R12253 Coq.ZArith.BinInt "x <= y" Z_scope
R12238 Mem.low_bound
R12253 Coq.ZArith.BinInt "x <= y" Z_scope
R12238 Mem.low_bound
R12277 Mem.low_bound_alloc
R12277 Mem.low_bound_alloc
R12317 Coqlib.zeq_true
R12317 Coqlib.zeq_true
R12365 Coq.ZArith.BinInt "x <= y" Z_scope
R12346 Coq.ZArith.BinInt "x + y" Z_scope
R12348 Mem.size_chunk
R12368 Mem.high_bound
R12365 Coq.ZArith.BinInt "x <= y" Z_scope
R12346 Coq.ZArith.BinInt "x + y" Z_scope
R12348 Mem.size_chunk
R12368 Mem.high_bound
R12402 Mem.high_bound_alloc
R12402 Mem.high_bound_alloc
R12443 Coqlib.zeq_true
R12443 Coqlib.zeq_true
R12468 Mem.load_in_bounds
R12468 Mem.load_in_bounds
R12529 Coq.Init.Logic "x = y" type_scope
R12531 Values.Vundef
R12529 Coq.Init.Logic "x = y" type_scope
R12531 Values.Vundef
R12547 Mem.load_alloc_same
R12547 Mem.load_alloc_same
R13207 Cminorgenproof.match_env
R13245 Mem.nextblock
R13184 Mem.inject_incr
R13155 Maps.set
R13168 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13117 Maps.set
R13075 Mem.extend_inject
R13050 Coq.Init.Logic "x = y" type_scope
R13046 Maps "a ! b"
R13052 Coq.Init.Datatypes.Some
R12990 Cminorgenproof.match_env
R13028 Mem.nextblock
R12739 Cminorgen.Var_local
R12770 Coq.Init.Logic "A /\ B" type_scope
R12763 Coq.Init.Logic "x = y" type_scope
R12765 Coq.Init.Datatypes.None
R12776 Coq.Init.Logic "x = y" type_scope
R12778 Cminorplus.LVscalar
R12799 Cminorgen.Var_stack_scalar
R12850 Coq.Init.Logic "A /\ B" type_scope
R12834 Coq.Init.Logic "x = y" type_scope
R12836 Coq.Init.Datatypes.Some
R12840 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12856 Coq.Init.Logic "x = y" type_scope
R12858 Cminorplus.LVscalar
R12879 Cminorgen.Var_stack_array
R12923 Coq.Init.Logic "A /\ B" type_scope
R12907 Coq.Init.Logic "x = y" type_scope
R12909 Coq.Init.Datatypes.Some
R12913 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12926 Coq.Init.Logic "'exists' x , p" type_scope
R12940 Coq.Init.Logic "x = y" type_scope
R12942 Cminorplus.LVarray
R12959 Cminorgen.Var_global
R12973 Coq.Init.Logic.False
R12702 Coq.Init.Logic "x = y" type_scope
R12679 Mem.alloc
R12691 Cminorplus.sizeof
R12704 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13287 Coq.Init.Logic "x = y" type_scope
R13293 Mem.nextblock
R13287 Coq.Init.Logic "x = y" type_scope
R13293 Mem.nextblock
R13362 Coq.Init.Logic "x = y" type_scope
R13351 Mem.nextblock
R13364 Coq.ZArith.BinInt.Zsucc
R13374 Mem.nextblock
R13362 Coq.Init.Logic "x = y" type_scope
R13351 Mem.nextblock
R13364 Coq.ZArith.BinInt.Zsucc
R13374 Mem.nextblock
R13517 Maps.gsspec
R13517 Maps.gsspec
R13536 Coqlib.peq
R13536 Coqlib.peq
R13698 Values.Vundef
R13675 Cminorgenproof.match_var_local
R13698 Values.Vundef
R13675 Cminorgenproof.match_var_local
R13734 Maps.gss
R13734 Maps.gss
R13770 Cminorgenproof.load_from_alloc_is_undef
R13770 Cminorgenproof.load_from_alloc_is_undef
R13904 Coqlib.zeq_true
R13904 Coqlib.zeq_true
R14032 Cminorgenproof.match_var_stack_scalar
R14032 Cminorgenproof.match_var_stack_scalar
R14089 Maps.gss
R14089 Maps.gss
R14125 Mem.val_inject_ptr
R14125 Mem.val_inject_ptr
R14192 Coqlib.zeq_true
R14192 Coqlib.zeq_true
R14223 Integers.add_commut
R14223 Integers.add_commut
R14247 Integers.add_zero
R14247 Integers.add_zero
R14348 Cminorgenproof.match_var_stack_array
R14348 Cminorgenproof.match_var_stack_array
R14406 Maps.gss
R14406 Maps.gss
R14442 Mem.val_inject_ptr
R14442 Mem.val_inject_ptr
R14509 Coqlib.zeq_true
R14509 Coqlib.zeq_true
R14540 Integers.add_commut
R14540 Integers.add_commut
R14564 Integers.add_zero
R14564 Integers.add_zero
R14757 Maps.gso
R14757 Maps.gso
R14823 Coqlib.zeq_false
R14823 Coqlib.zeq_false
R14928 Maps.gso
R14928 Maps.gso
R14970 Maps.gso
R14970 Maps.gso
R15012 Maps.gso
R15012 Maps.gso
R15134 Maps.gsspec
R15134 Maps.gsspec
R15157 Coqlib.peq
R15157 Coqlib.peq
R15359 Maps.gsspec
R15359 Maps.gsspec
R15359 Maps.gsspec
R15359 Maps.gsspec
R15381 Coqlib.peq
R15400 Coqlib.peq
R15381 Coqlib.peq
R15400 Coqlib.peq
R15400 Coqlib.peq
R15722 Coqlib.zeq
R15722 Coqlib.zeq
R15917 Coqlib.zeq
R15917 Coqlib.zeq
R16322 Cminorgenproof.match_env
R16299 Mem.inject_incr
R16270 Mem.extend_inject
R16220 Cminorgenproof.match_env
R16197 Coq.ZArith.BinInt "x <= y" Z_scope
R16204 Mem.nextblock
R16141 Coq.Init.Datatypes.None
R16149 Coq.Init.Logic.True
R16156 Coq.Init.Datatypes.Some
R16161 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16180 Coq.ZArith.BinInt "x < y" Z_scope
R16110 Coq.Init.Logic "x = y" type_scope
R16084 Mem.alloc
R16096 Cminorplus.sizeof
R16112 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16388 Coq.Init.Logic "x = y" type_scope
R16394 Mem.nextblock
R16388 Coq.Init.Logic "x = y" type_scope
R16394 Mem.nextblock
R16627 Coqlib.zeq_false
R16627 Coqlib.zeq_false
R16792 Coqlib.zeq
R16792 Coqlib.zeq
R16940 Coqlib.zeq
R16940 Coqlib.zeq
R17342 Cminorgenproof.match_callstack
R17319 Mem.inject_incr
R17290 Mem.extend_inject
R17257 Coq.ZArith.BinInt "x <= y" Z_scope
R17264 Mem.nextblock
R17193 Coq.Init.Datatypes.None
R17201 Coq.Init.Logic.True
R17208 Coq.Init.Datatypes.Some
R17213 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17236 Coq.ZArith.BinInt "x <= y" Z_scope
R17162 Coq.Init.Logic "x = y" type_scope
R17139 Mem.alloc
R17151 Cminorplus.sizeof
R17164 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17073 Cminorgenproof.match_callstack
R17675 Cminorgenproof.match_env_alloc_other
R17675 Cminorgenproof.match_env_alloc_other
R18551 Cminorgenproof.match_callstack
R18623 Mem.nextblock
R18612 Coq.Lists.List "x :: y" list_scope
R18571 Cminorgenproof.mkframe
R18601 Mem.nextblock
R18528 Mem.inject_incr
R18499 Maps.set
R18512 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18461 Maps.set
R18419 Mem.extend_inject
R18394 Coq.Init.Logic "x = y" type_scope
R18390 Maps "a ! b"
R18396 Coq.Init.Datatypes.Some
R18290 Cminorgenproof.match_callstack
R18362 Mem.nextblock
R18351 Coq.Lists.List "x :: y" list_scope
R18310 Cminorgenproof.mkframe
R18340 Mem.nextblock
R18039 Cminorgen.Var_local
R18070 Coq.Init.Logic "A /\ B" type_scope
R18063 Coq.Init.Logic "x = y" type_scope
R18065 Coq.Init.Datatypes.None
R18076 Coq.Init.Logic "x = y" type_scope
R18078 Cminorplus.LVscalar
R18099 Cminorgen.Var_stack_scalar
R18150 Coq.Init.Logic "A /\ B" type_scope
R18134 Coq.Init.Logic "x = y" type_scope
R18136 Coq.Init.Datatypes.Some
R18140 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18156 Coq.Init.Logic "x = y" type_scope
R18158 Cminorplus.LVscalar
R18179 Cminorgen.Var_stack_array
R18223 Coq.Init.Logic "A /\ B" type_scope
R18207 Coq.Init.Logic "x = y" type_scope
R18209 Coq.Init.Datatypes.Some
R18213 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18226 Coq.Init.Logic "'exists' x , p" type_scope
R18240 Coq.Init.Logic "x = y" type_scope
R18242 Cminorplus.LVarray
R18259 Cminorgen.Var_global
R18273 Coq.Init.Logic.False
R18002 Coq.Init.Logic "x = y" type_scope
R17979 Mem.alloc
R17991 Cminorplus.sizeof
R18004 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18733 Cminorgenproof.match_env_alloc_same
R18733 Cminorgenproof.match_env_alloc_same
R18782 Cminorgenproof.match_callstack_alloc_other
R18782 Cminorgenproof.match_callstack_alloc_other
R19158 Cminorgenproof.match_callstack
R19190 Mem.nextblock
R19108 Cminorgenproof.match_callstack
R19140 Mem.nextblock
R19092 Coq.Init.Logic "x = y" type_scope
R19076 Mem.alloc
R19094 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R19228 Cminorgenproof.match_callstack_incr_bound
R19228 Cminorgenproof.match_callstack_incr_bound
R19441 Cminorgenproof.match_globalenvs
R19400 Cminorgenproof.match_callstack
R19613 Cminorgenproof.match_env
R19601 Coq.ZArith.BinInt "x <= y" Z_scope
R19560 Cminorgenproof.match_env
R19968 Cminorgenproof.match_callstack
R20017 Coq.Lists.List "x :: y" list_scope
R19987 Cminorgenproof.mkframe
R19895 Cminorgenproof.match_callstack
R19941 Coq.Lists.List "x :: y" list_scope
R19914 Cminorgenproof.mkframe
R20106 Cminorgenproof.match_env_incr_hi
R20106 Cminorgenproof.match_env_incr_hi
R20216 Cmconstrproof.eval_negint
R20228 Cmconstrproof.eval_negfloat
R20242 Cmconstrproof.eval_absfloat
R20256 Cmconstrproof.eval_intoffloat
R20274 Cmconstrproof.eval_floatofint
R20290 Cmconstrproof.eval_floatofintu
R20307 Cmconstrproof.eval_notint
R20319 Cmconstrproof.eval_notbool
R20334 Cmconstrproof.eval_cast8signed
R20351 Cmconstrproof.eval_cast8unsigned
R20370 Cmconstrproof.eval_cast16signed
R20390 Cmconstrproof.eval_cast16unsigned
R20410 Cmconstrproof.eval_singleoffloat
R20429 Cmconstrproof.eval_add
R20438 Cmconstrproof.eval_add_ptr
R20453 Cmconstrproof.eval_add_ptr_2
R20468 Cmconstrproof.eval_sub
R20477 Cmconstrproof.eval_sub_ptr_int
R20494 Cmconstrproof.eval_sub_ptr_ptr
R20513 Cmconstrproof.eval_mul
R20522 Cmconstrproof.eval_divs
R20532 Cmconstrproof.eval_mods
R20542 Cmconstrproof.eval_divu
R20552 Cmconstrproof.eval_modu
R20564 Cmconstrproof.eval_and
R20573 Cmconstrproof.eval_or
R20581 Cmconstrproof.eval_xor
R20590 Cmconstrproof.eval_shl
R20599 Cmconstrproof.eval_shr
R20608 Cmconstrproof.eval_shru
R20621 Cmconstrproof.eval_addf
R20631 Cmconstrproof.eval_subf
R20641 Cmconstrproof.eval_mulf
R20651 Cmconstrproof.eval_divf
R20663 Cmconstrproof.eval_cmp
R20672 Cmconstrproof.eval_cmp_null_r
R20688 Cmconstrproof.eval_cmp_null_l
R20704 Cmconstrproof.eval_cmp_ptr
R20719 Cmconstrproof.eval_cmpu
R20729 Cmconstrproof.eval_cmpf
R20796 Mem.val_inject
R20826 Values.of_bool
R20810 Values.of_bool
R20970 Coq.Init.Logic "'exists' x , p" type_scope
R20982 Coq.Init.Logic "A /\ B" type_scope
R20985 Mem.val_inject
R20999 Values.Vint
R21096 Coq.Init.Logic "'exists' x , p" type_scope
R21108 Coq.Init.Logic "A /\ B" type_scope
R21111 Mem.val_inject
R21125 Values.Vfloat
R21226 Coq.Init.Logic "'exists' x , p" type_scope
R21238 Coq.Init.Logic "A /\ B" type_scope
R21241 Mem.val_inject
R21255 Values.of_bool
R21292 Values.of_bool
R21350 Cminorgenproof.val_inject_val_of_bool
R21157 Values.Vfloat
R21029 Values.Vint
R21497 Coq.Init.Logic "x = y" type_scope
R21461 Integers.sub
R21484 Integers.add
R21470 Integers.add
R21499 Integers.sub
R21537 Integers.sub_add_opp
R21537 Integers.sub_add_opp
R21562 Integers.neg_add_distr
R21562 Integers.neg_add_distr
R21591 Integers.add_assoc
R21591 Integers.add_assoc
R21618 Integers.add_commut
R21646 Integers.neg
R21634 Integers.neg
R21618 Integers.add_commut
R21646 Integers.neg
R21634 Integers.neg
R21673 Integers.add_assoc
R21673 Integers.add_assoc
R21699 Integers.add_neg_zero
R21699 Integers.add_neg_zero
R21728 Integers.add_commut
R21743 Integers.zero
R21728 Integers.add_commut
R21743 Integers.zero
R21762 Integers.add_zero
R21762 Integers.add_zero
R21794 Integers.sub_add_opp
R21794 Integers.sub_add_opp
R21916 Coq.Init.Logic "A /\ B" type_scope
R21905 Coq.Init.Logic "x = y" type_scope
R21907 Integers.zero
R21942 Coq.Init.Logic "A \/ B" type_scope
R21928 Coq.Init.Logic "A /\ B" type_scope
R21922 Coq.Init.Logic "x = y" type_scope
R21924 AST.Ceq
R21933 Coq.Init.Logic "x = y" type_scope
R21935 Values.Vfalse
R21953 Coq.Init.Logic "A /\ B" type_scope
R21947 Coq.Init.Logic "x = y" type_scope
R21949 AST.Cne
R21958 Coq.Init.Logic "x = y" type_scope
R21960 Values.Vtrue
R21889 Coq.Init.Logic "x = y" type_scope
R21865 Cminorgenproof.eval_compare_null
R21891 Coq.Init.Datatypes.Some
R22032 Integers.eq
R22039 Integers.eq_spec
R22053 Integers.zero
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R22412 Coq.Init.Logic "'exists' x , p" type_scope
R22487 Coq.Init.Logic "A /\ B" type_scope
R22428 Cminor.eval_expr
R22443 Values.Vptr
R22451 Integers.zero
R22490 Mem.val_inject
R22387 Mem.mem_inject
R22357 Mem.val_list_inject
R22289 Cminor.eval_exprlist
R22308 Values.Vptr
R22316 Integers.zero
R22275 Coq.Init.Logic "x = y" type_scope
R22249 Cminorgenproof.eval_operation
R22277 Coq.Init.Datatypes.Some
R22235 Coq.Init.Logic "x = y" type_scope
R22221 Cminorgen.make_op
R22237 Coq.Init.Datatypes.Some
R23809 Values.Vptr
R23818 Integers.add
R23809 Values.Vptr
R23818 Integers.add
R23872 Mem.val_inject_ptr
R23872 Mem.val_inject_ptr
R23930 Integers.add_assoc
R23930 Integers.add_assoc
R23930 Integers.add_assoc
R23930 Integers.add_assoc
R23958 Integers.add_commut
R23958 Integers.add_commut
R24004 Values.Vptr
R24013 Integers.add
R24004 Values.Vptr
R24013 Integers.add
R24068 Mem.val_inject_ptr
R24068 Mem.val_inject_ptr
R24126 Integers.add_assoc
R24126 Integers.add_assoc
R24126 Integers.add_assoc
R24126 Integers.add_assoc
R24154 Integers.add_commut
R24154 Integers.add_commut
R24200 Values.Vptr
R24209 Integers.sub
R24200 Values.Vptr
R24209 Integers.sub
R24264 Mem.val_inject_ptr
R24264 Mem.val_inject_ptr
R24313 Integers.sub_add_l
R24313 Integers.sub_add_l
R24361 Values.eq_block
R24361 Values.eq_block
R24432 Coq.Init.Logic "x = y" type_scope
R24432 Coq.Init.Logic "x = y" type_scope
R24471 Values.Vint
R24477 Integers.sub
R24471 Values.Vint
R24477 Integers.sub
R24572 Cminorgenproof.int_sub_shifted
R24572 Cminorgenproof.int_sub_shifted
R24643 Integers.eq_spec
R24658 Integers.zero
R24679 Integers.eq
R24689 Integers.zero
R24643 Integers.eq_spec
R24658 Integers.zero
R24679 Integers.eq
R24689 Integers.zero
R24779 Integers.eq_spec
R24794 Integers.zero
R24815 Integers.eq
R24825 Integers.zero
R24779 Integers.eq_spec
R24794 Integers.zero
R24815 Integers.eq
R24825 Integers.zero
R24915 Integers.eq_spec
R24930 Integers.zero
R24951 Integers.eq
R24961 Integers.zero
R24915 Integers.eq_spec
R24930 Integers.zero
R24951 Integers.eq
R24961 Integers.zero
R25051 Integers.eq_spec
R25066 Integers.zero
R25087 Integers.eq
R25097 Integers.zero
R25051 Integers.eq_spec
R25066 Integers.zero
R25087 Integers.eq
R25097 Integers.zero
R25182 Integers.ltu
R25194 Integers.repr
R25182 Integers.ltu
R25194 Integers.repr
R25304 Integers.ltu
R25316 Integers.repr
R25304 Integers.ltu
R25316 Integers.repr
R25427 Integers.ltu
R25439 Integers.repr
R25427 Integers.ltu
R25439 Integers.repr
R25555 Cminorgenproof.eval_compare_null_inv
R25555 Cminorgenproof.eval_compare_null_inv
R25747 Cminorgenproof.eval_compare_null_inv
R25747 Cminorgenproof.eval_compare_null_inv
R25976 Coq.Bool.Bool "x && y" bool_scope
R25942 Mem.valid_pointer
R25962 Integers.signed
R25979 Mem.valid_pointer
R26000 Integers.signed
R25976 Coq.Bool.Bool "x && y" bool_scope
R25942 Mem.valid_pointer
R25962 Integers.signed
R25979 Mem.valid_pointer
R26000 Integers.signed
R26078 Values.eq_block
R26078 Values.eq_block
R26142 Coq.Init.Logic "x = y" type_scope
R26142 Coq.Init.Logic "x = y" type_scope
R26185 Coq.Init.Logic "x = y" type_scope
R26185 Coq.Init.Logic "x = y" type_scope
R26222 Coq.Bool.Bool.andb_prop
R26222 Coq.Bool.Bool.andb_prop
R26259 Values.of_bool
R26272 Integers.cmp
R26259 Values.of_bool
R26272 Integers.cmp
R26353 Integers.translate_cmp
R26353 Integers.translate_cmp
R26381 Cminorgenproof.val_inject_val_of_bool
R26381 Cminorgenproof.val_inject_val_of_bool
R26415 Mem.valid_pointer_inject_no_overflow
R26415 Mem.valid_pointer_inject_no_overflow
R26465 Mem.valid_pointer_inject_no_overflow
R26465 Mem.valid_pointer_inject_no_overflow
R27073 Coq.Init.Logic "'exists' x , p" type_scope
R27189 Coq.Init.Logic "A /\ B" type_scope
R27087 Cminor.eval_expr
R27144 Cminorgen.make_cast
R27102 Values.Vptr
R27110 Integers.zero
R27214 Coq.Init.Logic "A /\ B" type_scope
R27192 Mem.val_inject
R27217 Cminorgenproof.val_normalized
R27050 Mem.val_inject
R27035 Coq.Init.Logic "x = y" type_scope
R27022 Cminorplus.cast
R27037 Coq.Init.Datatypes.Some
R26960 Cminor.eval_expr
R26975 Values.Vptr
R26983 Integers.zero
R27365 Values.Vint
R27371 Integers.cast8signed
R27365 Values.Vint
R27371 Integers.cast8signed
R27408 Cmconstrproof.eval_cast8signed
R27408 Cmconstrproof.eval_cast8signed
R27463 Values.Vint
R27463 Values.Vint
R27496 Values.Vint
R27502 Integers.cast8unsigned
R27496 Values.Vint
R27502 Integers.cast8unsigned
R27540 Cmconstrproof.eval_cast8unsigned
R27540 Cmconstrproof.eval_cast8unsigned
R27597 Values.Vint
R27597 Values.Vint
R27630 Values.Vint
R27636 Integers.cast16signed
R27630 Values.Vint
R27636 Integers.cast16signed
R27674 Cmconstrproof.eval_cast16signed
R27674 Cmconstrproof.eval_cast16signed
R27730 Values.Vint
R27730 Values.Vint
R27763 Values.Vint
R27769 Integers.cast16unsigned
R27763 Values.Vint
R27769 Integers.cast16unsigned
R27808 Cmconstrproof.eval_cast16unsigned
R27808 Cmconstrproof.eval_cast16unsigned
R27866 Values.Vint
R27866 Values.Vint
R27899 Values.Vint
R27899 Values.Vint
R27944 Values.Vint
R27944 Values.Vint
R27977 Values.Vptr
R27977 Values.Vptr
R28028 Values.Vptr
R28028 Values.Vptr
R28067 Values.Vfloat
R28075 Floats.singleoffloat
R28067 Values.Vfloat
R28075 Floats.singleoffloat
R28116 Cmconstrproof.eval_singleoffloat
R28116 Cmconstrproof.eval_singleoffloat
R28173 Values.Vfloat
R28173 Values.Vfloat
R28209 Values.Vfloat
R28209 Values.Vfloat
R28257 Values.Vfloat
R28257 Values.Vfloat
R28346 Cminor.eval_expr
R28440 Values.Vptr
R28449 Integers.repr
R28401 Cminorgen.make_stackaddr
R28361 Values.Vptr
R28369 Integers.zero
R28514 Cminor.eval_Eop
R28514 Cminor.eval_Eop
R28569 Integers.add_commut
R28569 Integers.add_commut
R28591 Integers.add_zero
R28591 Integers.add_zero
R28782 Cminor.eval_expr
R28839 Cminorgen.make_load
R28797 Values.Vptr
R28805 Integers.zero
R28768 Coq.Init.Logic "x = y" type_scope
R28745 Mem.loadv
R28770 Coq.Init.Datatypes.Some
R28683 Cminor.eval_expr
R28698 Values.Vptr
R28706 Integers.zero
R28925 Cmconstrproof.eval_load
R28925 Cmconstrproof.eval_load
R29064 Mem.val_content_inject
R29086 Mem.mem_chunk
R29039 Mem.val_inject
R29024 Coq.Init.Logic "x = y" type_scope
R29010 Cminorplus.cast
R29026 Coq.Init.Datatypes.Some
R29220 Mem.val_content_inject_8
R29220 Mem.val_content_inject_8
R29248 Integers.cast8_unsigned_signed
R29248 Integers.cast8_unsigned_signed
R29283 Mem.val_content_inject_8
R29283 Mem.val_content_inject_8
R29311 Integers.cast8_unsigned_idem
R29311 Integers.cast8_unsigned_idem
R29344 Mem.val_content_inject_16
R29344 Mem.val_content_inject_16
R29373 Integers.cast16_unsigned_signed
R29373 Integers.cast16_unsigned_signed
R29409 Mem.val_content_inject_16
R29409 Mem.val_content_inject_16
R29438 Integers.cast16_unsigned_idem
R29438 Integers.cast16_unsigned_idem
R29536 Mem.val_content_inject_32
R29536 Mem.val_content_inject_32
R29565 Floats.singleoffloat_idem
R29565 Floats.singleoffloat_idem
R30070 Coq.Init.Logic "'exists' x , p" type_scope
R30082 Coq.Init.Logic "'exists' x , p" type_scope
R30204 Coq.Init.Logic "A /\ B" type_scope
R30095 Cminor.eval_expr
R30152 Cminorgen.make_store
R30110 Values.Vptr
R30118 Integers.zero
R30229 Coq.Init.Logic "A /\ B" type_scope
R30207 Mem.mem_inject
R30252 Coq.Init.Logic "A /\ B" type_scope
R30232 Mem.val_inject
R30269 Coq.Init.Logic "x = y" type_scope
R30255 Mem.nextblock
R30271 Mem.nextblock
R30041 Mem.val_inject
R30010 Mem.val_inject
R29985 Mem.mem_inject
R29970 Coq.Init.Logic "x = y" type_scope
R29942 Mem.storev
R29972 Coq.Init.Datatypes.Some
R29928 Coq.Init.Logic "x = y" type_scope
R29912 Cminorplus.cast
R29930 Coq.Init.Datatypes.Some
R29833 Cminor.eval_expr
R29848 Values.Vptr
R29856 Integers.zero
R29752 Cminor.eval_expr
R29767 Values.Vptr
R29775 Integers.zero
R30332 Mem.val_content_inject
R30354 Mem.mem_chunk
R30332 Mem.val_content_inject
R30354 Mem.mem_chunk
R30392 Cminorgenproof.val_content_inject_cast
R30392 Cminorgenproof.val_content_inject_cast
R30432 Mem.storev_mapped_inject_1
R30432 Mem.storev_mapped_inject_1
R30530 Cmconstrproof.eval_store
R30530 Cmconstrproof.eval_store
R30611 Cminorgenproof.make_cast_correct
R30611 Cminorgenproof.make_cast_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R30824 Mem.store_inv
R30824 Mem.store_inv
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R31165 Coq.Init.Logic "'exists' x , p" type_scope
R31233 Coq.Init.Logic "A /\ B" type_scope
R31180 Cminor.eval_expr
R31195 Values.Vptr
R31203 Integers.zero
R31240 Mem.val_inject
R31151 Coq.Init.Logic "x = y" type_scope
R31134 Mem.load
R31153 Coq.Init.Datatypes.Some
R31103 Coq.Init.Logic "x = y" type_scope
R31099 Maps "a ! b"
R31105 Coq.Init.Datatypes.Some
R31109 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R31113 Cminorplus.LVscalar
R31075 Mem.mem_inject
R30986 Cminorgenproof.match_callstack
R31057 Mem.nextblock
R31042 Mem.nextblock
R31032 Coq.Lists.List "x :: y" list_scope
R31005 Cminorgenproof.mkframe
R30972 Coq.Init.Logic "x = y" type_scope
R30956 Cminorgen.var_get
R30974 Coq.Init.Datatypes.Some
R31302 Cminorgenproof.match_var
R31331 Maps "a !! b"
R31302 Cminorgenproof.match_var
R31331 Maps "a !! b"
R31391 Maps "a !! b"
R31391 Maps "a !! b"
R31545 Cminor.eval_Evar
R31545 Cminor.eval_Evar
R31714 Coq.Init.Logic "x = y" type_scope
R31714 Coq.Init.Logic "x = y" type_scope
R31755 Coq.Init.Logic "x = y" type_scope
R31755 Coq.Init.Logic "x = y" type_scope
R31829 Coq.Init.Logic "x = y" type_scope
R31797 Mem.loadv
R31812 Values.Vptr
R31819 Integers.zero
R31831 Coq.Init.Datatypes.Some
R31829 Coq.Init.Logic "x = y" type_scope
R31797 Mem.loadv
R31812 Values.Vptr
R31819 Integers.zero
R31831 Coq.Init.Datatypes.Some
R31866 Mem.loadv_inject
R31866 Mem.loadv_inject
R31975 Cminorgenproof.make_load_correct
R31975 Cminorgenproof.make_load_correct
R32008 Cminorgenproof.make_stackaddr_correct
R32008 Cminorgenproof.make_stackaddr_correct
R32281 Coq.Init.Logic "'exists' x , p" type_scope
R32349 Coq.Init.Logic "A /\ B" type_scope
R32296 Cminor.eval_expr
R32311 Values.Vptr
R32319 Integers.zero
R32356 Mem.val_inject
R32370 Values.Vptr
R32377 Integers.zero
R32262 Coq.Init.Logic "x = y" type_scope
R32258 Maps "a ! b"
R32264 Coq.Init.Datatypes.Some
R32268 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R32168 Cminorgenproof.match_callstack
R32239 Mem.nextblock
R32224 Mem.nextblock
R32214 Coq.Lists.List "x :: y" list_scope
R32187 Cminorgenproof.mkframe
R32154 Coq.Init.Logic "x = y" type_scope
R32137 Cminorgen.var_addr
R32156 Coq.Init.Datatypes.Some
R32435 Cminorgenproof.match_var
R32464 Maps "a !! b"
R32435 Cminorgenproof.match_var
R32464 Maps "a !! b"
R32524 Maps "a !! b"
R32524 Maps "a !! b"
R32666 Values.Vptr
R32675 Integers.repr
R32666 Values.Vptr
R32675 Integers.repr
R32705 Cminorgenproof.make_stackaddr_correct
R32705 Cminorgenproof.make_stackaddr_correct
R32802 Values.Vptr
R32811 Integers.repr
R32802 Values.Vptr
R32811 Integers.repr
R32841 Cminorgenproof.make_stackaddr_correct
R32841 Cminorgenproof.make_stackaddr_correct
R33199 Coq.Init.Logic "'exists' x , p" type_scope
R33267 Coq.Init.Logic "A /\ B" type_scope
R33214 Cminor.eval_expr
R33229 Values.Vptr
R33237 Integers.zero
R33274 Mem.val_inject
R33288 Values.Vptr
R33295 Integers.zero
R33185 Coq.Init.Logic "x = y" type_scope
R33162 Globalenvs.find_symbol
R33187 Coq.Init.Datatypes.Some
R33150 Coq.Init.Logic "x = y" type_scope
R33146 Maps "a ! b"
R33152 Coq.Init.Datatypes.None
R33056 Cminorgenproof.match_callstack
R33127 Mem.nextblock
R33112 Mem.nextblock
R33102 Coq.Lists.List "x :: y" list_scope
R33075 Cminorgenproof.mkframe
R33042 Coq.Init.Logic "x = y" type_scope
R33025 Cminorgen.var_addr
R33044 Coq.Init.Datatypes.Some
R33353 Cminorgenproof.match_var
R33382 Maps "a !! b"
R33353 Cminorgenproof.match_var
R33382 Maps "a !! b"
R33444 Maps "a !! b"
R33444 Maps "a !! b"
R33545 Cminorgenproof.match_callstack_match_globalenvs
R33545 Cminorgenproof.match_callstack_match_globalenvs
R33664 Values.Vptr
R33671 Integers.zero
R33664 Values.Vptr
R33671 Integers.zero
R33698 Cminor.eval_Eop
R33698 Cminor.eval_Eop
R34244 Coq.Init.Logic "'exists' x , p" type_scope
R34256 Coq.Init.Logic "'exists' x , p" type_scope
R34268 Coq.Init.Logic "'exists' x , p" type_scope
R34340 Coq.Init.Logic "A /\ B" type_scope
R34283 Cminor.eval_expr
R34298 Values.Vptr
R34306 Integers.zero
R34366 Coq.Init.Logic "A /\ B" type_scope
R34347 Mem.val_inject
R34393 Coq.Init.Logic "A /\ B" type_scope
R34373 Mem.mem_inject
R34400 Cminorgenproof.match_callstack
R34474 Mem.nextblock
R34458 Mem.nextblock
R34447 Coq.Lists.List "x :: y" list_scope
R34419 Cminorgenproof.mkframe
R34229 Coq.Init.Logic "x = y" type_scope
R34207 Mem.store
R34231 Coq.Init.Datatypes.Some
R34192 Coq.Init.Logic "x = y" type_scope
R34178 Cminorplus.cast
R34194 Coq.Init.Datatypes.Some
R34147 Coq.Init.Logic "x = y" type_scope
R34143 Maps "a ! b"
R34149 Coq.Init.Datatypes.Some
R34153 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R34157 Cminorplus.LVscalar
R34117 Mem.mem_inject
R34091 Mem.val_inject
R34025 Cminor.eval_expr
R34040 Values.Vptr
R34048 Integers.zero
R33932 Cminorgenproof.match_callstack
R34006 Mem.nextblock
R33990 Mem.nextblock
R33979 Coq.Lists.List "x :: y" list_scope
R33951 Cminorgenproof.mkframe
R33918 Coq.Init.Logic "x = y" type_scope
R33898 Cminorgen.var_set
R33920 Coq.Init.Datatypes.Some
R34556 Coq.Init.Logic "x = y" type_scope
R34543 Mem.nextblock
R34558 Mem.nextblock
R34556 Coq.Init.Logic "x = y" type_scope
R34543 Mem.nextblock
R34558 Mem.nextblock
R34589 Mem.store_inv
R34589 Mem.store_inv
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R34731 Maps "a !! b"
R34731 Maps "a !! b"
R34917 Coq.Init.Logic "x = y" type_scope
R34917 Coq.Init.Logic "x = y" type_scope
R34957 Coq.Init.Logic "x = y" type_scope
R34957 Coq.Init.Logic "x = y" type_scope
R34998 Cminorgenproof.make_cast_correct
R34998 Cminorgenproof.make_cast_correct
R35092 Maps.set
R35092 Maps.set
R35153 Cminor.eval_Eassign
R35153 Cminor.eval_Eassign
R35205 Mem.store_unmapped_inject
R35205 Mem.store_unmapped_inject
R35264 Cminorgenproof.match_callstack_store_local
R35264 Cminorgenproof.match_callstack_store_local
R35422 Coq.Init.Logic "x = y" type_scope
R35422 Coq.Init.Logic "x = y" type_scope
R35462 Coq.Init.Logic "x = y" type_scope
R35462 Coq.Init.Logic "x = y" type_scope
R35542 Coq.Init.Logic "x = y" type_scope
R35505 Mem.storev
R35522 Values.Vptr
R35529 Integers.zero
R35544 Coq.Init.Datatypes.Some
R35542 Coq.Init.Logic "x = y" type_scope
R35505 Mem.storev
R35522 Values.Vptr
R35529 Integers.zero
R35544 Coq.Init.Datatypes.Some
R35580 Cminorgenproof.make_stackaddr_correct
R35580 Cminorgenproof.make_stackaddr_correct
R35658 Cminorgenproof.make_store_correct
R35658 Cminorgenproof.make_store_correct
R35953 Cminorgenproof.match_callstack_mapped
R35953 Cminorgenproof.match_callstack_mapped
R36097 Coq.ZArith.BinInt "x <= y" Z_scope
R36100 Cminorgen.align
R36088 Coq.ZArith.BinInt "x > y" Z_scope
R36244 Coq.ZArith.BinInt "x <= y" Z_scope
R36223 Coq.Init.Logic "x = y" type_scope
R36186 Cminorgen.assign_variables
R36212 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R36225 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R36383 Cminorgen.mem
R36383 Cminorgen.mem
R36460 Mem.size_chunk_pos
R36460 Mem.size_chunk_pos
R36500 Cminorgenproof.align_bounds
R36517 Mem.size_chunk
R36500 Cminorgenproof.align_bounds
R36517 Mem.size_chunk
R36605 Coq.ZArith.BinInt "x > y" Z_scope
R36605 Coq.ZArith.BinInt "x > y" Z_scope
R36630 Cminorgenproof.align_bounds
R36630 Cminorgenproof.align_bounds
R36665 Coq.ZArith.BinInt "x <= y" Z_scope
R36668 Coq.ZArith.Zmin.Zmax
R36665 Coq.ZArith.BinInt "x <= y" Z_scope
R36668 Coq.ZArith.Zmin.Zmax
R36685 Coqlib.Zmax_bound_l
R36685 Coqlib.Zmax_bound_l
R37340 Coq.Init.Logic "'exists' x , p" type_scope
R37375 Coq.Init.Logic "A /\ B" type_scope
R37356 Mem.inject_incr
R37400 Coq.Init.Logic "A /\ B" type_scope
R37378 Mem.mem_inject
R37403 Cminorgenproof.match_callstack
R37514 Mem.nextblock
R37499 Mem.nextblock
R37464 Coq.Lists.List "x :: y" list_scope
R37423 Cminorgenproof.mkframe
R37453 Mem.nextblock
R37326 Coq.Init.Logic "x <> y" type_scope
R37322 Maps "a ! b"
R37329 Coq.Init.Datatypes.None
R37300 Coq.Lists.List.In
R37303 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37273 Coq.ZArith.BinInt "x <= y" Z_scope
R37265 Coq.ZArith.BinInt "x + y" Z_scope
R37250 Mem.high_bound
R37229 Coq.Init.Logic "x = y" type_scope
R37231 Coq.Init.Datatypes.Some
R37235 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37197 Coq.ZArith.BinInt "x <= y" Z_scope
R37172 Mem.mem_inject
R37052 Cminorgenproof.match_callstack
R37154 Mem.nextblock
R37139 Mem.nextblock
R37109 Coq.Lists.List "x :: y" list_scope
R37071 Cminorgenproof.mkframe
R37098 Mem.nextblock
R37032 Coq.Init.Logic "x = y" type_scope
R36995 Cminorgen.assign_variables
R37021 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37034 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R36936 Cminorplus.alloc_variables
R36885 Coq.ZArith.BinInt "x <= y" Z_scope
R36888 Integers.max_signed
R36870 Coq.Init.Logic "x = y" type_scope
R36853 Mem.high_bound
R36844 Coq.Init.Logic "x = y" type_scope
R36828 Mem.low_bound
R36805 Mem.valid_block
R37686 Mem.inject_incr_refl
R37686 Mem.inject_incr_refl
R37835 Cminorgen.assign_variables
R37862 Cminorgen.assign_variable
R37891 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37882 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37775 Cminorgen.assign_variables
R37815 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37806 Coq.Lists.List "x :: y" list_scope
R37797 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37835 Cminorgen.assign_variables
R37862 Cminorgen.assign_variable
R37891 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37882 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37775 Cminorgen.assign_variables
R37815 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37806 Coq.Lists.List "x :: y" list_scope
R37797 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37915 Cminorgen.assign_variable
R37944 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37935 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37915 Cminorgen.assign_variable
R37944 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37935 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R38083 Coq.Init.Logic "x <> y" type_scope
R38078 Maps "a ! b"
R38086 Coq.Init.Datatypes.None
R38054 Coq.Lists.List.In
R38057 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R38083 Coq.Init.Logic "x <> y" type_scope
R38078 Maps "a ! b"
R38086 Coq.Init.Datatypes.None
R38054 Coq.Lists.List.In
R38057 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R38152 Coq.Init.Logic "'exists' x , p" type_scope
R38169 Coq.Init.Logic "x = y" type_scope
R38165 Maps "a ! b"
R38171 Coq.Init.Datatypes.Some
R38152 Coq.Init.Logic "'exists' x , p" type_scope
R38169 Coq.Init.Logic "x = y" type_scope
R38165 Maps "a ! b"
R38171 Coq.Init.Datatypes.Some
R38199 Coq.Init.Logic "x <> y" type_scope
R38195 Maps "a ! b"
R38202 Coq.Init.Datatypes.None
R38199 Coq.Init.Logic "x <> y" type_scope
R38195 Maps "a ! b"
R38202 Coq.Init.Datatypes.None
R38260 Maps "a ! b"
R38260 Maps "a ! b"
R38443 Cminorgen.mem
R38443 Cminorgen.mem
R38527 Cminorgen.align
R38537 Mem.size_chunk
R38527 Cminorgen.align
R38537 Mem.size_chunk
R38618 Mem.extend_inject
R38636 Coq.Init.Datatypes.Some
R38641 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R38618 Mem.extend_inject
R38636 Coq.Init.Datatypes.Some
R38641 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R38672 Mem.size_chunk_pos
R38672 Mem.size_chunk_pos
R38726 Cminorgenproof.align_bounds
R38743 Mem.size_chunk
R38726 Cminorgenproof.align_bounds
R38743 Mem.size_chunk
R38826 Coq.Init.Logic "A /\ B" type_scope
R38806 Mem.mem_inject
R38829 Mem.inject_incr
R38826 Coq.Init.Logic "A /\ B" type_scope
R38806 Mem.mem_inject
R38829 Mem.inject_incr
R38877 Coq.ZArith.BinInt "x < y" Z_scope
R38862 Integers.min_signed
R38877 Coq.ZArith.BinInt "x < y" Z_scope
R38862 Integers.min_signed
R38916 Cminorgenproof.assign_variables_incr
R38916 Cminorgenproof.assign_variables_incr
R38988 Mem.alloc_mapped_inject
R38988 Mem.alloc_mapped_inject
R39203 Cminorgenproof.match_callstack
R39336 Mem.nextblock
R39321 Mem.nextblock
R39300 Coq.Lists.List "x :: y" list_scope
R39236 Cminorgenproof.mkframe
R39286 Mem.nextblock
R39251 Maps.set
R39264 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R39203 Cminorgenproof.match_callstack
R39336 Mem.nextblock
R39321 Mem.nextblock
R39300 Coq.Lists.List "x :: y" list_scope
R39236 Cminorgenproof.mkframe
R39286 Mem.nextblock
R39251 Maps.set
R39264 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R39392 Cminorgenproof.match_callstack_alloc_left
R39392 Cminorgenproof.match_callstack_alloc_left
R39449 Coq.ZArith.BinInt "x <= y" Z_scope
R39449 Coq.ZArith.BinInt "x <= y" Z_scope
R39602 Coq.ZArith.BinInt "x <= y" Z_scope
R39594 Coq.ZArith.BinInt "x + y" Z_scope
R39578 Mem.high_bound
R39521 Coq.Init.Logic "x = y" type_scope
R39523 Coq.Init.Datatypes.Some
R39527 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R39602 Coq.ZArith.BinInt "x <= y" Z_scope
R39594 Coq.ZArith.BinInt "x + y" Z_scope
R39578 Mem.high_bound
R39521 Coq.Init.Logic "x = y" type_scope
R39523 Coq.Init.Datatypes.Some
R39527 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R39688 Mem.high_bound_alloc
R39688 Mem.high_bound_alloc
R39733 Coqlib.zeq
R39733 Coqlib.zeq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R40004 Mem.inject_incr_trans
R40004 Mem.inject_incr_trans
R40139 Mem.alloc_unmapped_inject
R40139 Mem.alloc_unmapped_inject
R40199 Mem.extend_inject
R40216 Coq.Init.Datatypes.None
R40199 Mem.extend_inject
R40216 Coq.Init.Datatypes.None
R40267 Cminorgenproof.match_callstack
R40400 Mem.nextblock
R40385 Mem.nextblock
R40364 Coq.Lists.List "x :: y" list_scope
R40300 Cminorgenproof.mkframe
R40350 Mem.nextblock
R40315 Maps.set
R40328 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40267 Cminorgenproof.match_callstack
R40400 Mem.nextblock
R40385 Mem.nextblock
R40364 Coq.Lists.List "x :: y" list_scope
R40300 Cminorgenproof.mkframe
R40350 Mem.nextblock
R40315 Maps.set
R40328 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40456 Cminorgenproof.match_callstack_alloc_left
R40456 Cminorgenproof.match_callstack_alloc_left
R40613 Coq.ZArith.BinInt "x <= y" Z_scope
R40605 Coq.ZArith.BinInt "x + y" Z_scope
R40589 Mem.high_bound
R40532 Coq.Init.Logic "x = y" type_scope
R40534 Coq.Init.Datatypes.Some
R40538 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40613 Coq.ZArith.BinInt "x <= y" Z_scope
R40605 Coq.ZArith.BinInt "x + y" Z_scope
R40589 Mem.high_bound
R40532 Coq.Init.Logic "x = y" type_scope
R40534 Coq.Init.Datatypes.Some
R40538 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40698 Mem.high_bound_alloc
R40698 Mem.high_bound_alloc
R40743 Coqlib.zeq
R40743 Coqlib.zeq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R40958 Mem.inject_incr_trans
R40958 Mem.inject_incr_trans
R41101 Coq.ZArith.BinInt "x <= y" Z_scope
R41104 Coq.ZArith.Zmin.Zmax
R41101 Coq.ZArith.BinInt "x <= y" Z_scope
R41104 Coq.ZArith.Zmin.Zmax
R41123 Coq.ZArith.Zmin.Zmax1
R41123 Coq.ZArith.Zmin.Zmax1
R41143 Coq.ZArith.BinInt "x > y" Z_scope
R41143 Coq.ZArith.BinInt "x > y" Z_scope
R41170 Cminorgenproof.align_bounds
R41170 Cminorgenproof.align_bounds
R41214 Cminorgen.align
R41214 Cminorgen.align
R41245 Mem.extend_inject
R41263 Coq.Init.Datatypes.Some
R41268 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41245 Mem.extend_inject
R41263 Coq.Init.Datatypes.Some
R41268 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41313 Coq.Init.Logic "A /\ B" type_scope
R41293 Mem.mem_inject
R41316 Mem.inject_incr
R41313 Coq.Init.Logic "A /\ B" type_scope
R41293 Mem.mem_inject
R41316 Mem.inject_incr
R41362 Coq.ZArith.BinInt "x < y" Z_scope
R41347 Integers.min_signed
R41362 Coq.ZArith.BinInt "x < y" Z_scope
R41347 Integers.min_signed
R41399 Cminorgenproof.assign_variables_incr
R41399 Cminorgenproof.assign_variables_incr
R41469 Mem.alloc_mapped_inject
R41469 Mem.alloc_mapped_inject
R41680 Cminorgenproof.match_callstack
R41813 Mem.nextblock
R41798 Mem.nextblock
R41777 Coq.Lists.List "x :: y" list_scope
R41713 Cminorgenproof.mkframe
R41763 Mem.nextblock
R41728 Maps.set
R41741 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41680 Cminorgenproof.match_callstack
R41813 Mem.nextblock
R41798 Mem.nextblock
R41777 Coq.Lists.List "x :: y" list_scope
R41713 Cminorgenproof.mkframe
R41763 Mem.nextblock
R41728 Maps.set
R41741 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41869 Cminorgenproof.match_callstack_alloc_left
R41869 Cminorgenproof.match_callstack_alloc_left
R41926 Coq.ZArith.BinInt "x <= y" Z_scope
R41926 Coq.ZArith.BinInt "x <= y" Z_scope
R42079 Coq.ZArith.BinInt "x <= y" Z_scope
R42071 Coq.ZArith.BinInt "x + y" Z_scope
R42055 Mem.high_bound
R41998 Coq.Init.Logic "x = y" type_scope
R42000 Coq.Init.Datatypes.Some
R42004 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R42079 Coq.ZArith.BinInt "x <= y" Z_scope
R42071 Coq.ZArith.BinInt "x + y" Z_scope
R42055 Mem.high_bound
R41998 Coq.Init.Logic "x = y" type_scope
R42000 Coq.Init.Datatypes.Some
R42004 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R42165 Mem.high_bound_alloc
R42165 Mem.high_bound_alloc
R42210 Coqlib.zeq
R42210 Coqlib.zeq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R42481 Mem.inject_incr_trans
R42481 Mem.inject_incr_trans
R42611 Coq.Init.Logic "x <> y" type_scope
R42606 Maps "a ! b"
R42584 Cminor.set_params
R42614 Coq.Init.Datatypes.None
R42567 Coq.Lists.List.In
R42699 Maps.gsspec
R42699 Maps.gsspec
R42719 Coqlib.peq
R42719 Coqlib.peq
R42811 Maps.gsspec
R42811 Maps.gsspec
R42831 Coqlib.peq
R42831 Coqlib.peq
R43020 Coq.Init.Logic "x <> y" type_scope
R43015 Maps "a ! b"
R42998 Cminor.set_locals
R43023 Coq.Init.Datatypes.None
R42978 Coq.Init.Logic "A \/ B" type_scope
R42967 Coq.Lists.List.In
R42986 Coq.Init.Logic "x <> y" type_scope
R42982 Maps "a ! b"
R42989 Coq.Init.Datatypes.None
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R43088 Maps.gsspec
R43088 Maps.gsspec
R43108 Coqlib.peq
R43108 Coqlib.peq
R43166 Coq.Init.Logic "x <> y" type_scope
R43166 Coq.Init.Logic "x <> y" type_scope
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R43338 Coq.Init.Logic "x <> y" type_scope
R43333 Maps "a ! b"
R43293 Cminor.set_locals
R43310 Cminor.set_params
R43341 Coq.Init.Datatypes.None
R43264 Coq.Lists.List.In
R43278 Coq.Lists.List "x ++ y" list_scope
R43370 Cminorgenproof.set_locals_defined
R43370 Cminorgenproof.set_locals_defined
R43399 Coq.Lists.List.in_app_or
R43399 Coq.Lists.List.in_app_or
R43442 Cminorgenproof.set_params_defined
R43442 Cminorgenproof.set_params_defined
R44021 Coq.Init.Logic "'exists' x , p" type_scope
R44056 Coq.Init.Logic "A /\ B" type_scope
R44037 Mem.inject_incr
R44082 Coq.Init.Logic "A /\ B" type_scope
R44059 Mem.mem_inject
R44085 Cminorgenproof.match_callstack
R44206 Mem.nextblock
R44190 Mem.nextblock
R44155 Coq.Lists.List "x :: y" list_scope
R44105 Cminorgenproof.mkframe
R44144 Mem.nextblock
R44129 Mem.nextblock
R43972 Cminor.set_locals
R43990 Cminor.set_params
R43905 Coq.Lists.List.map
R43946 Cminorgenproof.fn_vars
R43916 Coq.Init.Datatypes.fst
R43926 Cminorplus.local_variable
R43920 AST.ident
R43835 Coq.Lists.List.map
R43874 Cminorgenproof.fn_params
R43846 Coq.Init.Datatypes.fst
R43856 AST.memory_chunk
R43850 AST.ident
R43797 Mem.mem_inject
R43740 Cminorgenproof.match_callstack
R43779 Mem.nextblock
R43764 Mem.nextblock
R43723 Coq.Init.Logic "x = y" type_scope
R43705 Mem.alloc
R43725 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R43644 Cminorplus.alloc_variables
R43675 Cminorplus.fn_variables
R43660 Cminorgenproof.empty_env
R43621 Coq.ZArith.BinInt "x <= y" Z_scope
R43624 Integers.max_signed
R43600 Coq.Init.Logic "x = y" type_scope
R43581 Cminorgen.build_compilenv
R43602 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44256 Coq.Init.Logic "x = y" type_scope
R44258 Mem.nextblock
R44256 Coq.Init.Logic "x = y" type_scope
R44258 Mem.nextblock
R44334 Cminorgenproof.match_callstack_alloc_variables_rec
R44334 Cminorgenproof.match_callstack_alloc_variables_rec
R44404 Mem.valid_new_block
R44404 Mem.valid_new_block
R44439 Mem.low_bound_alloc
R44439 Mem.low_bound_alloc
R44479 Coqlib.zeq_true
R44479 Coqlib.zeq_true
R44500 Mem.high_bound_alloc
R44500 Mem.high_bound_alloc
R44541 Coqlib.zeq_true
R44541 Coqlib.zeq_true
R44606 Mem.valid_block
R44606 Mem.valid_block
R44634 Mem.valid_new_block
R44634 Mem.valid_new_block
R44712 Maps.gi
R44712 Maps.gi
R44765 Maps.gempty
R44765 Maps.gempty
R44883 Maps.gempty
R44883 Maps.gempty
R44976 Maps.gempty
R44976 Maps.gempty
R45037 Mem.mi_mappedblocks
R45037 Mem.mi_mappedblocks
R45091 Mem.fresh_block_alloc
R45091 Mem.fresh_block_alloc
R45163 Mem.mi_mappedblocks
R45163 Mem.mi_mappedblocks
R45258 Mem.alloc_right_inject
R45258 Mem.alloc_right_inject
R45310 Mem.mi_mappedblocks
R45310 Mem.mi_mappedblocks
R45439 Cminorgenproof.set_locals_params_defined
R45439 Cminorgenproof.set_locals_params_defined
R45554 Cminorgenproof.fn_params
R45528 Cminorplus.fn_params
R45554 Cminorgenproof.fn_params
R45528 Cminorplus.fn_params
R45607 Cminorgenproof.fn_vars
R45583 Cminorplus.fn_vars
R45607 Cminorgenproof.fn_vars
R45583 Cminorplus.fn_vars
R45633 Coq.Lists.List.in_app_or
R45633 Coq.Lists.List.in_app_or
R45670 Coqlib.list_in_map_inv
R45670 Coqlib.list_in_map_inv
R45721 Coq.Lists.List.in_or_app
R45721 Coq.Lists.List.in_or_app
R45757 Coq.Lists.List.in_map
R45757 Coq.Lists.List.in_map
R45784 Coq.Lists.List.in_or_app
R45784 Coq.Lists.List.in_or_app
R45821 Coq.Init.Datatypes.fst
R45825 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45821 Coq.Init.Datatypes.fst
R45825 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45842 Coq.Lists.List.in_map
R45842 Coq.Lists.List.in_map
R45991 Coq.ZArith.BinInt "x <= y" Z_scope
R45978 Mem.nextblock
R45994 Mem.nextblock
R45937 Cminorplus.alloc_variables
R46267 Coq.Init.Logic "A <-> B" type_scope
R46245 Coq.ZArith.BinInt "x <= y < z" Z_scope
R46234 Mem.nextblock
R46256 Mem.nextblock
R46271 Coq.Lists.List.In
R46179 Cminorplus.alloc_variables
R46419 Coq.Init.Logic "x = y" type_scope
R46407 Mem.nextblock
R46419 Coq.Init.Logic "x = y" type_scope
R46407 Mem.nextblock
R46476 Coq.Init.Logic "x = y" type_scope
R46463 Mem.nextblock
R46478 Coq.ZArith.BinInt.Zsucc
R46485 Mem.nextblock
R46476 Coq.Init.Logic "x = y" type_scope
R46463 Mem.nextblock
R46478 Coq.ZArith.BinInt.Zsucc
R46485 Mem.nextblock
R46598 Coq.Init.Logic "A \/ B" type_scope
R46594 Coq.Init.Logic "x = y" type_scope
R46582 Mem.nextblock
R46614 Coq.ZArith.BinInt "x <= y < z" Z_scope
R46601 Mem.nextblock
R46621 Mem.nextblock
R46598 Coq.Init.Logic "A \/ B" type_scope
R46594 Coq.Init.Logic "x = y" type_scope
R46582 Mem.nextblock
R46614 Coq.ZArith.BinInt "x <= y < z" Z_scope
R46601 Mem.nextblock
R46621 Mem.nextblock
R46767 Cminorgenproof.alloc_variables_nextblock_incr
R46767 Cminorgenproof.alloc_variables_nextblock_incr
R46967 Cminor.env
R46955 Coq.Lists.List.list
R46960 Values.val
R46924 Coq.Lists.List.list
R46936 Coq.Init.Datatypes "x * y" type_scope
R46930 AST.ident
R46938 AST.memory_chunk
R46914 Mem.meminj
R47048 Coq.Lists.List.nil
R47044 Coq.Lists.List.nil
R47259 Coq.Lists.List "x :: y" list_scope
R47247 Coq.Lists.List "x :: y" list_scope
R47235 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R47149 Mem.val_inject
R47130 Coq.Init.Logic "x = y" type_scope
R47126 Maps "a ! b"
R47132 Coq.Init.Datatypes.Some
R47441 Cminorgenproof.vars_vals_match
R47427 Coq.Init.Logic "x = y" type_scope
R47423 Maps "a ! b"
R47431 Maps "a ! b"
R47400 Coq.Lists.List.In
R47403 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R47335 Cminorgenproof.vars_vals_match
R48014 Coq.Init.Logic "'exists' x , p" type_scope
R48026 Coq.Init.Logic "'exists' x , p" type_scope
R48178 Coq.Init.Logic "A /\ B" type_scope
R48043 Cminor.exec_stmtlist
R48165 Cminor.Out_normal
R48108 Cminorgen.store_parameters
R48062 Values.Vptr
R48070 Integers.zero
R48203 Coq.Init.Logic "A /\ B" type_scope
R48181 Mem.mem_inject
R48206 Cminorgenproof.match_callstack
R48280 Mem.nextblock
R48264 Mem.nextblock
R48253 Coq.Lists.List "x :: y" list_scope
R48225 Cminorgenproof.mkframe
R47921 Cminorgenproof.match_callstack
R47995 Mem.nextblock
R47979 Mem.nextblock
R47968 Coq.Lists.List "x :: y" list_scope
R47940 Cminorgenproof.mkframe
R47896 Mem.mem_inject
R47834 Coqlib.list_norepet
R47848 Coq.Lists.List.map
R47859 Coq.Init.Datatypes.fst
R47869 AST.memory_chunk
R47863 AST.ident
R47797 Cminorgenproof.vars_vals_match
R47721 Cminorplus.bind_parameters
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R48692 Coq.Init.Logic "x = y" type_scope
R48679 Mem.nextblock
R48694 Mem.nextblock
R48692 Coq.Init.Logic "x = y" type_scope
R48679 Mem.nextblock
R48694 Mem.nextblock
R48724 Mem.store_inv
R48724 Mem.store_inv
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R48884 Cminorplus.local_variable
R48862 Cminorgenproof.local_variable
R48884 Cminorplus.local_variable
R48862 Cminorgenproof.local_variable
R48987 Coq.Init.Logic "x = y" type_scope
R48987 Coq.Init.Logic "x = y" type_scope
R49026 Cminor.eval_expr
R49072 Cminor.Evar
R49059 Coq.Lists.List.nil
R49041 Values.Vptr
R49049 Integers.zero
R49026 Cminor.eval_expr
R49072 Cminor.Evar
R49059 Coq.Lists.List.nil
R49041 Values.Vptr
R49049 Integers.zero
R49131 Cminorgenproof.make_cast_correct
R49131 Cminorgenproof.make_cast_correct
R49252 Maps.set
R49252 Maps.set
R49291 Cminorgenproof.vars_vals_match
R49291 Cminorgenproof.vars_vals_match
R49335 Cminorgenproof.vars_vals_match_extensional
R49335 Cminorgenproof.vars_vals_match_extensional
R49409 Maps.gso
R49409 Maps.gso
R49472 Coq.Init.Datatypes.fst
R49476 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49472 Coq.Init.Datatypes.fst
R49476 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49493 Coq.Lists.List.in_map
R49493 Coq.Lists.List.in_map
R49526 Mem.store_unmapped_inject
R49526 Mem.store_unmapped_inject
R49604 Cminorgenproof.match_callstack_store_local
R49604 Cminorgenproof.match_callstack_store_local
R49926 Cminor.exec_Scons_continue
R49926 Cminor.exec_Scons_continue
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R50139 Cminorplus.local_variable
R50117 Cminorgenproof.local_variable
R50139 Cminorplus.local_variable
R50117 Cminorgenproof.local_variable
R50246 Cminorgenproof.make_stackaddr_correct
R50272 Coq.Lists.List.nil
R50246 Cminorgenproof.make_stackaddr_correct
R50272 Coq.Lists.List.nil
R50307 Cminor.eval_expr
R50353 Cminor.Evar
R50340 Coq.Lists.List.nil
R50322 Values.Vptr
R50330 Integers.zero
R50307 Cminor.eval_expr
R50353 Cminor.Evar
R50340 Coq.Lists.List.nil
R50322 Values.Vptr
R50330 Integers.zero
R50410 Cminorgenproof.make_store_correct
R50478 Values.Vptr
R50485 Integers.zero
R50410 Cminorgenproof.make_store_correct
R50478 Values.Vptr
R50485 Integers.zero
R50604 Coq.Init.Logic "x <> y" type_scope
R50607 Coq.Init.Datatypes.None
R50604 Coq.Init.Logic "x <> y" type_scope
R50607 Coq.Init.Datatypes.None
R50654 Cminorgenproof.match_callstack_mapped
R50654 Cminorgenproof.match_callstack_mapped
R50941 Cminor.exec_Scons_continue
R50941 Cminor.exec_Scons_continue
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R51124 Cminorplus.local_variable
R51102 Cminorgenproof.local_variable
R51124 Cminorplus.local_variable
R51102 Cminorgenproof.local_variable
R51191 Cminorplus.local_variable
R51169 Cminorgenproof.local_variable
R51191 Cminorplus.local_variable
R51169 Cminorgenproof.local_variable
R51435 Cminorgenproof.vars_vals_match
R51470 Cminor.set_params
R51488 Coq.Lists.List.map
R51499 Coq.Init.Datatypes.fst
R51509 AST.memory_chunk
R51503 AST.ident
R51401 Mem.val_list_inject
R51377 Coq.Init.Logic "x = y" type_scope
R51358 Coq.Lists.List.length
R51379 Coq.Lists.List.length
R51296 Coqlib.list_norepet
R51310 Coq.Lists.List.map
R51321 Coq.Init.Datatypes.fst
R51331 AST.memory_chunk
R51325 AST.ident
R51747 Maps.gss
R51747 Maps.gss
R51824 Cminor.set_params
R51840 Coq.Lists.List.map
R51846 Coq.Init.Datatypes.fst
R51856 AST.memory_chunk
R51850 AST.ident
R51788 Cminorgenproof.vars_vals_match_extensional
R51824 Cminor.set_params
R51840 Coq.Lists.List.map
R51846 Coq.Init.Datatypes.fst
R51856 AST.memory_chunk
R51850 AST.ident
R51788 Cminorgenproof.vars_vals_match_extensional
R51930 Maps.gso
R51930 Maps.gso
R52006 Coq.Init.Datatypes.fst
R52010 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51983 Coq.Init.Datatypes.fst
R51987 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52006 Coq.Init.Datatypes.fst
R52010 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51983 Coq.Init.Datatypes.fst
R51987 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52030 Coq.Lists.List.in_map
R52030 Coq.Lists.List.in_map
R52328 Cminorgenproof.vars_vals_match
R52363 Cminor.set_locals
R52425 Cminor.set_params
R52443 Coq.Lists.List.map
R52454 Coq.Init.Datatypes.fst
R52464 AST.memory_chunk
R52458 AST.ident
R52375 Coq.Lists.List.map
R52386 Coq.Init.Datatypes.fst
R52396 Cminorplus.local_variable
R52390 AST.ident
R52208 Coqlib.list_norepet
R52277 Coq.Lists.List "x ++ y" list_scope
R52222 Coq.Lists.List.map
R52233 Coq.Init.Datatypes.fst
R52243 Cminorplus.local_variable
R52237 AST.ident
R52280 Coq.Lists.List.map
R52291 Coq.Init.Datatypes.fst
R52301 AST.memory_chunk
R52295 AST.ident
R52159 Mem.val_list_inject
R52135 Coq.Init.Logic "x = y" type_scope
R52116 Coq.Lists.List.length
R52137 Coq.Lists.List.length
R52538 Cminorgenproof.vars_vals_match_holds_1
R52538 Cminorgenproof.vars_vals_match_holds_1
R52608 Cminorgenproof.vars_vals_match_extensional
R52608 Cminorgenproof.vars_vals_match_extensional
R52660 Maps.gso
R52660 Maps.gso
R52710 Coq.Lists.List.in_or_app
R52710 Coq.Lists.List.in_or_app
R52749 Coq.Init.Datatypes.fst
R52753 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52754 Coq.Init.Datatypes.fst
R52736 Coq.Init.Datatypes.fst
R52749 Coq.Init.Datatypes.fst
R52753 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52754 Coq.Init.Datatypes.fst
R52736 Coq.Init.Datatypes.fst
R52775 Coq.Lists.List.in_map
R52775 Coq.Lists.List.in_map
R52922 Coq.Init.Logic "x = y" type_scope
R52903 Coq.Lists.List.length
R52924 Coq.Lists.List.length
R52862 Cminorplus.bind_parameters
R53547 Coq.Init.Logic "'exists' x , p" type_scope
R53558 Coq.Init.Logic "'exists' x , p" type_scope
R53570 Coq.Init.Logic "'exists' x , p" type_scope
R53729 Coq.Init.Logic "A /\ B" type_scope
R53587 Cminor.exec_stmtlist
R53716 Cminor.Out_normal
R53650 Cminorgen.store_parameters
R53676 Cminorgenproof.fn_params
R53606 Values.Vptr
R53614 Integers.zero
R53755 Coq.Init.Logic "A /\ B" type_scope
R53732 Mem.mem_inject
R53777 Coq.Init.Logic "A /\ B" type_scope
R53758 Mem.inject_incr
R53908 Coq.Init.Logic "A /\ B" type_scope
R53780 Cminorgenproof.match_callstack
R53892 Mem.nextblock
R53876 Mem.nextblock
R53858 Coq.Lists.List "x :: y" list_scope
R53807 Cminorgenproof.mkframe
R53847 Mem.nextblock
R53832 Mem.nextblock
R53958 Coq.Init.Logic "A <-> B" type_scope
R53936 Coq.ZArith.BinInt "x <= y < z" Z_scope
R53925 Mem.nextblock
R53947 Mem.nextblock
R53962 Coq.Lists.List.In
R53488 Coqlib.list_norepet
R53521 Coq.Lists.List "x ++ y" list_scope
R53502 Cminorplus.fn_params_names
R53524 Cminorplus.fn_vars_names
R53465 Mem.mem_inject
R53429 Mem.val_list_inject
R53353 Cminor.set_locals
R53384 Cminor.set_params
R53403 Cminorplus.fn_params_names
R53365 Cminorplus.fn_vars_names
R53322 Coq.Init.Logic "x = y" type_scope
R53304 Mem.alloc
R53324 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53281 Coq.ZArith.BinInt "x <= y" Z_scope
R53284 Integers.max_signed
R53260 Coq.Init.Logic "x = y" type_scope
R53241 Cminorgen.build_compilenv
R53262 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53184 Cminorgenproof.match_callstack
R53223 Mem.nextblock
R53208 Mem.nextblock
R53132 Cminorplus.bind_parameters
R53157 Cminorgenproof.fn_params
R53073 Cminorplus.alloc_variables
R53102 Cminorplus.fn_variables
R53089 Cminorplus.empty_env
R54004 Cminorgenproof.bind_parameters_length
R54004 Cminorgenproof.bind_parameters_length
R54066 Cminorgenproof.match_callstack_alloc_variables
R54066 Cminorgenproof.match_callstack_alloc_variables
R54232 Mem.val_list_inject
R54232 Mem.val_list_inject
R54277 Mem.val_list_inject_incr
R54277 Mem.val_list_inject_incr
R54320 Cminorgenproof.vars_vals_match_holds
R54379 Coqlib.list_norepet_append_commut
R54320 Cminorgenproof.vars_vals_match_holds
R54379 Coqlib.list_norepet_append_commut
R54457 Coqlib.list_norepet
R54471 Coq.Lists.List.map
R54510 Cminorgenproof.fn_params
R54482 Coq.Init.Datatypes.fst
R54492 AST.memory_chunk
R54486 AST.ident
R54457 Coqlib.list_norepet
R54471 Coq.Lists.List.map
R54510 Cminorgenproof.fn_params
R54482 Coq.Init.Datatypes.fst
R54492 AST.memory_chunk
R54486 AST.ident
R54571 Coqlib.list_norepet_append_left
R54571 Coqlib.list_norepet_append_left
R54616 Cminorgenproof.store_parameters_correct
R54616 Cminorgenproof.store_parameters_correct
R54864 Cminorgenproof.alloc_variables_list_block
R54864 Cminorgenproof.alloc_variables_list_block
R55037 Coq.Init.Logic "x = y" type_scope
R55022 Cminorgen.bind
R55039 Coq.Init.Datatypes.Some
R55296 Coq.Init.Logic "x = y" type_scope
R55291 Coq.Init.Datatypes.None
R55298 Coq.Init.Datatypes.Some
R55359 Coq.Init.Logic "x = y" type_scope
R55352 Coq.Init.Datatypes.Some
R55361 Coq.Init.Datatypes.Some
R55100 Coq.Init.Logic.refl_equal
R55522 Coq.Init.Logic "x = y" type_scope
R55507 Cminorgen.bind
R55524 Coq.Init.Datatypes.Some
R55570 Coq.Init.Logic "x = y" type_scope
R55565 Coq.Init.Datatypes.None
R55572 Coq.Init.Datatypes.Some
R55619 Coq.Init.Logic "x = y" type_scope
R55612 Coq.Init.Datatypes.Some
R55621 Coq.Init.Datatypes.Some
R55678 Coq.Init.Logic "x = y" type_scope
R55680 Coq.Init.Datatypes.Some
R55744 Coq.Init.Logic "x = y" type_scope
R55746 Coq.Init.Datatypes.Some
R55808 Coq.Init.Logic "x = y" type_scope
R55810 Coq.Init.Datatypes.Some
R55870 Coq.Init.Logic "x = y" type_scope
R55872 Coq.Init.Datatypes.Some
R55930 Coq.Init.Logic "x = y" type_scope
R55932 Coq.Init.Datatypes.Some
R55988 Coq.Init.Logic "x = y" type_scope
R55990 Coq.Init.Datatypes.Some
R56044 Coq.Init.Logic "x = y" type_scope
R56046 Coq.Init.Datatypes.Some
R56597 Coq.Init.Logic "'exists' x , p" type_scope
R56608 Coq.Init.Logic "'exists' x , p" type_scope
R56620 Coq.Init.Logic "'exists' x , p" type_scope
R56632 Coq.Init.Logic "'exists' x , p" type_scope
R56709 Coq.Init.Logic "A /\ B" type_scope
R56648 Cminor.eval_expr
R56663 Values.Vptr
R56671 Integers.zero
R56733 Coq.Init.Logic "A /\ B" type_scope
R56712 Mem.val_inject
R56759 Coq.Init.Logic "A /\ B" type_scope
R56736 Mem.mem_inject
R56782 Coq.Init.Logic "A /\ B" type_scope
R56762 Mem.inject_incr
R56785 Cminorgenproof.match_callstack
R56876 Mem.nextblock
R56860 Mem.nextblock
R56841 Coq.Lists.List "x :: y" list_scope
R56813 Cminorgenproof.mkframe
R56434 Cminorgenproof.match_callstack
R56531 Mem.nextblock
R56515 Mem.nextblock
R56493 Coq.Lists.List "x :: y" list_scope
R56465 Cminorgenproof.mkframe
R56402 Mem.mem_inject
R56366 Mem.val_list_inject
R56346 Coq.Init.Logic "x = y" type_scope
R56327 Cminorgen.transl_expr
R56348 Coq.Init.Datatypes.Some
R56261 Values.val
R56252 Mem.mem
R56239 Cminorgenproof.expr
R56230 Mem.mem
R56218 Cminorgenproof.env
R56204 Cminorgenproof.letenv
R57347 Coq.Init.Logic "'exists' x , p" type_scope
R57358 Coq.Init.Logic "'exists' x , p" type_scope
R57370 Coq.Init.Logic "'exists' x , p" type_scope
R57382 Coq.Init.Logic "'exists' x , p" type_scope
R57466 Coq.Init.Logic "A /\ B" type_scope
R57399 Cminor.eval_exprlist
R57418 Values.Vptr
R57426 Integers.zero
R57497 Coq.Init.Logic "A /\ B" type_scope
R57469 Mem.val_list_inject
R57523 Coq.Init.Logic "A /\ B" type_scope
R57500 Mem.mem_inject
R57546 Coq.Init.Logic "A /\ B" type_scope
R57526 Mem.inject_incr
R57549 Cminorgenproof.match_callstack
R57640 Mem.nextblock
R57624 Mem.nextblock
R57605 Coq.Lists.List "x :: y" list_scope
R57577 Cminorgenproof.mkframe
R57179 Cminorgenproof.match_callstack
R57276 Mem.nextblock
R57260 Mem.nextblock
R57238 Coq.Lists.List "x :: y" list_scope
R57210 Cminorgenproof.mkframe
R57147 Mem.mem_inject
R57111 Mem.val_list_inject
R57090 Coq.Init.Logic "x = y" type_scope
R57066 Cminorgen.transl_exprlist
R57092 Coq.Init.Datatypes.Some
R56994 Coq.Lists.List.list
R56999 Values.val
R56984 Mem.mem
R56967 Cminorgenproof.exprlist
R56957 Mem.mem
R56945 Cminorgenproof.env
R56931 Cminorgenproof.letenv
R57975 Coq.Init.Logic "'exists' x , p" type_scope
R57986 Coq.Init.Logic "'exists' x , p" type_scope
R57998 Coq.Init.Logic "'exists' x , p" type_scope
R58058 Coq.Init.Logic "A /\ B" type_scope
R58016 Cminor.eval_funcall
R58086 Coq.Init.Logic "A /\ B" type_scope
R58061 Mem.val_inject
R58112 Coq.Init.Logic "A /\ B" type_scope
R58089 Mem.mem_inject
R58135 Coq.Init.Logic "A /\ B" type_scope
R58115 Mem.inject_incr
R58138 Cminorgenproof.match_callstack
R58180 Mem.nextblock
R58164 Mem.nextblock
R57941 Mem.val_list_inject
R57872 Cminorgenproof.match_callstack
R57914 Mem.nextblock
R57898 Mem.nextblock
R57840 Mem.mem_inject
R57819 Coq.Init.Logic "x = y" type_scope
R57800 Cminorgen.transl_function
R57821 Coq.Init.Datatypes.Some
R57749 Values.val
R57738 Mem.mem
R57723 Coq.Lists.List.list
R57728 Values.val
R57704 Cminorgenproof.function
R57694 Mem.mem
R58225 Mem.meminj
R58248 Cminor.outcome
R58235 Cminorgenproof.outcome
R58330 Cminor.Out_normal
R58317 Cminorgenproof.Out_normal
R58415 Cminor.Out_exit
R58400 Cminorgenproof.Out_exit
R58503 Cminor.Out_return
R58514 Coq.Init.Datatypes.None
R58483 Cminorgenproof.Out_return
R58496 Coq.Init.Datatypes.None
R58649 Cminor.Out_return
R58661 Coq.Init.Datatypes.Some
R58624 Cminorgenproof.Out_return
R58638 Coq.Init.Datatypes.Some
R58578 Mem.val_inject
R59053 Coq.Init.Logic "'exists' x , p" type_scope
R59064 Coq.Init.Logic "'exists' x , p" type_scope
R59076 Coq.Init.Logic "'exists' x , p" type_scope
R59088 Coq.Init.Logic "'exists' x , p" type_scope
R59165 Coq.Init.Logic "A /\ B" type_scope
R59106 Cminor.exec_stmt
R59121 Values.Vptr
R59129 Integers.zero
R59197 Coq.Init.Logic "A /\ B" type_scope
R59168 Cminorgenproof.outcome_inject
R59223 Coq.Init.Logic "A /\ B" type_scope
R59200 Mem.mem_inject
R59246 Coq.Init.Logic "A /\ B" type_scope
R59226 Mem.inject_incr
R59249 Cminorgenproof.match_callstack
R59340 Mem.nextblock
R59324 Mem.nextblock
R59305 Coq.Lists.List "x :: y" list_scope
R59277 Cminorgenproof.mkframe
R58890 Cminorgenproof.match_callstack
R58987 Mem.nextblock
R58971 Mem.nextblock
R58949 Coq.Lists.List "x :: y" list_scope
R58921 Cminorgenproof.mkframe
R58858 Mem.mem_inject
R58838 Coq.Init.Logic "x = y" type_scope
R58819 Cminorgen.transl_stmt
R58840 Coq.Init.Datatypes.Some
R58752 Cminorgenproof.outcome
R58741 Mem.mem
R58728 Cminorgenproof.stmt
R58719 Mem.mem
R58707 Cminorgenproof.env
R59752 Coq.Init.Logic "'exists' x , p" type_scope
R59763 Coq.Init.Logic "'exists' x , p" type_scope
R59775 Coq.Init.Logic "'exists' x , p" type_scope
R59787 Coq.Init.Logic "'exists' x , p" type_scope
R59868 Coq.Init.Logic "A /\ B" type_scope
R59805 Cminor.exec_stmtlist
R59824 Values.Vptr
R59832 Integers.zero
R59900 Coq.Init.Logic "A /\ B" type_scope
R59871 Cminorgenproof.outcome_inject
R59926 Coq.Init.Logic "A /\ B" type_scope
R59903 Mem.mem_inject
R59949 Coq.Init.Logic "A /\ B" type_scope
R59929 Mem.inject_incr
R59952 Cminorgenproof.match_callstack
R60043 Mem.nextblock
R60027 Mem.nextblock
R60008 Coq.Lists.List "x :: y" list_scope
R59980 Cminorgenproof.mkframe
R59585 Cminorgenproof.match_callstack
R59682 Mem.nextblock
R59666 Mem.nextblock
R59644 Coq.Lists.List "x :: y" list_scope
R59616 Cminorgenproof.mkframe
R59553 Mem.mem_inject
R59533 Coq.Init.Logic "x = y" type_scope
R59510 Cminorgen.transl_stmtlist
R59535 Coq.Init.Datatypes.Some
R59443 Cminorgenproof.outcome
R59432 Mem.mem
R59415 Cminorgenproof.stmtlist
R59406 Mem.mem
R59394 Cminorgenproof.env
R60313 Cminorgenproof.eval_expr_prop
R60336 Cminorgenproof.Evar
R60298 Coq.Init.Logic "x = y" type_scope
R60281 Mem.load
R60300 Coq.Init.Datatypes.Some
R60248 Coq.Init.Logic "x = y" type_scope
R60243 Maps "a ! b"
R60250 Coq.Init.Datatypes.Some
R60255 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R60259 Cminorplus.LVscalar
R60232 Values.val
R60213 AST.memory_chunk
R60197 Values.block
R60177 Coq.NArith.BinPos.positive
R60166 Mem.mem
R60127 Maps.t
R60142 Coq.Init.Datatypes "x * y" type_scope
R60136 Values.block
R60144 Cminorplus.local_variable
R60107 Cminorgenproof.letenv
R60422 Cminorgenproof.var_get_correct
R60422 Cminorgenproof.var_get_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R60977 Cminorgenproof.eval_expr_prop
R61000 Cminorgenproof.Eassign
R60961 Coq.Init.Logic "x = y" type_scope
R60939 Mem.store
R60963 Coq.Init.Datatypes.Some
R60923 Coq.Init.Logic "x = y" type_scope
R60909 Cminorplus.cast
R60925 Coq.Init.Datatypes.Some
R60876 Coq.Init.Logic "x = y" type_scope
R60871 Maps "a ! b"
R60878 Coq.Init.Datatypes.Some
R60883 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R60887 Cminorplus.LVscalar
R60833 Cminorgenproof.eval_expr_prop
R60797 Cminorgenproof.eval_expr
R60788 Mem.mem
R60777 Values.val
R60777 Values.val
R60754 AST.memory_chunk
R60733 Values.block
R60723 Mem.mem
R60709 Cminorgenproof.expr
R60694 Coq.NArith.BinPos.positive
R60678 Mem.mem
R60666 Cminorgenproof.env
R60651 Cminorgenproof.letenv
R61223 Cminorgenproof.var_set_correct
R61223 Cminorgenproof.var_set_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R61668 Cminorgenproof.eval_expr_prop
R61706 Values.Vptr
R61713 Integers.zero
R61691 Cminorplus.Eaddrof
R61647 Coq.Init.Logic "x = y" type_scope
R61642 Maps "a ! b"
R61649 Coq.Init.Datatypes.Some
R61654 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R61620 Cminorplus.local_variable
R61607 Values.block
R61587 Coq.NArith.BinPos.positive
R61576 Mem.mem
R61537 Maps.t
R61552 Coq.Init.Datatypes "x * y" type_scope
R61546 Values.block
R61554 Cminorplus.local_variable
R61517 Cminorgenproof.letenv
R61782 Cminorgenproof.var_addr_local_correct
R61782 Cminorgenproof.var_addr_local_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R62175 Cminorgenproof.eval_expr_prop
R62213 Values.Vptr
R62220 Integers.zero
R62198 Cminorplus.Eaddrof
R62160 Coq.Init.Logic "x = y" type_scope
R62137 Globalenvs.find_symbol
R62162 Coq.Init.Datatypes.Some
R62124 Coq.Init.Logic "x = y" type_scope
R62119 Maps "a ! b"
R62126 Coq.Init.Datatypes.None
R62106 Values.block
R62086 Coq.NArith.BinPos.positive
R62075 Mem.mem
R62036 Maps.t
R62051 Coq.Init.Datatypes "x * y" type_scope
R62045 Values.block
R62053 Cminorplus.local_variable
R62016 Cminorgenproof.letenv
R62289 Cminorgenproof.var_addr_global_correct
R62289 Cminorgenproof.var_addr_global_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R62757 Cminorgenproof.eval_expr_prop
R62780 Cminorgenproof.Eop
R62742 Coq.Init.Logic "x = y" type_scope
R62716 Cminorgenproof.eval_operation
R62744 Coq.Init.Datatypes.Some
R62675 Cminorgenproof.eval_exprlist_prop
R62634 Cminorgenproof.eval_exprlist
R62625 Values.val
R62610 Coq.Lists.List.list
R62615 Values.val
R62594 Mem.mem
R62576 Cminorgenproof.exprlist
R62557 Cminorgenproof.operation
R62541 Mem.mem
R62529 Cminorgenproof.env
R62514 Cminorgenproof.letenv
R62997 Cminorgenproof.make_op_correct
R62997 Cminorgenproof.make_op_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R63439 Cminorgenproof.eval_expr_prop
R63462 Cminorgenproof.Eload
R63424 Coq.Init.Logic "x = y" type_scope
R63406 Mem.loadv
R63426 Coq.Init.Datatypes.Some
R63370 Cminorgenproof.eval_expr_prop
R63334 Cminorgenproof.eval_expr
R63325 Values.val
R63325 Values.val
R63307 Mem.mem
R63293 Cminorgenproof.expr
R63274 AST.memory_chunk
R63255 Mem.mem
R63243 Cminorgenproof.env
R63228 Cminorgenproof.letenv
R63664 Mem.loadv_inject
R63664 Mem.loadv_inject
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R63811 Cminorgenproof.make_load_correct
R63811 Cminorgenproof.make_load_correct
R64258 Cminorgenproof.eval_expr_prop
R64281 Cminorgenproof.Estore
R64242 Coq.Init.Logic "x = y" type_scope
R64220 Mem.storev
R64244 Coq.Init.Datatypes.Some
R64204 Coq.Init.Logic "x = y" type_scope
R64190 Cminorplus.cast
R64206 Coq.Init.Datatypes.Some
R64153 Cminorgenproof.eval_expr_prop
R64116 Cminorgenproof.eval_expr
R64080 Cminorgenproof.eval_expr_prop
R64044 Cminorgenproof.eval_expr
R64035 Values.val
R64024 Mem.mem
R64013 Values.val
R64002 Mem.mem
R63991 Values.val
R63975 Mem.mem
R63961 Cminorgenproof.expr
R63961 Cminorgenproof.expr
R63940 AST.memory_chunk
R63921 Mem.mem
R63909 Cminorgenproof.env
R63894 Cminorgenproof.letenv
R64491 Mem.val_list_inject
R64491 Mem.val_list_inject
R64526 Mem.val_list_inject_incr
R64526 Mem.val_list_inject_incr
R64700 Mem.val_inject
R64700 Mem.val_inject
R64730 Mem.val_inject_incr
R64730 Mem.val_inject_incr
R64766 Cminorgenproof.make_store_correct
R64766 Cminorgenproof.make_store_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R65011 Mem.inject_incr_trans
R65011 Mem.inject_incr_trans
R65047 Mem.val_inject
R65047 Mem.val_inject
R65077 Mem.val_inject_incr
R65077 Mem.val_inject_incr
R65202 Mem.nextblock
R65222 Mem.nextblock
R65202 Mem.nextblock
R65222 Mem.nextblock
R65246 Cminorgenproof.match_callstack_mapped
R65246 Cminorgenproof.match_callstack_mapped
R65304 Mem.store_inv
R65304 Mem.store_inv
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R65446 Coq.Init.Logic "x = y" type_scope
R65438 Cminor.fn_sig
R65451 Cminorgenproof.fn_sig
R65421 Coq.Init.Logic "x = y" type_scope
R65403 Cminorgen.transl_function
R65423 Coq.Init.Datatypes.Some
R65520 Cminorgen.build_compilenv
R65520 Cminorgen.build_compilenv
R65548 Coqlib.zle
R65554 Integers.max_signed
R65548 Coqlib.zle
R65554 Integers.max_signed
R66171 Cminorgenproof.eval_expr_prop
R66194 Cminorgenproof.Ecall
R66128 Cminorgenproof.eval_funcall_prop
R66085 Cminorgenproof.eval_funcall
R66073 Coq.Init.Logic "x = y" type_scope
R66062 Cminorgenproof.fn_sig
R66047 Coq.Init.Logic "x = y" type_scope
R66025 Globalenvs.find_funct
R66049 Coq.Init.Datatypes.Some
R65980 Cminorgenproof.eval_exprlist_prop
R65935 Cminorgenproof.eval_exprlist
R65899 Cminorgenproof.eval_expr_prop
R65863 Cminorgenproof.eval_expr
R65847 Cminorgenproof.function
R65832 Values.val
R65814 Coq.Lists.List.list
R65819 Values.val
R65800 Values.val
R65789 Mem.mem
R65789 Mem.mem
R65789 Mem.mem
R65760 Cminorgenproof.exprlist
R65746 Cminorgenproof.expr
R65730 AST.signature
R65713 Mem.mem
R65701 Cminorgenproof.env
R65686 Cminorgenproof.letenv
R66420 Mem.val_list_inject
R66420 Mem.val_list_inject
R66455 Mem.val_list_inject_incr
R66455 Mem.val_list_inject_incr
R66632 Coq.Init.Logic "x = y" type_scope
R66632 Coq.Init.Logic "x = y" type_scope
R66649 Globalenvs.find_funct_inv
R66649 Globalenvs.find_funct_inv
R66718 Globalenvs.find_funct_find_funct_ptr
R66718 Globalenvs.find_funct_find_funct_ptr
R66773 Globalenvs.find_funct_ptr_inv
R66773 Globalenvs.find_funct_ptr_inv
R66821 Cminorgenproof.match_globalenvs
R66821 Cminorgenproof.match_globalenvs
R66850 Cminorgenproof.match_callstack_match_globalenvs
R66850 Cminorgenproof.match_callstack_match_globalenvs
R66907 Cminorgenproof.mg_functions
R66907 Cminorgenproof.mg_functions
R67094 Cminorgenproof.functions_translated
R67094 Cminorgenproof.functions_translated
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R67335 Cminor.eval_Ecall
R67335 Cminor.eval_Ecall
R67375 Cminorgenproof.sig_transl_function
R67375 Cminorgenproof.sig_transl_function
R67410 Mem.inject_incr_trans
R67410 Mem.inject_incr_trans
R67452 Mem.inject_incr_trans
R67452 Mem.inject_incr_trans
R67824 Cminorgenproof.eval_expr_prop
R67847 Cminorgenproof.Econdition
R67787 Cminorgenproof.eval_expr_prop
R67750 Cminorgenproof.eval_expr
R67729 Values.is_true
R67693 Cminorgenproof.eval_expr_prop
R67657 Cminorgenproof.eval_expr
R67648 Values.val
R67632 Mem.mem
R67621 Values.val
R67610 Mem.mem
R67596 Cminorgenproof.expr
R67596 Cminorgenproof.expr
R67596 Cminorgenproof.expr
R67577 Mem.mem
R67565 Cminorgenproof.env
R67550 Cminorgenproof.letenv
R68057 Mem.val_list_inject
R68057 Mem.val_list_inject
R68092 Mem.val_list_inject_incr
R68092 Mem.val_list_inject_incr
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R68334 Cmconstrproof.eval_conditionalexpr_true
R68334 Cmconstrproof.eval_conditionalexpr_true
R68454 Mem.inject_incr_trans
R68454 Mem.inject_incr_trans
R68821 Cminorgenproof.eval_expr_prop
R68844 Cminorgenproof.Econdition
R68784 Cminorgenproof.eval_expr_prop
R68747 Cminorgenproof.eval_expr
R68725 Values.is_false
R68689 Cminorgenproof.eval_expr_prop
R68653 Cminorgenproof.eval_expr
R68644 Values.val
R68628 Mem.mem
R68617 Values.val
R68606 Mem.mem
R68592 Cminorgenproof.expr
R68592 Cminorgenproof.expr
R68592 Cminorgenproof.expr
R68573 Mem.mem
R68561 Cminorgenproof.env
R68546 Cminorgenproof.letenv
R69054 Mem.val_list_inject
R69054 Mem.val_list_inject
R69089 Mem.val_list_inject_incr
R69089 Mem.val_list_inject_incr
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R69331 Cmconstrproof.eval_conditionalexpr_false
R69331 Cmconstrproof.eval_conditionalexpr_false
R69452 Mem.inject_incr_trans
R69452 Mem.inject_incr_trans
R69794 Cminorgenproof.eval_expr_prop
R69817 Cminorgenproof.Elet
R69749 Cminorgenproof.eval_expr_prop
R69768 Coq.Lists.List "x :: y" list_scope
R69704 Cminorgenproof.eval_expr
R69723 Coq.Lists.List "x :: y" list_scope
R69668 Cminorgenproof.eval_expr_prop
R69632 Cminorgenproof.eval_expr
R69623 Values.val
R69612 Mem.mem
R69601 Values.val
R69590 Mem.mem
R69576 Cminorgenproof.expr
R69576 Cminorgenproof.expr
R69559 Mem.mem
R69547 Cminorgenproof.env
R69532 Cminorgenproof.letenv
R70019 Mem.val_list_inject
R70054 Coq.Lists.List "x :: y" list_scope
R70042 Coq.Lists.List "x :: y" list_scope
R70019 Mem.val_list_inject
R70054 Coq.Lists.List "x :: y" list_scope
R70042 Coq.Lists.List "x :: y" list_scope
R70094 Mem.val_list_inject_incr
R70094 Mem.val_list_inject_incr
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R70331 Cminor.eval_Elet
R70331 Cminor.eval_Elet
R70358 Mem.inject_incr_trans
R70358 Mem.inject_incr_trans
R70508 Coq.Init.Logic "'exists' x , p" type_scope
R70544 Coq.Init.Logic "A /\ B" type_scope
R70534 Coq.Init.Logic "x = y" type_scope
R70519 Coq.Lists.List.nth_error
R70536 Coq.Init.Datatypes.Some
R70547 Mem.val_inject
R70493 Coq.Init.Logic "x = y" type_scope
R70478 Coq.Lists.List.nth_error
R70495 Coq.Init.Datatypes.Some
R70436 Mem.val_list_inject
R70860 Cminorgenproof.eval_expr_prop
R70883 Cminorgenproof.Eletvar
R70845 Coq.Init.Logic "x = y" type_scope
R70830 Coq.Lists.List.nth_error
R70847 Coq.Init.Datatypes.Some
R70821 Values.val
R70806 Coq.Init.Datatypes.nat
R70796 Mem.mem
R70784 Cminorgenproof.env
R70769 Coq.Lists.List.list
R70774 Values.val
R70956 Cminorgenproof.val_list_inject_nth
R70956 Cminorgenproof.val_list_inject_nth
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R71091 Cminor.eval_Eletvar
R71091 Cminor.eval_Eletvar
R71205 Cminorgenproof.eval_exprlist_prop
R71240 Coq.Lists.List.nil
R71231 Cminorgenproof.Enil
R71196 Mem.mem
R71184 Cminorgenproof.env
R71169 Cminorgenproof.letenv
R71335 Coq.Lists.List.nil
R71339 Values.val
R71335 Coq.Lists.List.nil
R71339 Values.val
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R71720 Cminorgenproof.eval_exprlist_prop
R71767 Coq.Lists.List "x :: y" list_scope
R71747 Cminorgenproof.Econs
R71678 Cminorgenproof.eval_exprlist_prop
R71636 Cminorgenproof.eval_exprlist
R71601 Cminorgenproof.eval_expr_prop
R71566 Cminorgenproof.eval_expr
R71552 Coq.Lists.List.list
R71557 Values.val
R71541 Mem.mem
R71530 Values.val
R71515 Mem.mem
R71497 Cminorgenproof.exprlist
R71483 Cminorgenproof.expr
R71468 Mem.mem
R71456 Cminorgenproof.env
R71441 Cminorgenproof.letenv
R71959 Mem.val_list_inject
R71959 Mem.val_list_inject
R71994 Mem.val_list_inject_incr
R71994 Mem.val_list_inject_incr
R72168 Mem.val_inject
R72168 Mem.val_inject
R72197 Mem.val_inject_incr
R72197 Mem.val_inject_incr
R72270 Coq.Lists.List "x :: y" list_scope
R72270 Coq.Lists.List "x :: y" list_scope
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R72333 Mem.inject_incr_trans
R72333 Mem.inject_incr_trans
R72883 Cminorgenproof.eval_funcall_prop
R72912 Mem.free_list
R72822 Cminorgenproof.outcome_result_value
R72850 AST.sig_res
R72859 Cminorgenproof.fn_sig
R72771 Cminorgenproof.exec_stmtlist_prop
R72796 Cminorgenproof.fn_body
R72720 Cminorgenproof.exec_stmtlist
R72745 Cminorgenproof.fn_body
R72668 Cminorplus.bind_parameters
R72690 Cminorgenproof.fn_params
R72609 Cminorplus.alloc_variables
R72638 Cminorplus.fn_variables
R72625 Cminorplus.empty_env
R72551 Coqlib.list_norepet
R72583 Coq.Lists.List "x ++ y" list_scope
R72565 Cminorplus.fn_params_names
R72586 Cminorplus.fn_vars_names
R72542 Values.val
R72523 Cminorgenproof.outcome
R72506 Mem.mem
R72506 Mem.mem
R72485 Coq.Lists.List.list
R72490 Values.block
R72474 Mem.mem
R72461 Cminorgenproof.env
R72441 Coq.Lists.List.list
R72446 Values.val
R72420 Cminorgenproof.function
R72410 Mem.mem
R73026 Cminorgen.build_compilenv
R73026 Cminorgen.build_compilenv
R73109 Coqlib.zle
R73123 Integers.max_signed
R73109 Coqlib.zle
R73123 Integers.max_signed
R73194 Mem.alloc
R73194 Mem.alloc
R73250 Cminorgenproof.function_entry_ok
R73250 Cminorgenproof.function_entry_ok
R73555 Coq.Init.Logic "'exists' x , p" type_scope
R73636 Coq.Init.Logic "A /\ B" type_scope
R73581 Cminor.outcome_result_value
R73621 AST.sig_res
R73610 Cminorgenproof.fn_sig
R73650 Mem.val_inject
R73555 Coq.Init.Logic "'exists' x , p" type_scope
R73636 Coq.Init.Logic "A /\ B" type_scope
R73581 Cminor.outcome_result_value
R73621 AST.sig_res
R73610 Cminorgenproof.fn_sig
R73650 Mem.val_inject
R73786 AST.sig_res
R73795 Cminorgenproof.fn_sig
R73786 AST.sig_res
R73795 Cminorgenproof.fn_sig
R73844 Values.Vundef
R73844 Values.Vundef
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R73915 AST.sig_res
R73924 Cminorgenproof.fn_sig
R73915 AST.sig_res
R73924 Cminorgenproof.fn_sig
R73973 Values.Vundef
R73973 Values.Vundef
R74033 AST.sig_res
R74042 Cminorgenproof.fn_sig
R74033 AST.sig_res
R74042 Cminorgenproof.fn_sig
R74204 Mem.free
R74204 Mem.free
R74314 Cminor.exec_Scons_continue
R74314 Cminor.exec_Scons_continue
R74374 Cminor.outcome_block
R74388 Cminor.Out_normal
R74357 Cminor.Out_normal
R74374 Cminor.outcome_block
R74388 Cminor.Out_normal
R74357 Cminor.Out_normal
R74409 Cminor.exec_Sblock
R74409 Cminor.exec_Sblock
R74533 Mem.free_inject
R74533 Mem.free_inject
R74700 Mem.inject_incr_trans
R74700 Mem.inject_incr_trans
R74802 Coq.Init.Logic "x = y" type_scope
R74774 Mem.nextblock
R74785 Mem.free_list
R74804 Mem.nextblock
R74802 Coq.Init.Logic "x = y" type_scope
R74774 Mem.nextblock
R74785 Mem.free_list
R74804 Mem.nextblock
R74892 Mem.nextblock
R74892 Mem.nextblock
R74925 Cminorgenproof.match_callstack_freelist
R74925 Cminorgenproof.match_callstack_freelist
R75213 Cminorgenproof.exec_stmt_prop
R75247 Cminorgenproof.Out_normal
R75233 Cminorgenproof.Sexpr
R75177 Cminorgenproof.eval_expr_prop
R75192 Coq.Lists.List.nil
R75141 Cminorgenproof.eval_expr
R75156 Coq.Lists.List.nil
R75132 Values.val
R75122 Mem.mem
R75103 Cminorgenproof.expr
R75093 Mem.mem
R75081 Cminorgenproof.env
R75344 Mem.val_nil_inject
R75344 Mem.val_nil_inject
R75487 Cminor.Out_normal
R75487 Cminor.Out_normal
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R75918 Cminorgenproof.exec_stmt_prop
R75938 Cminorgenproof.Sifthenelse
R75877 Cminorgenproof.exec_stmtlist_prop
R75836 Cminorgenproof.exec_stmtlist
R75815 Values.is_true
R75778 Cminorgenproof.eval_expr_prop
R75793 Coq.Lists.List.nil
R75741 Cminorgenproof.eval_expr
R75756 Coq.Lists.List.nil
R75726 Cminorgenproof.outcome
R75709 Mem.mem
R75698 Values.val
R75687 Mem.mem
R75669 Cminorgenproof.stmtlist
R75669 Cminorgenproof.stmtlist
R75645 Cminorgenproof.expr
R75635 Mem.mem
R75623 Cminorgenproof.env
R76053 Mem.val_nil_inject
R76053 Mem.val_nil_inject
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R76354 Cmconstrproof.exec_ifthenelse_true
R76354 Cmconstrproof.exec_ifthenelse_true
R76468 Mem.inject_incr_trans
R76468 Mem.inject_incr_trans
R76856 Cminorgenproof.exec_stmt_prop
R76876 Cminorgenproof.Sifthenelse
R76815 Cminorgenproof.exec_stmtlist_prop
R76774 Cminorgenproof.exec_stmtlist
R76752 Values.is_false
R76715 Cminorgenproof.eval_expr_prop
R76730 Coq.Lists.List.nil
R76678 Cminorgenproof.eval_expr
R76693 Coq.Lists.List.nil
R76663 Cminorgenproof.outcome
R76646 Mem.mem
R76635 Values.val
R76624 Mem.mem
R76606 Cminorgenproof.stmtlist
R76606 Cminorgenproof.stmtlist
R76582 Cminorgenproof.expr
R76572 Mem.mem
R76560 Cminorgenproof.env
R76991 Mem.val_nil_inject
R76991 Mem.val_nil_inject
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R77292 Cmconstrproof.exec_ifthenelse_false
R77292 Cmconstrproof.exec_ifthenelse_false
R77407 Mem.inject_incr_trans
R77407 Mem.inject_incr_trans
R77756 Cminorgenproof.exec_stmt_prop
R77776 Cminorgenproof.Sloop
R77710 Cminorgenproof.exec_stmt_prop
R77731 Cminorgenproof.Sloop
R77664 Cminorgenproof.exec_stmt
R77685 Cminorgenproof.Sloop
R77616 Cminorgenproof.exec_stmtlist_prop
R77645 Cminorgenproof.Out_normal
R77568 Cminorgenproof.exec_stmtlist
R77597 Cminorgenproof.Out_normal
R77553 Cminorgenproof.outcome
R77541 Mem.mem
R77541 Mem.mem
R77515 Cminorgenproof.stmtlist
R77504 Mem.mem
R77492 Cminorgenproof.env
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R78161 Cminor.exec_Sloop_loop
R78161 Cminor.exec_Sloop_loop
R78233 Mem.inject_incr_trans
R78233 Mem.inject_incr_trans
R78496 Cminorgenproof.exec_stmt_prop
R78516 Cminorgenproof.Sloop
R78474 Coq.Init.Logic "x <> y" type_scope
R78477 Cminorgenproof.Out_normal
R78431 Cminorgenproof.exec_stmtlist_prop
R78392 Cminorgenproof.exec_stmtlist
R78377 Cminorgenproof.outcome
R78365 Mem.mem
R78342 Cminorgenproof.stmtlist
R78331 Mem.mem
R78319 Cminorgenproof.env
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R78778 Cminor.exec_Sloop_stop
R78778 Cminor.exec_Sloop_stop
R79056 Cminorgenproof.exec_stmt_prop
R79098 Cminorgenproof.outcome_block
R79076 Cminorgenproof.Sblock
R79017 Cminorgenproof.exec_stmtlist_prop
R78978 Cminorgenproof.exec_stmtlist
R78963 Cminorgenproof.outcome
R78951 Mem.mem
R78928 Cminorgenproof.stmtlist
R78917 Mem.mem
R78905 Cminorgenproof.env
R79326 Cminor.outcome_block
R79326 Cminor.outcome_block
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R79378 Cminor.exec_Sblock
R79378 Cminor.exec_Sblock
R79604 Cminorgenproof.exec_stmt_prop
R79638 Cminorgenproof.Out_exit
R79624 Cminorgenproof.Sexit
R79595 Coq.Init.Datatypes.nat
R79585 Mem.mem
R79573 Cminorgenproof.env
R79741 Cminor.Out_exit
R79741 Cminor.Out_exit
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R79885 Cminorgenproof.exec_stmt_prop
R79929 Cminorgenproof.Out_return
R79942 Coq.Init.Datatypes.None
R79905 Cminorgenproof.Sreturn
R79915 Coq.Init.Datatypes.None
R79876 Mem.mem
R79864 Cminorgenproof.env
R80037 Cminor.Out_return
R80048 Coq.Init.Datatypes.None
R80037 Cminor.Out_return
R80048 Coq.Init.Datatypes.None
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R80297 Cminorgenproof.exec_stmt_prop
R80346 Cminorgenproof.Out_return
R80360 Coq.Init.Datatypes.Some
R80317 Cminorgenproof.Sreturn
R80328 Coq.Init.Datatypes.Some
R80261 Cminorgenproof.eval_expr_prop
R80276 Coq.Lists.List.nil
R80225 Cminorgenproof.eval_expr
R80240 Coq.Lists.List.nil
R80216 Values.val
R80206 Mem.mem
R80187 Cminorgenproof.expr
R80177 Mem.mem
R80165 Cminorgenproof.env
R80452 Mem.val_nil_inject
R80452 Mem.val_nil_inject
R80594 Cminor.Out_return
R80606 Coq.Init.Datatypes.Some
R80594 Cminor.Out_return
R80606 Coq.Init.Datatypes.Some
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R80759 Cminorgenproof.exec_stmtlist_prop
R80791 Cminorgenproof.Out_normal
R80782 Cminorgenproof.Snil
R80750 Mem.mem
R80738 Cminorgenproof.env
R80892 Cminor.Out_normal
R80892 Cminor.Out_normal
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R81268 Cminorgenproof.exec_stmtlist_prop
R81292 Cminorgenproof.Scons
R81228 Cminorgenproof.exec_stmtlist_prop
R81188 Cminorgenproof.exec_stmtlist
R81145 Cminorgenproof.exec_stmt_prop
R81169 Cminorgenproof.Out_normal
R81102 Cminorgenproof.exec_stmt
R81126 Cminorgenproof.Out_normal
R81087 Cminorgenproof.outcome
R81075 Mem.mem
R81075 Mem.mem
R81054 Cminorgenproof.stmtlist
R81035 Cminorgenproof.stmt
R81025 Mem.mem
R81013 Cminorgenproof.env
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R81677 Cminor.exec_Scons_continue
R81677 Cminor.exec_Scons_continue
R81752 Mem.inject_incr_trans
R81752 Mem.inject_incr_trans
R82018 Cminorgenproof.exec_stmtlist_prop
R82042 Cminorgenproof.Scons
R81996 Coq.Init.Logic "x <> y" type_scope
R81999 Cminorgenproof.Out_normal
R81958 Cminorgenproof.exec_stmt_prop
R81924 Cminorgenproof.exec_stmt
R81909 Cminorgenproof.outcome
R81897 Mem.mem
R81879 Cminorgenproof.stmtlist
R81860 Cminorgenproof.stmt
R81850 Mem.mem
R81838 Cminorgenproof.env
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R82306 Cminor.exec_Scons_stop
R82306 Cminor.exec_Scons_stop
R82491 Cminorgenproof.eval_funcall_prop
R82448 Cminorgenproof.eval_funcall
R82538 Cminorplus.eval_funcall_ind5
R83582 Cminorgenproof.transl_stmtlist_Scons_1_correct
R83545 Cminorgenproof.transl_stmtlist_Scons_2_correct
R83511 Cminorgenproof.transl_stmtlist_Snil_correct
R83473 Cminorgenproof.transl_stmt_Sreturn_some_correct
R83435 Cminorgenproof.transl_stmt_Sreturn_none_correct
R83404 Cminorgenproof.transl_stmt_Sexit_correct
R83372 Cminorgenproof.transl_stmt_Sblock_correct
R83336 Cminorgenproof.transl_stmt_Sloop_exit_correct
R83300 Cminorgenproof.transl_stmt_Sloop_loop_correct
R83257 Cminorgenproof.transl_stmt_Sifthenelse_false_correct
R83215 Cminorgenproof.transl_stmt_Sifthenelse_true_correct
R83184 Cminorgenproof.transl_stmt_Sexpr_correct
R83156 Cminorgenproof.transl_funcall_correct
R83121 Cminorgenproof.transl_exprlist_Econs_correct
R83087 Cminorgenproof.transl_exprlist_Enil_correct
R83054 Cminorgenproof.transl_expr_Eletvar_correct
R83024 Cminorgenproof.transl_expr_Elet_correct
R82982 Cminorgenproof.transl_expr_Econdition_false_correct
R82941 Cminorgenproof.transl_expr_Econdition_true_correct
R82910 Cminorgenproof.transl_expr_Ecall_correct
R82878 Cminorgenproof.transl_expr_Estore_correct
R82847 Cminorgenproof.transl_expr_Eload_correct
R82818 Cminorgenproof.transl_expr_Eop_correct
R82778 Cminorgenproof.transl_expr_Eaddrof_global_correct
R82739 Cminorgenproof.transl_expr_Eaddrof_local_correct
R82706 Cminorgenproof.transl_expr_Eassign_correct
R82676 Cminorgenproof.transl_expr_Evar_correct
R82651 Cminorgenproof.exec_stmtlist_prop
R82631 Cminorgenproof.exec_stmt_prop
R82608 Cminorgenproof.eval_funcall_prop
R82584 Cminorgenproof.eval_exprlist_prop
R82564 Cminorgenproof.eval_expr_prop
R83841 Cminorgenproof.match_globalenvs
R83790 Coqlib.zlt
R83799 Mem.nextblock
R83831 Coq.Init.Datatypes.None
R83815 Coq.Init.Datatypes.Some
R83819 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R83744 Globalenvs.init_mem
R83710 Globalenvs.init_mem
R83944 Coqlib.zlt_true
R83944 Coqlib.zlt_true
R83980 Globalenvs.find_symbol_inv
R83980 Globalenvs.find_symbol_inv
R84031 Cminorgenproof.symbols_preserved
R84031 Cminorgenproof.symbols_preserved
R84078 Coqlib.zlt_true
R84078 Coqlib.zlt_true
R84108 Mem.nextblock_pos
R84108 Mem.nextblock_pos
R84219 Cminor.exec_program
R84239 Values.Vint
R84185 Cminorgenproof.exec_program
R84206 Values.Vint
R84315 Cminorgenproof.function_ptr_translated
R84315 Cminorgenproof.function_ptr_translated
R84387 Globalenvs.init_mem
R84387 Globalenvs.init_mem
R84437 Coqlib.zlt
R84447 Mem.nextblock
R84479 Coq.Init.Datatypes.None
R84463 Coq.Init.Datatypes.Some
R84467 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R84437 Coqlib.zlt
R84447 Mem.nextblock
R84479 Coq.Init.Datatypes.None
R84463 Coq.Init.Datatypes.Some
R84467 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R84503 Mem.mem_inject
R84503 Mem.mem_inject
R84569 Coqlib.zlt_false
R84569 Coqlib.zlt_false
R84600 Coqlib.zlt
R84608 Mem.nextblock
R84600 Coqlib.zlt
R84608 Mem.nextblock
R84788 Globalenvs.initmem_undef
R84788 Globalenvs.initmem_undef
R84898 Coqlib.zlt
R84906 Mem.nextblock
R84898 Coqlib.zlt
R84906 Mem.nextblock
R84954 Coqlib.zlt
R84962 Mem.nextblock
R84954 Coqlib.zlt
R84962 Mem.nextblock
R85037 Cminorgenproof.match_callstack
R85078 Mem.nextblock
R85063 Mem.nextblock
R85055 Coq.Lists.List.nil
R85037 Cminorgenproof.match_callstack
R85078 Mem.nextblock
R85063 Mem.nextblock
R85055 Coq.Lists.List.nil
R85127 Cminorgenproof.match_globalenvs_init
R85127 Cminorgenproof.match_globalenvs_init
R85181 Cminorgenproof.transl_function_correct
R85284 Mem.val_nil_inject
R85181 Cminorgenproof.transl_function_correct
R85284 Mem.val_nil_inject
R85449 AST.prog_main
R85471 AST.prog_main
R85449 AST.prog_main
R85471 AST.prog_main
R85504 Cminorgenproof.symbols_preserved
R85504 Cminorgenproof.symbols_preserved
R85567 Cminorgen.transl_function
R85531 AST.transform_partial_program_main
R85567 Cminorgen.transl_function
R85531 AST.transform_partial_program_main
R85648 Cminorgenproof.sig_transl_function
R85648 Cminorgenproof.sig_transl_function
R85686 Globalenvs.init_mem_transf_partial
R85715 Cminorgen.transl_function
R85686 Globalenvs.init_mem_transf_partial
R85715 Cminorgen.transl_function
FCminorgenproof
R410 Cminorgenproof.program
R437 Cminor.program
R485 Coq.Init.Logic "x = y" type_scope
R465 Cminorgen.transl_program
R487 Coq.Init.Datatypes.Some
R508 Cminorgenproof.genv
R518 Globalenvs.globalenv
R548 Cminor.genv
R556 Globalenvs.globalenv
R648 Coq.Init.Logic "x = y" type_scope
R625 Globalenvs.find_symbol
R650 Globalenvs.find_symbol
R617 AST.ident
R751 Cminorgen.transl_function
R714 Globalenvs.find_symbol_transf_partial
R751 Cminorgen.transl_function
R714 Globalenvs.find_symbol_transf_partial
R899 Coq.Init.Logic "'exists' x , p" type_scope
R948 Coq.Init.Logic "A /\ B" type_scope
R938 Coq.Init.Logic "x = y" type_scope
R912 Globalenvs.find_funct_ptr
R940 Coq.Init.Datatypes.Some
R969 Coq.Init.Logic "x = y" type_scope
R951 Cminorgen.transl_function
R971 Coq.Init.Datatypes.Some
R885 Coq.Init.Logic "x = y" type_scope
R860 Globalenvs.find_funct_ptr
R887 Coq.Init.Datatypes.Some
R845 Cminorgenproof.function
R834 Values.block
R1016 Globalenvs.find_funct_ptr_transf_partial
R1051 Cminorgen.transl_function
R1016 Globalenvs.find_funct_ptr_transf_partial
R1051 Cminorgen.transl_function
R1086 Cminorgen.transl_function
R1086 Cminorgen.transl_function
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R1286 Coq.Init.Logic "'exists' x , p" type_scope
R1331 Coq.Init.Logic "A /\ B" type_scope
R1321 Coq.Init.Logic "x = y" type_scope
R1299 Globalenvs.find_funct
R1323 Coq.Init.Datatypes.Some
R1352 Coq.Init.Logic "x = y" type_scope
R1334 Cminorgen.transl_function
R1354 Coq.Init.Datatypes.Some
R1272 Coq.Init.Logic "x = y" type_scope
R1251 Globalenvs.find_funct
R1274 Coq.Init.Datatypes.Some
R1236 Cminorgenproof.function
R1227 Values.val
R1399 Globalenvs.find_funct_transf_partial
R1430 Cminorgen.transl_function
R1399 Globalenvs.find_funct_transf_partial
R1430 Cminorgen.transl_function
R1465 Cminorgen.transl_function
R1465 Cminorgen.transl_function
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R1657 Mem.meminj
R1800 Coq.Init.Logic "A /\ B" type_scope
R1786 Coq.Init.Logic "x = y" type_scope
R1788 Coq.Init.Datatypes.Some
R1793 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R1827 Coq.Init.Logic "x = y" type_scope
R1803 Globalenvs.find_symbol
R1829 Coq.Init.Datatypes.Some
R1764 Coq.Init.Logic "x = y" type_scope
R1741 Globalenvs.find_symbol
R1766 Coq.Init.Datatypes.Some
R1884 Coq.Init.Logic "x = y" type_scope
R1886 Coq.Init.Datatypes.Some
R1890 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R1873 Coq.ZArith.BinInt "x < y" Z_scope
R1927 Mem.meminj
R1940 AST.ident
R1971 Cminorgenproof.env
R1982 Mem.mem
R1992 Cminor.env
R2002 Values.block
R2032 Cminorgen.var_info
R2304 Cminorgen.Var_local
R2251 Mem.val_inject
R2232 Coq.Init.Logic "x = y" type_scope
R2216 Maps.get
R2234 Coq.Init.Datatypes.Some
R2200 Coq.Init.Logic "x = y" type_scope
R2202 Coq.Init.Datatypes.None
R2178 Coq.Init.Logic "x = y" type_scope
R2157 Mem.load
R2180 Coq.Init.Datatypes.Some
R2121 Coq.Init.Logic "x = y" type_scope
R2106 Maps.get
R2123 Coq.Init.Datatypes.Some
R2128 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2132 Cminorplus.LVscalar
R2523 Cminorgen.Var_stack_scalar
R2432 Mem.val_inject
R2464 Values.Vptr
R2473 Integers.repr
R2446 Values.Vptr
R2453 Integers.zero
R2396 Coq.Init.Logic "x = y" type_scope
R2381 Maps.get
R2398 Coq.Init.Datatypes.Some
R2403 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2407 Cminorplus.LVscalar
R2745 Cminorgen.Var_stack_array
R2654 Mem.val_inject
R2686 Values.Vptr
R2695 Integers.repr
R2668 Values.Vptr
R2675 Integers.zero
R2622 Coq.Init.Logic "x = y" type_scope
R2607 Maps.get
R2624 Coq.Init.Datatypes.Some
R2629 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2633 Cminorplus.LVarray
R2851 Cminorgen.Var_global
R2809 Coq.Init.Logic "x = y" type_scope
R2794 Maps.get
R2811 Coq.Init.Datatypes.None
R2886 Mem.meminj
R2901 Cminorgen.compilenv
R2933 Cminorgenproof.env
R2944 Mem.mem
R2954 Cminor.env
R2964 Values.block
R2996 Coq.ZArith.BinInt.Z
R3056 Cminorgenproof.match_var
R3082 Maps.get
R3127 Coq.ZArith.BinInt "x <= y" Z_scope
R3207 Coq.ZArith.BinInt "x <= y < z" Z_scope
R3187 Coq.Init.Logic "x = y" type_scope
R3172 Maps.get
R3189 Coq.Init.Datatypes.Some
R3193 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3371 Coq.Init.Logic "x <> y" type_scope
R3358 Coq.Init.Logic "x <> y" type_scope
R3329 Coq.Init.Logic "x = y" type_scope
R3313 Maps.get
R3331 Coq.Init.Datatypes.Some
R3335 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3288 Coq.Init.Logic "x = y" type_scope
R3272 Maps.get
R3290 Coq.Init.Datatypes.Some
R3294 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3446 Coq.ZArith.BinInt "x <= y < z" Z_scope
R3422 Coq.Init.Logic "x = y" type_scope
R3424 Coq.Init.Datatypes.Some
R3428 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3539 Coq.ZArith.BinInt "x < y" Z_scope
R3528 Coq.ZArith.BinInt "x < y" Z_scope
R3505 Coq.Init.Logic "x = y" type_scope
R3507 Coq.Init.Datatypes.Some
R3511 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3597 Cminorgen.compilenv
R3618 Cminorgenproof.env
R3636 Cminor.env
R3652 Values.block
R3671 Coq.ZArith.BinInt.Z
R3687 Coq.ZArith.BinInt.Z
R3725 Coq.Lists.List.list
R3730 Cminorgenproof.frame
R3798 Mem.mem
R3793 Coq.ZArith.BinInt.Z
R3788 Coq.ZArith.BinInt.Z
R3775 Cminorgenproof.callstack
R3765 Mem.meminj
R3909 Coq.Lists.List.nil
R3863 Cminorgenproof.match_globalenvs
R4169 Coq.Lists.List "x :: y" list_scope
R4142 Cminorgenproof.mkframe
R4043 Cminorgenproof.match_env
R4025 Coq.ZArith.BinInt "x < y" Z_scope
R4004 Coq.ZArith.BinInt "x <= y" Z_scope
R4403 Cminorgenproof.match_env
R4364 Cminorgenproof.match_env
R4349 Coq.Init.Logic "x = y" type_scope
R4326 Mem.store
R4351 Coq.Init.Datatypes.Some
R4313 Coq.Init.Logic "x <> y" type_scope
R4316 Coq.Init.Datatypes.None
R4606 Mem.load_store_other
R4606 Mem.load_store_other
R4845 Cminorgenproof.match_callstack
R4830 Coq.Init.Logic "x = y" type_scope
R4807 Mem.store
R4832 Coq.Init.Datatypes.Some
R4794 Coq.Init.Logic "x <> y" type_scope
R4797 Coq.Init.Datatypes.None
R4721 Cminorgenproof.match_callstack
R4943 Cminorgenproof.match_env_store_mapped
R4943 Cminorgenproof.match_env_store_mapped
R5084 Coq.Init.Logic "'exists' x , p" type_scope
R5097 Coq.Init.Logic "x = y" type_scope
R5099 Values.load_result
R5067 Values.val
R5049 AST.memory_chunk
R5218 Coq.Init.Logic "x = y" type_scope
R5170 Values.load_result
R5193 Values.load_result
R5222 Values.load_result
R5307 Integers.cast8_signed_idem
R5307 Integers.cast8_signed_idem
R5346 Integers.cast8_unsigned_idem
R5346 Integers.cast8_unsigned_idem
R5387 Integers.cast16_signed_idem
R5387 Integers.cast16_signed_idem
R5427 Integers.cast16_unsigned_idem
R5427 Integers.cast16_unsigned_idem
R5469 Floats.singleoffloat_idem
R5469 Floats.singleoffloat_idem
R5607 Coq.Init.Logic "x = y" type_scope
R5583 Values.load_result
R5557 Cminorgenproof.val_normalized
R5663 Cminorgenproof.load_result_idem
R5663 Cminorgenproof.load_result_idem
R5935 Cminorgenproof.match_env
R5958 Maps.set
R5896 Cminorgenproof.match_env
R5881 Coq.Init.Logic "x = y" type_scope
R5860 Mem.store
R5883 Coq.Init.Datatypes.Some
R5831 Cminorgenproof.val_normalized
R5808 Mem.val_inject
R5777 Coq.Init.Logic "x = y" type_scope
R5773 Maps "a ! b"
R5779 Coq.Init.Datatypes.Some
R5783 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5787 Cminorplus.LVscalar
R6124 Coqlib.peq
R6124 Coqlib.peq
R6223 Cminorplus.local_variable
R6201 Cminorgenproof.local_variable
R6223 Cminorplus.local_variable
R6201 Cminorgenproof.local_variable
R6353 Mem.load_store_same
R6353 Mem.load_store_same
R6396 Maps.gss
R6396 Maps.gss
R6441 Values.load_result
R6441 Values.load_result
R6478 Mem.load_result_inject
R6478 Mem.load_result_inject
R6532 Cminorgenproof.load_result_normalized
R6532 Cminorgenproof.load_result_normalized
R6648 Mem.load_store_other
R6648 Mem.load_store_other
R6686 Maps.gso
R6686 Maps.gso
R7012 Cminorgenproof.match_env
R6973 Cminorgenproof.match_env
R6963 Coq.ZArith.BinInt "x <= y" Z_scope
R6945 Coq.Init.Logic "x = y" type_scope
R6924 Mem.store
R6947 Coq.Init.Datatypes.Some
R7201 Mem.load_store_other
R7201 Mem.load_store_other
R7486 Cminorgenproof.match_callstack
R7476 Coq.ZArith.BinInt "x <= y" Z_scope
R7455 Coq.Init.Logic "x = y" type_scope
R7434 Mem.store
R7457 Coq.Init.Datatypes.Some
R7369 Cminorgenproof.match_callstack
R7584 Cminorgenproof.match_env_store_above
R7584 Cminorgenproof.match_env_store_above
R8004 Cminorgenproof.match_callstack
R8068 Coq.Lists.List "x :: y" list_scope
R8023 Cminorgenproof.mkframe
R8039 Maps.set
R7930 Cminorgenproof.match_callstack
R7976 Coq.Lists.List "x :: y" list_scope
R7949 Cminorgenproof.mkframe
R7915 Coq.Init.Logic "x = y" type_scope
R7894 Mem.store
R7917 Coq.Init.Datatypes.Some
R7865 Cminorgenproof.val_normalized
R7842 Mem.val_inject
R7811 Coq.Init.Logic "x = y" type_scope
R7807 Maps "a ! b"
R7813 Coq.Init.Datatypes.Some
R7817 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7821 Cminorplus.LVscalar
R8151 Cminorgenproof.match_env_store_local
R8151 Cminorgenproof.match_env_store_local
R8190 Cminorgenproof.match_callstack_store_above
R8190 Cminorgenproof.match_callstack_store_above
R8445 Cminorgenproof.match_env
R8430 Coq.Init.Logic "x = y" type_scope
R8426 Maps "a ! b"
R8435 Maps "a ! b"
R8358 Cminorgenproof.match_env
R8972 Cminorgenproof.match_callstack
R9018 Coq.Lists.List "x :: y" list_scope
R8991 Cminorgenproof.mkframe
R8898 Cminorgenproof.match_callstack
R8944 Coq.Lists.List "x :: y" list_scope
R8917 Cminorgenproof.mkframe
R8883 Coq.Init.Logic "x = y" type_scope
R8879 Maps "a ! b"
R8885 Coq.Init.Datatypes.Some
R8862 Coq.Init.Logic "x = y" type_scope
R8841 Mem.store
R8864 Coq.Init.Datatypes.Some
R8812 Cminorgenproof.val_normalized
R8789 Mem.val_inject
R8758 Coq.Init.Logic "x = y" type_scope
R8754 Maps "a ! b"
R8760 Coq.Init.Datatypes.Some
R8764 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8768 Cminorplus.LVscalar
R9128 Maps.set
R9100 Cminorgenproof.match_env_extensional
R9128 Maps.set
R9100 Cminorgenproof.match_env_extensional
R9158 Cminorgenproof.match_env_store_local
R9158 Cminorgenproof.match_env_store_local
R9206 Maps.gsspec
R9206 Maps.gsspec
R9229 Coqlib.peq
R9229 Coqlib.peq
R9277 Cminorgenproof.match_callstack_store_above
R9277 Cminorgenproof.match_callstack_store_above
R9554 Cminorgenproof.match_callstack
R9538 Coq.ZArith.BinInt "x <= y" Z_scope
R9518 Coq.ZArith.BinInt "x <= y" Z_scope
R9446 Cminorgenproof.match_callstack
R9788 Coq.Init.Logic "x = y" type_scope
R9753 Mem.load
R9765 Mem.free_list
R9790 Mem.load
R9741 Coq.Init.Logic "x <> y" type_scope
R9725 Coq.Lists.List.In
R9867 Mem.load_free
R9867 Mem.load_free
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R9926 Coq.Init.Logic.sym_not_equal
R9926 Coq.Init.Logic.sym_not_equal
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R10103 Cminorgenproof.match_env
R10123 Mem.free_list
R10092 Coq.ZArith.BinInt "x <= y" Z_scope
R10077 Coq.Lists.List.In
R10028 Cminorgenproof.match_env
R10308 Cminorgenproof.load_freelist
R10308 Cminorgenproof.load_freelist
R10593 Cminorgenproof.match_callstack
R10628 Mem.free_list
R10582 Coq.ZArith.BinInt "x <= y" Z_scope
R10564 Coq.Lists.List.In
R10498 Cminorgenproof.match_callstack
R10704 Cminorgenproof.match_env_freelist
R10704 Cminorgenproof.match_env_freelist
R11056 Cminorgenproof.match_callstack
R11091 Mem.free_list
R10983 Cminorgenproof.match_callstack
R11029 Coq.Lists.List "x :: y" list_scope
R11002 Cminorgenproof.mkframe
R10972 Coq.ZArith.BinInt "x <= y" Z_scope
R10957 Coq.Lists.List.In
R11163 Cminorgenproof.match_callstack_incr_bound
R11163 Cminorgenproof.match_callstack_incr_bound
R11210 Cminorgenproof.match_callstack_freelist_rec
R11210 Cminorgenproof.match_callstack_freelist_rec
R11404 Coq.Init.Logic "x = y" type_scope
R11386 Mem.load
R11406 Coq.Init.Datatypes.Some
R11411 Values.Vundef
R11371 Coq.Init.Logic "x = y" type_scope
R11341 Mem.alloc
R11353 Mem.size_chunk
R11373 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R11447 Mem.valid_block
R11447 Mem.valid_block
R11473 Mem.valid_new_block
R11473 Mem.valid_new_block
R11522 Coq.ZArith.BinInt "x <= y" Z_scope
R11507 Mem.low_bound
R11522 Coq.ZArith.BinInt "x <= y" Z_scope
R11507 Mem.low_bound
R11546 Mem.low_bound_alloc
R11546 Mem.low_bound_alloc
R11586 Coqlib.zeq_true
R11586 Coqlib.zeq_true
R11634 Coq.ZArith.BinInt "x <= y" Z_scope
R11615 Coq.ZArith.BinInt "x + y" Z_scope
R11617 Mem.size_chunk
R11637 Mem.high_bound
R11634 Coq.ZArith.BinInt "x <= y" Z_scope
R11615 Coq.ZArith.BinInt "x + y" Z_scope
R11617 Mem.size_chunk
R11637 Mem.high_bound
R11671 Mem.high_bound_alloc
R11671 Mem.high_bound_alloc
R11712 Coqlib.zeq_true
R11712 Coqlib.zeq_true
R11737 Mem.load_in_bounds
R11737 Mem.load_in_bounds
R11798 Coq.Init.Logic "x = y" type_scope
R11800 Values.Vundef
R11798 Coq.Init.Logic "x = y" type_scope
R11800 Values.Vundef
R11816 Mem.load_alloc_same
R11816 Mem.load_alloc_same
R12476 Cminorgenproof.match_env
R12514 Mem.nextblock
R12453 Mem.inject_incr
R12424 Maps.set
R12437 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12386 Maps.set
R12344 Mem.extend_inject
R12319 Coq.Init.Logic "x = y" type_scope
R12315 Maps "a ! b"
R12321 Coq.Init.Datatypes.Some
R12259 Cminorgenproof.match_env
R12297 Mem.nextblock
R12008 Cminorgen.Var_local
R12039 Coq.Init.Logic "A /\ B" type_scope
R12032 Coq.Init.Logic "x = y" type_scope
R12034 Coq.Init.Datatypes.None
R12045 Coq.Init.Logic "x = y" type_scope
R12047 Cminorplus.LVscalar
R12068 Cminorgen.Var_stack_scalar
R12119 Coq.Init.Logic "A /\ B" type_scope
R12103 Coq.Init.Logic "x = y" type_scope
R12105 Coq.Init.Datatypes.Some
R12109 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12125 Coq.Init.Logic "x = y" type_scope
R12127 Cminorplus.LVscalar
R12148 Cminorgen.Var_stack_array
R12192 Coq.Init.Logic "A /\ B" type_scope
R12176 Coq.Init.Logic "x = y" type_scope
R12178 Coq.Init.Datatypes.Some
R12182 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12195 Coq.Init.Logic "'exists' x , p" type_scope
R12209 Coq.Init.Logic "x = y" type_scope
R12211 Cminorplus.LVarray
R12228 Cminorgen.Var_global
R12242 Coq.Init.Logic.False
R11971 Coq.Init.Logic "x = y" type_scope
R11948 Mem.alloc
R11960 Cminorplus.sizeof
R11973 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12556 Coq.Init.Logic "x = y" type_scope
R12562 Mem.nextblock
R12556 Coq.Init.Logic "x = y" type_scope
R12562 Mem.nextblock
R12631 Coq.Init.Logic "x = y" type_scope
R12620 Mem.nextblock
R12633 Coq.ZArith.BinInt.Zsucc
R12643 Mem.nextblock
R12631 Coq.Init.Logic "x = y" type_scope
R12620 Mem.nextblock
R12633 Coq.ZArith.BinInt.Zsucc
R12643 Mem.nextblock
R12786 Maps.gsspec
R12786 Maps.gsspec
R12805 Coqlib.peq
R12805 Coqlib.peq
R12967 Values.Vundef
R12944 Cminorgenproof.match_var_local
R12967 Values.Vundef
R12944 Cminorgenproof.match_var_local
R13003 Maps.gss
R13003 Maps.gss
R13039 Cminorgenproof.load_from_alloc_is_undef
R13039 Cminorgenproof.load_from_alloc_is_undef
R13173 Coqlib.zeq_true
R13173 Coqlib.zeq_true
R13301 Cminorgenproof.match_var_stack_scalar
R13301 Cminorgenproof.match_var_stack_scalar
R13358 Maps.gss
R13358 Maps.gss
R13394 Mem.val_inject_ptr
R13394 Mem.val_inject_ptr
R13461 Coqlib.zeq_true
R13461 Coqlib.zeq_true
R13492 Integers.add_commut
R13492 Integers.add_commut
R13516 Integers.add_zero
R13516 Integers.add_zero
R13617 Cminorgenproof.match_var_stack_array
R13617 Cminorgenproof.match_var_stack_array
R13675 Maps.gss
R13675 Maps.gss
R13711 Mem.val_inject_ptr
R13711 Mem.val_inject_ptr
R13778 Coqlib.zeq_true
R13778 Coqlib.zeq_true
R13809 Integers.add_commut
R13809 Integers.add_commut
R13833 Integers.add_zero
R13833 Integers.add_zero
R14026 Maps.gso
R14026 Maps.gso
R14092 Coqlib.zeq_false
R14092 Coqlib.zeq_false
R14197 Maps.gso
R14197 Maps.gso
R14239 Maps.gso
R14239 Maps.gso
R14281 Maps.gso
R14281 Maps.gso
R14403 Maps.gsspec
R14403 Maps.gsspec
R14426 Coqlib.peq
R14426 Coqlib.peq
R14628 Maps.gsspec
R14628 Maps.gsspec
R14628 Maps.gsspec
R14628 Maps.gsspec
R14650 Coqlib.peq
R14669 Coqlib.peq
R14650 Coqlib.peq
R14669 Coqlib.peq
R14669 Coqlib.peq
R14991 Coqlib.zeq
R14991 Coqlib.zeq
R15186 Coqlib.zeq
R15186 Coqlib.zeq
R15591 Cminorgenproof.match_env
R15568 Mem.inject_incr
R15539 Mem.extend_inject
R15489 Cminorgenproof.match_env
R15466 Coq.ZArith.BinInt "x <= y" Z_scope
R15473 Mem.nextblock
R15410 Coq.Init.Datatypes.None
R15418 Coq.Init.Logic.True
R15425 Coq.Init.Datatypes.Some
R15430 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15449 Coq.ZArith.BinInt "x < y" Z_scope
R15379 Coq.Init.Logic "x = y" type_scope
R15353 Mem.alloc
R15365 Cminorplus.sizeof
R15381 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15657 Coq.Init.Logic "x = y" type_scope
R15663 Mem.nextblock
R15657 Coq.Init.Logic "x = y" type_scope
R15663 Mem.nextblock
R15896 Coqlib.zeq_false
R15896 Coqlib.zeq_false
R16061 Coqlib.zeq
R16061 Coqlib.zeq
R16209 Coqlib.zeq
R16209 Coqlib.zeq
R16611 Cminorgenproof.match_callstack
R16588 Mem.inject_incr
R16559 Mem.extend_inject
R16526 Coq.ZArith.BinInt "x <= y" Z_scope
R16533 Mem.nextblock
R16462 Coq.Init.Datatypes.None
R16470 Coq.Init.Logic.True
R16477 Coq.Init.Datatypes.Some
R16482 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16505 Coq.ZArith.BinInt "x <= y" Z_scope
R16431 Coq.Init.Logic "x = y" type_scope
R16408 Mem.alloc
R16420 Cminorplus.sizeof
R16433 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16342 Cminorgenproof.match_callstack
R16944 Cminorgenproof.match_env_alloc_other
R16944 Cminorgenproof.match_env_alloc_other
R17820 Cminorgenproof.match_callstack
R17892 Mem.nextblock
R17881 Coq.Lists.List "x :: y" list_scope
R17840 Cminorgenproof.mkframe
R17870 Mem.nextblock
R17797 Mem.inject_incr
R17768 Maps.set
R17781 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17730 Maps.set
R17688 Mem.extend_inject
R17663 Coq.Init.Logic "x = y" type_scope
R17659 Maps "a ! b"
R17665 Coq.Init.Datatypes.Some
R17559 Cminorgenproof.match_callstack
R17631 Mem.nextblock
R17620 Coq.Lists.List "x :: y" list_scope
R17579 Cminorgenproof.mkframe
R17609 Mem.nextblock
R17308 Cminorgen.Var_local
R17339 Coq.Init.Logic "A /\ B" type_scope
R17332 Coq.Init.Logic "x = y" type_scope
R17334 Coq.Init.Datatypes.None
R17345 Coq.Init.Logic "x = y" type_scope
R17347 Cminorplus.LVscalar
R17368 Cminorgen.Var_stack_scalar
R17419 Coq.Init.Logic "A /\ B" type_scope
R17403 Coq.Init.Logic "x = y" type_scope
R17405 Coq.Init.Datatypes.Some
R17409 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17425 Coq.Init.Logic "x = y" type_scope
R17427 Cminorplus.LVscalar
R17448 Cminorgen.Var_stack_array
R17492 Coq.Init.Logic "A /\ B" type_scope
R17476 Coq.Init.Logic "x = y" type_scope
R17478 Coq.Init.Datatypes.Some
R17482 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17495 Coq.Init.Logic "'exists' x , p" type_scope
R17509 Coq.Init.Logic "x = y" type_scope
R17511 Cminorplus.LVarray
R17528 Cminorgen.Var_global
R17542 Coq.Init.Logic.False
R17271 Coq.Init.Logic "x = y" type_scope
R17248 Mem.alloc
R17260 Cminorplus.sizeof
R17273 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18002 Cminorgenproof.match_env_alloc_same
R18002 Cminorgenproof.match_env_alloc_same
R18051 Cminorgenproof.match_callstack_alloc_other
R18051 Cminorgenproof.match_callstack_alloc_other
R18427 Cminorgenproof.match_callstack
R18459 Mem.nextblock
R18377 Cminorgenproof.match_callstack
R18409 Mem.nextblock
R18361 Coq.Init.Logic "x = y" type_scope
R18345 Mem.alloc
R18363 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18497 Cminorgenproof.match_callstack_incr_bound
R18497 Cminorgenproof.match_callstack_incr_bound
R18710 Cminorgenproof.match_globalenvs
R18669 Cminorgenproof.match_callstack
R18882 Cminorgenproof.match_env
R18870 Coq.ZArith.BinInt "x <= y" Z_scope
R18829 Cminorgenproof.match_env
R19237 Cminorgenproof.match_callstack
R19286 Coq.Lists.List "x :: y" list_scope
R19256 Cminorgenproof.mkframe
R19164 Cminorgenproof.match_callstack
R19210 Coq.Lists.List "x :: y" list_scope
R19183 Cminorgenproof.mkframe
R19375 Cminorgenproof.match_env_incr_hi
R19375 Cminorgenproof.match_env_incr_hi
R19485 Cmconstrproof.eval_negint
R19497 Cmconstrproof.eval_negfloat
R19511 Cmconstrproof.eval_absfloat
R19525 Cmconstrproof.eval_intoffloat
R19543 Cmconstrproof.eval_floatofint
R19559 Cmconstrproof.eval_floatofintu
R19576 Cmconstrproof.eval_notint
R19588 Cmconstrproof.eval_notbool
R19603 Cmconstrproof.eval_cast8signed
R19620 Cmconstrproof.eval_cast8unsigned
R19639 Cmconstrproof.eval_cast16signed
R19659 Cmconstrproof.eval_cast16unsigned
R19679 Cmconstrproof.eval_singleoffloat
R19698 Cmconstrproof.eval_add
R19707 Cmconstrproof.eval_add_ptr
R19722 Cmconstrproof.eval_add_ptr_2
R19737 Cmconstrproof.eval_sub
R19746 Cmconstrproof.eval_sub_ptr_int
R19763 Cmconstrproof.eval_sub_ptr_ptr
R19782 Cmconstrproof.eval_mul
R19791 Cmconstrproof.eval_divs
R19801 Cmconstrproof.eval_mods
R19811 Cmconstrproof.eval_divu
R19821 Cmconstrproof.eval_modu
R19833 Cmconstrproof.eval_and
R19842 Cmconstrproof.eval_or
R19850 Cmconstrproof.eval_xor
R19859 Cmconstrproof.eval_shl
R19868 Cmconstrproof.eval_shr
R19877 Cmconstrproof.eval_shru
R19890 Cmconstrproof.eval_addf
R19900 Cmconstrproof.eval_subf
R19910 Cmconstrproof.eval_mulf
R19920 Cmconstrproof.eval_divf
R19932 Cmconstrproof.eval_cmp
R19941 Cmconstrproof.eval_cmp_null_r
R19957 Cmconstrproof.eval_cmp_null_l
R19973 Cmconstrproof.eval_cmp_ptr
R19988 Cmconstrproof.eval_cmpu
R19998 Cmconstrproof.eval_cmpf
R20065 Mem.val_inject
R20095 Values.of_bool
R20079 Values.of_bool
R20239 Coq.Init.Logic "'exists' x , p" type_scope
R20251 Coq.Init.Logic "A /\ B" type_scope
R20254 Mem.val_inject
R20268 Values.Vint
R20365 Coq.Init.Logic "'exists' x , p" type_scope
R20377 Coq.Init.Logic "A /\ B" type_scope
R20380 Mem.val_inject
R20394 Values.Vfloat
R20495 Coq.Init.Logic "'exists' x , p" type_scope
R20507 Coq.Init.Logic "A /\ B" type_scope
R20510 Mem.val_inject
R20524 Values.of_bool
R20561 Values.of_bool
R20619 Cminorgenproof.val_inject_val_of_bool
R20426 Values.Vfloat
R20298 Values.Vint
R20766 Coq.Init.Logic "x = y" type_scope
R20730 Integers.sub
R20753 Integers.add
R20739 Integers.add
R20768 Integers.sub
R20806 Integers.sub_add_opp
R20806 Integers.sub_add_opp
R20831 Integers.neg_add_distr
R20831 Integers.neg_add_distr
R20860 Integers.add_assoc
R20860 Integers.add_assoc
R20887 Integers.add_commut
R20915 Integers.neg
R20903 Integers.neg
R20887 Integers.add_commut
R20915 Integers.neg
R20903 Integers.neg
R20942 Integers.add_assoc
R20942 Integers.add_assoc
R20968 Integers.add_neg_zero
R20968 Integers.add_neg_zero
R20997 Integers.add_commut
R21012 Integers.zero
R20997 Integers.add_commut
R21012 Integers.zero
R21031 Integers.add_zero
R21031 Integers.add_zero
R21063 Integers.sub_add_opp
R21063 Integers.sub_add_opp
R21185 Coq.Init.Logic "A /\ B" type_scope
R21174 Coq.Init.Logic "x = y" type_scope
R21176 Integers.zero
R21211 Coq.Init.Logic "A \/ B" type_scope
R21197 Coq.Init.Logic "A /\ B" type_scope
R21191 Coq.Init.Logic "x = y" type_scope
R21193 AST.Ceq
R21202 Coq.Init.Logic "x = y" type_scope
R21204 Values.Vfalse
R21222 Coq.Init.Logic "A /\ B" type_scope
R21216 Coq.Init.Logic "x = y" type_scope
R21218 AST.Cne
R21227 Coq.Init.Logic "x = y" type_scope
R21229 Values.Vtrue
R21158 Coq.Init.Logic "x = y" type_scope
R21134 Cminorgenproof.eval_compare_null
R21160 Coq.Init.Datatypes.Some
R21301 Integers.eq
R21308 Integers.eq_spec
R21322 Integers.zero
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R21681 Coq.Init.Logic "'exists' x , p" type_scope
R21756 Coq.Init.Logic "A /\ B" type_scope
R21697 Cminor.eval_expr
R21712 Values.Vptr
R21720 Integers.zero
R21759 Mem.val_inject
R21656 Mem.mem_inject
R21626 Mem.val_list_inject
R21558 Cminor.eval_exprlist
R21577 Values.Vptr
R21585 Integers.zero
R21544 Coq.Init.Logic "x = y" type_scope
R21518 Cminorgenproof.eval_operation
R21546 Coq.Init.Datatypes.Some
R21504 Coq.Init.Logic "x = y" type_scope
R21490 Cminorgen.make_op
R21506 Coq.Init.Datatypes.Some
R23078 Values.Vptr
R23087 Integers.add
R23078 Values.Vptr
R23087 Integers.add
R23141 Mem.val_inject_ptr
R23141 Mem.val_inject_ptr
R23199 Integers.add_assoc
R23199 Integers.add_assoc
R23199 Integers.add_assoc
R23199 Integers.add_assoc
R23227 Integers.add_commut
R23227 Integers.add_commut
R23273 Values.Vptr
R23282 Integers.add
R23273 Values.Vptr
R23282 Integers.add
R23337 Mem.val_inject_ptr
R23337 Mem.val_inject_ptr
R23395 Integers.add_assoc
R23395 Integers.add_assoc
R23395 Integers.add_assoc
R23395 Integers.add_assoc
R23423 Integers.add_commut
R23423 Integers.add_commut
R23469 Values.Vptr
R23478 Integers.sub
R23469 Values.Vptr
R23478 Integers.sub
R23533 Mem.val_inject_ptr
R23533 Mem.val_inject_ptr
R23582 Integers.sub_add_l
R23582 Integers.sub_add_l
R23630 Values.eq_block
R23630 Values.eq_block
R23701 Coq.Init.Logic "x = y" type_scope
R23701 Coq.Init.Logic "x = y" type_scope
R23740 Values.Vint
R23746 Integers.sub
R23740 Values.Vint
R23746 Integers.sub
R23841 Cminorgenproof.int_sub_shifted
R23841 Cminorgenproof.int_sub_shifted
R23912 Integers.eq_spec
R23927 Integers.zero
R23948 Integers.eq
R23958 Integers.zero
R23912 Integers.eq_spec
R23927 Integers.zero
R23948 Integers.eq
R23958 Integers.zero
R24048 Integers.eq_spec
R24063 Integers.zero
R24084 Integers.eq
R24094 Integers.zero
R24048 Integers.eq_spec
R24063 Integers.zero
R24084 Integers.eq
R24094 Integers.zero
R24184 Integers.eq_spec
R24199 Integers.zero
R24220 Integers.eq
R24230 Integers.zero
R24184 Integers.eq_spec
R24199 Integers.zero
R24220 Integers.eq
R24230 Integers.zero
R24320 Integers.eq_spec
R24335 Integers.zero
R24356 Integers.eq
R24366 Integers.zero
R24320 Integers.eq_spec
R24335 Integers.zero
R24356 Integers.eq
R24366 Integers.zero
R24451 Integers.ltu
R24463 Integers.repr
R24451 Integers.ltu
R24463 Integers.repr
R24573 Integers.ltu
R24585 Integers.repr
R24573 Integers.ltu
R24585 Integers.repr
R24696 Integers.ltu
R24708 Integers.repr
R24696 Integers.ltu
R24708 Integers.repr
R24824 Cminorgenproof.eval_compare_null_inv
R24824 Cminorgenproof.eval_compare_null_inv
R25016 Cminorgenproof.eval_compare_null_inv
R25016 Cminorgenproof.eval_compare_null_inv
R25245 Coq.Bool.Bool "x && y" bool_scope
R25211 Mem.valid_pointer
R25231 Integers.signed
R25248 Mem.valid_pointer
R25269 Integers.signed
R25245 Coq.Bool.Bool "x && y" bool_scope
R25211 Mem.valid_pointer
R25231 Integers.signed
R25248 Mem.valid_pointer
R25269 Integers.signed
R25347 Values.eq_block
R25347 Values.eq_block
R25411 Coq.Init.Logic "x = y" type_scope
R25411 Coq.Init.Logic "x = y" type_scope
R25454 Coq.Init.Logic "x = y" type_scope
R25454 Coq.Init.Logic "x = y" type_scope
R25491 Coq.Bool.Bool.andb_prop
R25491 Coq.Bool.Bool.andb_prop
R25528 Values.of_bool
R25541 Integers.cmp
R25528 Values.of_bool
R25541 Integers.cmp
R25622 Integers.translate_cmp
R25622 Integers.translate_cmp
R25650 Cminorgenproof.val_inject_val_of_bool
R25650 Cminorgenproof.val_inject_val_of_bool
R25684 Mem.valid_pointer_inject_no_overflow
R25684 Mem.valid_pointer_inject_no_overflow
R25734 Mem.valid_pointer_inject_no_overflow
R25734 Mem.valid_pointer_inject_no_overflow
R26342 Coq.Init.Logic "'exists' x , p" type_scope
R26458 Coq.Init.Logic "A /\ B" type_scope
R26356 Cminor.eval_expr
R26413 Cminorgen.make_cast
R26371 Values.Vptr
R26379 Integers.zero
R26483 Coq.Init.Logic "A /\ B" type_scope
R26461 Mem.val_inject
R26486 Cminorgenproof.val_normalized
R26319 Mem.val_inject
R26304 Coq.Init.Logic "x = y" type_scope
R26291 Cminorplus.cast
R26306 Coq.Init.Datatypes.Some
R26229 Cminor.eval_expr
R26244 Values.Vptr
R26252 Integers.zero
R26634 Values.Vint
R26640 Integers.cast8signed
R26634 Values.Vint
R26640 Integers.cast8signed
R26677 Cmconstrproof.eval_cast8signed
R26677 Cmconstrproof.eval_cast8signed
R26732 Values.Vint
R26732 Values.Vint
R26765 Values.Vint
R26771 Integers.cast8unsigned
R26765 Values.Vint
R26771 Integers.cast8unsigned
R26809 Cmconstrproof.eval_cast8unsigned
R26809 Cmconstrproof.eval_cast8unsigned
R26866 Values.Vint
R26866 Values.Vint
R26899 Values.Vint
R26905 Integers.cast16signed
R26899 Values.Vint
R26905 Integers.cast16signed
R26943 Cmconstrproof.eval_cast16signed
R26943 Cmconstrproof.eval_cast16signed
R26999 Values.Vint
R26999 Values.Vint
R27032 Values.Vint
R27038 Integers.cast16unsigned
R27032 Values.Vint
R27038 Integers.cast16unsigned
R27077 Cmconstrproof.eval_cast16unsigned
R27077 Cmconstrproof.eval_cast16unsigned
R27135 Values.Vint
R27135 Values.Vint
R27168 Values.Vint
R27168 Values.Vint
R27213 Values.Vint
R27213 Values.Vint
R27246 Values.Vptr
R27246 Values.Vptr
R27297 Values.Vptr
R27297 Values.Vptr
R27336 Values.Vfloat
R27344 Floats.singleoffloat
R27336 Values.Vfloat
R27344 Floats.singleoffloat
R27385 Cmconstrproof.eval_singleoffloat
R27385 Cmconstrproof.eval_singleoffloat
R27442 Values.Vfloat
R27442 Values.Vfloat
R27478 Values.Vfloat
R27478 Values.Vfloat
R27526 Values.Vfloat
R27526 Values.Vfloat
R27615 Cminor.eval_expr
R27709 Values.Vptr
R27718 Integers.repr
R27670 Cminorgen.make_stackaddr
R27630 Values.Vptr
R27638 Integers.zero
R27783 Cminor.eval_Eop
R27783 Cminor.eval_Eop
R27838 Integers.add_commut
R27838 Integers.add_commut
R27860 Integers.add_zero
R27860 Integers.add_zero
R28051 Cminor.eval_expr
R28108 Cminorgen.make_load
R28066 Values.Vptr
R28074 Integers.zero
R28037 Coq.Init.Logic "x = y" type_scope
R28014 Mem.loadv
R28039 Coq.Init.Datatypes.Some
R27952 Cminor.eval_expr
R27967 Values.Vptr
R27975 Integers.zero
R28194 Cmconstrproof.eval_load
R28194 Cmconstrproof.eval_load
R28333 Mem.val_content_inject
R28355 Mem.mem_chunk
R28308 Mem.val_inject
R28293 Coq.Init.Logic "x = y" type_scope
R28279 Cminorplus.cast
R28295 Coq.Init.Datatypes.Some
R28489 Mem.val_content_inject_8
R28489 Mem.val_content_inject_8
R28517 Integers.cast8_unsigned_signed
R28517 Integers.cast8_unsigned_signed
R28552 Mem.val_content_inject_8
R28552 Mem.val_content_inject_8
R28580 Integers.cast8_unsigned_idem
R28580 Integers.cast8_unsigned_idem
R28613 Mem.val_content_inject_16
R28613 Mem.val_content_inject_16
R28642 Integers.cast16_unsigned_signed
R28642 Integers.cast16_unsigned_signed
R28678 Mem.val_content_inject_16
R28678 Mem.val_content_inject_16
R28707 Integers.cast16_unsigned_idem
R28707 Integers.cast16_unsigned_idem
R28805 Mem.val_content_inject_32
R28805 Mem.val_content_inject_32
R28834 Floats.singleoffloat_idem
R28834 Floats.singleoffloat_idem
R29339 Coq.Init.Logic "'exists' x , p" type_scope
R29351 Coq.Init.Logic "'exists' x , p" type_scope
R29473 Coq.Init.Logic "A /\ B" type_scope
R29364 Cminor.eval_expr
R29421 Cminorgen.make_store
R29379 Values.Vptr
R29387 Integers.zero
R29498 Coq.Init.Logic "A /\ B" type_scope
R29476 Mem.mem_inject
R29521 Coq.Init.Logic "A /\ B" type_scope
R29501 Mem.val_inject
R29538 Coq.Init.Logic "x = y" type_scope
R29524 Mem.nextblock
R29540 Mem.nextblock
R29310 Mem.val_inject
R29279 Mem.val_inject
R29254 Mem.mem_inject
R29239 Coq.Init.Logic "x = y" type_scope
R29211 Mem.storev
R29241 Coq.Init.Datatypes.Some
R29197 Coq.Init.Logic "x = y" type_scope
R29181 Cminorplus.cast
R29199 Coq.Init.Datatypes.Some
R29102 Cminor.eval_expr
R29117 Values.Vptr
R29125 Integers.zero
R29021 Cminor.eval_expr
R29036 Values.Vptr
R29044 Integers.zero
R29601 Mem.val_content_inject
R29623 Mem.mem_chunk
R29601 Mem.val_content_inject
R29623 Mem.mem_chunk
R29661 Cminorgenproof.val_content_inject_cast
R29661 Cminorgenproof.val_content_inject_cast
R29701 Mem.storev_mapped_inject_1
R29701 Mem.storev_mapped_inject_1
R29799 Cmconstrproof.eval_store
R29799 Cmconstrproof.eval_store
R29880 Cminorgenproof.make_cast_correct
R29880 Cminorgenproof.make_cast_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R30093 Mem.store_inv
R30093 Mem.store_inv
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R30434 Coq.Init.Logic "'exists' x , p" type_scope
R30502 Coq.Init.Logic "A /\ B" type_scope
R30449 Cminor.eval_expr
R30464 Values.Vptr
R30472 Integers.zero
R30509 Mem.val_inject
R30420 Coq.Init.Logic "x = y" type_scope
R30403 Mem.load
R30422 Coq.Init.Datatypes.Some
R30372 Coq.Init.Logic "x = y" type_scope
R30368 Maps "a ! b"
R30374 Coq.Init.Datatypes.Some
R30378 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R30382 Cminorplus.LVscalar
R30344 Mem.mem_inject
R30255 Cminorgenproof.match_callstack
R30326 Mem.nextblock
R30311 Mem.nextblock
R30301 Coq.Lists.List "x :: y" list_scope
R30274 Cminorgenproof.mkframe
R30241 Coq.Init.Logic "x = y" type_scope
R30225 Cminorgen.var_get
R30243 Coq.Init.Datatypes.Some
R30571 Cminorgenproof.match_var
R30600 Maps "a !! b"
R30571 Cminorgenproof.match_var
R30600 Maps "a !! b"
R30660 Maps "a !! b"
R30660 Maps "a !! b"
R30814 Cminor.eval_Evar
R30814 Cminor.eval_Evar
R30983 Coq.Init.Logic "x = y" type_scope
R30983 Coq.Init.Logic "x = y" type_scope
R31024 Coq.Init.Logic "x = y" type_scope
R31024 Coq.Init.Logic "x = y" type_scope
R31098 Coq.Init.Logic "x = y" type_scope
R31066 Mem.loadv
R31081 Values.Vptr
R31088 Integers.zero
R31100 Coq.Init.Datatypes.Some
R31098 Coq.Init.Logic "x = y" type_scope
R31066 Mem.loadv
R31081 Values.Vptr
R31088 Integers.zero
R31100 Coq.Init.Datatypes.Some
R31135 Mem.loadv_inject
R31135 Mem.loadv_inject
R31244 Cminorgenproof.make_load_correct
R31244 Cminorgenproof.make_load_correct
R31277 Cminorgenproof.make_stackaddr_correct
R31277 Cminorgenproof.make_stackaddr_correct
R31550 Coq.Init.Logic "'exists' x , p" type_scope
R31618 Coq.Init.Logic "A /\ B" type_scope
R31565 Cminor.eval_expr
R31580 Values.Vptr
R31588 Integers.zero
R31625 Mem.val_inject
R31639 Values.Vptr
R31646 Integers.zero
R31531 Coq.Init.Logic "x = y" type_scope
R31527 Maps "a ! b"
R31533 Coq.Init.Datatypes.Some
R31537 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R31437 Cminorgenproof.match_callstack
R31508 Mem.nextblock
R31493 Mem.nextblock
R31483 Coq.Lists.List "x :: y" list_scope
R31456 Cminorgenproof.mkframe
R31423 Coq.Init.Logic "x = y" type_scope
R31406 Cminorgen.var_addr
R31425 Coq.Init.Datatypes.Some
R31704 Cminorgenproof.match_var
R31733 Maps "a !! b"
R31704 Cminorgenproof.match_var
R31733 Maps "a !! b"
R31793 Maps "a !! b"
R31793 Maps "a !! b"
R31935 Values.Vptr
R31944 Integers.repr
R31935 Values.Vptr
R31944 Integers.repr
R31974 Cminorgenproof.make_stackaddr_correct
R31974 Cminorgenproof.make_stackaddr_correct
R32071 Values.Vptr
R32080 Integers.repr
R32071 Values.Vptr
R32080 Integers.repr
R32110 Cminorgenproof.make_stackaddr_correct
R32110 Cminorgenproof.make_stackaddr_correct
R32468 Coq.Init.Logic "'exists' x , p" type_scope
R32536 Coq.Init.Logic "A /\ B" type_scope
R32483 Cminor.eval_expr
R32498 Values.Vptr
R32506 Integers.zero
R32543 Mem.val_inject
R32557 Values.Vptr
R32564 Integers.zero
R32454 Coq.Init.Logic "x = y" type_scope
R32431 Globalenvs.find_symbol
R32456 Coq.Init.Datatypes.Some
R32419 Coq.Init.Logic "x = y" type_scope
R32415 Maps "a ! b"
R32421 Coq.Init.Datatypes.None
R32325 Cminorgenproof.match_callstack
R32396 Mem.nextblock
R32381 Mem.nextblock
R32371 Coq.Lists.List "x :: y" list_scope
R32344 Cminorgenproof.mkframe
R32311 Coq.Init.Logic "x = y" type_scope
R32294 Cminorgen.var_addr
R32313 Coq.Init.Datatypes.Some
R32622 Cminorgenproof.match_var
R32651 Maps "a !! b"
R32622 Cminorgenproof.match_var
R32651 Maps "a !! b"
R32713 Maps "a !! b"
R32713 Maps "a !! b"
R32814 Cminorgenproof.match_callstack_match_globalenvs
R32814 Cminorgenproof.match_callstack_match_globalenvs
R32933 Values.Vptr
R32940 Integers.zero
R32933 Values.Vptr
R32940 Integers.zero
R32967 Cminor.eval_Eop
R32967 Cminor.eval_Eop
R33513 Coq.Init.Logic "'exists' x , p" type_scope
R33525 Coq.Init.Logic "'exists' x , p" type_scope
R33537 Coq.Init.Logic "'exists' x , p" type_scope
R33609 Coq.Init.Logic "A /\ B" type_scope
R33552 Cminor.eval_expr
R33567 Values.Vptr
R33575 Integers.zero
R33635 Coq.Init.Logic "A /\ B" type_scope
R33616 Mem.val_inject
R33662 Coq.Init.Logic "A /\ B" type_scope
R33642 Mem.mem_inject
R33669 Cminorgenproof.match_callstack
R33743 Mem.nextblock
R33727 Mem.nextblock
R33716 Coq.Lists.List "x :: y" list_scope
R33688 Cminorgenproof.mkframe
R33498 Coq.Init.Logic "x = y" type_scope
R33476 Mem.store
R33500 Coq.Init.Datatypes.Some
R33461 Coq.Init.Logic "x = y" type_scope
R33447 Cminorplus.cast
R33463 Coq.Init.Datatypes.Some
R33416 Coq.Init.Logic "x = y" type_scope
R33412 Maps "a ! b"
R33418 Coq.Init.Datatypes.Some
R33422 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R33426 Cminorplus.LVscalar
R33386 Mem.mem_inject
R33360 Mem.val_inject
R33294 Cminor.eval_expr
R33309 Values.Vptr
R33317 Integers.zero
R33201 Cminorgenproof.match_callstack
R33275 Mem.nextblock
R33259 Mem.nextblock
R33248 Coq.Lists.List "x :: y" list_scope
R33220 Cminorgenproof.mkframe
R33187 Coq.Init.Logic "x = y" type_scope
R33167 Cminorgen.var_set
R33189 Coq.Init.Datatypes.Some
R33825 Coq.Init.Logic "x = y" type_scope
R33812 Mem.nextblock
R33827 Mem.nextblock
R33825 Coq.Init.Logic "x = y" type_scope
R33812 Mem.nextblock
R33827 Mem.nextblock
R33858 Mem.store_inv
R33858 Mem.store_inv
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R34000 Maps "a !! b"
R34000 Maps "a !! b"
R34186 Coq.Init.Logic "x = y" type_scope
R34186 Coq.Init.Logic "x = y" type_scope
R34226 Coq.Init.Logic "x = y" type_scope
R34226 Coq.Init.Logic "x = y" type_scope
R34267 Cminorgenproof.make_cast_correct
R34267 Cminorgenproof.make_cast_correct
R34361 Maps.set
R34361 Maps.set
R34422 Cminor.eval_Eassign
R34422 Cminor.eval_Eassign
R34474 Mem.store_unmapped_inject
R34474 Mem.store_unmapped_inject
R34533 Cminorgenproof.match_callstack_store_local
R34533 Cminorgenproof.match_callstack_store_local
R34691 Coq.Init.Logic "x = y" type_scope
R34691 Coq.Init.Logic "x = y" type_scope
R34731 Coq.Init.Logic "x = y" type_scope
R34731 Coq.Init.Logic "x = y" type_scope
R34811 Coq.Init.Logic "x = y" type_scope
R34774 Mem.storev
R34791 Values.Vptr
R34798 Integers.zero
R34813 Coq.Init.Datatypes.Some
R34811 Coq.Init.Logic "x = y" type_scope
R34774 Mem.storev
R34791 Values.Vptr
R34798 Integers.zero
R34813 Coq.Init.Datatypes.Some
R34849 Cminorgenproof.make_stackaddr_correct
R34849 Cminorgenproof.make_stackaddr_correct
R34927 Cminorgenproof.make_store_correct
R34927 Cminorgenproof.make_store_correct
R35222 Cminorgenproof.match_callstack_mapped
R35222 Cminorgenproof.match_callstack_mapped
R35366 Coq.ZArith.BinInt "x <= y" Z_scope
R35369 Cminorgen.align
R35357 Coq.ZArith.BinInt "x > y" Z_scope
R35513 Coq.ZArith.BinInt "x <= y" Z_scope
R35492 Coq.Init.Logic "x = y" type_scope
R35455 Cminorgen.assign_variables
R35481 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R35494 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R35652 Cminorgen.mem
R35652 Cminorgen.mem
R35729 Mem.size_chunk_pos
R35729 Mem.size_chunk_pos
R35769 Cminorgenproof.align_bounds
R35786 Mem.size_chunk
R35769 Cminorgenproof.align_bounds
R35786 Mem.size_chunk
R35874 Coq.ZArith.BinInt "x > y" Z_scope
R35874 Coq.ZArith.BinInt "x > y" Z_scope
R35899 Cminorgenproof.align_bounds
R35899 Cminorgenproof.align_bounds
R35934 Coq.ZArith.BinInt "x <= y" Z_scope
R35937 Coq.ZArith.Zmin.Zmax
R35934 Coq.ZArith.BinInt "x <= y" Z_scope
R35937 Coq.ZArith.Zmin.Zmax
R35954 Coqlib.Zmax_bound_l
R35954 Coqlib.Zmax_bound_l
R36609 Coq.Init.Logic "'exists' x , p" type_scope
R36644 Coq.Init.Logic "A /\ B" type_scope
R36625 Mem.inject_incr
R36669 Coq.Init.Logic "A /\ B" type_scope
R36647 Mem.mem_inject
R36672 Cminorgenproof.match_callstack
R36783 Mem.nextblock
R36768 Mem.nextblock
R36733 Coq.Lists.List "x :: y" list_scope
R36692 Cminorgenproof.mkframe
R36722 Mem.nextblock
R36595 Coq.Init.Logic "x <> y" type_scope
R36591 Maps "a ! b"
R36598 Coq.Init.Datatypes.None
R36569 Coq.Lists.List.In
R36572 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R36542 Coq.ZArith.BinInt "x <= y" Z_scope
R36534 Coq.ZArith.BinInt "x + y" Z_scope
R36519 Mem.high_bound
R36498 Coq.Init.Logic "x = y" type_scope
R36500 Coq.Init.Datatypes.Some
R36504 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R36466 Coq.ZArith.BinInt "x <= y" Z_scope
R36441 Mem.mem_inject
R36321 Cminorgenproof.match_callstack
R36423 Mem.nextblock
R36408 Mem.nextblock
R36378 Coq.Lists.List "x :: y" list_scope
R36340 Cminorgenproof.mkframe
R36367 Mem.nextblock
R36301 Coq.Init.Logic "x = y" type_scope
R36264 Cminorgen.assign_variables
R36290 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R36303 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R36205 Cminorplus.alloc_variables
R36154 Coq.ZArith.BinInt "x <= y" Z_scope
R36157 Integers.max_signed
R36139 Coq.Init.Logic "x = y" type_scope
R36122 Mem.high_bound
R36113 Coq.Init.Logic "x = y" type_scope
R36097 Mem.low_bound
R36074 Mem.valid_block
R36955 Mem.inject_incr_refl
R36955 Mem.inject_incr_refl
R37104 Cminorgen.assign_variables
R37131 Cminorgen.assign_variable
R37160 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37151 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37044 Cminorgen.assign_variables
R37084 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37075 Coq.Lists.List "x :: y" list_scope
R37066 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37104 Cminorgen.assign_variables
R37131 Cminorgen.assign_variable
R37160 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37151 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37044 Cminorgen.assign_variables
R37084 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37075 Coq.Lists.List "x :: y" list_scope
R37066 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37184 Cminorgen.assign_variable
R37213 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37204 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37184 Cminorgen.assign_variable
R37213 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37204 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37352 Coq.Init.Logic "x <> y" type_scope
R37347 Maps "a ! b"
R37355 Coq.Init.Datatypes.None
R37323 Coq.Lists.List.In
R37326 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37352 Coq.Init.Logic "x <> y" type_scope
R37347 Maps "a ! b"
R37355 Coq.Init.Datatypes.None
R37323 Coq.Lists.List.In
R37326 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37421 Coq.Init.Logic "'exists' x , p" type_scope
R37438 Coq.Init.Logic "x = y" type_scope
R37434 Maps "a ! b"
R37440 Coq.Init.Datatypes.Some
R37421 Coq.Init.Logic "'exists' x , p" type_scope
R37438 Coq.Init.Logic "x = y" type_scope
R37434 Maps "a ! b"
R37440 Coq.Init.Datatypes.Some
R37468 Coq.Init.Logic "x <> y" type_scope
R37464 Maps "a ! b"
R37471 Coq.Init.Datatypes.None
R37468 Coq.Init.Logic "x <> y" type_scope
R37464 Maps "a ! b"
R37471 Coq.Init.Datatypes.None
R37529 Maps "a ! b"
R37529 Maps "a ! b"
R37712 Cminorgen.mem
R37712 Cminorgen.mem
R37796 Cminorgen.align
R37806 Mem.size_chunk
R37796 Cminorgen.align
R37806 Mem.size_chunk
R37887 Mem.extend_inject
R37905 Coq.Init.Datatypes.Some
R37910 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37887 Mem.extend_inject
R37905 Coq.Init.Datatypes.Some
R37910 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37941 Mem.size_chunk_pos
R37941 Mem.size_chunk_pos
R37995 Cminorgenproof.align_bounds
R38012 Mem.size_chunk
R37995 Cminorgenproof.align_bounds
R38012 Mem.size_chunk
R38095 Coq.Init.Logic "A /\ B" type_scope
R38075 Mem.mem_inject
R38098 Mem.inject_incr
R38095 Coq.Init.Logic "A /\ B" type_scope
R38075 Mem.mem_inject
R38098 Mem.inject_incr
R38146 Coq.ZArith.BinInt "x < y" Z_scope
R38131 Integers.min_signed
R38146 Coq.ZArith.BinInt "x < y" Z_scope
R38131 Integers.min_signed
R38185 Cminorgenproof.assign_variables_incr
R38185 Cminorgenproof.assign_variables_incr
R38257 Mem.alloc_mapped_inject
R38257 Mem.alloc_mapped_inject
R38472 Cminorgenproof.match_callstack
R38605 Mem.nextblock
R38590 Mem.nextblock
R38569 Coq.Lists.List "x :: y" list_scope
R38505 Cminorgenproof.mkframe
R38555 Mem.nextblock
R38520 Maps.set
R38533 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R38472 Cminorgenproof.match_callstack
R38605 Mem.nextblock
R38590 Mem.nextblock
R38569 Coq.Lists.List "x :: y" list_scope
R38505 Cminorgenproof.mkframe
R38555 Mem.nextblock
R38520 Maps.set
R38533 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R38661 Cminorgenproof.match_callstack_alloc_left
R38661 Cminorgenproof.match_callstack_alloc_left
R38718 Coq.ZArith.BinInt "x <= y" Z_scope
R38718 Coq.ZArith.BinInt "x <= y" Z_scope
R38871 Coq.ZArith.BinInt "x <= y" Z_scope
R38863 Coq.ZArith.BinInt "x + y" Z_scope
R38847 Mem.high_bound
R38790 Coq.Init.Logic "x = y" type_scope
R38792 Coq.Init.Datatypes.Some
R38796 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R38871 Coq.ZArith.BinInt "x <= y" Z_scope
R38863 Coq.ZArith.BinInt "x + y" Z_scope
R38847 Mem.high_bound
R38790 Coq.Init.Logic "x = y" type_scope
R38792 Coq.Init.Datatypes.Some
R38796 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R38957 Mem.high_bound_alloc
R38957 Mem.high_bound_alloc
R39002 Coqlib.zeq
R39002 Coqlib.zeq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R39273 Mem.inject_incr_trans
R39273 Mem.inject_incr_trans
R39408 Mem.alloc_unmapped_inject
R39408 Mem.alloc_unmapped_inject
R39468 Mem.extend_inject
R39485 Coq.Init.Datatypes.None
R39468 Mem.extend_inject
R39485 Coq.Init.Datatypes.None
R39536 Cminorgenproof.match_callstack
R39669 Mem.nextblock
R39654 Mem.nextblock
R39633 Coq.Lists.List "x :: y" list_scope
R39569 Cminorgenproof.mkframe
R39619 Mem.nextblock
R39584 Maps.set
R39597 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R39536 Cminorgenproof.match_callstack
R39669 Mem.nextblock
R39654 Mem.nextblock
R39633 Coq.Lists.List "x :: y" list_scope
R39569 Cminorgenproof.mkframe
R39619 Mem.nextblock
R39584 Maps.set
R39597 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R39725 Cminorgenproof.match_callstack_alloc_left
R39725 Cminorgenproof.match_callstack_alloc_left
R39882 Coq.ZArith.BinInt "x <= y" Z_scope
R39874 Coq.ZArith.BinInt "x + y" Z_scope
R39858 Mem.high_bound
R39801 Coq.Init.Logic "x = y" type_scope
R39803 Coq.Init.Datatypes.Some
R39807 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R39882 Coq.ZArith.BinInt "x <= y" Z_scope
R39874 Coq.ZArith.BinInt "x + y" Z_scope
R39858 Mem.high_bound
R39801 Coq.Init.Logic "x = y" type_scope
R39803 Coq.Init.Datatypes.Some
R39807 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R39967 Mem.high_bound_alloc
R39967 Mem.high_bound_alloc
R40012 Coqlib.zeq
R40012 Coqlib.zeq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R40227 Mem.inject_incr_trans
R40227 Mem.inject_incr_trans
R40370 Coq.ZArith.BinInt "x <= y" Z_scope
R40373 Coq.ZArith.Zmin.Zmax
R40370 Coq.ZArith.BinInt "x <= y" Z_scope
R40373 Coq.ZArith.Zmin.Zmax
R40392 Coq.ZArith.Zmin.Zmax1
R40392 Coq.ZArith.Zmin.Zmax1
R40412 Coq.ZArith.BinInt "x > y" Z_scope
R40412 Coq.ZArith.BinInt "x > y" Z_scope
R40439 Cminorgenproof.align_bounds
R40439 Cminorgenproof.align_bounds
R40483 Cminorgen.align
R40483 Cminorgen.align
R40514 Mem.extend_inject
R40532 Coq.Init.Datatypes.Some
R40537 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40514 Mem.extend_inject
R40532 Coq.Init.Datatypes.Some
R40537 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40582 Coq.Init.Logic "A /\ B" type_scope
R40562 Mem.mem_inject
R40585 Mem.inject_incr
R40582 Coq.Init.Logic "A /\ B" type_scope
R40562 Mem.mem_inject
R40585 Mem.inject_incr
R40631 Coq.ZArith.BinInt "x < y" Z_scope
R40616 Integers.min_signed
R40631 Coq.ZArith.BinInt "x < y" Z_scope
R40616 Integers.min_signed
R40668 Cminorgenproof.assign_variables_incr
R40668 Cminorgenproof.assign_variables_incr
R40738 Mem.alloc_mapped_inject
R40738 Mem.alloc_mapped_inject
R40949 Cminorgenproof.match_callstack
R41082 Mem.nextblock
R41067 Mem.nextblock
R41046 Coq.Lists.List "x :: y" list_scope
R40982 Cminorgenproof.mkframe
R41032 Mem.nextblock
R40997 Maps.set
R41010 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40949 Cminorgenproof.match_callstack
R41082 Mem.nextblock
R41067 Mem.nextblock
R41046 Coq.Lists.List "x :: y" list_scope
R40982 Cminorgenproof.mkframe
R41032 Mem.nextblock
R40997 Maps.set
R41010 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41138 Cminorgenproof.match_callstack_alloc_left
R41138 Cminorgenproof.match_callstack_alloc_left
R41195 Coq.ZArith.BinInt "x <= y" Z_scope
R41195 Coq.ZArith.BinInt "x <= y" Z_scope
R41348 Coq.ZArith.BinInt "x <= y" Z_scope
R41340 Coq.ZArith.BinInt "x + y" Z_scope
R41324 Mem.high_bound
R41267 Coq.Init.Logic "x = y" type_scope
R41269 Coq.Init.Datatypes.Some
R41273 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41348 Coq.ZArith.BinInt "x <= y" Z_scope
R41340 Coq.ZArith.BinInt "x + y" Z_scope
R41324 Mem.high_bound
R41267 Coq.Init.Logic "x = y" type_scope
R41269 Coq.Init.Datatypes.Some
R41273 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41434 Mem.high_bound_alloc
R41434 Mem.high_bound_alloc
R41479 Coqlib.zeq
R41479 Coqlib.zeq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R41750 Mem.inject_incr_trans
R41750 Mem.inject_incr_trans
R41880 Coq.Init.Logic "x <> y" type_scope
R41875 Maps "a ! b"
R41853 Cminor.set_params
R41883 Coq.Init.Datatypes.None
R41836 Coq.Lists.List.In
R41968 Maps.gsspec
R41968 Maps.gsspec
R41988 Coqlib.peq
R41988 Coqlib.peq
R42080 Maps.gsspec
R42080 Maps.gsspec
R42100 Coqlib.peq
R42100 Coqlib.peq
R42289 Coq.Init.Logic "x <> y" type_scope
R42284 Maps "a ! b"
R42267 Cminor.set_locals
R42292 Coq.Init.Datatypes.None
R42247 Coq.Init.Logic "A \/ B" type_scope
R42236 Coq.Lists.List.In
R42255 Coq.Init.Logic "x <> y" type_scope
R42251 Maps "a ! b"
R42258 Coq.Init.Datatypes.None
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R42357 Maps.gsspec
R42357 Maps.gsspec
R42377 Coqlib.peq
R42377 Coqlib.peq
R42435 Coq.Init.Logic "x <> y" type_scope
R42435 Coq.Init.Logic "x <> y" type_scope
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R42607 Coq.Init.Logic "x <> y" type_scope
R42602 Maps "a ! b"
R42562 Cminor.set_locals
R42579 Cminor.set_params
R42610 Coq.Init.Datatypes.None
R42533 Coq.Lists.List.In
R42547 Coq.Lists.List "x ++ y" list_scope
R42639 Cminorgenproof.set_locals_defined
R42639 Cminorgenproof.set_locals_defined
R42668 Coq.Lists.List.in_app_or
R42668 Coq.Lists.List.in_app_or
R42711 Cminorgenproof.set_params_defined
R42711 Cminorgenproof.set_params_defined
R43290 Coq.Init.Logic "'exists' x , p" type_scope
R43325 Coq.Init.Logic "A /\ B" type_scope
R43306 Mem.inject_incr
R43351 Coq.Init.Logic "A /\ B" type_scope
R43328 Mem.mem_inject
R43354 Cminorgenproof.match_callstack
R43475 Mem.nextblock
R43459 Mem.nextblock
R43424 Coq.Lists.List "x :: y" list_scope
R43374 Cminorgenproof.mkframe
R43413 Mem.nextblock
R43398 Mem.nextblock
R43241 Cminor.set_locals
R43259 Cminor.set_params
R43174 Coq.Lists.List.map
R43215 Cminorgenproof.fn_vars
R43185 Coq.Init.Datatypes.fst
R43195 Cminorplus.local_variable
R43189 AST.ident
R43104 Coq.Lists.List.map
R43143 Cminorgenproof.fn_params
R43115 Coq.Init.Datatypes.fst
R43125 AST.memory_chunk
R43119 AST.ident
R43066 Mem.mem_inject
R43009 Cminorgenproof.match_callstack
R43048 Mem.nextblock
R43033 Mem.nextblock
R42992 Coq.Init.Logic "x = y" type_scope
R42974 Mem.alloc
R42994 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R42913 Cminorplus.alloc_variables
R42944 Cminorplus.fn_variables
R42929 Cminorgenproof.empty_env
R42890 Coq.ZArith.BinInt "x <= y" Z_scope
R42893 Integers.max_signed
R42869 Coq.Init.Logic "x = y" type_scope
R42850 Cminorgen.build_compilenv
R42871 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R43525 Coq.Init.Logic "x = y" type_scope
R43527 Mem.nextblock
R43525 Coq.Init.Logic "x = y" type_scope
R43527 Mem.nextblock
R43603 Cminorgenproof.match_callstack_alloc_variables_rec
R43603 Cminorgenproof.match_callstack_alloc_variables_rec
R43673 Mem.valid_new_block
R43673 Mem.valid_new_block
R43708 Mem.low_bound_alloc
R43708 Mem.low_bound_alloc
R43748 Coqlib.zeq_true
R43748 Coqlib.zeq_true
R43769 Mem.high_bound_alloc
R43769 Mem.high_bound_alloc
R43810 Coqlib.zeq_true
R43810 Coqlib.zeq_true
R43875 Mem.valid_block
R43875 Mem.valid_block
R43903 Mem.valid_new_block
R43903 Mem.valid_new_block
R43981 Maps.gi
R43981 Maps.gi
R44034 Maps.gempty
R44034 Maps.gempty
R44152 Maps.gempty
R44152 Maps.gempty
R44245 Maps.gempty
R44245 Maps.gempty
R44306 Mem.mi_mappedblocks
R44306 Mem.mi_mappedblocks
R44360 Mem.fresh_block_alloc
R44360 Mem.fresh_block_alloc
R44432 Mem.mi_mappedblocks
R44432 Mem.mi_mappedblocks
R44527 Mem.alloc_right_inject
R44527 Mem.alloc_right_inject
R44579 Mem.mi_mappedblocks
R44579 Mem.mi_mappedblocks
R44708 Cminorgenproof.set_locals_params_defined
R44708 Cminorgenproof.set_locals_params_defined
R44823 Cminorgenproof.fn_params
R44797 Cminorplus.fn_params
R44823 Cminorgenproof.fn_params
R44797 Cminorplus.fn_params
R44876 Cminorgenproof.fn_vars
R44852 Cminorplus.fn_vars
R44876 Cminorgenproof.fn_vars
R44852 Cminorplus.fn_vars
R44902 Coq.Lists.List.in_app_or
R44902 Coq.Lists.List.in_app_or
R44939 Coqlib.list_in_map_inv
R44939 Coqlib.list_in_map_inv
R44990 Coq.Lists.List.in_or_app
R44990 Coq.Lists.List.in_or_app
R45026 Coq.Lists.List.in_map
R45026 Coq.Lists.List.in_map
R45053 Coq.Lists.List.in_or_app
R45053 Coq.Lists.List.in_or_app
R45090 Coq.Init.Datatypes.fst
R45094 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45090 Coq.Init.Datatypes.fst
R45094 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45111 Coq.Lists.List.in_map
R45111 Coq.Lists.List.in_map
R45260 Coq.ZArith.BinInt "x <= y" Z_scope
R45247 Mem.nextblock
R45263 Mem.nextblock
R45206 Cminorplus.alloc_variables
R45536 Coq.Init.Logic "A <-> B" type_scope
R45514 Coq.ZArith.BinInt "x <= y < z" Z_scope
R45503 Mem.nextblock
R45525 Mem.nextblock
R45540 Coq.Lists.List.In
R45448 Cminorplus.alloc_variables
R45688 Coq.Init.Logic "x = y" type_scope
R45676 Mem.nextblock
R45688 Coq.Init.Logic "x = y" type_scope
R45676 Mem.nextblock
R45745 Coq.Init.Logic "x = y" type_scope
R45732 Mem.nextblock
R45747 Coq.ZArith.BinInt.Zsucc
R45754 Mem.nextblock
R45745 Coq.Init.Logic "x = y" type_scope
R45732 Mem.nextblock
R45747 Coq.ZArith.BinInt.Zsucc
R45754 Mem.nextblock
R45867 Coq.Init.Logic "A \/ B" type_scope
R45863 Coq.Init.Logic "x = y" type_scope
R45851 Mem.nextblock
R45883 Coq.ZArith.BinInt "x <= y < z" Z_scope
R45870 Mem.nextblock
R45890 Mem.nextblock
R45867 Coq.Init.Logic "A \/ B" type_scope
R45863 Coq.Init.Logic "x = y" type_scope
R45851 Mem.nextblock
R45883 Coq.ZArith.BinInt "x <= y < z" Z_scope
R45870 Mem.nextblock
R45890 Mem.nextblock
R46036 Cminorgenproof.alloc_variables_nextblock_incr
R46036 Cminorgenproof.alloc_variables_nextblock_incr
R46236 Cminor.env
R46224 Coq.Lists.List.list
R46229 Values.val
R46193 Coq.Lists.List.list
R46205 Coq.Init.Datatypes "x * y" type_scope
R46199 AST.ident
R46207 AST.memory_chunk
R46183 Mem.meminj
R46317 Coq.Lists.List.nil
R46313 Coq.Lists.List.nil
R46528 Coq.Lists.List "x :: y" list_scope
R46516 Coq.Lists.List "x :: y" list_scope
R46504 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R46418 Mem.val_inject
R46399 Coq.Init.Logic "x = y" type_scope
R46395 Maps "a ! b"
R46401 Coq.Init.Datatypes.Some
R46710 Cminorgenproof.vars_vals_match
R46696 Coq.Init.Logic "x = y" type_scope
R46692 Maps "a ! b"
R46700 Maps "a ! b"
R46669 Coq.Lists.List.In
R46672 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R46604 Cminorgenproof.vars_vals_match
R47283 Coq.Init.Logic "'exists' x , p" type_scope
R47295 Coq.Init.Logic "'exists' x , p" type_scope
R47447 Coq.Init.Logic "A /\ B" type_scope
R47312 Cminor.exec_stmtlist
R47434 Cminor.Out_normal
R47377 Cminorgen.store_parameters
R47331 Values.Vptr
R47339 Integers.zero
R47472 Coq.Init.Logic "A /\ B" type_scope
R47450 Mem.mem_inject
R47475 Cminorgenproof.match_callstack
R47549 Mem.nextblock
R47533 Mem.nextblock
R47522 Coq.Lists.List "x :: y" list_scope
R47494 Cminorgenproof.mkframe
R47190 Cminorgenproof.match_callstack
R47264 Mem.nextblock
R47248 Mem.nextblock
R47237 Coq.Lists.List "x :: y" list_scope
R47209 Cminorgenproof.mkframe
R47165 Mem.mem_inject
R47103 Coqlib.list_norepet
R47117 Coq.Lists.List.map
R47128 Coq.Init.Datatypes.fst
R47138 AST.memory_chunk
R47132 AST.ident
R47066 Cminorgenproof.vars_vals_match
R46990 Cminorplus.bind_parameters
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R47961 Coq.Init.Logic "x = y" type_scope
R47948 Mem.nextblock
R47963 Mem.nextblock
R47961 Coq.Init.Logic "x = y" type_scope
R47948 Mem.nextblock
R47963 Mem.nextblock
R47993 Mem.store_inv
R47993 Mem.store_inv
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R48153 Cminorplus.local_variable
R48131 Cminorgenproof.local_variable
R48153 Cminorplus.local_variable
R48131 Cminorgenproof.local_variable
R48256 Coq.Init.Logic "x = y" type_scope
R48256 Coq.Init.Logic "x = y" type_scope
R48295 Cminor.eval_expr
R48341 Cminor.Evar
R48328 Coq.Lists.List.nil
R48310 Values.Vptr
R48318 Integers.zero
R48295 Cminor.eval_expr
R48341 Cminor.Evar
R48328 Coq.Lists.List.nil
R48310 Values.Vptr
R48318 Integers.zero
R48400 Cminorgenproof.make_cast_correct
R48400 Cminorgenproof.make_cast_correct
R48521 Maps.set
R48521 Maps.set
R48560 Cminorgenproof.vars_vals_match
R48560 Cminorgenproof.vars_vals_match
R48604 Cminorgenproof.vars_vals_match_extensional
R48604 Cminorgenproof.vars_vals_match_extensional
R48678 Maps.gso
R48678 Maps.gso
R48741 Coq.Init.Datatypes.fst
R48745 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48741 Coq.Init.Datatypes.fst
R48745 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48762 Coq.Lists.List.in_map
R48762 Coq.Lists.List.in_map
R48795 Mem.store_unmapped_inject
R48795 Mem.store_unmapped_inject
R48873 Cminorgenproof.match_callstack_store_local
R48873 Cminorgenproof.match_callstack_store_local
R49195 Cminor.exec_Scons_continue
R49195 Cminor.exec_Scons_continue
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R49408 Cminorplus.local_variable
R49386 Cminorgenproof.local_variable
R49408 Cminorplus.local_variable
R49386 Cminorgenproof.local_variable
R49515 Cminorgenproof.make_stackaddr_correct
R49541 Coq.Lists.List.nil
R49515 Cminorgenproof.make_stackaddr_correct
R49541 Coq.Lists.List.nil
R49576 Cminor.eval_expr
R49622 Cminor.Evar
R49609 Coq.Lists.List.nil
R49591 Values.Vptr
R49599 Integers.zero
R49576 Cminor.eval_expr
R49622 Cminor.Evar
R49609 Coq.Lists.List.nil
R49591 Values.Vptr
R49599 Integers.zero
R49679 Cminorgenproof.make_store_correct
R49747 Values.Vptr
R49754 Integers.zero
R49679 Cminorgenproof.make_store_correct
R49747 Values.Vptr
R49754 Integers.zero
R49873 Coq.Init.Logic "x <> y" type_scope
R49876 Coq.Init.Datatypes.None
R49873 Coq.Init.Logic "x <> y" type_scope
R49876 Coq.Init.Datatypes.None
R49923 Cminorgenproof.match_callstack_mapped
R49923 Cminorgenproof.match_callstack_mapped
R50210 Cminor.exec_Scons_continue
R50210 Cminor.exec_Scons_continue
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R50393 Cminorplus.local_variable
R50371 Cminorgenproof.local_variable
R50393 Cminorplus.local_variable
R50371 Cminorgenproof.local_variable
R50460 Cminorplus.local_variable
R50438 Cminorgenproof.local_variable
R50460 Cminorplus.local_variable
R50438 Cminorgenproof.local_variable
R50704 Cminorgenproof.vars_vals_match
R50739 Cminor.set_params
R50757 Coq.Lists.List.map
R50768 Coq.Init.Datatypes.fst
R50778 AST.memory_chunk
R50772 AST.ident
R50670 Mem.val_list_inject
R50646 Coq.Init.Logic "x = y" type_scope
R50627 Coq.Lists.List.length
R50648 Coq.Lists.List.length
R50565 Coqlib.list_norepet
R50579 Coq.Lists.List.map
R50590 Coq.Init.Datatypes.fst
R50600 AST.memory_chunk
R50594 AST.ident
R51016 Maps.gss
R51016 Maps.gss
R51093 Cminor.set_params
R51109 Coq.Lists.List.map
R51115 Coq.Init.Datatypes.fst
R51125 AST.memory_chunk
R51119 AST.ident
R51057 Cminorgenproof.vars_vals_match_extensional
R51093 Cminor.set_params
R51109 Coq.Lists.List.map
R51115 Coq.Init.Datatypes.fst
R51125 AST.memory_chunk
R51119 AST.ident
R51057 Cminorgenproof.vars_vals_match_extensional
R51199 Maps.gso
R51199 Maps.gso
R51275 Coq.Init.Datatypes.fst
R51279 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51252 Coq.Init.Datatypes.fst
R51256 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51275 Coq.Init.Datatypes.fst
R51279 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51252 Coq.Init.Datatypes.fst
R51256 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51299 Coq.Lists.List.in_map
R51299 Coq.Lists.List.in_map
R51597 Cminorgenproof.vars_vals_match
R51632 Cminor.set_locals
R51694 Cminor.set_params
R51712 Coq.Lists.List.map
R51723 Coq.Init.Datatypes.fst
R51733 AST.memory_chunk
R51727 AST.ident
R51644 Coq.Lists.List.map
R51655 Coq.Init.Datatypes.fst
R51665 Cminorplus.local_variable
R51659 AST.ident
R51477 Coqlib.list_norepet
R51546 Coq.Lists.List "x ++ y" list_scope
R51491 Coq.Lists.List.map
R51502 Coq.Init.Datatypes.fst
R51512 Cminorplus.local_variable
R51506 AST.ident
R51549 Coq.Lists.List.map
R51560 Coq.Init.Datatypes.fst
R51570 AST.memory_chunk
R51564 AST.ident
R51428 Mem.val_list_inject
R51404 Coq.Init.Logic "x = y" type_scope
R51385 Coq.Lists.List.length
R51406 Coq.Lists.List.length
R51807 Cminorgenproof.vars_vals_match_holds_1
R51807 Cminorgenproof.vars_vals_match_holds_1
R51877 Cminorgenproof.vars_vals_match_extensional
R51877 Cminorgenproof.vars_vals_match_extensional
R51929 Maps.gso
R51929 Maps.gso
R51979 Coq.Lists.List.in_or_app
R51979 Coq.Lists.List.in_or_app
R52018 Coq.Init.Datatypes.fst
R52022 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52023 Coq.Init.Datatypes.fst
R52005 Coq.Init.Datatypes.fst
R52018 Coq.Init.Datatypes.fst
R52022 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52023 Coq.Init.Datatypes.fst
R52005 Coq.Init.Datatypes.fst
R52044 Coq.Lists.List.in_map
R52044 Coq.Lists.List.in_map
R52191 Coq.Init.Logic "x = y" type_scope
R52172 Coq.Lists.List.length
R52193 Coq.Lists.List.length
R52131 Cminorplus.bind_parameters
R52816 Coq.Init.Logic "'exists' x , p" type_scope
R52827 Coq.Init.Logic "'exists' x , p" type_scope
R52839 Coq.Init.Logic "'exists' x , p" type_scope
R52998 Coq.Init.Logic "A /\ B" type_scope
R52856 Cminor.exec_stmtlist
R52985 Cminor.Out_normal
R52919 Cminorgen.store_parameters
R52945 Cminorgenproof.fn_params
R52875 Values.Vptr
R52883 Integers.zero
R53024 Coq.Init.Logic "A /\ B" type_scope
R53001 Mem.mem_inject
R53046 Coq.Init.Logic "A /\ B" type_scope
R53027 Mem.inject_incr
R53177 Coq.Init.Logic "A /\ B" type_scope
R53049 Cminorgenproof.match_callstack
R53161 Mem.nextblock
R53145 Mem.nextblock
R53127 Coq.Lists.List "x :: y" list_scope
R53076 Cminorgenproof.mkframe
R53116 Mem.nextblock
R53101 Mem.nextblock
R53227 Coq.Init.Logic "A <-> B" type_scope
R53205 Coq.ZArith.BinInt "x <= y < z" Z_scope
R53194 Mem.nextblock
R53216 Mem.nextblock
R53231 Coq.Lists.List.In
R52757 Coqlib.list_norepet
R52790 Coq.Lists.List "x ++ y" list_scope
R52771 Cminorplus.fn_params_names
R52793 Cminorplus.fn_vars_names
R52734 Mem.mem_inject
R52698 Mem.val_list_inject
R52622 Cminor.set_locals
R52653 Cminor.set_params
R52672 Cminorplus.fn_params_names
R52634 Cminorplus.fn_vars_names
R52591 Coq.Init.Logic "x = y" type_scope
R52573 Mem.alloc
R52593 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52550 Coq.ZArith.BinInt "x <= y" Z_scope
R52553 Integers.max_signed
R52529 Coq.Init.Logic "x = y" type_scope
R52510 Cminorgen.build_compilenv
R52531 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52453 Cminorgenproof.match_callstack
R52492 Mem.nextblock
R52477 Mem.nextblock
R52401 Cminorplus.bind_parameters
R52426 Cminorgenproof.fn_params
R52342 Cminorplus.alloc_variables
R52371 Cminorplus.fn_variables
R52358 Cminorplus.empty_env
R53273 Cminorgenproof.bind_parameters_length
R53273 Cminorgenproof.bind_parameters_length
R53335 Cminorgenproof.match_callstack_alloc_variables
R53335 Cminorgenproof.match_callstack_alloc_variables
R53501 Mem.val_list_inject
R53501 Mem.val_list_inject
R53546 Mem.val_list_inject_incr
R53546 Mem.val_list_inject_incr
R53589 Cminorgenproof.vars_vals_match_holds
R53648 Coqlib.list_norepet_append_commut
R53589 Cminorgenproof.vars_vals_match_holds
R53648 Coqlib.list_norepet_append_commut
R53726 Coqlib.list_norepet
R53740 Coq.Lists.List.map
R53779 Cminorgenproof.fn_params
R53751 Coq.Init.Datatypes.fst
R53761 AST.memory_chunk
R53755 AST.ident
R53726 Coqlib.list_norepet
R53740 Coq.Lists.List.map
R53779 Cminorgenproof.fn_params
R53751 Coq.Init.Datatypes.fst
R53761 AST.memory_chunk
R53755 AST.ident
R53840 Coqlib.list_norepet_append_left
R53840 Coqlib.list_norepet_append_left
R53885 Cminorgenproof.store_parameters_correct
R53885 Cminorgenproof.store_parameters_correct
R54133 Cminorgenproof.alloc_variables_list_block
R54133 Cminorgenproof.alloc_variables_list_block
R54306 Coq.Init.Logic "x = y" type_scope
R54291 Cminorgen.bind
R54308 Coq.Init.Datatypes.Some
R54565 Coq.Init.Logic "x = y" type_scope
R54560 Coq.Init.Datatypes.None
R54567 Coq.Init.Datatypes.Some
R54628 Coq.Init.Logic "x = y" type_scope
R54621 Coq.Init.Datatypes.Some
R54630 Coq.Init.Datatypes.Some
R54369 Coq.Init.Logic.refl_equal
R54791 Coq.Init.Logic "x = y" type_scope
R54776 Cminorgen.bind
R54793 Coq.Init.Datatypes.Some
R54839 Coq.Init.Logic "x = y" type_scope
R54834 Coq.Init.Datatypes.None
R54841 Coq.Init.Datatypes.Some
R54888 Coq.Init.Logic "x = y" type_scope
R54881 Coq.Init.Datatypes.Some
R54890 Coq.Init.Datatypes.Some
R54947 Coq.Init.Logic "x = y" type_scope
R54949 Coq.Init.Datatypes.Some
R55013 Coq.Init.Logic "x = y" type_scope
R55015 Coq.Init.Datatypes.Some
R55077 Coq.Init.Logic "x = y" type_scope
R55079 Coq.Init.Datatypes.Some
R55139 Coq.Init.Logic "x = y" type_scope
R55141 Coq.Init.Datatypes.Some
R55199 Coq.Init.Logic "x = y" type_scope
R55201 Coq.Init.Datatypes.Some
R55257 Coq.Init.Logic "x = y" type_scope
R55259 Coq.Init.Datatypes.Some
R55313 Coq.Init.Logic "x = y" type_scope
R55315 Coq.Init.Datatypes.Some
R55818 Coq.Init.Logic "'exists' x , p" type_scope
R55829 Coq.Init.Logic "'exists' x , p" type_scope
R55841 Coq.Init.Logic "'exists' x , p" type_scope
R55853 Coq.Init.Logic "'exists' x , p" type_scope
R55930 Coq.Init.Logic "A /\ B" type_scope
R55869 Cminor.eval_expr
R55884 Values.Vptr
R55892 Integers.zero
R55954 Coq.Init.Logic "A /\ B" type_scope
R55933 Mem.val_inject
R55980 Coq.Init.Logic "A /\ B" type_scope
R55957 Mem.mem_inject
R56003 Coq.Init.Logic "A /\ B" type_scope
R55983 Mem.inject_incr
R56006 Cminorgenproof.match_callstack
R56097 Mem.nextblock
R56081 Mem.nextblock
R56062 Coq.Lists.List "x :: y" list_scope
R56034 Cminorgenproof.mkframe
R55703 Cminorgenproof.match_callstack
R55800 Mem.nextblock
R55784 Mem.nextblock
R55762 Coq.Lists.List "x :: y" list_scope
R55734 Cminorgenproof.mkframe
R55671 Mem.mem_inject
R55635 Mem.val_list_inject
R55615 Coq.Init.Logic "x = y" type_scope
R55596 Cminorgen.transl_expr
R55617 Coq.Init.Datatypes.Some
R55530 Values.val
R55521 Mem.mem
R55508 Cminorgenproof.expr
R55499 Mem.mem
R55487 Cminorgenproof.env
R55473 Cminorgenproof.letenv
R56515 Coq.Init.Logic "'exists' x , p" type_scope
R56526 Coq.Init.Logic "'exists' x , p" type_scope
R56538 Coq.Init.Logic "'exists' x , p" type_scope
R56550 Coq.Init.Logic "'exists' x , p" type_scope
R56634 Coq.Init.Logic "A /\ B" type_scope
R56567 Cminor.eval_exprlist
R56586 Values.Vptr
R56594 Integers.zero
R56665 Coq.Init.Logic "A /\ B" type_scope
R56637 Mem.val_list_inject
R56691 Coq.Init.Logic "A /\ B" type_scope
R56668 Mem.mem_inject
R56714 Coq.Init.Logic "A /\ B" type_scope
R56694 Mem.inject_incr
R56717 Cminorgenproof.match_callstack
R56808 Mem.nextblock
R56792 Mem.nextblock
R56773 Coq.Lists.List "x :: y" list_scope
R56745 Cminorgenproof.mkframe
R56400 Cminorgenproof.match_callstack
R56497 Mem.nextblock
R56481 Mem.nextblock
R56459 Coq.Lists.List "x :: y" list_scope
R56431 Cminorgenproof.mkframe
R56368 Mem.mem_inject
R56332 Mem.val_list_inject
R56311 Coq.Init.Logic "x = y" type_scope
R56287 Cminorgen.transl_exprlist
R56313 Coq.Init.Datatypes.Some
R56215 Coq.Lists.List.list
R56220 Values.val
R56205 Mem.mem
R56188 Cminorgenproof.exprlist
R56178 Mem.mem
R56166 Cminorgenproof.env
R56152 Cminorgenproof.letenv
R57143 Coq.Init.Logic "'exists' x , p" type_scope
R57154 Coq.Init.Logic "'exists' x , p" type_scope
R57166 Coq.Init.Logic "'exists' x , p" type_scope
R57226 Coq.Init.Logic "A /\ B" type_scope
R57184 Cminor.eval_funcall
R57254 Coq.Init.Logic "A /\ B" type_scope
R57229 Mem.val_inject
R57280 Coq.Init.Logic "A /\ B" type_scope
R57257 Mem.mem_inject
R57303 Coq.Init.Logic "A /\ B" type_scope
R57283 Mem.inject_incr
R57306 Cminorgenproof.match_callstack
R57348 Mem.nextblock
R57332 Mem.nextblock
R57109 Mem.val_list_inject
R57040 Cminorgenproof.match_callstack
R57082 Mem.nextblock
R57066 Mem.nextblock
R57008 Mem.mem_inject
R56987 Coq.Init.Logic "x = y" type_scope
R56968 Cminorgen.transl_function
R56989 Coq.Init.Datatypes.Some
R56917 Values.val
R56906 Mem.mem
R56891 Coq.Lists.List.list
R56896 Values.val
R56872 Cminorgenproof.function
R56862 Mem.mem
R57393 Mem.meminj
R57416 Cminor.outcome
R57403 Cminorgenproof.outcome
R57498 Cminor.Out_normal
R57485 Cminorgenproof.Out_normal
R57583 Cminor.Out_exit
R57568 Cminorgenproof.Out_exit
R57671 Cminor.Out_return
R57682 Coq.Init.Datatypes.None
R57651 Cminorgenproof.Out_return
R57664 Coq.Init.Datatypes.None
R57817 Cminor.Out_return
R57829 Coq.Init.Datatypes.Some
R57792 Cminorgenproof.Out_return
R57806 Coq.Init.Datatypes.Some
R57746 Mem.val_inject
R58173 Coq.Init.Logic "'exists' x , p" type_scope
R58184 Coq.Init.Logic "'exists' x , p" type_scope
R58196 Coq.Init.Logic "'exists' x , p" type_scope
R58208 Coq.Init.Logic "'exists' x , p" type_scope
R58285 Coq.Init.Logic "A /\ B" type_scope
R58226 Cminor.exec_stmt
R58241 Values.Vptr
R58249 Integers.zero
R58317 Coq.Init.Logic "A /\ B" type_scope
R58288 Cminorgenproof.outcome_inject
R58343 Coq.Init.Logic "A /\ B" type_scope
R58320 Mem.mem_inject
R58366 Coq.Init.Logic "A /\ B" type_scope
R58346 Mem.inject_incr
R58369 Cminorgenproof.match_callstack
R58460 Mem.nextblock
R58444 Mem.nextblock
R58425 Coq.Lists.List "x :: y" list_scope
R58397 Cminorgenproof.mkframe
R58058 Cminorgenproof.match_callstack
R58155 Mem.nextblock
R58139 Mem.nextblock
R58117 Coq.Lists.List "x :: y" list_scope
R58089 Cminorgenproof.mkframe
R58026 Mem.mem_inject
R58006 Coq.Init.Logic "x = y" type_scope
R57987 Cminorgen.transl_stmt
R58008 Coq.Init.Datatypes.Some
R57920 Cminorgenproof.outcome
R57909 Mem.mem
R57896 Cminorgenproof.stmt
R57887 Mem.mem
R57875 Cminorgenproof.env
R58820 Coq.Init.Logic "'exists' x , p" type_scope
R58831 Coq.Init.Logic "'exists' x , p" type_scope
R58843 Coq.Init.Logic "'exists' x , p" type_scope
R58855 Coq.Init.Logic "'exists' x , p" type_scope
R58936 Coq.Init.Logic "A /\ B" type_scope
R58873 Cminor.exec_stmtlist
R58892 Values.Vptr
R58900 Integers.zero
R58968 Coq.Init.Logic "A /\ B" type_scope
R58939 Cminorgenproof.outcome_inject
R58994 Coq.Init.Logic "A /\ B" type_scope
R58971 Mem.mem_inject
R59017 Coq.Init.Logic "A /\ B" type_scope
R58997 Mem.inject_incr
R59020 Cminorgenproof.match_callstack
R59111 Mem.nextblock
R59095 Mem.nextblock
R59076 Coq.Lists.List "x :: y" list_scope
R59048 Cminorgenproof.mkframe
R58705 Cminorgenproof.match_callstack
R58802 Mem.nextblock
R58786 Mem.nextblock
R58764 Coq.Lists.List "x :: y" list_scope
R58736 Cminorgenproof.mkframe
R58673 Mem.mem_inject
R58653 Coq.Init.Logic "x = y" type_scope
R58630 Cminorgen.transl_stmtlist
R58655 Coq.Init.Datatypes.Some
R58563 Cminorgenproof.outcome
R58552 Mem.mem
R58535 Cminorgenproof.stmtlist
R58526 Mem.mem
R58514 Cminorgenproof.env
R59381 Cminorgenproof.eval_expr_prop
R59404 Cminorgenproof.Evar
R59366 Coq.Init.Logic "x = y" type_scope
R59349 Mem.load
R59368 Coq.Init.Datatypes.Some
R59316 Coq.Init.Logic "x = y" type_scope
R59311 Maps "a ! b"
R59318 Coq.Init.Datatypes.Some
R59323 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R59327 Cminorplus.LVscalar
R59300 Values.val
R59281 AST.memory_chunk
R59265 Values.block
R59245 Coq.NArith.BinPos.positive
R59234 Mem.mem
R59195 Maps.t
R59210 Coq.Init.Datatypes "x * y" type_scope
R59204 Values.block
R59212 Cminorplus.local_variable
R59175 Cminorgenproof.letenv
R59490 Cminorgenproof.var_get_correct
R59490 Cminorgenproof.var_get_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R60045 Cminorgenproof.eval_expr_prop
R60068 Cminorgenproof.Eassign
R60029 Coq.Init.Logic "x = y" type_scope
R60007 Mem.store
R60031 Coq.Init.Datatypes.Some
R59991 Coq.Init.Logic "x = y" type_scope
R59977 Cminorplus.cast
R59993 Coq.Init.Datatypes.Some
R59944 Coq.Init.Logic "x = y" type_scope
R59939 Maps "a ! b"
R59946 Coq.Init.Datatypes.Some
R59951 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R59955 Cminorplus.LVscalar
R59901 Cminorgenproof.eval_expr_prop
R59865 Cminorgenproof.eval_expr
R59856 Mem.mem
R59845 Values.val
R59845 Values.val
R59822 AST.memory_chunk
R59801 Values.block
R59791 Mem.mem
R59777 Cminorgenproof.expr
R59762 Coq.NArith.BinPos.positive
R59746 Mem.mem
R59734 Cminorgenproof.env
R59719 Cminorgenproof.letenv
R60291 Cminorgenproof.var_set_correct
R60291 Cminorgenproof.var_set_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R60736 Cminorgenproof.eval_expr_prop
R60774 Values.Vptr
R60781 Integers.zero
R60759 Cminorplus.Eaddrof
R60715 Coq.Init.Logic "x = y" type_scope
R60710 Maps "a ! b"
R60717 Coq.Init.Datatypes.Some
R60722 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R60688 Cminorplus.local_variable
R60675 Values.block
R60655 Coq.NArith.BinPos.positive
R60644 Mem.mem
R60605 Maps.t
R60620 Coq.Init.Datatypes "x * y" type_scope
R60614 Values.block
R60622 Cminorplus.local_variable
R60585 Cminorgenproof.letenv
R60850 Cminorgenproof.var_addr_local_correct
R60850 Cminorgenproof.var_addr_local_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R61243 Cminorgenproof.eval_expr_prop
R61281 Values.Vptr
R61288 Integers.zero
R61266 Cminorplus.Eaddrof
R61228 Coq.Init.Logic "x = y" type_scope
R61205 Globalenvs.find_symbol
R61230 Coq.Init.Datatypes.Some
R61192 Coq.Init.Logic "x = y" type_scope
R61187 Maps "a ! b"
R61194 Coq.Init.Datatypes.None
R61174 Values.block
R61154 Coq.NArith.BinPos.positive
R61143 Mem.mem
R61104 Maps.t
R61119 Coq.Init.Datatypes "x * y" type_scope
R61113 Values.block
R61121 Cminorplus.local_variable
R61084 Cminorgenproof.letenv
R61357 Cminorgenproof.var_addr_global_correct
R61357 Cminorgenproof.var_addr_global_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R61825 Cminorgenproof.eval_expr_prop
R61848 Cminorgenproof.Eop
R61810 Coq.Init.Logic "x = y" type_scope
R61784 Cminorgenproof.eval_operation
R61812 Coq.Init.Datatypes.Some
R61743 Cminorgenproof.eval_exprlist_prop
R61702 Cminorgenproof.eval_exprlist
R61693 Values.val
R61678 Coq.Lists.List.list
R61683 Values.val
R61662 Mem.mem
R61644 Cminorgenproof.exprlist
R61625 Cminorgenproof.operation
R61609 Mem.mem
R61597 Cminorgenproof.env
R61582 Cminorgenproof.letenv
R62065 Cminorgenproof.make_op_correct
R62065 Cminorgenproof.make_op_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R62507 Cminorgenproof.eval_expr_prop
R62530 Cminorgenproof.Eload
R62492 Coq.Init.Logic "x = y" type_scope
R62474 Mem.loadv
R62494 Coq.Init.Datatypes.Some
R62438 Cminorgenproof.eval_expr_prop
R62402 Cminorgenproof.eval_expr
R62393 Values.val
R62393 Values.val
R62375 Mem.mem
R62361 Cminorgenproof.expr
R62342 AST.memory_chunk
R62323 Mem.mem
R62311 Cminorgenproof.env
R62296 Cminorgenproof.letenv
R62732 Mem.loadv_inject
R62732 Mem.loadv_inject
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R62879 Cminorgenproof.make_load_correct
R62879 Cminorgenproof.make_load_correct
R63326 Cminorgenproof.eval_expr_prop
R63349 Cminorgenproof.Estore
R63310 Coq.Init.Logic "x = y" type_scope
R63288 Mem.storev
R63312 Coq.Init.Datatypes.Some
R63272 Coq.Init.Logic "x = y" type_scope
R63258 Cminorplus.cast
R63274 Coq.Init.Datatypes.Some
R63221 Cminorgenproof.eval_expr_prop
R63184 Cminorgenproof.eval_expr
R63148 Cminorgenproof.eval_expr_prop
R63112 Cminorgenproof.eval_expr
R63103 Values.val
R63092 Mem.mem
R63081 Values.val
R63070 Mem.mem
R63059 Values.val
R63043 Mem.mem
R63029 Cminorgenproof.expr
R63029 Cminorgenproof.expr
R63008 AST.memory_chunk
R62989 Mem.mem
R62977 Cminorgenproof.env
R62962 Cminorgenproof.letenv
R63559 Mem.val_list_inject
R63559 Mem.val_list_inject
R63594 Mem.val_list_inject_incr
R63594 Mem.val_list_inject_incr
R63768 Mem.val_inject
R63768 Mem.val_inject
R63798 Mem.val_inject_incr
R63798 Mem.val_inject_incr
R63834 Cminorgenproof.make_store_correct
R63834 Cminorgenproof.make_store_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R64079 Mem.inject_incr_trans
R64079 Mem.inject_incr_trans
R64115 Mem.val_inject
R64115 Mem.val_inject
R64145 Mem.val_inject_incr
R64145 Mem.val_inject_incr
R64270 Mem.nextblock
R64290 Mem.nextblock
R64270 Mem.nextblock
R64290 Mem.nextblock
R64314 Cminorgenproof.match_callstack_mapped
R64314 Cminorgenproof.match_callstack_mapped
R64372 Mem.store_inv
R64372 Mem.store_inv
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R64514 Coq.Init.Logic "x = y" type_scope
R64506 Cminor.fn_sig
R64519 Cminorgenproof.fn_sig
R64489 Coq.Init.Logic "x = y" type_scope
R64471 Cminorgen.transl_function
R64491 Coq.Init.Datatypes.Some
R64588 Cminorgen.build_compilenv
R64588 Cminorgen.build_compilenv
R64616 Coqlib.zle
R64622 Integers.max_signed
R64616 Coqlib.zle
R64622 Integers.max_signed
R65239 Cminorgenproof.eval_expr_prop
R65262 Cminorgenproof.Ecall
R65196 Cminorgenproof.eval_funcall_prop
R65153 Cminorgenproof.eval_funcall
R65141 Coq.Init.Logic "x = y" type_scope
R65130 Cminorgenproof.fn_sig
R65115 Coq.Init.Logic "x = y" type_scope
R65093 Globalenvs.find_funct
R65117 Coq.Init.Datatypes.Some
R65048 Cminorgenproof.eval_exprlist_prop
R65003 Cminorgenproof.eval_exprlist
R64967 Cminorgenproof.eval_expr_prop
R64931 Cminorgenproof.eval_expr
R64915 Cminorgenproof.function
R64900 Values.val
R64882 Coq.Lists.List.list
R64887 Values.val
R64868 Values.val
R64857 Mem.mem
R64857 Mem.mem
R64857 Mem.mem
R64828 Cminorgenproof.exprlist
R64814 Cminorgenproof.expr
R64798 AST.signature
R64781 Mem.mem
R64769 Cminorgenproof.env
R64754 Cminorgenproof.letenv
R65488 Mem.val_list_inject
R65488 Mem.val_list_inject
R65523 Mem.val_list_inject_incr
R65523 Mem.val_list_inject_incr
R65700 Coq.Init.Logic "x = y" type_scope
R65700 Coq.Init.Logic "x = y" type_scope
R65717 Globalenvs.find_funct_inv
R65717 Globalenvs.find_funct_inv
R65786 Globalenvs.find_funct_find_funct_ptr
R65786 Globalenvs.find_funct_find_funct_ptr
R65841 Globalenvs.find_funct_ptr_inv
R65841 Globalenvs.find_funct_ptr_inv
R65889 Cminorgenproof.match_globalenvs
R65889 Cminorgenproof.match_globalenvs
R65918 Cminorgenproof.match_callstack_match_globalenvs
R65918 Cminorgenproof.match_callstack_match_globalenvs
R65975 Cminorgenproof.mg_functions
R65975 Cminorgenproof.mg_functions
R66162 Cminorgenproof.functions_translated
R66162 Cminorgenproof.functions_translated
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R66403 Cminor.eval_Ecall
R66403 Cminor.eval_Ecall
R66443 Cminorgenproof.sig_transl_function
R66443 Cminorgenproof.sig_transl_function
R66478 Mem.inject_incr_trans
R66478 Mem.inject_incr_trans
R66520 Mem.inject_incr_trans
R66520 Mem.inject_incr_trans
R66892 Cminorgenproof.eval_expr_prop
R66915 Cminorgenproof.Econdition
R66855 Cminorgenproof.eval_expr_prop
R66818 Cminorgenproof.eval_expr
R66797 Values.is_true
R66761 Cminorgenproof.eval_expr_prop
R66725 Cminorgenproof.eval_expr
R66716 Values.val
R66700 Mem.mem
R66689 Values.val
R66678 Mem.mem
R66664 Cminorgenproof.expr
R66664 Cminorgenproof.expr
R66664 Cminorgenproof.expr
R66645 Mem.mem
R66633 Cminorgenproof.env
R66618 Cminorgenproof.letenv
R67125 Mem.val_list_inject
R67125 Mem.val_list_inject
R67160 Mem.val_list_inject_incr
R67160 Mem.val_list_inject_incr
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R67402 Cmconstrproof.eval_conditionalexpr_true
R67402 Cmconstrproof.eval_conditionalexpr_true
R67522 Mem.inject_incr_trans
R67522 Mem.inject_incr_trans
R67889 Cminorgenproof.eval_expr_prop
R67912 Cminorgenproof.Econdition
R67852 Cminorgenproof.eval_expr_prop
R67815 Cminorgenproof.eval_expr
R67793 Values.is_false
R67757 Cminorgenproof.eval_expr_prop
R67721 Cminorgenproof.eval_expr
R67712 Values.val
R67696 Mem.mem
R67685 Values.val
R67674 Mem.mem
R67660 Cminorgenproof.expr
R67660 Cminorgenproof.expr
R67660 Cminorgenproof.expr
R67641 Mem.mem
R67629 Cminorgenproof.env
R67614 Cminorgenproof.letenv
R68122 Mem.val_list_inject
R68122 Mem.val_list_inject
R68157 Mem.val_list_inject_incr
R68157 Mem.val_list_inject_incr
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R68399 Cmconstrproof.eval_conditionalexpr_false
R68399 Cmconstrproof.eval_conditionalexpr_false
R68520 Mem.inject_incr_trans
R68520 Mem.inject_incr_trans
R68862 Cminorgenproof.eval_expr_prop
R68885 Cminorgenproof.Elet
R68817 Cminorgenproof.eval_expr_prop
R68836 Coq.Lists.List "x :: y" list_scope
R68772 Cminorgenproof.eval_expr
R68791 Coq.Lists.List "x :: y" list_scope
R68736 Cminorgenproof.eval_expr_prop
R68700 Cminorgenproof.eval_expr
R68691 Values.val
R68680 Mem.mem
R68669 Values.val
R68658 Mem.mem
R68644 Cminorgenproof.expr
R68644 Cminorgenproof.expr
R68627 Mem.mem
R68615 Cminorgenproof.env
R68600 Cminorgenproof.letenv
R69087 Mem.val_list_inject
R69122 Coq.Lists.List "x :: y" list_scope
R69110 Coq.Lists.List "x :: y" list_scope
R69087 Mem.val_list_inject
R69122 Coq.Lists.List "x :: y" list_scope
R69110 Coq.Lists.List "x :: y" list_scope
R69162 Mem.val_list_inject_incr
R69162 Mem.val_list_inject_incr
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R69399 Cminor.eval_Elet
R69399 Cminor.eval_Elet
R69426 Mem.inject_incr_trans
R69426 Mem.inject_incr_trans
R69576 Coq.Init.Logic "'exists' x , p" type_scope
R69612 Coq.Init.Logic "A /\ B" type_scope
R69602 Coq.Init.Logic "x = y" type_scope
R69587 Coq.Lists.List.nth_error
R69604 Coq.Init.Datatypes.Some
R69615 Mem.val_inject
R69561 Coq.Init.Logic "x = y" type_scope
R69546 Coq.Lists.List.nth_error
R69563 Coq.Init.Datatypes.Some
R69504 Mem.val_list_inject
R69928 Cminorgenproof.eval_expr_prop
R69951 Cminorgenproof.Eletvar
R69913 Coq.Init.Logic "x = y" type_scope
R69898 Coq.Lists.List.nth_error
R69915 Coq.Init.Datatypes.Some
R69889 Values.val
R69874 Coq.Init.Datatypes.nat
R69864 Mem.mem
R69852 Cminorgenproof.env
R69837 Coq.Lists.List.list
R69842 Values.val
R70024 Cminorgenproof.val_list_inject_nth
R70024 Cminorgenproof.val_list_inject_nth
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R70159 Cminor.eval_Eletvar
R70159 Cminor.eval_Eletvar
R70273 Cminorgenproof.eval_exprlist_prop
R70308 Coq.Lists.List.nil
R70299 Cminorgenproof.Enil
R70264 Mem.mem
R70252 Cminorgenproof.env
R70237 Cminorgenproof.letenv
R70403 Coq.Lists.List.nil
R70407 Values.val
R70403 Coq.Lists.List.nil
R70407 Values.val
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R70788 Cminorgenproof.eval_exprlist_prop
R70835 Coq.Lists.List "x :: y" list_scope
R70815 Cminorgenproof.Econs
R70746 Cminorgenproof.eval_exprlist_prop
R70704 Cminorgenproof.eval_exprlist
R70669 Cminorgenproof.eval_expr_prop
R70634 Cminorgenproof.eval_expr
R70620 Coq.Lists.List.list
R70625 Values.val
R70609 Mem.mem
R70598 Values.val
R70583 Mem.mem
R70565 Cminorgenproof.exprlist
R70551 Cminorgenproof.expr
R70536 Mem.mem
R70524 Cminorgenproof.env
R70509 Cminorgenproof.letenv
R71027 Mem.val_list_inject
R71027 Mem.val_list_inject
R71062 Mem.val_list_inject_incr
R71062 Mem.val_list_inject_incr
R71236 Mem.val_inject
R71236 Mem.val_inject
R71265 Mem.val_inject_incr
R71265 Mem.val_inject_incr
R71338 Coq.Lists.List "x :: y" list_scope
R71338 Coq.Lists.List "x :: y" list_scope
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R71401 Mem.inject_incr_trans
R71401 Mem.inject_incr_trans
R71951 Cminorgenproof.eval_funcall_prop
R71980 Mem.free_list
R71890 Cminorgenproof.outcome_result_value
R71918 AST.sig_res
R71927 Cminorgenproof.fn_sig
R71839 Cminorgenproof.exec_stmtlist_prop
R71864 Cminorgenproof.fn_body
R71788 Cminorgenproof.exec_stmtlist
R71813 Cminorgenproof.fn_body
R71736 Cminorplus.bind_parameters
R71758 Cminorgenproof.fn_params
R71677 Cminorplus.alloc_variables
R71706 Cminorplus.fn_variables
R71693 Cminorplus.empty_env
R71619 Coqlib.list_norepet
R71651 Coq.Lists.List "x ++ y" list_scope
R71633 Cminorplus.fn_params_names
R71654 Cminorplus.fn_vars_names
R71610 Values.val
R71591 Cminorgenproof.outcome
R71574 Mem.mem
R71574 Mem.mem
R71553 Coq.Lists.List.list
R71558 Values.block
R71542 Mem.mem
R71529 Cminorgenproof.env
R71509 Coq.Lists.List.list
R71514 Values.val
R71488 Cminorgenproof.function
R71478 Mem.mem
R72094 Cminorgen.build_compilenv
R72094 Cminorgen.build_compilenv
R72177 Coqlib.zle
R72191 Integers.max_signed
R72177 Coqlib.zle
R72191 Integers.max_signed
R72262 Mem.alloc
R72262 Mem.alloc
R72318 Cminorgenproof.function_entry_ok
R72318 Cminorgenproof.function_entry_ok
R72623 Coq.Init.Logic "'exists' x , p" type_scope
R72704 Coq.Init.Logic "A /\ B" type_scope
R72649 Cminor.outcome_result_value
R72689 AST.sig_res
R72678 Cminorgenproof.fn_sig
R72718 Mem.val_inject
R72623 Coq.Init.Logic "'exists' x , p" type_scope
R72704 Coq.Init.Logic "A /\ B" type_scope
R72649 Cminor.outcome_result_value
R72689 AST.sig_res
R72678 Cminorgenproof.fn_sig
R72718 Mem.val_inject
R72854 AST.sig_res
R72863 Cminorgenproof.fn_sig
R72854 AST.sig_res
R72863 Cminorgenproof.fn_sig
R72912 Values.Vundef
R72912 Values.Vundef
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R72983 AST.sig_res
R72992 Cminorgenproof.fn_sig
R72983 AST.sig_res
R72992 Cminorgenproof.fn_sig
R73041 Values.Vundef
R73041 Values.Vundef
R73101 AST.sig_res
R73110 Cminorgenproof.fn_sig
R73101 AST.sig_res
R73110 Cminorgenproof.fn_sig
R73272 Mem.free
R73272 Mem.free
R73382 Cminor.exec_Scons_continue
R73382 Cminor.exec_Scons_continue
R73442 Cminor.outcome_block
R73456 Cminor.Out_normal
R73425 Cminor.Out_normal
R73442 Cminor.outcome_block
R73456 Cminor.Out_normal
R73425 Cminor.Out_normal
R73477 Cminor.exec_Sblock
R73477 Cminor.exec_Sblock
R73601 Mem.free_inject
R73601 Mem.free_inject
R73768 Mem.inject_incr_trans
R73768 Mem.inject_incr_trans
R73870 Coq.Init.Logic "x = y" type_scope
R73842 Mem.nextblock
R73853 Mem.free_list
R73872 Mem.nextblock
R73870 Coq.Init.Logic "x = y" type_scope
R73842 Mem.nextblock
R73853 Mem.free_list
R73872 Mem.nextblock
R73960 Mem.nextblock
R73960 Mem.nextblock
R73993 Cminorgenproof.match_callstack_freelist
R73993 Cminorgenproof.match_callstack_freelist
R74281 Cminorgenproof.exec_stmt_prop
R74315 Cminorgenproof.Out_normal
R74301 Cminorgenproof.Sexpr
R74245 Cminorgenproof.eval_expr_prop
R74260 Coq.Lists.List.nil
R74209 Cminorgenproof.eval_expr
R74224 Coq.Lists.List.nil
R74200 Values.val
R74190 Mem.mem
R74171 Cminorgenproof.expr
R74161 Mem.mem
R74149 Cminorgenproof.env
R74412 Mem.val_nil_inject
R74412 Mem.val_nil_inject
R74555 Cminor.Out_normal
R74555 Cminor.Out_normal
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R74986 Cminorgenproof.exec_stmt_prop
R75006 Cminorgenproof.Sifthenelse
R74945 Cminorgenproof.exec_stmtlist_prop
R74904 Cminorgenproof.exec_stmtlist
R74883 Values.is_true
R74846 Cminorgenproof.eval_expr_prop
R74861 Coq.Lists.List.nil
R74809 Cminorgenproof.eval_expr
R74824 Coq.Lists.List.nil
R74794 Cminorgenproof.outcome
R74777 Mem.mem
R74766 Values.val
R74755 Mem.mem
R74737 Cminorgenproof.stmtlist
R74737 Cminorgenproof.stmtlist
R74713 Cminorgenproof.expr
R74703 Mem.mem
R74691 Cminorgenproof.env
R75121 Mem.val_nil_inject
R75121 Mem.val_nil_inject
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R75422 Cmconstrproof.exec_ifthenelse_true
R75422 Cmconstrproof.exec_ifthenelse_true
R75536 Mem.inject_incr_trans
R75536 Mem.inject_incr_trans
R75924 Cminorgenproof.exec_stmt_prop
R75944 Cminorgenproof.Sifthenelse
R75883 Cminorgenproof.exec_stmtlist_prop
R75842 Cminorgenproof.exec_stmtlist
R75820 Values.is_false
R75783 Cminorgenproof.eval_expr_prop
R75798 Coq.Lists.List.nil
R75746 Cminorgenproof.eval_expr
R75761 Coq.Lists.List.nil
R75731 Cminorgenproof.outcome
R75714 Mem.mem
R75703 Values.val
R75692 Mem.mem
R75674 Cminorgenproof.stmtlist
R75674 Cminorgenproof.stmtlist
R75650 Cminorgenproof.expr
R75640 Mem.mem
R75628 Cminorgenproof.env
R76059 Mem.val_nil_inject
R76059 Mem.val_nil_inject
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R76360 Cmconstrproof.exec_ifthenelse_false
R76360 Cmconstrproof.exec_ifthenelse_false
R76475 Mem.inject_incr_trans
R76475 Mem.inject_incr_trans
R76824 Cminorgenproof.exec_stmt_prop
R76844 Cminorgenproof.Sloop
R76778 Cminorgenproof.exec_stmt_prop
R76799 Cminorgenproof.Sloop
R76732 Cminorgenproof.exec_stmt
R76753 Cminorgenproof.Sloop
R76684 Cminorgenproof.exec_stmtlist_prop
R76713 Cminorgenproof.Out_normal
R76636 Cminorgenproof.exec_stmtlist
R76665 Cminorgenproof.Out_normal
R76621 Cminorgenproof.outcome
R76609 Mem.mem
R76609 Mem.mem
R76583 Cminorgenproof.stmtlist
R76572 Mem.mem
R76560 Cminorgenproof.env
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R77229 Cminor.exec_Sloop_loop
R77229 Cminor.exec_Sloop_loop
R77301 Mem.inject_incr_trans
R77301 Mem.inject_incr_trans
R77564 Cminorgenproof.exec_stmt_prop
R77584 Cminorgenproof.Sloop
R77542 Coq.Init.Logic "x <> y" type_scope
R77545 Cminorgenproof.Out_normal
R77499 Cminorgenproof.exec_stmtlist_prop
R77460 Cminorgenproof.exec_stmtlist
R77445 Cminorgenproof.outcome
R77433 Mem.mem
R77410 Cminorgenproof.stmtlist
R77399 Mem.mem
R77387 Cminorgenproof.env
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R77846 Cminor.exec_Sloop_stop
R77846 Cminor.exec_Sloop_stop
R78124 Cminorgenproof.exec_stmt_prop
R78166 Cminorgenproof.outcome_block
R78144 Cminorgenproof.Sblock
R78085 Cminorgenproof.exec_stmtlist_prop
R78046 Cminorgenproof.exec_stmtlist
R78031 Cminorgenproof.outcome
R78019 Mem.mem
R77996 Cminorgenproof.stmtlist
R77985 Mem.mem
R77973 Cminorgenproof.env
R78394 Cminor.outcome_block
R78394 Cminor.outcome_block
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R78446 Cminor.exec_Sblock
R78446 Cminor.exec_Sblock
R78672 Cminorgenproof.exec_stmt_prop
R78706 Cminorgenproof.Out_exit
R78692 Cminorgenproof.Sexit
R78663 Coq.Init.Datatypes.nat
R78653 Mem.mem
R78641 Cminorgenproof.env
R78809 Cminor.Out_exit
R78809 Cminor.Out_exit
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R78953 Cminorgenproof.exec_stmt_prop
R78997 Cminorgenproof.Out_return
R79010 Coq.Init.Datatypes.None
R78973 Cminorgenproof.Sreturn
R78983 Coq.Init.Datatypes.None
R78944 Mem.mem
R78932 Cminorgenproof.env
R79105 Cminor.Out_return
R79116 Coq.Init.Datatypes.None
R79105 Cminor.Out_return
R79116 Coq.Init.Datatypes.None
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R79365 Cminorgenproof.exec_stmt_prop
R79414 Cminorgenproof.Out_return
R79428 Coq.Init.Datatypes.Some
R79385 Cminorgenproof.Sreturn
R79396 Coq.Init.Datatypes.Some
R79329 Cminorgenproof.eval_expr_prop
R79344 Coq.Lists.List.nil
R79293 Cminorgenproof.eval_expr
R79308 Coq.Lists.List.nil
R79284 Values.val
R79274 Mem.mem
R79255 Cminorgenproof.expr
R79245 Mem.mem
R79233 Cminorgenproof.env
R79520 Mem.val_nil_inject
R79520 Mem.val_nil_inject
R79662 Cminor.Out_return
R79674 Coq.Init.Datatypes.Some
R79662 Cminor.Out_return
R79674 Coq.Init.Datatypes.Some
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R79827 Cminorgenproof.exec_stmtlist_prop
R79859 Cminorgenproof.Out_normal
R79850 Cminorgenproof.Snil
R79818 Mem.mem
R79806 Cminorgenproof.env
R79960 Cminor.Out_normal
R79960 Cminor.Out_normal
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R80336 Cminorgenproof.exec_stmtlist_prop
R80360 Cminorgenproof.Scons
R80296 Cminorgenproof.exec_stmtlist_prop
R80256 Cminorgenproof.exec_stmtlist
R80213 Cminorgenproof.exec_stmt_prop
R80237 Cminorgenproof.Out_normal
R80170 Cminorgenproof.exec_stmt
R80194 Cminorgenproof.Out_normal
R80155 Cminorgenproof.outcome
R80143 Mem.mem
R80143 Mem.mem
R80122 Cminorgenproof.stmtlist
R80103 Cminorgenproof.stmt
R80093 Mem.mem
R80081 Cminorgenproof.env
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R80745 Cminor.exec_Scons_continue
R80745 Cminor.exec_Scons_continue
R80820 Mem.inject_incr_trans
R80820 Mem.inject_incr_trans
R81086 Cminorgenproof.exec_stmtlist_prop
R81110 Cminorgenproof.Scons
R81064 Coq.Init.Logic "x <> y" type_scope
R81067 Cminorgenproof.Out_normal
R81026 Cminorgenproof.exec_stmt_prop
R80992 Cminorgenproof.exec_stmt
R80977 Cminorgenproof.outcome
R80965 Mem.mem
R80947 Cminorgenproof.stmtlist
R80928 Cminorgenproof.stmt
R80918 Mem.mem
R80906 Cminorgenproof.env
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R81374 Cminor.exec_Scons_stop
R81374 Cminor.exec_Scons_stop
R81559 Cminorgenproof.eval_funcall_prop
R81516 Cminorgenproof.eval_funcall
R81606 Cminorplus.eval_funcall_ind5
R82650 Cminorgenproof.transl_stmtlist_Scons_1_correct
R82613 Cminorgenproof.transl_stmtlist_Scons_2_correct
R82579 Cminorgenproof.transl_stmtlist_Snil_correct
R82541 Cminorgenproof.transl_stmt_Sreturn_some_correct
R82503 Cminorgenproof.transl_stmt_Sreturn_none_correct
R82472 Cminorgenproof.transl_stmt_Sexit_correct
R82440 Cminorgenproof.transl_stmt_Sblock_correct
R82404 Cminorgenproof.transl_stmt_Sloop_exit_correct
R82368 Cminorgenproof.transl_stmt_Sloop_loop_correct
R82325 Cminorgenproof.transl_stmt_Sifthenelse_false_correct
R82283 Cminorgenproof.transl_stmt_Sifthenelse_true_correct
R82252 Cminorgenproof.transl_stmt_Sexpr_correct
R82224 Cminorgenproof.transl_funcall_correct
R82189 Cminorgenproof.transl_exprlist_Econs_correct
R82155 Cminorgenproof.transl_exprlist_Enil_correct
R82122 Cminorgenproof.transl_expr_Eletvar_correct
R82092 Cminorgenproof.transl_expr_Elet_correct
R82050 Cminorgenproof.transl_expr_Econdition_false_correct
R82009 Cminorgenproof.transl_expr_Econdition_true_correct
R81978 Cminorgenproof.transl_expr_Ecall_correct
R81946 Cminorgenproof.transl_expr_Estore_correct
R81915 Cminorgenproof.transl_expr_Eload_correct
R81886 Cminorgenproof.transl_expr_Eop_correct
R81846 Cminorgenproof.transl_expr_Eaddrof_global_correct
R81807 Cminorgenproof.transl_expr_Eaddrof_local_correct
R81774 Cminorgenproof.transl_expr_Eassign_correct
R81744 Cminorgenproof.transl_expr_Evar_correct
R81719 Cminorgenproof.exec_stmtlist_prop
R81699 Cminorgenproof.exec_stmt_prop
R81676 Cminorgenproof.eval_funcall_prop
R81652 Cminorgenproof.eval_exprlist_prop
R81632 Cminorgenproof.eval_expr_prop
R82909 Cminorgenproof.match_globalenvs
R82858 Coqlib.zlt
R82867 Mem.nextblock
R82899 Coq.Init.Datatypes.None
R82883 Coq.Init.Datatypes.Some
R82887 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R82812 Globalenvs.init_mem
R82778 Globalenvs.init_mem
R83012 Coqlib.zlt_true
R83012 Coqlib.zlt_true
R83048 Globalenvs.find_symbol_inv
R83048 Globalenvs.find_symbol_inv
R83099 Cminorgenproof.symbols_preserved
R83099 Cminorgenproof.symbols_preserved
R83146 Coqlib.zlt_true
R83146 Coqlib.zlt_true
R83176 Mem.nextblock_pos
R83176 Mem.nextblock_pos
R83287 Cminor.exec_program
R83307 Values.Vint
R83253 Cminorgenproof.exec_program
R83274 Values.Vint
R83383 Cminorgenproof.function_ptr_translated
R83383 Cminorgenproof.function_ptr_translated
R83455 Globalenvs.init_mem
R83455 Globalenvs.init_mem
R83505 Coqlib.zlt
R83515 Mem.nextblock
R83547 Coq.Init.Datatypes.None
R83531 Coq.Init.Datatypes.Some
R83535 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R83505 Coqlib.zlt
R83515 Mem.nextblock
R83547 Coq.Init.Datatypes.None
R83531 Coq.Init.Datatypes.Some
R83535 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R83571 Mem.mem_inject
R83571 Mem.mem_inject
R83637 Coqlib.zlt_false
R83637 Coqlib.zlt_false
R83668 Coqlib.zlt
R83676 Mem.nextblock
R83668 Coqlib.zlt
R83676 Mem.nextblock
R83856 Globalenvs.initmem_undef
R83856 Globalenvs.initmem_undef
R83966 Coqlib.zlt
R83974 Mem.nextblock
R83966 Coqlib.zlt
R83974 Mem.nextblock
R84022 Coqlib.zlt
R84030 Mem.nextblock
R84022 Coqlib.zlt
R84030 Mem.nextblock
R84105 Cminorgenproof.match_callstack
R84146 Mem.nextblock
R84131 Mem.nextblock
R84123 Coq.Lists.List.nil
R84105 Cminorgenproof.match_callstack
R84146 Mem.nextblock
R84131 Mem.nextblock
R84123 Coq.Lists.List.nil
R84195 Cminorgenproof.match_globalenvs_init
R84195 Cminorgenproof.match_globalenvs_init
R84249 Cminorgenproof.transl_function_correct
R84352 Mem.val_nil_inject
R84249 Cminorgenproof.transl_function_correct
R84352 Mem.val_nil_inject
R84517 AST.prog_main
R84539 AST.prog_main
R84517 AST.prog_main
R84539 AST.prog_main
R84572 Cminorgenproof.symbols_preserved
R84572 Cminorgenproof.symbols_preserved
R84635 Cminorgen.transl_function
R84599 AST.transform_partial_program_main
R84635 Cminorgen.transl_function
R84599 AST.transform_partial_program_main
R84716 Cminorgenproof.sig_transl_function
R84716 Cminorgenproof.sig_transl_function
R84754 Globalenvs.init_mem_transf_partial
R84783 Cminorgen.transl_function
R84754 Globalenvs.init_mem_transf_partial
R84783 Cminorgen.transl_function
FRegisters
R130 Coq.NArith.BinPos.positive
R171 Coqlib.peq
R198 Maps.t
R205 AST.typ
R378 Coq.Init.Datatypes.None
R394 Coq.Init.Datatypes.Some
R404 Registers.get
R339 Registers.t
R313 Coq.Init.Datatypes.option
R320 Registers.reg
R509 Registers.t
R543 Coq.Init.Datatypes.None
R558 Coq.Init.Datatypes.Some
R568 Registers.set
R495 Registers.t
R471 Coq.Init.Datatypes.option
R478 Registers.reg
R615 Registers.get
R667 Coq.Lists.List.map
R686 Registers.get
R745 Registers.set
FRTL
R273 Coq.NArith.BinPos.positive
R324 RTL.node
R385 RTL.node
R378 Registers.reg
R366 Coq.Lists.List.list
R371 Registers.reg
R353 Op.operation
R465 RTL.node
R458 Registers.reg
R446 Coq.Lists.List.list
R451 Registers.reg
R432 Op.addressing
R416 AST.memory_chunk
R546 RTL.node
R539 Registers.reg
R527 Coq.Lists.List.list
R532 Registers.reg
R513 Op.addressing
R497 AST.memory_chunk
R624 RTL.node
R617 Registers.reg
R605 Coq.Lists.List.list
R610 Registers.reg
R594 Coq.Init.Datatypes "x + y" type_scope
R590 Registers.reg
R596 AST.ident
R577 AST.signature
R688 RTL.node
R680 RTL.node
R668 Coq.Lists.List.list
R673 Registers.reg
R655 Op.condition
R721 Coq.Init.Datatypes.option
R728 Registers.reg
R773 Maps.t
R781 RTL.instruction
R842 AST.signature
R866 Coq.Lists.List.list
R871 Registers.reg
R892 Coq.ZArith.BinInt.Z
R906 RTL.code
R929 RTL.node
R948 RTL.node
R1004 Coq.Init.Logic "A \/ B" type_scope
R987 Coqlib.Plt
R1018 Coq.Init.Logic "x = y" type_scope
R1014 Maps "a ! b"
R1020 Coq.Init.Datatypes.None
R980 RTL.node
R1051 AST.program
R1063 RTL.function
R1093 Globalenvs.t
R1100 RTL.function
R1131 Registers.t
R1140 Values.val
R1238 RTL.regset
R1214 Coq.Lists.List.list
R1219 Registers.reg
R1199 Coq.Lists.List.list
R1204 Values.val
R1275 Coq.Lists.List "x :: y" list_scope
R1285 Coq.Lists.List "x :: y" list_scope
R1294 Registers.set
R1341 Registers.init
R1353 Values.Vundef
R1214 Coq.Lists.List.list
R1219 Registers.reg
R1199 Coq.Lists.List.list
R1204 Values.val
R1398 RTL.genv
R1464 Coq.Init.Datatypes.option
R1471 RTL.function
R1504 Coq.Init.Datatypes.inl
R1513 Globalenvs.find_funct
R1534 Registers "a # b"
R1541 Coq.Init.Datatypes.inr
R1565 Globalenvs.find_symbol
R1603 Coq.Init.Datatypes.None
R1611 Coq.Init.Datatypes.None
R1624 Coq.Init.Datatypes.Some
R1634 Globalenvs.find_funct_ptr
R1454 RTL.regset
R1440 Coq.Init.Datatypes "x + y" type_scope
R1436 Registers.reg
R1442 AST.ident
R1801 Mem.mem
R1791 RTL.regset
R1783 RTL.node
R1754 Mem.mem
R1744 RTL.regset
R1736 RTL.node
R1707 Values.val
R1699 RTL.code
R3498 Mem.mem
R3488 RTL.regset
R3480 RTL.node
R3455 Mem.mem
R3445 RTL.regset
R3437 RTL.node
R3412 Values.val
R3404 RTL.code
R4032 Mem.mem
R4025 Values.val
R3986 Mem.mem
R3974 Coq.Lists.List.list
R3979 Values.val
R3962 RTL.function
R1873 Coq.Init.Logic "x = y" type_scope
R1869 Maps "a ! b"
R1875 Coq.Init.Datatypes.Some
R1880 RTL.Inop
R2125 Registers "a # b <- c"
R2074 Coq.Init.Logic "x = y" type_scope
R2041 Op.eval_operation
R2067 Registers "a ## b"
R2076 Coq.Init.Datatypes.Some
R2004 Coq.Init.Logic "x = y" type_scope
R2000 Maps "a ! b"
R2006 Coq.Init.Datatypes.Some
R2011 RTL.Iop
R2392 Registers "a # b <- c"
R2341 Coq.Init.Logic "x = y" type_scope
R2321 Mem.loadv
R2343 Coq.Init.Datatypes.Some
R2303 Coq.Init.Logic "x = y" type_scope
R2267 Op.eval_addressing
R2296 Registers "a ## b"
R2305 Coq.Init.Datatypes.Some
R2220 Coq.Init.Logic "x = y" type_scope
R2216 Maps "a ! b"
R2222 Coq.Init.Datatypes.Some
R2227 RTL.Iload
R2619 Coq.Init.Logic "x = y" type_scope
R2591 Mem.storev
R2614 Registers "a # b"
R2621 Coq.Init.Datatypes.Some
R2573 Coq.Init.Logic "x = y" type_scope
R2537 Op.eval_addressing
R2566 Registers "a ## b"
R2575 Coq.Init.Datatypes.Some
R2489 Coq.Init.Logic "x = y" type_scope
R2485 Maps "a ! b"
R2491 Coq.Init.Datatypes.Some
R2496 RTL.Istore
R2945 Registers "a # b <- c"
R2886 Registers "a ## b"
R2846 Coq.Init.Logic "x = y" type_scope
R2851 RTL.fn_sig
R2824 Coq.Init.Logic "x = y" type_scope
R2803 RTL.find_function
R2826 Coq.Init.Datatypes.Some
R2759 Coq.Init.Logic "x = y" type_scope
R2755 Maps "a ! b"
R2761 Coq.Init.Datatypes.Some
R2766 RTL.Icall
R3115 Coq.Init.Logic "x = y" type_scope
R3086 Op.eval_condition
R3108 Registers "a ## b"
R3117 Coq.Init.Datatypes.Some
R3122 Coq.Init.Datatypes.true
R3042 Coq.Init.Logic "x = y" type_scope
R3038 Maps "a ! b"
R3044 Coq.Init.Datatypes.Some
R3049 RTL.Icond
R3326 Coq.Init.Logic "x = y" type_scope
R3297 Op.eval_condition
R3319 Registers "a ## b"
R3328 Coq.Init.Datatypes.Some
R3333 Coq.Init.Datatypes.false
R3253 Coq.Init.Logic "x = y" type_scope
R3249 Maps "a ! b"
R3255 Coq.Init.Datatypes.Some
R3260 RTL.Icond
R4433 Mem.free
R4366 Coq.Init.Logic "x = y" type_scope
R4368 Registers.regmap_optget
R4385 Values.Vundef
R4333 Coq.Init.Logic "x = y" type_scope
R4329 Maps "a ! b"
R4321 RTL.fn_code
R4335 Coq.Init.Datatypes.Some
R4340 RTL.Ireturn
R4249 RTL.init_regs
R4267 RTL.fn_params
R4233 RTL.fn_entrypoint
R4193 Values.Vptr
R4202 Integers.zero
R4183 RTL.fn_code
R4147 Coq.Init.Logic "x = y" type_scope
R4116 Mem.alloc
R4133 RTL.fn_stacksize
R4149 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4805 RTL.exec_instrs
R4761 RTL.exec_instrs
R4718 RTL.exec_instr
R4869 RTL.exec_trans
R4869 RTL.exec_trans
R4887 RTL.exec_one
R4887 RTL.exec_one
R5091 RTL.exec_instr
R5070 Coq.Init.Logic "x = y" type_scope
R5075 Registers "a # b <- c"
R5052 Coq.Init.Logic "x = y" type_scope
R5019 Op.eval_operation
R5045 Registers "a ## b"
R5054 Coq.Init.Datatypes.Some
R4986 Coq.Init.Logic "x = y" type_scope
R4982 Maps "a ! b"
R4988 Coq.Init.Datatypes.Some
R4993 RTL.Iop
R5163 RTL.exec_Iop
R5163 RTL.exec_Iop
R5419 RTL.exec_instr
R5398 Coq.Init.Logic "x = y" type_scope
R5403 Registers "a # b <- c"
R5380 Coq.Init.Logic "x = y" type_scope
R5360 Mem.loadv
R5382 Coq.Init.Datatypes.Some
R5346 Coq.Init.Logic "x = y" type_scope
R5310 Op.eval_addressing
R5339 Registers "a ## b"
R5348 Coq.Init.Datatypes.Some
R5267 Coq.Init.Logic "x = y" type_scope
R5263 Maps "a ! b"
R5269 Coq.Init.Datatypes.Some
R5274 RTL.Iload
R5491 RTL.exec_Iload
R5491 RTL.exec_Iload
R5625 Coq.Init.Logic "x <> y" type_scope
R5621 Maps "a ! b"
R5628 Coq.Init.Datatypes.None
R5578 RTL.exec_instr
R5802 Coq.Init.Logic "x <> y" type_scope
R5798 Maps "a ! b"
R5805 Coq.Init.Datatypes.None
R5786 Coq.Init.Logic "x <> y" type_scope
R5781 Maps "a ! b"
R5789 Coq.Init.Datatypes.None
R5737 RTL.exec_instrs
R5858 RTL.exec_instr_present
R5858 RTL.exec_instr_present
R6034 Coq.Init.Logic "'exists' x , p" type_scope
R6044 Coq.Init.Logic "'exists' x , p" type_scope
R6054 Coq.Init.Logic "'exists' x , p" type_scope
R6109 Coq.Init.Logic "A /\ B" type_scope
R6100 Coq.Init.Logic "x = y" type_scope
R6066 Globalenvs.find_symbol
R6089 AST.prog_main
R6102 Coq.Init.Datatypes.Some
R6148 Coq.Init.Logic "A /\ B" type_scope
R6139 Coq.Init.Logic "x = y" type_scope
R6114 Globalenvs.find_funct_ptr
R6141 Coq.Init.Datatypes.Some
R6194 Coq.Init.Logic "A /\ B" type_scope
R6164 Coq.Init.Logic "x = y" type_scope
R6156 RTL.fn_sig
R6166 AST.mksignature
R6183 Coq.Init.Datatypes.Some
R6188 AST.Tint
R6178 Coq.Lists.List.nil
R6199 RTL.exec_function
R6218 Coq.Lists.List.nil
R6013 Globalenvs.init_mem
R5981 Globalenvs.globalenv
R5954 Values.val
R5941 RTL.program
R6322 Coq.Lists.List.list
R6327 RTL.node
R6354 Maps "a ! b"
R6346 RTL.fn_code
R6367 Coq.Init.Datatypes.None
R6375 Coq.Lists.List.nil
R6383 Coq.Init.Datatypes.Some
R6420 RTL.Inop
R6432 Coq.Lists.List "x :: y" list_scope
R6435 Coq.Lists.List.nil
R6447 RTL.Iop
R6470 Coq.Lists.List "x :: y" list_scope
R6473 Coq.Lists.List.nil
R6485 RTL.Iload
R6518 Coq.Lists.List "x :: y" list_scope
R6521 Coq.Lists.List.nil
R6533 RTL.Istore
R6567 Coq.Lists.List "x :: y" list_scope
R6570 Coq.Lists.List.nil
R6582 RTL.Icall
R6612 Coq.Lists.List "x :: y" list_scope
R6615 Coq.Lists.List.nil
R6627 RTL.Icond
R6662 Coq.Lists.List "x :: y" list_scope
R6671 Coq.Lists.List "x :: y" list_scope
R6674 Coq.Lists.List.nil
R6686 RTL.Ireturn
R6704 Coq.Lists.List.nil
R6314 RTL.node
R6299 RTL.function
R6844 Coq.Lists.List.In
R6852 RTL.successors
R6791 RTL.exec_instr
R6808 RTL.fn_code
R6923 RTL.fn_code
R6923 RTL.fn_code
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R7087 RTL.instruction
R7072 RTL.instruction
R7064 RTL.node
R7249 Coq.Init.Logic "A \/ B" type_scope
R7235 Coqlib.Plt
R7276 Coq.Init.Logic "x = y" type_scope
R7271 Maps "a ! b"
R7253 Maps.map
R7278 Coq.Init.Datatypes.None
R7228 RTL.node
R7194 Coq.Init.Logic "A \/ B" type_scope
R7180 Coqlib.Plt
R7202 Coq.Init.Logic "x = y" type_scope
R7198 Maps "a ! b"
R7204 Coq.Init.Datatypes.None
R7173 RTL.node
R7151 RTL.node
R7136 RTL.code
R7359 Maps.gmap
R7359 Maps.gmap
R7445 RTL.function
R7459 RTL.mkfunction
R7604 RTL.transf_code_wf
R7648 RTL.fn_code_wf
R7634 RTL.fn_nextpc
R7622 RTL.fn_code
R7588 RTL.fn_nextpc
R7566 RTL.fn_entrypoint
R7529 Maps.map
R7549 RTL.fn_code
R7510 RTL.fn_stacksize
R7492 RTL.fn_params
R7477 RTL.fn_sig
R7433 RTL.function
FRTLgen
R313 Coq.Lists.List.list
R318 AST.ident
R305 Cminor.expr
R792 Coq.Lists.List.list
R797 AST.ident
R780 Cminor.condexpr
R1039 Coq.Lists.List.list
R1044 AST.ident
R1027 Cminor.exprlist
R346 Cminor.Evar
R357 Coq.Lists.List.nil
R365 Cminor.Eassign
R384 Coq.Lists.List "x :: y" list_scope
R406 Cminor.Eop
R443 Cminor.Eload
R483 Cminor.Estore
R522 Coq.Lists.List "x ++ y" list_scope
R544 Cminor.Ecall
R575 Coq.Lists.List "x ++ y" list_scope
R602 Cminor.Econdition
R641 Coq.Lists.List "x ++ y" list_scope
R659 Coq.Lists.List "x ++ y" list_scope
R681 Cminor.Elet
R708 Coq.Lists.List "x ++ y" list_scope
R730 Cminor.Eletvar
R743 Coq.Lists.List.nil
R305 Cminor.expr
R825 Cminor.CEtrue
R835 Coq.Lists.List.nil
R843 Cminor.CEfalse
R854 Coq.Lists.List.nil
R862 Cminor.CEcond
R904 Cminor.CEcondition
R950 Coq.Lists.List "x ++ y" list_scope
R972 Coq.Lists.List "x ++ y" list_scope
R780 Cminor.condexpr
R1072 Cminor.Enil
R1080 Coq.Lists.List.nil
R1088 Cminor.Econs
R1117 Coq.Lists.List "x ++ y" list_scope
R1027 Cminor.exprlist
R1234 Maps.t
R1242 Registers.reg
R1262 Coq.Lists.List.list
R1267 Registers.reg
R1320 Coq.NArith.BinPos.positive
R1345 Coq.NArith.BinPos.positive
R1366 RTL.code
R1423 Coq.Init.Logic "A \/ B" type_scope
R1404 Coqlib.Plt
R1437 Coq.Init.Logic "x = y" type_scope
R1433 Maps "a ! b"
R1439 Coq.Init.Datatypes.None
R1393 Coq.NArith.BinPos.positive
R1570 RTLgen.state
R1629 RTLgen.res
R1620 RTLgen.state
R1670 RTLgen.mon
R1697 RTLgen.OK
R1687 RTLgen.state
R1734 RTLgen.mon
R1761 RTLgen.Error
R1751 RTLgen.state
R1827 RTLgen.mon
R1881 RTLgen.Error
R1890 RTLgen.Error
R1904 RTLgen.OK
R1846 RTLgen.state
R1818 RTLgen.mon
R1802 RTLgen.mon
R2002 RTLgen.mon
R2013 RTLgen.bind
R2043 Coq.Init.Datatypes.snd
R2034 Coq.Init.Datatypes.fst
R1993 RTLgen.mon
R1966 RTLgen.mon
R1973 Coq.Init.Datatypes "x * y" type_scope
R2085 RTLgen.bind
R2205 RTLgen.bind2
R2384 Coq.Init.Logic "A \/ B" type_scope
R2366 Coqlib.Plt
R2416 Coq.Init.Logic "x = y" type_scope
R2411 Maps "a ! b"
R2388 Maps.empty
R2400 RTL.instruction
R2418 Coq.Init.Datatypes.None
R2452 Maps.gempty
R2452 Maps.gempty
R2496 RTLgen.state
R2507 RTLgen.mkstate
R2563 RTLgen.init_state_wf
R2538 Maps.empty
R2550 RTL.instruction
R2665 Coq.Init.Logic "A \/ B" type_scope
R2648 Coqlib.Plt
R2656 Coq.NArith.BinPos.Psucc
R2699 Coq.Init.Logic "x = y" type_scope
R2694 Maps "a ! b"
R2669 Maps.set
R2686 RTLgen.st_code
R2701 Coq.Init.Datatypes.None
R2630 RTLgen.st_nextnode
R2730 Coqlib.peq
R2730 Coqlib.peq
R2772 Coqlib.Plt_succ
R2772 Coqlib.Plt_succ
R2792 Maps.gso
R2792 Maps.gso
R2817 RTLgen.st_wf
R2817 RTLgen.st_wf
R2851 Coqlib.Plt_trans_succ
R2851 Coqlib.Plt_trans_succ
R2943 RTLgen.mon
R2947 RTL.node
R3002 RTLgen.OK
R3015 RTLgen.mkstate
R3125 RTLgen.add_instr_wf
R3081 Maps.set
R3098 RTLgen.st_code
R3055 Coq.NArith.BinPos.Psucc
R3026 RTLgen.st_nextreg
R2982 RTLgen.st_nextnode
R2928 RTL.instruction
R3218 Coq.Init.Logic "A \/ B" type_scope
R3187 Coqlib.Plt
R3195 Coq.NArith.BinPos.Psucc
R3204 RTLgen.st_nextnode
R3236 Coq.Init.Logic "x = y" type_scope
R3232 Maps "a ! b"
R3224 RTLgen.st_code
R3238 Coq.Init.Datatypes.None
R3267 RTLgen.st_wf
R3267 RTLgen.st_wf
R3301 Coqlib.Plt_trans_succ
R3301 Coqlib.Plt_trans_succ
R3371 RTLgen.mon
R3375 RTL.node
R3430 RTLgen.OK
R3436 RTLgen.mkstate
R3500 RTLgen.reserve_instr_wf
R3472 RTLgen.st_code
R3460 Coq.NArith.BinPos.Psucc
R3447 RTLgen.st_nextreg
R3410 RTLgen.st_nextnode
R3627 Coq.Init.Logic "A \/ B" type_scope
R3604 Coqlib.Plt
R3614 RTLgen.st_nextnode
R3661 Coq.Init.Logic "x = y" type_scope
R3656 Maps "a ! b"
R3631 Maps.set
R3648 RTLgen.st_code
R3663 Coq.Init.Datatypes.None
R3564 Coqlib.Plt
R3573 RTLgen.st_nextnode
R3694 Coqlib.peq
R3694 Coqlib.peq
R3752 Maps.gso
R3752 Maps.gso
R3776 RTLgen.st_wf
R3776 RTLgen.st_wf
R3848 RTLgen.mon
R3852 Coq.Init.Datatypes.unit
R3881 Coqlib.plt
R3890 RTLgen.st_nextnode
R3914 Coq.Init.Specif.left
R3934 RTLgen.OK
R3941 RTLgen.mkstate
R4056 RTLgen.update_instr_wf
R4004 Maps.set
R4021 RTLgen.st_code
R3967 RTLgen.st_nextnode
R3952 RTLgen.st_nextreg
R3937 Coq.Init.Datatypes.tt
R4090 Coq.Init.Specif.right
R4109 RTLgen.Error
R4115 Coq.Init.Datatypes.unit
R3833 RTL.instruction
R3823 RTL.node
R4151 RTLgen.mon
R4155 Registers.reg
R4177 RTLgen.OK
R4203 RTLgen.mkstate
R4281 RTLgen.st_wf
R4269 RTLgen.st_code
R4253 RTLgen.st_nextnode
R4212 Coq.NArith.BinPos.Psucc
R4221 RTLgen.st_nextreg
R4183 RTLgen.st_nextreg
R4353 RTLgen.mapping
R4366 RTLgen.mkmapping
R4394 Coq.Lists.List.nil
R4377 Maps.empty
R4389 Registers.reg
R4450 RTLgen.mon
R4459 Coq.Init.Datatypes "x * y" type_scope
R4455 Registers.reg
R4461 RTLgen.mapping
R4475 RTLgen "'do' X <- A ; B"
R4483 RTLgen.new_reg
R4497 RTLgen.ret
R4501 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4505 RTLgen.mkmapping
R4577 RTLgen.map_letvars
R4516 Maps.set
R4538 RTLgen.map_vars
R4441 AST.ident
R4425 RTLgen.mapping
R4682 RTLgen.mon
R4696 Coq.Init.Datatypes "x * y" type_scope
R4687 Coq.Lists.List.list
R4692 Registers.reg
R4698 RTLgen.mapping
R4634 Coq.Lists.List.list
R4639 AST.ident
R4617 RTLgen.mapping
R4733 Coq.Lists.List.nil
R4740 RTLgen.ret
R4744 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4745 Coq.Lists.List.nil
R4762 Coq.Lists.List "x :: y" list_scope
R4777 RTLgen "'do' ( X , Y ) <- A ; B"
R4817 RTLgen "'do' ( X , Y ) <- A ; B"
R4834 RTLgen.add_var
R4857 RTLgen.ret
R4861 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4865 Coq.Lists.List "x :: y" list_scope
R4634 Coq.Lists.List.list
R4639 AST.ident
R4617 RTLgen.mapping
R4937 RTLgen.mon
R4941 Registers.reg
R4956 Maps.get
R4976 RTLgen.map_vars
R4995 Coq.Init.Datatypes.None
R5003 RTLgen.error
R5009 Registers.reg
R5017 Coq.Init.Datatypes.Some
R5027 RTLgen.ret
R4928 AST.ident
R4912 RTLgen.mapping
R5089 RTLgen.mapping
R5102 RTLgen.mkmapping
R5130 Coq.Lists.List "x :: y" list_scope
R5138 RTLgen.map_letvars
R5117 RTLgen.map_vars
R5082 Registers.reg
R5069 RTLgen.mapping
R5205 RTLgen.mon
R5209 Registers.reg
R5224 Coq.Lists.List.nth_error
R5244 RTLgen.map_letvars
R5270 Coq.Init.Datatypes.None
R5278 RTLgen.error
R5284 Registers.reg
R5292 Coq.Init.Datatypes.Some
R5302 RTLgen.ret
R5198 Coq.Init.Datatypes.nat
R5183 RTLgen.mapping
R5426 RTLgen.mon
R5430 Registers.reg
R5456 Cminor.Evar
R5476 Coq.Lists.List.In_dec
R5483 AST.ident_eq
R5529 RTLgen.find_var
R5510 RTLgen.new_reg
R5549 Cminor.Eletvar
R5568 RTLgen.find_letvar
R5601 RTLgen.new_reg
R5418 Cminor.expr
R5402 Coq.Lists.List.list
R5407 AST.ident
R5387 RTLgen.mapping
R5717 RTLgen.mon
R5722 Coq.Lists.List.list
R5727 Registers.reg
R5674 Cminor.exprlist
R5657 Coq.Lists.List.list
R5662 AST.ident
R5643 RTLgen.mapping
R5755 Cminor.Enil
R5769 RTLgen.ret
R5773 Coq.Lists.List.nil
R5781 Cminor.Econs
R5801 RTLgen "'do' X <- A ; B"
R5839 RTLgen "'do' X <- A ; B"
R5848 RTLgen.alloc_reg
R5875 RTLgen.ret
R5882 Coq.Lists.List "x :: y" list_scope
R5674 Cminor.exprlist
R5657 Coq.Lists.List.list
R5662 AST.ident
R5643 RTLgen.mapping
R6021 RTLgen.mon
R6025 RTL.node
R6038 Registers.eq
R6072 RTLgen.add_instr
R6083 RTL.Iop
R6096 Coq.Lists.List "x :: y" list_scope
R6098 Coq.Lists.List.nil
R6087 Op.Omove
R6058 RTLgen.ret
R6013 RTL.node
R6003 Registers.reg
R6003 Registers.reg
R6287 RTLgen.mon
R6291 RTL.node
R6248 RTL.node
R6238 Registers.reg
R6227 Cminor.expr
R6190 Coq.Lists.List.list
R6195 AST.ident
R6175 RTLgen.mapping
R7769 RTLgen.mon
R7773 RTL.node
R7729 RTL.node
R7729 RTL.node
R7704 Cminor.condexpr
R7666 Coq.Lists.List.list
R7671 AST.ident
R7651 RTLgen.mapping
R8353 RTLgen.mon
R8357 RTL.node
R8312 RTL.node
R8297 Coq.Lists.List.list
R8302 Registers.reg
R8282 Cminor.exprlist
R8243 Coq.Lists.List.list
R8248 AST.ident
R8228 RTLgen.mapping
R6318 Cminor.Evar
R6334 RTLgen "'do' X <- A ; B"
R6342 RTLgen.find_var
R6358 RTLgen.add_move
R6379 Cminor.Eassign
R6400 RTLgen "'do' X <- A ; B"
R6408 RTLgen.find_var
R6430 RTLgen "'do' X <- A ; B"
R6439 RTLgen.add_move
R6489 Cminor.Eop
R6508 RTLgen "'do' X <- A ; B"
R6517 RTLgen.alloc_regs
R6546 RTLgen "'do' X <- A ; B"
R6555 RTLgen.add_instr
R6566 RTL.Iop
R6630 Cminor.Eload
R6659 RTLgen "'do' X <- A ; B"
R6668 RTLgen.alloc_regs
R6697 RTLgen "'do' X <- A ; B"
R6706 RTLgen.add_instr
R6717 RTL.Iload
R6791 Cminor.Estore
R6823 RTLgen "'do' X <- A ; B"
R6832 RTLgen.alloc_regs
R6861 RTLgen "'do' X <- A ; B"
R6870 RTLgen.add_instr
R6881 RTL.Istore
R6916 RTLgen "'do' X <- A ; B"
R7000 Cminor.Ecall
R7024 RTLgen "'do' X <- A ; B"
R7033 RTLgen.alloc_reg
R7060 RTLgen "'do' X <- A ; B"
R7072 RTLgen.alloc_regs
R7101 RTLgen "'do' X <- A ; B"
R7110 RTLgen.add_instr
R7121 RTL.Icall
R7132 Coq.Init.Datatypes.inl
R7162 RTLgen "'do' X <- A ; B"
R7249 Cminor.Econdition
R7275 RTLgen "'do' X <- A ; B"
R7323 RTLgen "'do' X <- A ; B"
R7418 Cminor.Elet
R7436 RTLgen "'do' X <- A ; B"
R7445 RTLgen.new_reg
R7460 RTLgen "'do' X <- A ; B"
R7482 RTLgen.add_letvar
R7553 Cminor.Eletvar
R7572 RTLgen "'do' X <- A ; B"
R7580 RTLgen.find_letvar
R7599 RTLgen.add_move
R6248 RTL.node
R6238 Registers.reg
R6227 Cminor.expr
R6190 Coq.Lists.List.list
R6195 AST.ident
R6175 RTLgen.mapping
R7800 Cminor.CEtrue
R7816 RTLgen.ret
R7830 Cminor.CEfalse
R7847 RTLgen.ret
R7862 Cminor.CEcond
R7886 RTLgen "'do' X <- A ; B"
R7895 RTLgen.alloc_regs
R7924 RTLgen "'do' X <- A ; B"
R7933 RTLgen.add_instr
R7944 RTL.Icond
R8019 Cminor.CEcondition
R8046 RTLgen "'do' X <- A ; B"
R8102 RTLgen "'do' X <- A ; B"
R7729 RTL.node
R7729 RTL.node
R7704 Cminor.condexpr
R7666 Coq.Lists.List.list
R7671 AST.ident
R7651 RTLgen.mapping
R8389 Cminor.Enil
R8395 Coq.Lists.List.nil
R8408 RTLgen.ret
R8419 Cminor.Econs
R8433 Coq.Lists.List "x :: y" list_scope
R8448 RTLgen "'do' X <- A ; B"
R8536 RTLgen.error
R8542 RTL.node
R8312 RTL.node
R8297 Coq.Lists.List.list
R8302 Registers.reg
R8282 Cminor.exprlist
R8243 Coq.Lists.List.list
R8248 AST.ident
R8228 RTLgen.mapping
R8673 Coq.Init.Datatypes.bool
R8661 Cminor.stmtlist
R8649 Cminor.stmtlist
R8637 Cminor.condexpr
R8877 RTLgen.mon
R8881 RTL.node
R8831 Coq.Init.Datatypes.option
R8838 Registers.reg
R8818 RTL.node
R8800 Coq.Lists.List.list
R8805 RTL.node
R8764 RTL.node
R8753 Cminor.stmt
R8740 RTLgen.mapping
R10250 RTLgen.mon
R10254 RTL.node
R10206 Coq.Init.Datatypes.option
R10213 Registers.reg
R10193 RTL.node
R10175 Coq.Lists.List.list
R10180 RTL.node
R10142 RTL.node
R10127 Cminor.stmtlist
R10113 RTLgen.mapping
R8908 Cminor.Sexpr
R8960 RTLgen "'do' X <- A ; B"
R8968 RTLgen.alloc_reg
R8989 RTLgen.transl_expr
R8936 RTLgen.mutated_expr
R9020 Cminor.Sifthenelse
R9099 RTLgen.more_likely
R9337 RTLgen "'do' X <- A ; B"
R9406 RTLgen "'do' X <- A ; B"
R9475 RTLgen.transl_condition
R9139 RTLgen "'do' X <- A ; B"
R9208 RTLgen "'do' X <- A ; B"
R9277 RTLgen.transl_condition
R9067 RTLgen.mutated_condexpr
R9520 Cminor.Sloop
R9541 RTLgen "'do' X <- A ; B"
R9553 RTLgen.reserve_instr
R9574 RTLgen "'do' X <- A ; B"
R9642 RTLgen "'do' X <- A ; B"
R9650 RTLgen.update_instr
R9670 RTL.Inop
R9689 RTLgen.ret
R9703 Cminor.Sblock
R9758 Coq.Lists.List "x :: y" list_scope
R9783 Cminor.Sexit
R9806 Coq.Lists.List.nth_error
R9838 Coq.Init.Datatypes.None
R9846 RTLgen.error
R9852 RTL.node
R9865 Coq.Init.Datatypes.Some
R9876 RTLgen.ret
R9897 Cminor.Sreturn
R9951 Coq.Init.Datatypes.None
R9957 Coq.Init.Datatypes.None
R9965 RTLgen.ret
R9982 Coq.Init.Datatypes.Some
R9990 Coq.Init.Datatypes.Some
R10000 RTLgen.transl_expr
R10017 RTLgen.mutated_expr
R10058 RTLgen.error
R10064 RTL.node
R8831 Coq.Init.Datatypes.option
R8838 Registers.reg
R8818 RTL.node
R8800 Coq.Lists.List.list
R8805 RTL.node
R8764 RTL.node
R8753 Cminor.stmt
R8740 RTLgen.mapping
R10282 Cminor.Snil
R10290 RTLgen.ret
R10301 Cminor.Scons
R10322 RTLgen "'do' X <- A ; B"
R10206 Coq.Init.Datatypes.option
R10213 Registers.reg
R10193 RTL.node
R10175 Coq.Lists.List.list
R10180 RTL.node
R10142 RTL.node
R10127 Cminor.stmtlist
R10113 RTLgen.mapping
R10509 Coq.Init.Datatypes.option
R10516 Registers.reg
R10536 AST.sig_res
R10554 Coq.Init.Datatypes.None
R10562 Coq.Init.Datatypes.None
R10571 Coq.Init.Datatypes.Some
R10582 Coq.Init.Datatypes.Some
R10502 Registers.reg
R10486 AST.signature
R10643 RTLgen.mon
R10653 Coq.Init.Datatypes "x * y" type_scope
R10648 RTL.node
R10655 Coq.Lists.List.list
R10660 Registers.reg
R10670 RTLgen "'do' ( X , Y ) <- A ; B"
R10692 RTLgen.add_vars
R10717 Cminor.fn_params
R10701 RTLgen.init_mapping
R10738 RTLgen "'do' ( X , Y ) <- A ; B"
R10758 RTLgen.add_vars
R10775 Cminor.fn_vars
R10794 RTLgen "'do' X <- A ; B"
R10805 RTLgen.new_reg
R10865 RTLgen "'do' X <- A ; B"
R10876 RTLgen.add_instr
R10887 RTL.Ireturn
R10905 RTLgen "'do' X <- A ; B"
R10918 RTLgen.transl_stmtlist
R10963 Coq.Lists.List.nil
R10942 Cminor.fn_body
R10981 RTLgen.ret
R10985 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10829 RTLgen.ret_reg
R10840 Cminor.fn_sig
R10624 Cminor.function
R11055 Coq.Init.Datatypes.option
R11062 RTL.function
R11086 RTLgen.transl_fun
R11099 RTLgen.init_state
R11119 RTLgen.Error
R11128 Coq.Init.Datatypes.None
R11137 RTLgen.OK
R11140 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R11169 Coq.Init.Datatypes.Some
R11175 RTL.mkfunction
R11335 RTLgen.st_wf
R11311 RTLgen.st_nextnode
R11276 RTLgen.st_code
R11243 Cminor.fn_stackspace
R11201 Cminor.fn_sig
R11036 Cminor.function
R11399 Coq.Init.Datatypes.option
R11406 RTL.program
R11423 AST.transform_partial_program
R11449 RTLgen.transl_function
R11381 Cminor.program
FRTLgenproof1
R469 Coq.Init.Logic "x = y" type_scope
R455 RTLgen.bind
R471 RTLgen.OK
R794 Coq.Init.Logic "x = y" type_scope
R779 RTLgen.bind2
R796 RTLgen.OK
R1261 Coq.Init.Logic "x = y" type_scope
R1251 RTLgen.error
R1263 RTLgen.OK
R1331 Coq.Init.Logic "x = y" type_scope
R1323 RTLgen.ret
R1333 RTLgen.OK
R1399 Coq.Init.Logic "x = y" type_scope
R1391 RTLgen.Error
R1401 RTLgen.OK
R1462 Coq.Init.Logic "x = y" type_scope
R1455 RTLgen.OK
R1464 RTLgen.OK
R878 Coq.Init.Logic.refl_equal
R534 Coq.Init.Logic.refl_equal
R1631 Coq.Init.Logic "x = y" type_scope
R1617 RTLgen.bind
R1633 RTLgen.OK
R1691 Coq.Init.Logic "x = y" type_scope
R1676 RTLgen.bind2
R1693 RTLgen.OK
R1746 Coq.Init.Logic "x = y" type_scope
R1736 RTLgen.error
R1748 RTLgen.OK
R1796 Coq.Init.Logic "x = y" type_scope
R1788 RTLgen.ret
R1798 RTLgen.OK
R1846 Coq.Init.Logic "x = y" type_scope
R1838 RTLgen.Error
R1848 RTLgen.OK
R1895 Coq.Init.Logic "x = y" type_scope
R1888 RTLgen.OK
R1897 RTLgen.OK
R1954 Coq.Init.Logic "x = y" type_scope
R1956 RTLgen.OK
R2021 Coq.Init.Logic "x = y" type_scope
R2023 RTLgen.OK
R2086 Coq.Init.Logic "x = y" type_scope
R2088 RTLgen.OK
R2149 Coq.Init.Logic "x = y" type_scope
R2151 RTLgen.OK
R2210 Coq.Init.Logic "x = y" type_scope
R2212 RTLgen.OK
R2269 Coq.Init.Logic "x = y" type_scope
R2271 RTLgen.OK
R2326 Coq.Init.Logic "x = y" type_scope
R2328 RTLgen.OK
R2485 RTLgen.state
R2476 RTLgen.state
R2696 Coq.Init.Logic "x = y" type_scope
R2692 Maps "a ! b"
R2684 RTLgen.st_code
R2710 Maps "a ! b"
R2702 RTLgen.st_code
R2653 Coqlib.Plt
R2664 RTLgen.st_nextnode
R2598 Coqlib.Ple
R2622 RTLgen.st_nextreg
R2606 RTLgen.st_nextreg
R2553 Coqlib.Ple
R2578 RTLgen.st_nextnode
R2561 RTLgen.st_nextnode
R2541 RTLgen.state
R2541 RTLgen.state
R2776 RTLgenproof1.state_incr
R2815 RTLgenproof1.state_incr_intro
R2815 RTLgenproof1.state_incr_intro
R2841 Coqlib.Ple_refl
R2841 Coqlib.Ple_refl
R2857 Coqlib.Ple_refl
R2857 Coqlib.Ple_refl
R2899 RTLgenproof1.state_incr_refl
R3006 RTLgenproof1.state_incr
R2986 RTLgenproof1.state_incr
R2966 RTLgenproof1.state_incr
R3074 RTLgenproof1.state_incr_intro
R3074 RTLgenproof1.state_incr_intro
R3116 RTLgen.st_nextnode
R3100 Coqlib.Ple_trans
R3116 RTLgen.st_nextnode
R3100 Coqlib.Ple_trans
R3170 RTLgen.st_nextreg
R3154 Coqlib.Ple_trans
R3170 RTLgen.st_nextreg
R3154 Coqlib.Ple_trans
R3234 Maps "a ! b"
R3226 RTLgen.st_code
R3234 Maps "a ! b"
R3226 RTLgen.st_code
R3281 RTLgen.st_nextnode
R3258 Coqlib.Plt_Ple_trans
R3281 RTLgen.st_nextnode
R3258 Coqlib.Plt_Ple_trans
R3337 RTLgenproof1.state_incr_trans
R3473 RTLgenproof1.state_incr
R3451 RTLgenproof1.state_incr
R3431 RTLgenproof1.state_incr
R3411 RTLgenproof1.state_incr
R3665 RTLgenproof1.state_incr
R3643 RTLgenproof1.state_incr
R3623 RTLgenproof1.state_incr
R3603 RTLgenproof1.state_incr
R3583 RTLgenproof1.state_incr
R3882 RTLgenproof1.state_incr
R3860 RTLgenproof1.state_incr
R3840 RTLgenproof1.state_incr
R3818 RTLgenproof1.state_incr
R3798 RTLgenproof1.state_incr
R3778 RTLgenproof1.state_incr
R4122 RTLgenproof1.state_incr
R4100 RTLgenproof1.state_incr
R4080 RTLgenproof1.state_incr
R4060 RTLgenproof1.state_incr
R4038 RTLgenproof1.state_incr
R4018 RTLgenproof1.state_incr
R3998 RTLgenproof1.state_incr
R4387 RTLgenproof1.state_incr
R4367 RTLgenproof1.state_incr
R4345 RTLgenproof1.state_incr
R4325 RTLgenproof1.state_incr
R4305 RTLgenproof1.state_incr
R4283 RTLgenproof1.state_incr
R4263 RTLgenproof1.state_incr
R4243 RTLgenproof1.state_incr
R4534 Coq.Init.Logic "A \/ B" type_scope
R4527 Coq.Init.Logic "x = y" type_scope
R4523 Maps "a ! b"
R4515 RTLgen.st_code
R4529 Coq.Init.Datatypes.None
R4553 Coq.Init.Logic "x = y" type_scope
R4549 Maps "a ! b"
R4541 RTLgen.st_code
R4567 Maps "a ! b"
R4559 RTLgen.st_code
R4480 RTLgen.state
R4480 RTLgen.state
R4637 RTLgenproof1.state_extends
R4617 RTLgenproof1.state_incr
R4721 Coqlib.plt
R4732 RTLgen.st_nextnode
R4721 Coqlib.plt
R4732 RTLgen.st_nextnode
R4797 RTLgen.st_wf
R4797 RTLgen.st_wf
R4855 RTLgenproof1.state_incr_extends
R4921 RTLgen.state
R4944 RTLgenproof1.state_extends
R5078 Coq.Init.Logic "x <> y" type_scope
R5074 Maps "a ! b"
R5081 Coq.Init.Datatypes.None
R5032 RTL.exec_instr
R5271 Coq.Init.Logic "x = y" type_scope
R5267 Maps "a ! b"
R5259 RTLgen.st_code
R5285 Maps "a ! b"
R5277 RTLgen.st_code
R5201 RTL.exec_instr
R5219 RTLgen.st_code
R5339 RTLgenproof1.exec_instr_not_halt
R5339 RTLgenproof1.exec_instr_not_halt
R5547 RTL.exec_instr
R5534 Coq.Init.Logic "x = y" type_scope
R5530 Maps "a ! b"
R5538 Maps "a ! b"
R5473 RTL.exec_instr
R5627 RTL.exec_Inop
R5627 RTL.exec_Inop
R5658 RTL.exec_Iop
R5658 RTL.exec_Iop
R5707 RTL.exec_Iload
R5707 RTL.exec_Iload
R5774 RTL.exec_Istore
R5774 RTL.exec_Istore
R5850 RTL.exec_Icall
R5850 RTL.exec_Icall
R5908 RTL.exec_Icond_true
R5908 RTL.exec_Icond_true
R5972 RTL.exec_Icond_false
R5972 RTL.exec_Icond_false
R6151 RTL.exec_instr
R6169 RTLgen.st_code
R6097 RTL.exec_instr
R6115 RTLgen.st_code
R6255 RTLgen.st_code
R6226 RTLgenproof1.exec_instr_extends_rec
R6255 RTLgen.st_code
R6226 RTLgenproof1.exec_instr_extends_rec
R6301 RTLgenproof1.exec_instr_in_s2
R6301 RTLgenproof1.exec_instr_in_s2
R6473 RTL.exec_instrs
R6492 RTLgen.st_code
R6453 Coq.Init.Logic "x = y" type_scope
R6459 RTLgen.st_code
R6405 RTL.exec_instrs
R6564 RTL.exec_refl
R6564 RTL.exec_refl
R6583 RTL.exec_one
R6583 RTL.exec_one
R6599 RTLgenproof1.exec_instr_extends
R6599 RTLgenproof1.exec_instr_extends
R6654 RTL.exec_trans
R6654 RTL.exec_trans
R6815 RTL.exec_instrs
R6834 RTLgen.st_code
R6758 RTL.exec_instrs
R6777 RTLgen.st_code
R6923 RTLgen.st_code
R6893 RTLgenproof1.exec_instrs_extends_rec
R6923 RTLgen.st_code
R6893 RTLgenproof1.exec_instrs_extends_rec
R7015 RTLgen.state
R7039 RTLgenproof1.state_incr
R7174 RTL.exec_instr
R7192 RTLgen.st_code
R7118 RTL.exec_instr
R7136 RTLgen.st_code
R7251 RTLgenproof1.exec_instr_extends
R7251 RTLgenproof1.exec_instr_extends
R7287 RTLgenproof1.state_incr_extends
R7287 RTLgenproof1.state_incr_extends
R7445 RTL.exec_instrs
R7464 RTLgen.st_code
R7388 RTL.exec_instrs
R7407 RTLgen.st_code
R7523 RTLgenproof1.exec_instrs_extends
R7523 RTLgenproof1.exec_instrs_extends
R7560 RTLgenproof1.state_incr_extends
R7560 RTLgenproof1.state_incr_extends
R7707 Coqlib.Plt
R7716 RTLgen.st_nextreg
R7687 RTLgen.state
R7678 Registers.reg
R7783 Coq.Init.Logic "~ x" type_scope
R7785 Coqlib.Plt
R7794 RTLgen.st_nextreg
R7764 RTLgen.state
R7755 Registers.reg
R7887 Coq.Init.Logic.False
R7870 RTLgenproof1.reg_fresh
R7851 RTLgenproof1.reg_bounded
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R7979 RTLgenproof1.bounded_fresh_absurd
R8098 Coq.Init.Logic "x <> y" type_scope
R8077 RTLgenproof1.reg_fresh
R8057 RTLgenproof1.reg_bounded
R8179 RTLgenproof1.bounded_fresh_different
R8294 RTLgenproof1.reg_bounded
R8274 RTLgenproof1.reg_bounded
R8254 RTLgenproof1.state_incr
R8416 RTLgen.st_nextreg
R8396 Coqlib.Plt_Ple_trans
R8416 RTLgen.st_nextreg
R8396 Coqlib.Plt_Ple_trans
R8456 RTLgenproof1.reg_bounded_incr
R8559 RTLgenproof1.reg_fresh
R8541 RTLgenproof1.reg_fresh
R8521 RTLgenproof1.state_incr
R8699 RTLgen.st_nextreg
R8679 Coqlib.Plt_Ple_trans
R8699 RTLgen.st_nextreg
R8679 Coqlib.Plt_Ple_trans
R8740 RTLgenproof1.reg_fresh_decr
R8813 RTLgen.mapping
R8826 RTLgen.state
R8929 RTLgenproof1.reg_bounded
R8917 Coq.Init.Logic "x = y" type_scope
R8913 Maps "a ! b"
R8904 RTLgen.map_vars
R8919 Coq.Init.Datatypes.Some
R9015 RTLgenproof1.reg_bounded
R8991 Coq.Lists.List.In
R8999 RTLgen.map_letvars
R9145 Coq.Init.Logic "x = y" type_scope
R9129 Coq.Init.Logic "x = y" type_scope
R9124 Maps "a ! b"
R9115 RTLgen.map_vars
R9131 Coq.Init.Datatypes.Some
R9100 Coq.Init.Logic "x = y" type_scope
R9095 Maps "a ! b"
R9086 RTLgen.map_vars
R9102 Coq.Init.Datatypes.Some
R9252 Coq.Init.Logic.False
R9228 Coq.Lists.List.In
R9236 RTLgen.map_letvars
R9216 Coq.Init.Logic "x = y" type_scope
R9212 Maps "a ! b"
R9203 RTLgen.map_vars
R9218 Coq.Init.Datatypes.Some
R9277 RTLgenproof1.map_wf_var_bounded
R9309 RTLgenproof1.map_wf_letvar_bounded
R9344 RTLgenproof1.map_wf_inj
R9355 RTLgenproof1.map_wf_disj
R9449 RTLgenproof1.map_wf
R9434 RTLgenproof1.map_wf
R9414 RTLgenproof1.state_incr
R9485 RTLgenproof1.mk_map_wf
R9485 RTLgenproof1.mk_map_wf
R9539 RTLgenproof1.map_wf_incr
R9651 Coq.Init.Logic "A \/ B" type_scope
R9616 Coq.Init.Logic "'exists' x , p" type_scope
R9643 Coq.Init.Logic "x = y" type_scope
R9639 Maps "a ! b"
R9630 RTLgen.map_vars
R9645 Coq.Init.Datatypes.Some
R9656 Coq.Lists.List.In
R9664 RTLgen.map_letvars
R9598 Registers.reg
R9585 RTLgen.mapping
R9756 Coq.Init.Logic "'exists' x , p" type_scope
R9777 Coq.Init.Logic "A /\ B" type_scope
R9767 Coq.Lists.List.In
R9798 Coq.Init.Logic "x = y" type_scope
R9794 Maps "a ! b"
R9785 RTLgen.map_vars
R9800 Coq.Init.Datatypes.Some
R9739 Registers.reg
R9723 Coq.Lists.List.list
R9728 AST.ident
R9708 RTLgen.mapping
R9925 RTLgenproof1.state_incr
R9912 Coq.Init.Logic "x = y" type_scope
R9897 RTLgen.add_instr
R9914 RTLgen.OK
R9998 RTLgenproof1.state_incr_intro
R9998 RTLgenproof1.state_incr_intro
R10031 Coqlib.Ple_succ
R10031 Coqlib.Ple_succ
R10049 Coqlib.Ple_refl
R10049 Coqlib.Ple_refl
R10075 Maps.gso
R10092 Coqlib.Plt_ne
R10075 Maps.gso
R10092 Coqlib.Plt_ne
R10124 RTLgenproof1.add_instr_incr
R10232 Coq.Init.Logic "x = y" type_scope
R10229 Maps "a ! b"
R10221 RTLgen.st_code
R10234 Coq.Init.Datatypes.Some
R10204 Coq.Init.Logic "x = y" type_scope
R10189 RTLgen.add_instr
R10206 RTLgen.OK
R10313 Maps.gss
R10313 Maps.gss
R10342 RTLgenproof1.add_instr_at
R10472 Coq.Init.Logic "x = y" type_scope
R10469 Maps "a ! b"
R10461 RTLgen.st_code
R10435 RTLgenproof1.state_incr
R10424 Coq.Init.Logic "x <> y" type_scope
R10427 Coq.Init.Datatypes.None
R10415 Coq.Init.Logic "x = y" type_scope
R10412 Maps "a ! b"
R10404 RTLgen.st_code
R10540 RTLgen.st_wf
R10540 RTLgen.st_wf
R10677 RTLgenproof1.state_incr
R10664 Coq.Init.Logic "x = y" type_scope
R10647 RTLgen.reserve_instr
R10666 RTLgen.OK
R10750 RTLgenproof1.state_incr_intro
R10750 RTLgenproof1.state_incr_intro
R10783 Coqlib.Ple_succ
R10783 Coqlib.Ple_succ
R10801 Coqlib.Ple_refl
R10801 Coqlib.Ple_refl
R10969 RTLgenproof1.state_incr
R10954 Coq.Init.Logic "x = y" type_scope
R10934 RTLgen.update_instr
R10956 RTLgen.OK
R10912 RTLgenproof1.state_incr
R10897 Coq.Init.Logic "x = y" type_scope
R10880 RTLgen.reserve_instr
R10899 RTLgen.OK
R11064 Coqlib.plt
R11071 RTLgen.st_nextnode
R11064 Coqlib.plt
R11071 RTLgen.st_nextnode
R11142 RTLgenproof1.state_incr_intro
R11142 RTLgenproof1.state_incr_intro
R11175 Coqlib.Plt_Ple
R11175 Coqlib.Plt_Ple
R11210 RTLgen.st_nextnode
R11190 Coqlib.Plt_Ple_trans
R11210 RTLgen.st_nextnode
R11190 Coqlib.Plt_Ple_trans
R11252 Coqlib.Plt_succ
R11252 Coqlib.Plt_succ
R11340 Maps.gso
R11340 Maps.gso
R11405 Coqlib.Plt_trans_succ
R11405 Coqlib.Plt_trans_succ
R11450 Coqlib.Plt_ne
R11450 Coqlib.Plt_ne
R11647 RTLgenproof1.state_extends
R11632 Coq.Init.Logic "x = y" type_scope
R11612 RTLgen.update_instr
R11634 RTLgen.OK
R11590 RTLgenproof1.state_incr
R11575 Coq.Init.Logic "x = y" type_scope
R11558 RTLgen.reserve_instr
R11577 RTLgen.OK
R11723 Coqlib.peq
R11723 Coqlib.peq
R11824 RTLgen.st_wf
R11824 RTLgen.st_wf
R11871 Coqlib.Plt_strict
R11871 Coqlib.Plt_strict
R11942 Coqlib.Plt_succ
R11942 Coqlib.Plt_succ
R11998 Coqlib.plt
R12008 RTLgen.st_nextnode
R11998 Coqlib.plt
R12008 RTLgen.st_nextnode
R12079 Maps.gso
R12079 Maps.gso
R12164 RTLgenproof1.state_incr
R12151 Coq.Init.Logic "x = y" type_scope
R12140 RTLgen.new_reg
R12153 RTLgen.OK
R12237 RTLgenproof1.state_incr_intro
R12237 RTLgenproof1.state_incr_intro
R12270 Coqlib.Ple_refl
R12270 Coqlib.Ple_refl
R12286 Coqlib.Ple_succ
R12286 Coqlib.Ple_succ
R12320 RTLgenproof1.new_reg_incr
R12408 RTLgenproof1.reg_bounded
R12395 Coq.Init.Logic "x = y" type_scope
R12384 RTLgen.new_reg
R12397 RTLgen.OK
R12539 Coqlib.Plt_succ
R12539 Coqlib.Plt_succ
R12567 RTLgenproof1.new_reg_bounded
R12656 RTLgenproof1.reg_fresh
R12643 Coq.Init.Logic "x = y" type_scope
R12632 RTLgen.new_reg
R12645 RTLgen.OK
R12764 Coqlib.Plt_strict
R12764 Coqlib.Plt_strict
R12797 RTLgenproof1.new_reg_fresh
R12895 RTLgenproof1.reg_bounded
R12877 RTLgenproof1.reg_in_map
R12863 RTLgenproof1.map_wf
R13020 RTLgenproof1.reg_in_map_bounded
R13134 Coq.Init.Logic "~ x" type_scope
R13136 RTLgenproof1.reg_in_map
R13119 RTLgenproof1.map_wf
R13106 Coq.Init.Logic "x = y" type_scope
R13095 RTLgen.new_reg
R13108 RTLgen.OK
R13218 RTLgenproof1.new_reg_not_in_map
R13316 RTLgenproof1.reg_in_map
R13291 RTLgenproof1.mutated_reg
R13422 RTLgenproof1.mutated_reg_in_map
R13541 Coq.Init.Logic "~ x" type_scope
R13543 RTLgenproof1.mutated_reg
R13526 RTLgenproof1.map_wf
R13513 Coq.Init.Logic "x = y" type_scope
R13502 RTLgen.new_reg
R13515 RTLgen.OK
R13609 RTLgenproof1.mutated_reg_in_map
R13609 RTLgenproof1.mutated_reg_in_map
R13655 RTLgenproof1.new_reg_not_in_map
R13655 RTLgenproof1.new_reg_not_in_map
R13710 RTLgenproof1.new_reg_not_mutated
R13819 RTLgenproof1.map_wf
R13826 RTLgen.init_mapping
R13885 RTLgenproof1.mk_map_wf
R13885 RTLgenproof1.mk_map_wf
R13921 Maps.gempty
R13921 Maps.gempty
R13981 Maps.gempty
R13981 Maps.gempty
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R14115 RTLgenproof1.state_incr
R14102 Coq.Init.Logic "x = y" type_scope
R14081 RTLgen.find_var
R14104 RTLgen.OK
R14195 Maps "a ! b"
R14183 RTLgen.map_vars
R14195 Maps "a ! b"
R14183 RTLgen.map_vars
R14282 RTLgenproof1.find_var_incr
R14407 RTLgenproof1.reg_in_map
R14390 RTLgenproof1.map_wf
R14377 Coq.Init.Logic "x = y" type_scope
R14356 RTLgen.find_var
R14379 RTLgen.OK
R14489 Maps "a ! b"
R14480 RTLgen.map_vars
R14489 Maps "a ! b"
R14480 RTLgen.map_vars
R14610 RTLgenproof1.find_var_in_map
R14738 RTLgenproof1.reg_bounded
R14721 RTLgenproof1.map_wf
R14708 Coq.Init.Logic "x = y" type_scope
R14687 RTLgen.find_var
R14710 RTLgen.OK
R14800 RTLgenproof1.find_var_bounded
R14961 Coq.Init.Logic "~ x" type_scope
R14963 RTLgenproof1.mutated_reg
R14941 Coq.Init.Logic "~ x" type_scope
R14943 Coq.Lists.List.In
R14922 RTLgenproof1.map_wf
R14907 Coq.Init.Logic "x = y" type_scope
R14886 RTLgen.find_var
R14909 RTLgen.OK
R15053 Maps "a ! b"
R15044 RTLgen.map_vars
R15053 Maps "a ! b"
R15044 RTLgen.map_vars
R15172 Coq.Init.Logic "x = y" type_scope
R15172 Coq.Init.Logic "x = y" type_scope
R15262 RTLgenproof1.find_var_not_mutated
R15379 RTLgenproof1.state_incr
R15366 Coq.Init.Logic "x = y" type_scope
R15343 RTLgen.find_letvar
R15368 RTLgen.OK
R15450 Coq.Lists.List.nth_error
R15461 RTLgen.map_letvars
R15450 Coq.Lists.List.nth_error
R15461 RTLgen.map_letvars
R15563 RTLgenproof1.find_letvar_incr
R15695 RTLgenproof1.reg_in_map
R15678 RTLgenproof1.map_wf
R15665 Coq.Init.Logic "x = y" type_scope
R15642 RTLgen.find_letvar
R15667 RTLgen.OK
R15768 Coq.Lists.List.nth_error
R15779 RTLgen.map_letvars
R15768 Coq.Lists.List.nth_error
R15779 RTLgen.map_letvars
R15864 Coqlib.nth_error_in
R15864 Coqlib.nth_error_in
R15932 RTLgenproof1.find_letvar_in_map
R16067 RTLgenproof1.reg_bounded
R16050 RTLgenproof1.map_wf
R16037 Coq.Init.Logic "x = y" type_scope
R16014 RTLgen.find_letvar
R16039 RTLgen.OK
R16129 RTLgenproof1.find_letvar_bounded
R16277 Coq.Init.Logic "~ x" type_scope
R16279 RTLgenproof1.mutated_reg
R16258 RTLgenproof1.map_wf
R16243 Coq.Init.Logic "x = y" type_scope
R16220 RTLgen.find_letvar
R16245 RTLgen.OK
R16358 Coq.Lists.List.nth_error
R16369 RTLgen.map_letvars
R16358 Coq.Lists.List.nth_error
R16369 RTLgen.map_letvars
R16555 RTLgenproof1.find_letvar_not_mutated
R16688 RTLgenproof1.reg_bounded
R16667 Coq.Init.Logic "x = y" type_scope
R16646 RTLgen.add_var
R16669 RTLgen.OK
R16672 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16879 RTLgenproof1.state_incr
R16865 Coq.Init.Logic "x = y" type_scope
R16845 RTLgen.add_var
R16867 RTLgen.OK
R16980 RTLgenproof1.add_var_incr
R17110 RTLgenproof1.map_wf
R17093 RTLgenproof1.map_wf
R17073 Coq.Init.Logic "x = y" type_scope
R17053 RTLgen.add_var
R17075 RTLgen.OK
R17078 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17213 RTLgenproof1.mk_map_wf
R17213 RTLgenproof1.mk_map_wf
R17256 Maps.gsspec
R17256 Maps.gsspec
R17279 Coqlib.peq
R17279 Coqlib.peq
R17429 Maps.gsspec
R17429 Maps.gsspec
R17429 Maps.gsspec
R17429 Maps.gsspec
R17453 Coqlib.peq
R17474 Coqlib.peq
R17453 Coqlib.peq
R17474 Coqlib.peq
R17474 Coqlib.peq
R17665 Coqlib.peq
R17665 Coqlib.peq
R17706 Maps.gss
R17706 Maps.gss
R17793 Maps.gso
R17793 Maps.gso
R17845 RTLgenproof1.add_var_wf
R17979 Coq.Init.Logic "x = y" type_scope
R17973 Maps "a ! b"
R17964 RTLgen.map_vars
R17981 Coq.Init.Datatypes.Some
R17938 Coq.Init.Logic "x = y" type_scope
R17918 RTLgen.add_var
R17940 RTLgen.OK
R17943 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18087 Maps.gss
R18087 Maps.gss
R18190 RTLgenproof1.state_incr
R18177 Coq.Init.Logic "x = y" type_scope
R18155 RTLgen.add_vars
R18179 RTLgen.OK
R18510 RTLgenproof1.reg_bounded
R18499 Coq.Lists.List.In
R18465 Coq.Init.Logic "x = y" type_scope
R18442 RTLgen.add_vars
R18467 RTLgen.OK
R18470 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18699 RTLgenproof1.add_var_bounded
R18699 RTLgenproof1.add_var_bounded
R18744 RTLgenproof1.reg_bounded_incr
R18744 RTLgenproof1.reg_bounded_incr
R18918 RTLgenproof1.map_wf
R18901 RTLgenproof1.map_wf
R18878 Coq.Init.Logic "x = y" type_scope
R18856 RTLgen.add_vars
R18880 RTLgen.OK
R18883 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R19110 RTLgenproof1.add_var_wf
R19110 RTLgenproof1.add_var_wf
R19187 RTLgenproof1.add_vars_wf
R19312 RTLgenproof1.map_wf
R19320 RTLgen.add_letvar
R19287 Coq.Init.Logic "~ x" type_scope
R19289 RTLgenproof1.reg_in_map
R19266 RTLgenproof1.reg_bounded
R19248 RTLgenproof1.map_wf
R19383 RTLgenproof1.mk_map_wf
R19383 RTLgenproof1.mk_map_wf
R19410 RTLgenproof1.map_wf_var_bounded
R19410 RTLgenproof1.map_wf_var_bounded
R19498 RTLgenproof1.map_wf_letvar_bounded
R19498 RTLgenproof1.map_wf_letvar_bounded
R19537 RTLgenproof1.map_wf_inj
R19537 RTLgenproof1.map_wf_inj
R19640 RTLgenproof1.map_wf_disj
R19640 RTLgenproof1.map_wf_disj
R19800 RTLgenproof1.state_incr
R19787 Coq.Init.Logic "x = y" type_scope
R19764 RTLgen.alloc_reg
R19789 RTLgen.OK
R19906 Coq.Lists.List.In_dec
R19913 AST.ident_eq
R19906 Coq.Lists.List.In_dec
R19913 AST.ident_eq
R19965 RTLgenproof1.alloc_reg_incr
R20098 RTLgenproof1.reg_bounded
R20085 Coq.Init.Logic "x = y" type_scope
R20062 RTLgen.alloc_reg
R20087 RTLgen.OK
R20043 RTLgenproof1.map_wf
R20204 Coq.Lists.List.In_dec
R20211 AST.ident_eq
R20204 Coq.Lists.List.In_dec
R20211 AST.ident_eq
R20263 RTLgenproof1.alloc_reg_bounded
R20423 Coq.Init.Logic "A \/ B" type_scope
R20406 RTLgenproof1.reg_in_map
R20426 RTLgenproof1.reg_fresh
R20391 Coq.Init.Logic "x = y" type_scope
R20369 RTLgen.alloc_reg
R20393 RTLgen.OK
R20351 RTLgenproof1.map_wf
R20543 Coq.Lists.List.In_dec
R20550 AST.ident_eq
R20543 Coq.Lists.List.In_dec
R20550 AST.ident_eq
R20732 Registers.reg
R20724 Cminor.expr
R20710 Coq.Lists.List.list
R20715 AST.ident
R20699 RTLgen.mapping
R20690 RTLgen.state
R20885 Cminor.Evar
R20842 Coq.Init.Logic "x = y" type_scope
R20838 Maps "a ! b"
R20829 RTLgen.map_vars
R20844 Coq.Init.Datatypes.Some
R20808 Coq.Init.Logic "~ x" type_scope
R20810 Coq.Lists.List.In
R21030 Cminor.Eletvar
R20987 Coq.Init.Logic "x = y" type_scope
R20955 Coq.Lists.List.nth_error
R20970 RTLgen.map_letvars
R20989 Coq.Init.Datatypes.Some
R21130 RTLgenproof1.reg_bounded
R21101 Coq.Init.Logic "~ x" type_scope
R21103 RTLgenproof1.reg_in_map
R21297 RTLgenproof1.target_reg_ok
R21263 RTLgenproof1.target_reg_ok
R21241 RTLgenproof1.state_incr
R21367 RTLgenproof1.target_reg_immut_var
R21367 RTLgenproof1.target_reg_immut_var
R21403 RTLgenproof1.target_reg_letvar
R21403 RTLgenproof1.target_reg_letvar
R21436 RTLgenproof1.target_reg_other
R21436 RTLgenproof1.target_reg_other
R21489 RTLgenproof1.target_reg_ok_incr
R21619 RTLgenproof1.reg_bounded
R21586 RTLgenproof1.target_reg_ok
R21568 RTLgenproof1.map_wf
R21709 RTLgenproof1.target_reg_bounded
R21843 Coq.Init.Logic "~ x" type_scope
R21845 RTLgenproof1.mutated_reg
R21810 RTLgenproof1.target_reg_ok
R21792 RTLgenproof1.map_wf
R21987 Coq.Init.Logic "x = y" type_scope
R21987 Coq.Init.Logic "x = y" type_scope
R22048 Coq.Lists.List.In
R22054 RTLgen.map_letvars
R22048 Coq.Lists.List.In
R22054 RTLgen.map_letvars
R22172 RTLgenproof1.target_reg_not_mutated
R22317 RTLgenproof1.target_reg_ok
R22302 Coq.Init.Logic "x = y" type_scope
R22279 RTLgen.alloc_reg
R22304 RTLgen.OK
R22260 RTLgenproof1.map_wf
R22431 RTLgenproof1.target_reg_other
R22431 RTLgenproof1.target_reg_other
R22431 RTLgenproof1.target_reg_other
R22431 RTLgenproof1.target_reg_other
R22431 RTLgenproof1.target_reg_other
R22431 RTLgenproof1.target_reg_other
R22431 RTLgenproof1.target_reg_other
R22431 RTLgenproof1.target_reg_other
R22431 RTLgenproof1.target_reg_other
R22431 RTLgenproof1.target_reg_other
R22495 Coq.Lists.List.In_dec
R22502 AST.ident_eq
R22495 Coq.Lists.List.In_dec
R22502 AST.ident_eq
R22535 RTLgenproof1.target_reg_other
R22535 RTLgenproof1.target_reg_other
R22578 RTLgenproof1.target_reg_immut_var
R22578 RTLgenproof1.target_reg_immut_var
R22661 Maps "a ! b"
R22649 RTLgen.map_vars
R22661 Maps "a ! b"
R22649 RTLgen.map_vars
R22721 RTLgenproof1.target_reg_letvar
R22721 RTLgenproof1.target_reg_letvar
R22786 Coq.Lists.List.nth_error
R22797 RTLgen.map_letvars
R22786 Coq.Lists.List.nth_error
R22797 RTLgen.map_letvars
R22883 RTLgenproof1.alloc_reg_target_ok
R23005 RTLgenproof1.state_incr
R22991 Coq.Init.Logic "x = y" type_scope
R22966 RTLgen.alloc_regs
R22993 RTLgen.OK
R23161 RTLgenproof1.alloc_regs_incr
R23324 RTLgenproof1.reg_bounded
R23313 Coq.Lists.List.In
R23287 Coq.Init.Logic "x = y" type_scope
R23262 RTLgen.alloc_regs
R23289 RTLgen.OK
R23243 RTLgenproof1.map_wf
R23542 RTLgenproof1.alloc_regs_bounded
R23730 Coq.Init.Logic "A \/ B" type_scope
R23713 RTLgenproof1.reg_in_map
R23733 RTLgenproof1.reg_fresh
R23702 Coq.Lists.List.In
R23676 Coq.Init.Logic "x = y" type_scope
R23652 RTLgen.alloc_regs
R23678 RTLgen.OK
R23634 RTLgenproof1.map_wf
R23851 Coq.Lists.List.in_inv
R23851 Coq.Lists.List.in_inv
R23897 RTLgenproof1.map_wf
R23897 RTLgenproof1.map_wf
R23938 RTLgenproof1.alloc_reg_fresh_or_in_map
R23938 RTLgenproof1.alloc_reg_fresh_or_in_map
R24141 Coq.Lists.List.list
R24146 Registers.reg
R24129 Cminor.exprlist
R24115 Coq.Lists.List.list
R24120 AST.ident
R24104 RTLgen.mapping
R24095 RTLgen.state
R24242 Coq.Lists.List.nil
R24237 Cminor.Enil
R24466 Coq.Lists.List "x :: y" list_scope
R24451 Cminor.Econs
R24348 RTLgenproof1.target_reg_ok
R24325 Coq.Init.Logic "A \/ B" type_scope
R24308 RTLgenproof1.reg_in_map
R24328 Coq.Init.Logic "~ x" type_scope
R24330 Coq.Lists.List.In
R24603 RTLgenproof1.target_regs_ok
R24581 RTLgenproof1.state_incr
R24531 RTLgenproof1.target_regs_ok
R24674 RTLgenproof1.target_regs_nil
R24674 RTLgenproof1.target_regs_nil
R24700 RTLgenproof1.target_regs_cons
R24700 RTLgenproof1.target_regs_cons
R24754 RTLgenproof1.target_regs_ok_incr
R24912 RTLgenproof1.reg_bounded
R24901 Coq.Lists.List.In
R24873 RTLgenproof1.map_wf
R24837 RTLgenproof1.target_regs_ok
R25056 RTLgenproof1.target_regs_bounded
R25218 Coq.Init.Logic "~ x" type_scope
R25220 RTLgenproof1.mutated_reg
R25207 Coq.Lists.List.In
R25179 RTLgenproof1.map_wf
R25143 RTLgenproof1.target_regs_ok
R25371 RTLgenproof1.target_regs_not_mutated
R25523 RTLgenproof1.target_regs_ok
R25507 Coq.Init.Logic "x = y" type_scope
R25482 RTLgen.alloc_regs
R25509 RTLgen.OK
R25463 RTLgenproof1.map_wf
R25625 RTLgenproof1.target_regs_nil
R25625 RTLgenproof1.target_regs_nil
R25686 RTLgenproof1.target_regs_cons
R25686 RTLgenproof1.target_regs_cons
R25738 RTLgenproof1.map_wf
R25738 RTLgenproof1.map_wf
R25778 RTLgenproof1.alloc_reg_fresh_or_in_map
R25778 RTLgenproof1.alloc_reg_fresh_or_in_map
R25912 RTLgenproof1.alloc_regs_target_ok
R26049 Coq.Init.Datatypes.option
R26056 Registers.reg
R26038 RTLgen.mapping
R26029 RTLgen.state
R26141 Coq.Init.Datatypes.None
R26267 Coq.Init.Datatypes.Some
R26221 RTLgenproof1.reg_bounded
R26198 Coq.Init.Logic "~ x" type_scope
R26200 RTLgenproof1.reg_in_map
R26379 RTLgenproof1.return_reg_ok
R26350 RTLgenproof1.return_reg_ok
R26328 RTLgenproof1.state_incr
R26498 RTLgenproof1.return_reg_ok_incr
R26623 RTLgenproof1.return_reg_ok
R26645 RTLgen.ret_reg
R26604 RTLgenproof1.map_wf
R26589 Coq.Init.Logic "x = y" type_scope
R26578 RTLgen.new_reg
R26591 RTLgen.OK
R26704 AST.sig_res
R26704 AST.sig_res
R26874 RTLgen.mapping
R26887 Cminor.env
R26904 Cminor.letenv
R26924 RTL.regset
R27018 Coq.Init.Logic "'exists' x , p" type_scope
R27055 Coq.Init.Logic "A /\ B" type_scope
R27046 Coq.Init.Logic "x = y" type_scope
R27042 Maps "a ! b"
R27033 RTLgen.map_vars
R27048 Coq.Init.Datatypes.Some
R27063 Coq.Init.Logic "x = y" type_scope
R27060 Registers "a # b"
R27006 Coq.Init.Logic "x = y" type_scope
R27002 Maps "a ! b"
R27008 Coq.Init.Datatypes.Some
R27115 Coq.Init.Logic "x = y" type_scope
R27093 Registers "a ## b"
R27101 RTLgen.map_letvars
R27274 Coq.Init.Logic "x = y" type_scope
R27271 Registers "a # b"
R27255 Coq.Init.Logic "x = y" type_scope
R27251 Maps "a ! b"
R27257 Coq.Init.Datatypes.Some
R27223 RTLgenproof1.match_env
R27208 Coq.Init.Logic "x = y" type_scope
R27189 RTLgen.find_var
R27210 RTLgen.OK
R27345 Maps "a ! b"
R27336 RTLgen.map_vars
R27345 Maps "a ! b"
R27336 RTLgen.map_vars
R27411 RTLgenproof1.me_vars
R27411 RTLgenproof1.me_vars
R27565 RTLgenproof1.match_env_find_reg
R27726 RTLgenproof1.match_env
R27713 Coq.Init.Logic "x = y" type_scope
R27710 Registers "a # b"
R27717 Registers "a # b"
R27686 RTLgenproof1.reg_in_map
R27647 RTLgenproof1.match_env
R27773 RTLgenproof1.mk_match_env
R27773 RTLgenproof1.mk_match_env
R27819 RTLgenproof1.me_vars
R27819 RTLgenproof1.me_vars
R27961 Registers "a ## b"
R27965 RTLgen.map_letvars
R27961 Registers "a ## b"
R27965 RTLgen.map_letvars
R27991 Coqlib.list_map_exten
R27991 Coqlib.list_map_exten
R28060 RTLgenproof1.me_letvars
R28060 RTLgenproof1.me_letvars
R28198 RTLgenproof1.match_env
R28220 Registers "a # b <- c"
R28173 Coq.Init.Logic "~ x" type_scope
R28175 RTLgenproof1.reg_in_map
R28146 RTLgenproof1.match_env
R28253 RTLgenproof1.match_env_invariant
R28253 RTLgenproof1.match_env_invariant
R28304 Registers.eq
R28304 Registers.eq
R28361 Registers.gso
R28361 Registers.gso
R28397 RTLgenproof1.match_env_update_temp
R28628 RTLgenproof1.match_env
R28643 Maps.set
R28615 Coq.Init.Logic "x = y" type_scope
R28612 Registers "a # b"
R28619 Registers "a # b"
R28601 Coq.Init.Logic "x <> y" type_scope
R28579 Coq.Init.Logic "x = y" type_scope
R28576 Registers "a # b"
R28546 RTLgenproof1.match_env
R28531 Coq.Init.Logic "x = y" type_scope
R28513 RTLgen.find_var
R28533 RTLgen.OK
R28495 RTLgenproof1.map_wf
R28753 Maps "a ! b"
R28741 RTLgen.map_vars
R28753 Maps "a ! b"
R28741 RTLgen.map_vars
R28798 RTLgenproof1.mk_match_env
R28798 RTLgenproof1.mk_match_env
R28837 Coqlib.peq
R28837 Coqlib.peq
R28879 Maps.gss
R28879 Maps.gss
R28966 Maps.gso
R28966 Maps.gso
R28996 RTLgenproof1.me_vars
R28996 RTLgenproof1.me_vars
R29179 Registers "a ## b"
R29183 RTLgen.map_letvars
R29179 Registers "a ## b"
R29183 RTLgen.map_letvars
R29209 Coqlib.list_map_exten
R29209 Coqlib.list_map_exten
R29310 RTLgenproof1.me_letvars
R29310 RTLgenproof1.me_letvars
R29454 RTLgenproof1.match_env
R29488 Coq.Lists.List "x :: y" list_scope
R29465 RTLgen.add_letvar
R29445 Coq.Init.Logic "x = y" type_scope
R29442 Registers "a # b"
R29413 RTLgenproof1.match_env
R29550 RTLgenproof1.mk_match_env
R29550 RTLgenproof1.mk_match_env
R29588 RTLgenproof1.me_vars
R29588 RTLgenproof1.me_vars
R29631 RTLgenproof1.me_letvars
R29631 RTLgenproof1.me_letvars
R29783 RTLgenproof1.match_env
R29753 RTLgenproof1.match_env
R29737 Coq.Init.Logic "x = y" type_scope
R29734 Registers "a # b"
R29742 Registers "a # b"
R29830 RTLgenproof1.mk_match_env
R29830 RTLgenproof1.mk_match_env
R29866 RTLgenproof1.me_vars
R29866 RTLgenproof1.me_vars
R29985 Registers "a ## b"
R29989 RTLgen.map_letvars
R29985 Registers "a ## b"
R29989 RTLgen.map_letvars
R30015 Coqlib.list_map_exten
R30015 Coqlib.list_map_exten
R30077 RTLgenproof1.me_letvars
R30077 RTLgenproof1.me_letvars
R30221 Coq.Init.Logic "x = y" type_scope
R30208 RTLgen.map_letvars
R30229 RTLgen.map_letvars
R30179 Coq.Init.Logic "x = y" type_scope
R30161 RTLgen.add_var
R30181 RTLgen.OK
R30184 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R30439 Coq.Init.Logic "x = y" type_scope
R30426 RTLgen.map_letvars
R30447 RTLgen.map_letvars
R30396 Coq.Init.Logic "x = y" type_scope
R30376 RTLgen.add_vars
R30398 RTLgen.OK
R30401 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R30586 RTLgen.map_letvars
R30586 RTLgen.map_letvars
R30622 RTLgenproof1.add_var_letenv
R30622 RTLgenproof1.add_var_letenv
R30729 RTLgenproof1.match_env
R30766 Registers.init
R30778 Values.Vundef
R30761 Coq.Lists.List.nil
R30744 Maps.empty
R30756 Values.val
R30718 Coq.Init.Logic "x = y" type_scope
R30705 RTLgen.map_letvars
R30720 Coq.Lists.List.nil
R30810 RTLgenproof1.mk_match_env
R30810 RTLgenproof1.mk_match_env
R30842 Maps.gempty
R30842 Maps.gempty
R31084 Coq.Init.Logic "A /\ B" type_scope
R31026 RTLgenproof1.match_env
R31065 RTL.init_regs
R31060 Coq.Lists.List.nil
R31042 Cminor.set_params
R31136 Coq.Init.Logic "x = y" type_scope
R31132 Registers "a # b"
R31117 RTL.init_regs
R31138 Values.Vundef
R31098 RTLgenproof1.reg_fresh
R31002 Coq.Init.Logic "x = y" type_scope
R30974 RTLgen.add_vars
R30983 RTLgen.init_mapping
R31004 RTLgen.OK
R31007 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R31255 RTLgenproof1.match_env_empty
R31255 RTLgenproof1.match_env_empty
R31306 Registers.gi
R31306 Registers.gi
R31470 Coq.Init.Logic "x = y" type_scope
R31453 RTLgen.map_letvars
R31472 Coq.Lists.List.nil
R31470 Coq.Init.Logic "x = y" type_scope
R31453 RTLgen.map_letvars
R31472 Coq.Lists.List.nil
R31494 RTLgen.map_letvars
R31494 RTLgen.map_letvars
R31519 RTLgenproof1.add_var_letenv
R31519 RTLgenproof1.add_var_letenv
R31559 RTLgen.map_letvars
R31571 RTLgen.init_mapping
R31559 RTLgen.map_letvars
R31571 RTLgen.init_mapping
R31595 RTLgenproof1.add_vars_letenv
R31595 RTLgenproof1.add_vars_letenv
R31694 Coq.Lists.List.nil
R31694 Coq.Lists.List.nil
R31794 Maps.gsspec
R31814 Coqlib.peq
R31794 Maps.gsspec
R31794 Maps.gsspec
R31794 Maps.gsspec
R31814 Coqlib.peq
R31866 Registers.gi
R31866 Registers.gi
R31901 RTLgenproof1.me_vars
R31901 RTLgenproof1.me_vars
R31985 RTL.init_regs
R31995 Coq.Lists.List.nil
R32008 Registers.init
R32020 Values.Vundef
R31985 RTL.init_regs
R31995 Coq.Lists.List.nil
R32008 Registers.init
R32020 Values.Vundef
R32111 Registers.gi
R32111 Registers.gi
R32270 Maps.gsspec
R32290 Coqlib.peq
R32270 Maps.gsspec
R32270 Maps.gsspec
R32270 Maps.gsspec
R32290 Coqlib.peq
R32342 Registers.gss
R32342 Registers.gss
R32378 RTLgenproof1.me_vars
R32378 RTLgenproof1.me_vars
R32459 Registers.gso
R32459 Registers.gso
R32485 RTLgenproof1.bounded_fresh_different
R32485 RTLgenproof1.bounded_fresh_different
R32533 RTLgenproof1.map_wf
R32533 RTLgenproof1.map_wf
R32555 RTLgenproof1.add_vars_wf
R32555 RTLgenproof1.add_vars_wf
R32581 RTLgenproof1.init_mapping_wf
R32581 RTLgenproof1.init_mapping_wf
R32679 Registers.gso
R32679 Registers.gso
R32730 Coq.Init.Logic.sym_not_equal
R32730 Coq.Init.Logic.sym_not_equal
R32985 RTLgenproof1.match_env
R33001 Cminor.set_locals
R32961 Coq.Init.Logic "x = y" type_scope
R32941 RTLgen.add_vars
R32963 RTLgen.OK
R32966 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R32926 Coq.Init.Logic "x = y" type_scope
R32923 Registers "a # b"
R32928 Values.Vundef
R32903 RTLgenproof1.reg_fresh
R32864 RTLgenproof1.match_env
R32812 RTLgenproof1.map_wf
R33164 RTLgenproof1.match_env
R33177 Cminor.set_locals
R33164 RTLgenproof1.match_env
R33177 Cminor.set_locals
R33338 Maps.gsspec
R33338 Maps.gsspec
R33338 Maps.gsspec
R33338 Maps.gsspec
R33361 Coqlib.peq
R33361 Coqlib.peq
R33453 RTLgenproof1.reg_fresh_decr
R33453 RTLgenproof1.reg_fresh_decr
R33486 RTLgenproof1.add_vars_incr
R33486 RTLgenproof1.add_vars_incr
R33536 RTLgenproof1.me_vars
R33536 RTLgenproof1.me_vars
R33569 RTLgenproof1.me_letvars
R33569 RTLgenproof1.me_letvars
R33800 RTLgenproof1.match_env
R33878 RTL.init_regs
R33873 Coq.Lists.List.nil
R33816 Cminor.set_locals
R33833 Cminor.set_params
R33773 Coq.Init.Logic "x = y" type_scope
R33751 RTLgen.add_vars
R33775 RTLgen.OK
R33778 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R33722 Coq.Init.Logic "x = y" type_scope
R33690 RTLgen.add_vars
R33699 RTLgen.init_mapping
R33724 RTLgen.OK
R33727 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R33938 RTLgenproof1.match_set_params_init_regs
R33938 RTLgenproof1.match_set_params_init_regs
R34012 RTLgenproof1.match_set_locals
R34012 RTLgenproof1.match_set_locals
R34046 RTLgenproof1.add_vars_wf
R34046 RTLgenproof1.add_vars_wf
R34072 RTLgenproof1.init_mapping_wf
R34072 RTLgenproof1.init_mapping_wf
R34243 RTLgenproof1.state_incr
R34227 Coq.Init.Logic "x = y" type_scope
R34207 RTLgen.add_move
R34229 RTLgen.OK
R34312 Registers.eq
R34312 Registers.eq
R34418 RTLgenproof1.add_move_incr
R35907 Coq.Init.Logic "A /\ B" type_scope
R35898 Cminor.expr
R35947 Coq.Init.Logic "A /\ B" type_scope
R35932 Cminor.condexpr
R35972 Cminor.exprlist
R35863 Cminor.Econs
R35840 Cminor.exprlist
R35807 Cminor.expr
R35780 Cminor.Enil
R35745 Cminor.CEcondition
R35722 Cminor.condexpr
R35683 Cminor.condexpr
R35637 Cminor.condexpr
R35602 Cminor.CEcond
R35579 Cminor.exprlist
R35563 Op.condition
R35532 Cminor.CEfalse
R35512 Cminor.CEtrue
R35487 Cminor.Eletvar
R35479 Coq.Init.Datatypes.nat
R35445 Cminor.Elet
R35428 Cminor.expr
R35403 Cminor.expr
R35361 Cminor.Econdition
R35344 Cminor.expr
R35311 Cminor.expr
R35266 Cminor.condexpr
R35229 Cminor.Ecall
R35207 Cminor.exprlist
R35173 Cminor.expr
R35157 AST.signature
R35116 Cminor.Estore
R35099 Cminor.expr
R35060 Cminor.exprlist
R35043 Op.addressing
R35024 AST.memory_chunk
R34987 Cminor.Eload
R34957 Cminor.exprlist
R34940 Op.addressing
R34921 AST.memory_chunk
R34888 Cminor.Eop
R34866 Cminor.exprlist
R34850 Op.operation
R34813 Cminor.Eassign
R34796 Cminor.expr
R34784 AST.ident
R34752 Cminor.Evar
R34742 AST.ident
R34704 Cminor.exprlist
R34671 Cminor.condexpr
R34651 Cminor.expr
R36021 RTLgenproof1.expr_ind3
R36021 RTLgenproof1.expr_ind3
R36069 RTLgenproof1.condexpr_ind3
R36069 RTLgenproof1.condexpr_ind3
R36114 RTLgenproof1.exprlist_ind3
R36114 RTLgenproof1.exprlist_ind3
R36287 RTLgenproof1.state_incr
R36273 Coq.Init.Logic "x = y" type_scope
R36243 RTLgen.transl_expr
R36275 RTLgen.OK
R36193 Cminor.expr
R36463 RTLgenproof1.state_incr
R36449 Coq.Init.Logic "x = y" type_scope
R36407 RTLgen.transl_condition
R36451 RTLgen.OK
R36346 Cminor.condexpr
R36625 RTLgenproof1.state_incr
R36611 Coq.Init.Logic "x = y" type_scope
R36576 RTLgen.transl_exprlist
R36613 RTLgen.OK
R36522 Cminor.exprlist
R36722 Coq.Init.Logic "A /\ B" type_scope
R36699 RTLgenproof1.transl_expr_incr_pred
R36768 Coq.Init.Logic "A /\ B" type_scope
R36740 RTLgenproof1.transl_condition_incr_pred
R36787 RTLgenproof1.transl_exprlist_incr_pred
R36833 RTLgenproof1.expr_condexpr_exprlist_ind
R36833 RTLgenproof1.expr_condexpr_exprlist_ind
R37108 RTLgenproof1.state_incr_trans3
R37108 RTLgenproof1.state_incr_trans3
R37181 RTLgenproof1.state_incr_trans4
R37181 RTLgenproof1.state_incr_trans4
R37501 RTLgenproof1.state_incr
R37487 Coq.Init.Logic "x = y" type_scope
R37457 RTLgen.transl_expr
R37489 RTLgen.OK
R37525 Coq.Init.Logic.proj1
R37531 RTLgenproof1.transl_expr_condition_exprlist_incr
R37698 RTLgenproof1.state_incr
R37684 Coq.Init.Logic "x = y" type_scope
R37642 RTLgen.transl_condition
R37686 RTLgen.OK
R37722 Coq.Init.Logic.proj1
R37729 Coq.Init.Logic.proj2
R37735 RTLgenproof1.transl_expr_condition_exprlist_incr
R37889 RTLgenproof1.state_incr
R37875 Coq.Init.Logic "x = y" type_scope
R37840 RTLgen.transl_exprlist
R37877 RTLgen.OK
R37913 Coq.Init.Logic.proj2
R37920 Coq.Init.Logic.proj2
R37926 RTLgenproof1.transl_expr_condition_exprlist_incr
R37979 RTLgenproof1.transl_expr_incr
R37996 RTLgenproof1.transl_condition_incr
R38018 RTLgenproof1.transl_exprlist_incr
R38726 Coq.Init.Logic "A /\ B" type_scope
R38717 Cminor.stmt
R38751 Cminor.stmtlist
R38682 Cminor.Scons
R38659 Cminor.stmtlist
R38626 Cminor.stmt
R38599 Cminor.Snil
R38574 Cminor.Sreturn
R38558 Coq.Init.Datatypes.option
R38565 Cminor.expr
R38526 Cminor.Sexit
R38518 Coq.Init.Datatypes.nat
R38485 Cminor.Sblock
R38464 Cminor.stmtlist
R38432 Cminor.Sloop
R38411 Cminor.stmtlist
R38368 Cminor.Sifthenelse
R38346 Cminor.stmtlist
R38307 Cminor.stmtlist
R38292 Cminor.condexpr
R38259 Cminor.Sexpr
R38250 Cminor.expr
R38212 Cminor.stmtlist
R38192 Cminor.stmt
R38800 RTLgenproof1.stmt_ind2
R38800 RTLgenproof1.stmt_ind2
R38838 RTLgenproof1.stmtlist_ind2
R38838 RTLgenproof1.stmtlist_ind2
R39030 RTLgenproof1.state_incr
R39014 Coq.Init.Logic "x = y" type_scope
R38974 RTLgen.transl_stmt
R39016 RTLgen.OK
R38914 Cminor.stmt
R39214 RTLgenproof1.state_incr
R39198 Coq.Init.Logic "x = y" type_scope
R39153 RTLgen.transl_stmtlist
R39200 RTLgen.OK
R39089 Cminor.stmtlist
R39301 Coq.Init.Logic "A /\ B" type_scope
R39278 RTLgenproof1.transl_stmt_incr_pred
R39320 RTLgenproof1.transl_stmtlist_incr_pred
R39366 RTLgenproof1.stmt_stmtlist_ind
R39366 RTLgenproof1.stmt_stmtlist_ind
R39596 RTLgen.more_likely
R39596 RTLgen.more_likely
R39697 RTL.Inop
R39667 RTLgenproof1.update_instr_incr
R39697 RTL.Inop
R39667 RTLgenproof1.update_instr_incr
R39757 Coq.Lists.List.nth_error
R39757 Coq.Lists.List.nth_error
R40085 RTLgenproof1.state_incr
R40069 Coq.Init.Logic "x = y" type_scope
R40029 RTLgen.transl_stmt
R40071 RTLgen.OK
R40109 Coq.Init.Logic.proj1
R40115 RTLgenproof1.transl_stmt_stmtlist_incr
R40280 RTLgenproof1.state_incr
R40264 Coq.Init.Logic "x = y" type_scope
R40219 RTLgen.transl_stmtlist
R40266 RTLgen.OK
R40304 Coq.Init.Logic.proj2
R40310 RTLgenproof1.transl_stmt_stmtlist_incr
R40352 RTLgenproof1.transl_stmt_incr
R40369 RTLgenproof1.transl_stmtlist_incr
FRTLgenproof
R381 Cminor.program
R413 RTL.program
R465 Coq.Init.Logic "x = y" type_scope
R445 RTLgen.transl_program
R467 Coq.Init.Datatypes.Some
R489 Cminor.genv
R504 Globalenvs.globalenv
R535 RTL.genv
R547 Globalenvs.globalenv
R639 Coq.Init.Logic "x = y" type_scope
R616 Globalenvs.find_symbol
R641 Globalenvs.find_symbol
R608 AST.ident
R742 RTLgen.transl_function
R705 Globalenvs.find_symbol_transf_partial
R742 RTLgen.transl_function
R705 Globalenvs.find_symbol_transf_partial
R895 Coq.Init.Logic "'exists' x , p" type_scope
R944 Coq.Init.Logic "A /\ B" type_scope
R934 Coq.Init.Logic "x = y" type_scope
R908 Globalenvs.find_funct_ptr
R936 Coq.Init.Datatypes.Some
R965 Coq.Init.Logic "x = y" type_scope
R947 RTLgen.transl_function
R967 Coq.Init.Datatypes.Some
R881 Coq.Init.Logic "x = y" type_scope
R856 Globalenvs.find_funct_ptr
R883 Coq.Init.Datatypes.Some
R836 Cminor.function
R825 Values.block
R1012 Globalenvs.find_funct_ptr_transf_partial
R1047 RTLgen.transl_function
R1012 Globalenvs.find_funct_ptr_transf_partial
R1047 RTLgen.transl_function
R1082 RTLgen.transl_function
R1082 RTLgen.transl_function
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R1287 Coq.Init.Logic "'exists' x , p" type_scope
R1332 Coq.Init.Logic "A /\ B" type_scope
R1322 Coq.Init.Logic "x = y" type_scope
R1300 Globalenvs.find_funct
R1324 Coq.Init.Datatypes.Some
R1353 Coq.Init.Logic "x = y" type_scope
R1335 RTLgen.transl_function
R1355 Coq.Init.Datatypes.Some
R1273 Coq.Init.Logic "x = y" type_scope
R1252 Globalenvs.find_funct
R1275 Coq.Init.Datatypes.Some
R1232 Cminor.function
R1223 Values.val
R1400 Globalenvs.find_funct_transf_partial
R1431 RTLgen.transl_function
R1400 Globalenvs.find_funct_transf_partial
R1431 RTLgen.transl_function
R1466 RTLgen.transl_function
R1466 RTLgen.transl_function
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R1676 Coq.Init.Logic "'exists' x , p" type_scope
R1740 Coq.Init.Logic "A /\ B" type_scope
R1690 RTL.exec_instrs
R1710 RTLgen.st_code
R1760 Coq.Init.Logic "A /\ B" type_scope
R1752 Coq.Init.Logic "x = y" type_scope
R1748 Registers "a # b"
R1756 Registers "a # b"
R1793 Coq.Init.Logic "x = y" type_scope
R1790 Registers "a # b"
R1797 Registers "a # b"
R1778 Coq.Init.Logic "x <> y" type_scope
R1660 Coq.Init.Logic "x = y" type_scope
R1640 RTLgen.add_move
R1662 RTLgen.OK
R1853 Registers.eq
R1853 Registers.eq
R1946 RTL.exec_refl
R1946 RTL.exec_refl
R1995 Registers "a # b <- c"
R2005 Registers "a # b"
R1995 Registers "a # b <- c"
R2005 Registers "a # b"
R2027 RTL.exec_one
R2027 RTL.exec_one
R2044 RTL.exec_Iop
R2044 RTL.exec_Iop
R2103 Registers.gss
R2103 Registers.gss
R2132 Registers.gso
R2132 Registers.gso
R2604 Coq.Init.Logic "'exists' x , p" type_scope
R2673 Coq.Init.Logic "A /\ B" type_scope
R2621 RTL.exec_instrs
R2641 RTLgen.st_code
R2702 Coq.Init.Logic "A /\ B" type_scope
R2676 RTLgenproof1.match_env
R2718 Coq.Init.Logic "A /\ B" type_scope
R2712 Coq.Init.Logic "x = y" type_scope
R2708 Registers "a # b"
R2837 Coq.Init.Logic "x = y" type_scope
R2834 Registers "a # b"
R2841 Registers "a # b"
R2810 Coq.Init.Logic "A \/ B" type_scope
R2793 RTLgenproof1.reg_in_map
R2815 Coq.Init.Logic "x <> y" type_scope
R2758 Coq.Init.Logic "~ x" type_scope
R2760 RTLgenproof1.mutated_reg
R2739 RTLgenproof1.reg_bounded
R2571 RTLgenproof1.target_reg_ok
R2534 Coq.Lists.List.incl
R2540 RTLgen.mutated_expr
R2501 RTLgenproof1.match_env
R2480 Coq.Init.Logic "x = y" type_scope
R2450 RTLgen.transl_expr
R2482 RTLgen.OK
R2427 RTLgenproof1.map_wf
R2368 Values.val
R2359 Mem.mem
R2349 Cminor.env
R2313 Cminor.expr
R2304 Mem.mem
R2295 Cminor.env
R2283 Cminor.letenv
R2273 Values.val
R3244 Coq.Init.Logic "'exists' x , p" type_scope
R3313 Coq.Init.Logic "A /\ B" type_scope
R3261 RTL.exec_instrs
R3281 RTLgen.st_code
R3342 Coq.Init.Logic "A /\ B" type_scope
R3316 RTLgenproof1.match_env
R3360 Coq.Init.Logic "A /\ B" type_scope
R3353 Coq.Init.Logic "x = y" type_scope
R3348 Registers "a ## b"
R3482 Coq.Init.Logic "x = y" type_scope
R3479 Registers "a # b"
R3486 Registers "a # b"
R3452 Coq.Init.Logic "A \/ B" type_scope
R3435 RTLgenproof1.reg_in_map
R3455 Coq.Init.Logic "~ x" type_scope
R3457 Coq.Lists.List.In
R3400 Coq.Init.Logic "~ x" type_scope
R3402 RTLgenproof1.mutated_reg
R3381 RTLgenproof1.reg_bounded
R3209 RTLgenproof1.target_regs_ok
R3167 Coq.Lists.List.incl
R3173 RTLgen.mutated_exprlist
R3134 RTLgenproof1.match_env
R3113 Coq.Init.Logic "x = y" type_scope
R3078 RTLgen.transl_exprlist
R3115 RTLgen.OK
R3055 RTLgenproof1.map_wf
R2991 Coq.Lists.List.list
R2996 Values.val
R2981 Mem.mem
R2971 Cminor.env
R2931 Cminor.exprlist
R2921 Mem.mem
R2912 Cminor.env
R2900 Cminor.letenv
R2890 Values.val
R3856 Coq.Init.Logic "'exists' x , p" type_scope
R3953 Coq.Init.Logic "A /\ B" type_scope
R3873 RTL.exec_instrs
R3893 RTLgen.st_code
R3982 Coq.Init.Logic "A /\ B" type_scope
R3956 RTLgenproof1.match_env
R4065 Coq.Init.Logic "x = y" type_scope
R4062 Registers "a # b"
R4069 Registers "a # b"
R4023 Coq.Init.Logic "~ x" type_scope
R4025 RTLgenproof1.mutated_reg
R4004 RTLgenproof1.reg_bounded
R3822 Coq.Lists.List.incl
R3828 RTLgen.mutated_condexpr
R3789 RTLgenproof1.match_env
R3768 Coq.Init.Logic "x = y" type_scope
R3726 RTLgen.transl_condition
R3770 RTLgen.OK
R3703 RTLgenproof1.map_wf
R3636 Coq.Init.Datatypes.bool
R3626 Mem.mem
R3616 Cminor.env
R3576 Cminor.condexpr
R3567 Mem.mem
R3558 Cminor.env
R3546 Cminor.letenv
R3536 Values.val
R4211 Cminor.Out_normal
R4231 Coq.Init.Logic "x = y" type_scope
R4240 Cminor.Out_exit
R4273 Coq.Init.Logic "x = y" type_scope
R4254 Coq.Lists.List.nth_error
R4275 Coq.Init.Datatypes.Some
R4287 Cminor.Out_return
R4308 Coq.Init.Logic "x = y" type_scope
R4174 RTL.node
R4163 RTL.node
R4145 Coq.Lists.List.list
R4150 RTL.node
R4130 RTL.node
R4109 Cminor.outcome
R4426 Coq.Init.Datatypes.None
R4434 Coq.Init.Logic.True
R4443 Coq.Init.Datatypes.Some
R4458 Coq.Init.Logic "x = y" type_scope
R4455 Registers "a # b"
R4389 Values.val
R4373 Coq.Init.Datatypes.option
R4380 Registers.reg
R4358 RTL.regset
R4584 Cminor.Out_normal
R4598 Coq.Init.Logic.True
R4607 Cminor.Out_exit
R4621 Coq.Init.Logic.True
R4630 Cminor.Out_return
R4685 Coq.Init.Datatypes.None
R4691 Coq.Init.Datatypes.None
R4699 Coq.Init.Logic.True
R4712 Coq.Init.Datatypes.Some
R4720 Coq.Init.Datatypes.Some
R4735 Coq.Init.Logic "x = y" type_scope
R4732 Registers "a # b"
R4755 Coq.Init.Logic.False
R4545 RTL.regset
R4528 Coq.Init.Datatypes.option
R4535 Registers.reg
R4512 Cminor.outcome
R5167 Coq.Init.Logic "'exists' x , p" type_scope
R5236 Coq.Init.Logic "A /\ B" type_scope
R5184 RTL.exec_instrs
R5204 RTLgen.st_code
R5266 Coq.Init.Logic "A /\ B" type_scope
R5239 RTLgenproof1.match_env
R5256 Coq.Lists.List.nil
R5269 RTLgenproof.match_return_outcome
R5138 RTLgenproof1.return_reg_ok
R5089 RTLgenproof.outcome_node
R5055 RTLgenproof1.match_env
R5071 Coq.Lists.List.nil
R5034 Coq.Init.Logic "x = y" type_scope
R4991 RTLgen.transl_stmt
R5036 RTLgen.OK
R4968 RTLgenproof1.map_wf
R4889 Cminor.outcome
R4878 Mem.mem
R4868 Cminor.env
R4845 Cminor.stmt
R4836 Mem.mem
R4827 Cminor.env
R4818 Values.val
R5707 Coq.Init.Logic "'exists' x , p" type_scope
R5776 Coq.Init.Logic "A /\ B" type_scope
R5724 RTL.exec_instrs
R5744 RTLgen.st_code
R5806 Coq.Init.Logic "A /\ B" type_scope
R5779 RTLgenproof1.match_env
R5796 Coq.Lists.List.nil
R5809 RTLgenproof.match_return_outcome
R5678 RTLgenproof1.return_reg_ok
R5629 RTLgenproof.outcome_node
R5595 RTLgenproof1.match_env
R5611 Coq.Lists.List.nil
R5574 Coq.Init.Logic "x = y" type_scope
R5526 RTLgen.transl_stmtlist
R5576 RTLgen.OK
R5503 RTLgenproof1.map_wf
R5424 Cminor.outcome
R5413 Mem.mem
R5403 Cminor.env
R5376 Cminor.stmtlist
R5366 Mem.mem
R5357 Cminor.env
R5348 Values.val
R6020 RTL.exec_function
R6006 Coq.Init.Logic "x = y" type_scope
R5988 RTLgen.transl_function
R6008 Coq.Init.Datatypes.Some
R5952 Values.val
R5940 Mem.mem
R5922 Coq.Lists.List.list
R5927 Values.val
R5897 Cminor.function
R5888 Mem.mem
R6249 RTLgenproof.transl_expr_correct
R6280 Cminor.Evar
R6235 Coq.Init.Logic "x = y" type_scope
R6231 Maps "a ! b"
R6237 Coq.Init.Datatypes.Some
R6222 Values.val
R6211 AST.ident
R6201 Mem.mem
R6192 Cminor.env
R6180 Cminor.letenv
R6170 Values.val
R6401 Maps "a ! b"
R6389 RTLgen.map_vars
R6401 Maps "a ! b"
R6389 RTLgen.map_vars
R6470 RTLgenproof.add_move_correct
R6470 RTLgenproof.add_move_correct
R6723 RTLgenproof1.match_env_exten
R6723 RTLgenproof1.match_env_exten
R6764 Registers.eq
R6764 Registers.eq
R6889 RTLgenproof1.match_env_invariant
R6889 RTLgenproof1.match_env_invariant
R7083 Registers.eq
R7083 Registers.eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R7593 RTLgenproof.transl_expr_correct
R7624 Cminor.Eop
R7579 Coq.Init.Logic "x = y" type_scope
R7552 Op.eval_operation
R7581 Coq.Init.Datatypes.Some
R7501 RTLgenproof.transl_exprlist_correct
R7457 Cminor.eval_exprlist
R7449 Values.val
R7426 Coq.Lists.List.list
R7431 Values.val
R7415 Mem.mem
R7404 Cminor.env
R7388 Cminor.exprlist
R7362 Op.operation
R7351 Mem.mem
R7341 Cminor.env
R7328 Cminor.letenv
R7317 Values.val
R7775 RTLgenproof1.target_regs_ok
R7775 RTLgenproof1.target_regs_ok
R7841 RTLgenproof1.map_wf
R7841 RTLgenproof1.map_wf
R7982 Registers "a # b <- c"
R7982 Registers "a # b <- c"
R8020 RTL.exec_trans
R8020 RTL.exec_trans
R8053 RTLgenproof1.exec_instrs_incr
R8053 RTLgenproof1.exec_instrs_incr
R8104 RTL.exec_one
R8121 RTL.exec_Iop
R8104 RTL.exec_one
R8121 RTL.exec_Iop
R8173 Op.eval_operation_preserved
R8214 RTL.function
R8198 Cminor.function
R8173 Op.eval_operation_preserved
R8214 RTL.function
R8198 Cminor.function
R8259 RTLgenproof.symbols_preserved
R8259 RTLgenproof.symbols_preserved
R8367 Registers.gss
R8367 Registers.gss
R8414 Registers.gso
R8414 Registers.gso
R8476 Coq.Lists.List.In_dec
R8483 Registers.eq
R8476 Coq.Lists.List.In_dec
R8483 Registers.eq
R8517 RTLgenproof1.alloc_regs_fresh_or_in_map
R8517 RTLgenproof1.alloc_regs_fresh_or_in_map
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R8971 RTLgenproof.transl_expr_correct
R9017 Maps.set
R9002 Cminor.Eassign
R8926 RTLgenproof.transl_expr_correct
R8888 Cminor.eval_expr
R8880 Values.val
R8865 Mem.mem
R8854 Cminor.env
R8842 Cminor.expr
R8830 AST.ident
R8814 Mem.mem
R8804 Cminor.env
R8791 Cminor.letenv
R8780 Values.val
R9144 RTLgenproof1.map_wf
R9144 RTLgenproof1.map_wf
R9193 Coq.Lists.List.incl
R9199 RTLgen.mutated_expr
R9193 Coq.Lists.List.incl
R9199 RTLgen.mutated_expr
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R9279 RTLgenproof1.target_reg_ok
R9279 RTLgenproof1.target_reg_ok
R9334 RTLgenproof1.target_reg_other
R9334 RTLgenproof1.target_reg_other
R9482 RTLgenproof.add_move_correct
R9482 RTLgenproof.add_move_correct
R9604 RTL.exec_trans
R9604 RTL.exec_trans
R9636 RTLgenproof1.exec_instrs_incr
R9636 RTLgenproof1.exec_instrs_incr
R9727 RTLgenproof1.match_env_update_var
R9727 RTLgenproof1.match_env_update_var
R9813 Registers.eq
R9813 Registers.eq
R9925 Registers "a # b"
R9925 Registers "a # b"
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R10089 Maps "a ! b"
R10077 RTLgen.map_vars
R10089 Maps "a ! b"
R10077 RTLgen.map_vars
R10576 RTLgenproof.transl_expr_correct
R10607 Cminor.Eload
R10562 Coq.Init.Logic "x = y" type_scope
R10541 Mem.loadv
R10564 Coq.Init.Datatypes.Some
R10527 Coq.Init.Logic "x = y" type_scope
R10497 Op.eval_addressing
R10529 Coq.Init.Datatypes.Some
R10446 RTLgenproof.transl_exprlist_correct
R10402 Cminor.eval_exprlist
R10394 Values.val
R10380 Coq.Lists.List.list
R10385 Values.val
R10364 Values.val
R10354 Mem.mem
R10343 Cminor.env
R10327 Cminor.exprlist
R10304 Op.addressing
R10282 AST.memory_chunk
R10264 Mem.mem
R10254 Cminor.env
R10241 Cminor.letenv
R10230 Values.val
R10746 RTLgenproof1.map_wf
R10746 RTLgenproof1.map_wf
R10795 RTLgenproof1.target_regs_ok
R10795 RTLgenproof1.target_regs_ok
R10957 Registers "a # b <- c"
R10957 Registers "a # b <- c"
R10995 RTL.exec_trans
R10995 RTL.exec_trans
R11028 RTLgenproof1.exec_instrs_incr
R11028 RTLgenproof1.exec_instrs_incr
R11079 RTL.exec_one
R11079 RTL.exec_one
R11096 RTL.exec_Iload
R11096 RTL.exec_Iload
R11151 Op.eval_addressing_preserved
R11151 Op.eval_addressing_preserved
R11209 RTLgenproof.symbols_preserved
R11209 RTLgenproof.symbols_preserved
R11272 RTLgenproof1.match_env_update_temp
R11272 RTLgenproof1.match_env_update_temp
R11362 Registers.gss
R11362 Registers.gss
R11409 Registers.gso
R11409 Registers.gso
R11475 Coq.Lists.List.In_dec
R11482 Registers.eq
R11475 Coq.Lists.List.In_dec
R11482 Registers.eq
R11510 RTLgenproof1.alloc_regs_fresh_or_in_map
R11510 RTLgenproof1.alloc_regs_fresh_or_in_map
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R12199 RTLgenproof.transl_expr_correct
R12230 Cminor.Estore
R12184 Coq.Init.Logic "x = y" type_scope
R12160 Mem.storev
R12186 Coq.Init.Datatypes.Some
R12145 Coq.Init.Logic "x = y" type_scope
R12115 Op.eval_addressing
R12147 Coq.Init.Datatypes.Some
R12068 RTLgenproof.transl_expr_correct
R12028 Cminor.eval_expr
R11977 RTLgenproof.transl_exprlist_correct
R11933 Cminor.eval_exprlist
R11925 Values.val
R11916 Values.val
R11901 Mem.mem
R11901 Mem.mem
R11887 Cminor.env
R11871 Coq.Lists.List.list
R11876 Values.val
R11855 Mem.mem
R11844 Cminor.env
R11832 Cminor.expr
R11817 Cminor.exprlist
R11794 Op.addressing
R11772 AST.memory_chunk
R11754 Mem.mem
R11744 Cminor.env
R11731 Cminor.letenv
R11720 Values.val
R12373 RTLgenproof1.map_wf
R12373 RTLgenproof1.map_wf
R12400 RTLgenproof1.map_wf_incr
R12400 RTLgenproof1.map_wf_incr
R12431 RTLgenproof1.state_incr_trans2
R12431 RTLgenproof1.state_incr_trans2
R12511 Coq.Lists.List.incl
R12517 RTLgen.mutated_exprlist
R12511 Coq.Lists.List.incl
R12517 RTLgen.mutated_exprlist
R12579 RTLgenproof1.target_regs_ok
R12579 RTLgenproof1.target_regs_ok
R12623 RTLgenproof1.target_regs_ok_incr
R12623 RTLgenproof1.target_regs_ok_incr
R12784 RTLgenproof1.map_wf
R12784 RTLgenproof1.map_wf
R12833 Coq.Lists.List.incl
R12839 RTLgen.mutated_expr
R12833 Coq.Lists.List.incl
R12839 RTLgen.mutated_expr
R12896 RTLgenproof1.target_reg_ok
R12896 RTLgenproof1.target_reg_ok
R12953 RTLgenproof1.target_reg_other
R12953 RTLgenproof1.target_reg_other
R13129 RTL.exec_trans
R13129 RTL.exec_trans
R13162 RTLgenproof1.exec_instrs_incr
R13162 RTLgenproof1.exec_instrs_incr
R13214 RTL.exec_trans
R13214 RTL.exec_trans
R13247 RTLgenproof1.exec_instrs_incr
R13247 RTLgenproof1.exec_instrs_incr
R13298 RTL.exec_one
R13298 RTL.exec_one
R13315 RTL.exec_Istore
R13315 RTL.exec_Istore
R13362 Coq.Init.Logic "x = y" type_scope
R13358 Registers "a ## b"
R13367 Registers "a ## b"
R13362 Coq.Init.Logic "x = y" type_scope
R13358 Registers "a ## b"
R13367 Registers "a ## b"
R13383 Coqlib.list_map_exten
R13383 Coqlib.list_map_exten
R13486 RTLgenproof1.alloc_regs_fresh_or_in_map
R13486 RTLgenproof1.alloc_regs_fresh_or_in_map
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R13571 Coq.Init.Logic.sym_not_equal
R13571 Coq.Init.Logic.sym_not_equal
R13597 RTLgenproof1.bounded_fresh_different
R13597 RTLgenproof1.bounded_fresh_different
R13713 Op.eval_addressing_preserved
R13713 Op.eval_addressing_preserved
R13771 RTLgenproof.symbols_preserved
R13771 RTLgenproof.symbols_preserved
R13944 Registers "a # b"
R13944 Registers "a # b"
R13972 RTLgenproof1.reg_bounded_incr
R13972 RTLgenproof1.reg_bounded_incr
R14063 RTLgenproof1.reg_bounded_incr
R14063 RTLgenproof1.reg_bounded_incr
R14096 RTLgenproof1.state_incr_trans2
R14096 RTLgenproof1.state_incr_trans2
R14175 Coq.Lists.List.In_dec
R14182 Registers.eq
R14175 Coq.Lists.List.In_dec
R14182 Registers.eq
R14213 RTLgenproof1.alloc_regs_fresh_or_in_map
R14213 RTLgenproof1.alloc_regs_fresh_or_in_map
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R14916 RTLgenproof.transl_expr_correct
R14947 Cminor.Ecall
R14868 RTLgenproof.transl_function_correct
R14828 Cminor.eval_funcall
R14817 Coq.Init.Logic "x = y" type_scope
R14801 Cminor.fn_sig
R14787 Coq.Init.Logic "x = y" type_scope
R14765 Globalenvs.find_funct
R14789 Coq.Init.Datatypes.Some
R14709 RTLgenproof.transl_exprlist_correct
R14660 Cminor.eval_exprlist
R14614 RTLgenproof.transl_expr_correct
R14575 Cminor.eval_expr
R14555 Cminor.function
R14545 Values.val
R14527 Coq.Lists.List.list
R14532 Values.val
R14508 Values.val
R14497 Mem.mem
R14497 Mem.mem
R14497 Mem.mem
R14480 Cminor.env
R14480 Cminor.env
R14456 Cminor.exprlist
R14444 Cminor.expr
R14428 AST.signature
R14411 Mem.mem
R14401 Cminor.env
R14388 Cminor.letenv
R14377 Values.val
R15064 Coq.Lists.List.incl
R15070 RTLgen.mutated_expr
R15064 Coq.Lists.List.incl
R15070 RTLgen.mutated_expr
R15128 Coq.Lists.List.incl
R15134 RTLgen.mutated_exprlist
R15128 Coq.Lists.List.incl
R15134 RTLgen.mutated_exprlist
R15196 RTLgenproof1.map_wf
R15196 RTLgenproof1.map_wf
R15222 RTLgenproof1.map_wf_incr
R15222 RTLgenproof1.map_wf_incr
R15253 RTLgenproof1.state_incr_trans3
R15253 RTLgenproof1.state_incr_trans3
R15335 RTLgenproof1.target_reg_ok
R15335 RTLgenproof1.target_reg_ok
R15377 RTLgenproof1.target_reg_ok_incr
R15377 RTLgenproof1.target_reg_ok_incr
R15415 RTLgenproof1.state_incr_trans2
R15415 RTLgenproof1.state_incr_trans2
R15623 RTLgenproof1.map_wf
R15623 RTLgenproof1.map_wf
R15649 RTLgenproof1.map_wf_incr
R15649 RTLgenproof1.map_wf_incr
R15680 RTLgenproof1.state_incr_trans2
R15680 RTLgenproof1.state_incr_trans2
R15759 RTLgenproof1.target_regs_ok
R15759 RTLgenproof1.target_regs_ok
R15802 RTLgenproof1.target_regs_ok_incr
R15802 RTLgenproof1.target_regs_ok_incr
R15992 RTLgenproof.functions_translated
R15992 RTLgenproof.functions_translated
R16100 RTL.exec_instrs
R16169 Registers "a # b <- c"
R16117 RTLgen.st_code
R16100 RTL.exec_instrs
R16169 Registers "a # b <- c"
R16117 RTLgen.st_code
R16195 RTL.exec_one
R16195 RTL.exec_one
R16212 RTL.exec_Icall
R16212 RTL.exec_Icall
R16262 Registers "a # b"
R16262 Registers "a # b"
R16340 RTLgenproof1.reg_bounded_incr
R16340 RTLgenproof1.reg_bounded_incr
R16391 RTLgenproof1.target_reg_not_mutated
R16391 RTLgenproof1.target_reg_not_mutated
R16479 RTLgenproof1.map_wf
R16479 RTLgenproof1.map_wf
R16520 Coq.Lists.List.In_dec
R16527 Registers.eq
R16520 Coq.Lists.List.In_dec
R16527 Registers.eq
R16555 RTLgenproof1.alloc_regs_fresh_or_in_map
R16555 RTLgenproof1.alloc_regs_fresh_or_in_map
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R16649 RTLgenproof1.bounded_fresh_absurd
R16649 RTLgenproof1.bounded_fresh_absurd
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R16774 RTLgen.transl_fun
R16787 RTLgen.init_state
R16774 RTLgen.transl_fun
R16787 RTLgen.init_state
R16937 Registers "a # b <- c"
R16937 Registers "a # b <- c"
R16978 RTL.exec_trans
R16978 RTL.exec_trans
R17011 RTLgenproof1.exec_instrs_incr
R17011 RTLgenproof1.exec_instrs_incr
R17063 RTL.exec_trans
R17063 RTL.exec_trans
R17096 RTLgenproof1.exec_instrs_incr
R17096 RTLgenproof1.exec_instrs_incr
R17183 RTLgenproof1.match_env_update_temp
R17183 RTLgenproof1.match_env_update_temp
R17275 Registers.gss
R17275 Registers.gss
R17324 Registers.gso
R17324 Registers.gso
R17353 Registers "a # b"
R17353 Registers "a # b"
R17387 RTLgenproof1.reg_bounded_incr
R17387 RTLgenproof1.reg_bounded_incr
R17423 RTLgenproof1.state_incr_trans2
R17423 RTLgenproof1.state_incr_trans2
R17521 RTLgenproof1.map_wf
R17521 RTLgenproof1.map_wf
R17564 Coq.Lists.List.In_dec
R17571 Registers.eq
R17564 Coq.Lists.List.In_dec
R17571 Registers.eq
R17602 RTLgenproof1.alloc_regs_fresh_or_in_map
R17602 RTLgenproof1.alloc_regs_fresh_or_in_map
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R17699 RTLgenproof1.bounded_fresh_absurd
R17699 RTLgenproof1.bounded_fresh_absurd
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R17802 RTLgenproof1.reg_bounded_incr
R17802 RTLgenproof1.reg_bounded_incr
R17837 RTLgenproof1.state_incr_trans3
R17837 RTLgenproof1.state_incr_trans3
R17929 Registers.eq
R17929 Registers.eq
R17974 RTLgenproof1.alloc_reg_fresh_or_in_map
R17974 RTLgenproof1.alloc_reg_fresh_or_in_map
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R18560 RTLgenproof.transl_expr_correct
R18591 Cminor.Econdition
R18492 RTLgenproof.transl_expr_correct
R18431 Cminor.eval_expr
R18380 RTLgenproof.transl_condition_correct
R18337 Cminor.eval_condexpr
R18329 Values.val
R18318 Mem.mem
R18307 Cminor.env
R18295 Coq.Init.Datatypes.bool
R18279 Mem.mem
R18268 Cminor.env
R18256 Cminor.expr
R18256 Cminor.expr
R18239 Cminor.condexpr
R18224 Mem.mem
R18214 Cminor.env
R18201 Cminor.letenv
R18190 Values.val
R18730 RTLgenproof1.map_wf
R18730 RTLgenproof1.map_wf
R18756 RTLgenproof1.map_wf_incr
R18756 RTLgenproof1.map_wf_incr
R18821 Coq.Lists.List.incl
R18827 RTLgen.mutated_condexpr
R18821 Coq.Lists.List.incl
R18827 RTLgen.mutated_condexpr
R18991 RTLgenproof1.map_wf
R18991 RTLgenproof1.map_wf
R19040 Coq.Lists.List.incl
R19046 RTLgen.mutated_expr
R19040 Coq.Lists.List.incl
R19046 RTLgen.mutated_expr
R19103 RTLgenproof1.target_reg_ok
R19103 RTLgenproof1.target_reg_ok
R19160 RTLgenproof1.target_reg_other
R19160 RTLgenproof1.target_reg_other
R19338 RTL.exec_trans
R19338 RTL.exec_trans
R19371 RTLgenproof1.exec_instrs_incr
R19371 RTLgenproof1.exec_instrs_incr
R19548 Registers "a # b"
R19548 Registers "a # b"
R19621 RTLgenproof1.reg_bounded_incr
R19621 RTLgenproof1.reg_bounded_incr
R19654 RTLgenproof1.state_incr_trans
R19654 RTLgenproof1.state_incr_trans
R19726 Coq.Lists.List.incl
R19732 RTLgen.mutated_expr
R19726 Coq.Lists.List.incl
R19732 RTLgen.mutated_expr
R19789 RTLgenproof1.target_reg_ok
R19789 RTLgenproof1.target_reg_ok
R19845 RTLgenproof1.target_reg_other
R19845 RTLgenproof1.target_reg_other
R20010 RTL.exec_trans
R20010 RTL.exec_trans
R20043 RTLgenproof1.exec_instrs_incr
R20043 RTLgenproof1.exec_instrs_incr
R20220 Registers "a # b"
R20220 Registers "a # b"
R20293 RTLgenproof1.reg_bounded_incr
R20293 RTLgenproof1.reg_bounded_incr
R20326 RTLgenproof1.state_incr_trans2
R20326 RTLgenproof1.state_incr_trans2
R20758 RTLgenproof.transl_expr_correct
R20789 Cminor.Elet
R20702 RTLgenproof.transl_expr_correct
R20729 Coq.Lists.List "x :: y" list_scope
R20653 Cminor.eval_expr
R20673 Coq.Lists.List "x :: y" list_scope
R20607 RTLgenproof.transl_expr_correct
R20568 Cminor.eval_expr
R20560 Values.val
R20549 Mem.mem
R20538 Cminor.env
R20522 Values.val
R20511 Mem.mem
R20500 Cminor.env
R20488 Cminor.expr
R20488 Cminor.expr
R20471 Mem.mem
R20461 Cminor.env
R20448 Cminor.letenv
R20437 Values.val
R20910 RTLgenproof1.map_wf
R20910 RTLgenproof1.map_wf
R20959 Coq.Lists.List.incl
R20965 RTLgen.mutated_expr
R20959 Coq.Lists.List.incl
R20965 RTLgen.mutated_expr
R21022 RTLgenproof1.target_reg_ok
R21022 RTLgenproof1.target_reg_ok
R21062 RTLgenproof1.target_reg_other
R21062 RTLgenproof1.target_reg_other
R21212 RTLgenproof1.map_wf
R21220 RTLgen.add_letvar
R21212 RTLgenproof1.map_wf
R21220 RTLgen.add_letvar
R21252 RTLgenproof1.add_letvar_wf
R21252 RTLgenproof1.add_letvar_wf
R21301 Coq.Lists.List.incl
R21307 RTLgen.mutated_expr
R21301 Coq.Lists.List.incl
R21307 RTLgen.mutated_expr
R21363 RTLgenproof1.match_env
R21399 Coq.Lists.List "x :: y" list_scope
R21374 RTLgen.add_letvar
R21363 RTLgenproof1.match_env
R21399 Coq.Lists.List "x :: y" list_scope
R21374 RTLgen.add_letvar
R21420 RTLgenproof1.match_env_letvar
R21420 RTLgenproof1.match_env_letvar
R21466 RTLgenproof1.target_reg_ok
R21484 RTLgen.add_letvar
R21466 RTLgenproof1.target_reg_ok
R21484 RTLgen.add_letvar
R21536 RTLgenproof1.target_reg_other
R21536 RTLgenproof1.target_reg_other
R21679 RTLgenproof1.bounded_fresh_absurd
R21679 RTLgenproof1.bounded_fresh_absurd
R21949 RTL.exec_trans
R21949 RTL.exec_trans
R21982 RTLgenproof1.exec_instrs_incr
R21982 RTLgenproof1.exec_instrs_incr
R22067 RTLgenproof1.mk_match_env
R22067 RTLgenproof1.mk_match_env
R22088 RTLgenproof1.me_vars
R22088 RTLgenproof1.me_vars
R22125 RTLgenproof1.me_letvars
R22125 RTLgenproof1.me_letvars
R22285 Registers "a # b"
R22285 Registers "a # b"
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R22569 RTLgenproof1.bounded_fresh_absurd
R22569 RTLgenproof1.bounded_fresh_absurd
R22797 RTLgenproof.transl_expr_correct
R22828 Cminor.Eletvar
R22783 Coq.Init.Logic "x = y" type_scope
R22768 Coq.Lists.List.nth_error
R22785 Coq.Init.Datatypes.Some
R22760 Values.val
R22750 Coq.Init.Datatypes.nat
R22740 Mem.mem
R22725 Cminor.env
R22710 Coq.Lists.List.list
R22715 Values.val
R22699 Values.val
R22964 Coq.Lists.List.nth_error
R22975 RTLgen.map_letvars
R22964 Coq.Lists.List.nth_error
R22975 RTLgen.map_letvars
R23058 RTLgenproof.add_move_correct
R23058 RTLgenproof.add_move_correct
R23234 Coq.Init.Logic "x = y" type_scope
R23234 Coq.Init.Logic "x = y" type_scope
R23270 RTLgenproof1.match_env_exten
R23270 RTLgenproof1.match_env_exten
R23312 Registers.eq
R23312 Registers.eq
R23368 RTLgenproof1.match_env_invariant
R23368 RTLgenproof1.match_env_invariant
R23528 RTLgenproof1.me_letvars
R23528 RTLgenproof1.me_letvars
R23576 Registers.reg
R23562 Coq.NArith.BinPos.positive
R23576 Registers.reg
R23562 Coq.NArith.BinPos.positive
R23591 Coqlib.list_map_nth
R23591 Coqlib.list_map_nth
R23692 Coq.Init.Logic "x = y" type_scope
R23692 Coq.Init.Logic "x = y" type_scope
R23728 Registers.eq
R23728 Registers.eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R23941 RTLgenproof.transl_condition_correct
R23987 Coq.Init.Datatypes.true
R23976 Cminor.CEtrue
R23933 Mem.mem
R23923 Cminor.env
R23910 Cminor.letenv
R23899 Values.val
R24085 RTL.exec_refl
R24085 RTL.exec_refl
R24221 RTLgenproof.transl_condition_correct
R24268 Coq.Init.Datatypes.false
R24256 Cminor.CEfalse
R24213 Mem.mem
R24203 Cminor.env
R24190 Cminor.letenv
R24179 Values.val
R24367 RTL.exec_refl
R24367 RTL.exec_refl
R24728 RTLgenproof.transl_condition_correct
R24764 Cminor.CEcond
R24713 Coq.Init.Logic "x = y" type_scope
R24690 Op.eval_condition
R24716 Coq.Init.Datatypes.Some
R24639 RTLgenproof.transl_exprlist_correct
R24595 Cminor.eval_exprlist
R24586 Coq.Init.Datatypes.bool
R24571 Coq.Lists.List.list
R24576 Values.val
R24560 Mem.mem
R24544 Cminor.env
R24528 Cminor.exprlist
R24511 Op.condition
R24494 Mem.mem
R24484 Cminor.env
R24471 Cminor.letenv
R24460 Values.val
R24882 RTLgenproof1.map_wf
R24882 RTLgenproof1.map_wf
R24946 RTLgenproof1.target_regs_ok
R24946 RTLgenproof1.target_regs_ok
R25138 RTL.exec_trans
R25138 RTL.exec_trans
R25171 RTLgenproof1.exec_instrs_incr
R25171 RTLgenproof1.exec_instrs_incr
R25222 RTL.exec_one
R25222 RTL.exec_one
R25256 RTL.exec_Icond_true
R25256 RTL.exec_Icond_true
R25328 RTL.exec_Icond_false
R25328 RTL.exec_Icond_false
R25501 Coq.Lists.List.In_dec
R25508 Registers.eq
R25501 Coq.Lists.List.In_dec
R25508 Registers.eq
R25536 RTLgenproof1.alloc_regs_fresh_or_in_map
R25536 RTLgenproof1.alloc_regs_fresh_or_in_map
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R26089 RTLgenproof.transl_condition_correct
R26125 Cminor.CEcondition
R26014 RTLgenproof.transl_condition_correct
R25947 Cminor.eval_condexpr
R25895 RTLgenproof.transl_condition_correct
R25851 Cminor.eval_condexpr
R25842 Coq.Init.Datatypes.bool
R25830 Mem.mem
R25819 Cminor.env
R25807 Coq.Init.Datatypes.bool
R25790 Mem.mem
R25779 Cminor.env
R25763 Cminor.condexpr
R25763 Cminor.condexpr
R25763 Cminor.condexpr
R25745 Mem.mem
R25735 Cminor.env
R25722 Cminor.letenv
R25711 Values.val
R26264 RTLgenproof1.map_wf
R26264 RTLgenproof1.map_wf
R26313 Coq.Lists.List.incl
R26319 RTLgen.mutated_condexpr
R26313 Coq.Lists.List.incl
R26319 RTLgen.mutated_condexpr
R26484 RTLgenproof1.map_wf
R26484 RTLgenproof1.map_wf
R26533 Coq.Lists.List.incl
R26539 RTLgen.mutated_condexpr
R26533 Coq.Lists.List.incl
R26539 RTLgen.mutated_condexpr
R26702 RTL.exec_trans
R26702 RTL.exec_trans
R26735 RTLgenproof1.exec_instrs_incr
R26735 RTLgenproof1.exec_instrs_incr
R26840 Registers "a # b"
R26840 Registers "a # b"
R26929 Coq.Lists.List.incl
R26935 RTLgen.mutated_condexpr
R26929 Coq.Lists.List.incl
R26935 RTLgen.mutated_condexpr
R27096 RTL.exec_trans
R27096 RTL.exec_trans
R27129 RTLgenproof1.exec_instrs_incr
R27129 RTLgenproof1.exec_instrs_incr
R27234 Registers "a # b"
R27234 Registers "a # b"
R27405 RTLgenproof.transl_exprlist_correct
R27448 Coq.Lists.List.nil
R27439 Cminor.Enil
R27397 Mem.mem
R27387 Cminor.env
R27374 Cminor.letenv
R27363 Values.val
R27582 RTL.exec_refl
R27582 RTL.exec_refl
R28047 RTLgenproof.transl_exprlist_correct
R28103 Coq.Lists.List "x :: y" list_scope
R28082 Cminor.Econs
R27994 RTLgenproof.transl_exprlist_correct
R27948 Cminor.eval_exprlist
R27903 RTLgenproof.transl_expr_correct
R27865 Cminor.eval_expr
R27852 Coq.Lists.List.list
R27857 Values.val
R27841 Mem.mem
R27830 Cminor.env
R27819 Values.val
R27804 Mem.mem
R27793 Cminor.env
R27777 Cminor.exprlist
R27765 Cminor.expr
R27750 Mem.mem
R27740 Cminor.env
R27727 Cminor.letenv
R27716 Values.val
R28252 Coq.Lists.List.incl
R28258 RTLgen.mutated_expr
R28252 Coq.Lists.List.incl
R28258 RTLgen.mutated_expr
R28315 Coq.Lists.List.incl
R28321 RTLgen.mutated_exprlist
R28315 Coq.Lists.List.incl
R28321 RTLgen.mutated_exprlist
R28383 RTLgenproof1.map_wf
R28383 RTLgenproof1.map_wf
R28432 RTLgenproof1.target_reg_ok
R28432 RTLgenproof1.target_reg_ok
R28717 RTL.exec_trans
R28717 RTL.exec_trans
R28750 RTLgenproof1.exec_instrs_incr
R28750 RTLgenproof1.exec_instrs_incr
R29037 Registers "a # b"
R29037 Registers "a # b"
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R29163 Coq.Init.Logic.sym_not_equal
R29163 Coq.Init.Logic.sym_not_equal
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R29704 RTLgenproof.transl_function_correct
R29739 Mem.free
R29641 Cminor.outcome_result_value
R29685 AST.sig_res
R29669 Cminor.fn_sig
R29566 RTLgenproof.transl_stmtlist_correct
R29615 Cminor.fn_body
R29591 Values.Vptr
R29599 Integers.zero
R29498 Cminor.exec_stmtlist
R29540 Cminor.fn_body
R29516 Values.Vptr
R29524 Integers.zero
R29489 Coq.Init.Logic "x = y" type_scope
R29419 Cminor.set_locals
R29450 Cminor.set_params
R29468 Cminor.fn_params
R29431 Cminor.fn_vars
R29403 Coq.Init.Logic "x = y" type_scope
R29371 Mem.alloc
R29386 Cminor.fn_stackspace
R29405 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R29363 Values.val
R29346 Cminor.outcome
R29329 Mem.mem
R29318 Cminor.env
R29318 Cminor.env
R29303 Values.block
R29292 Mem.mem
R29271 Coq.Lists.List.list
R29276 Values.val
R29245 Cminor.function
R29235 Mem.mem
R29842 RTLgen.transl_fun
R29855 RTLgen.init_state
R29842 RTLgen.transl_fun
R29855 RTLgen.init_state
R30026 RTL.init_regs
R30026 RTL.init_regs
R30060 RTLgenproof1.match_env
R30075 Coq.Lists.List.nil
R30060 RTLgenproof1.match_env
R30075 Coq.Lists.List.nil
R30122 RTLgenproof1.match_init_env_init_reg
R30122 RTLgenproof1.match_init_env_init_reg
R30171 RTLgenproof.outcome_node
R30190 Coq.Lists.List.nil
R30171 RTLgenproof.outcome_node
R30190 Coq.Lists.List.nil
R30309 RTLgenproof1.map_wf
R30309 RTLgenproof1.map_wf
R30333 RTLgenproof1.add_vars_wf
R30333 RTLgenproof1.add_vars_wf
R30368 RTLgenproof1.add_vars_wf
R30368 RTLgenproof1.add_vars_wf
R30400 RTLgenproof1.init_mapping_wf
R30400 RTLgenproof1.init_mapping_wf
R30433 RTLgenproof1.map_wf
R30433 RTLgenproof1.map_wf
R30456 RTLgenproof1.map_wf_incr
R30456 RTLgenproof1.map_wf_incr
R30483 RTLgenproof1.state_incr_trans
R30483 RTLgenproof1.state_incr_trans
R30556 RTLgenproof1.return_reg_ok
R30577 RTLgen.ret_reg
R30586 Cminor.fn_sig
R30556 RTLgenproof1.return_reg_ok
R30577 RTLgen.ret_reg
R30586 Cminor.fn_sig
R30616 RTLgenproof1.return_reg_ok_incr
R30616 RTLgenproof1.return_reg_ok_incr
R30670 RTLgenproof1.new_reg_return_ok
R30670 RTLgenproof1.new_reg_return_ok
R30836 RTLgen.ret_reg
R30845 Cminor.fn_sig
R30810 RTL.exec_funct
R30836 RTLgen.ret_reg
R30845 Cminor.fn_sig
R30810 RTL.exec_funct
R30967 RTLgenproof1.instr_at_incr
R30967 RTLgenproof1.instr_at_incr
R31161 AST.sig_res
R31170 Cminor.fn_sig
R31161 AST.sig_res
R31170 Cminor.fn_sig
R31607 RTLgenproof.transl_stmt_correct
R31650 Cminor.Out_normal
R31635 Cminor.Sexpr
R31561 RTLgenproof.transl_expr_correct
R31584 Coq.Lists.List.nil
R31522 Cminor.eval_expr
R31538 Coq.Lists.List.nil
R31514 Values.val
R31504 Mem.mem
R31493 Cminor.env
R31476 Cminor.expr
R31466 Mem.mem
R31456 Cminor.env
R31446 Values.val
R31786 RTLgenproof1.map_wf
R31786 RTLgenproof1.map_wf
R31834 RTLgenproof1.target_reg_ok
R31856 RTLgen.mutated_expr
R31834 RTLgenproof1.target_reg_ok
R31856 RTLgen.mutated_expr
R31941 Coq.Lists.List.incl_refl
R31952 RTLgen.mutated_expr
R31941 Coq.Lists.List.incl_refl
R31952 RTLgen.mutated_expr
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R32486 RTLgenproof.transl_stmt_correct
R32514 Cminor.Sifthenelse
R32412 RTLgenproof.transl_stmtlist_correct
R32345 Cminor.exec_stmtlist
R32293 RTLgenproof.transl_condition_correct
R32321 Coq.Lists.List.nil
R32249 Cminor.eval_condexpr
R32269 Coq.Lists.List.nil
R32237 Cminor.outcome
R32225 Mem.mem
R32214 Cminor.env
R32202 Coq.Init.Datatypes.bool
R32186 Mem.mem
R32175 Cminor.env
R32159 Cminor.stmtlist
R32159 Cminor.stmtlist
R32134 Cminor.condexpr
R32124 Mem.mem
R32114 Cminor.env
R32104 Values.val
R32613 RTLgen.more_likely
R32613 RTLgen.more_likely
R32684 RTLgenproof1.map_wf
R32684 RTLgenproof1.map_wf
R32764 Coq.Lists.List.incl_refl
R32764 Coq.Lists.List.incl_refl
R32845 RTLgenproof1.map_wf
R32845 RTLgenproof1.map_wf
R32894 RTLgenproof1.return_reg_ok
R32894 RTLgenproof1.return_reg_ok
R33063 RTL.exec_trans
R33063 RTL.exec_trans
R33093 RTLgenproof1.exec_instrs_incr
R33093 RTLgenproof1.exec_instrs_incr
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R33279 RTL.exec_trans
R33279 RTL.exec_trans
R33309 RTLgenproof1.exec_instrs_incr
R33309 RTLgenproof1.exec_instrs_incr
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R33391 RTLgenproof1.map_wf
R33391 RTLgenproof1.map_wf
R33471 Coq.Lists.List.incl_refl
R33471 Coq.Lists.List.incl_refl
R33657 RTL.exec_trans
R33657 RTL.exec_trans
R33687 RTLgenproof1.exec_instrs_incr
R33687 RTLgenproof1.exec_instrs_incr
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R33768 RTLgenproof1.map_wf
R33768 RTLgenproof1.map_wf
R33817 RTLgenproof1.return_reg_ok
R33817 RTLgenproof1.return_reg_ok
R33986 RTL.exec_trans
R33986 RTL.exec_trans
R34016 RTLgenproof1.exec_instrs_incr
R34016 RTLgenproof1.exec_instrs_incr
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R34461 RTLgenproof.transl_stmt_correct
R34489 Cminor.Sloop
R34406 RTLgenproof.transl_stmt_correct
R34436 Cminor.Sloop
R34358 Cminor.exec_stmt
R34381 Cminor.Sloop
R34302 RTLgenproof.transl_stmtlist_correct
R34342 Cminor.Out_normal
R34253 Cminor.exec_stmtlist
R34286 Cminor.Out_normal
R34241 Cminor.outcome
R34224 Mem.mem
R34213 Cminor.env
R34202 Mem.mem
R34191 Cminor.env
R34170 Cminor.stmtlist
R34159 Mem.mem
R34149 Cminor.env
R34139 Values.val
R34620 RTLgenproof1.map_wf
R34620 RTLgenproof1.map_wf
R34642 RTLgenproof1.map_wf_incr
R34642 RTLgenproof1.map_wf_incr
R34671 RTLgenproof1.reserve_instr_incr
R34671 RTLgenproof1.reserve_instr_incr
R34728 RTLgenproof.outcome_node
R34741 Cminor.Out_normal
R34728 RTLgenproof.outcome_node
R34741 Cminor.Out_normal
R34815 RTLgenproof1.return_reg_ok
R34815 RTLgenproof1.return_reg_ok
R34852 RTLgenproof1.return_reg_ok_incr
R34852 RTLgenproof1.return_reg_ok_incr
R34888 RTLgenproof1.reserve_instr_incr
R34888 RTLgenproof1.reserve_instr_incr
R35142 RTL.exec_trans
R35142 RTL.exec_trans
R35162 RTLgenproof1.exec_instrs_extends
R35162 RTLgenproof1.exec_instrs_extends
R35201 RTLgenproof1.update_instr_extends
R35201 RTLgenproof1.update_instr_extends
R35285 RTL.exec_trans
R35285 RTL.exec_trans
R35320 RTL.exec_one
R35320 RTL.exec_one
R35336 RTL.exec_Inop
R35336 RTL.exec_Inop
R35396 Coqlib.plt
R35403 RTLgen.st_nextnode
R35396 Coqlib.plt
R35403 RTLgen.st_nextnode
R35470 Maps.gss
R35470 Maps.gss
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R35762 RTLgenproof.transl_stmt_correct
R35790 Cminor.Sloop
R35743 Coq.Init.Logic "x <> y" type_scope
R35746 Cminor.Out_normal
R35690 RTLgenproof.transl_stmtlist_correct
R35648 Cminor.exec_stmtlist
R35636 Cminor.outcome
R35624 Mem.mem
R35613 Cminor.env
R35592 Cminor.stmtlist
R35581 Mem.mem
R35571 Cminor.env
R35561 Values.val
R35905 RTLgenproof1.map_wf
R35905 RTLgenproof1.map_wf
R35927 RTLgenproof1.map_wf_incr
R35927 RTLgenproof1.map_wf_incr
R35956 RTLgenproof1.reserve_instr_incr
R35956 RTLgenproof1.reserve_instr_incr
R36011 RTLgenproof.outcome_node
R36011 RTLgenproof.outcome_node
R36140 RTLgenproof1.return_reg_ok
R36140 RTLgenproof1.return_reg_ok
R36177 RTLgenproof1.return_reg_ok_incr
R36177 RTLgenproof1.return_reg_ok_incr
R36213 RTLgenproof1.reserve_instr_incr
R36213 RTLgenproof1.reserve_instr_incr
R36376 RTLgenproof1.exec_instrs_extends
R36376 RTLgenproof1.exec_instrs_extends
R36415 RTLgenproof1.update_instr_extends
R36415 RTLgenproof1.update_instr_extends
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R36734 RTLgenproof.transl_stmt_correct
R36780 Cminor.outcome_block
R36762 Cminor.Sblock
R36685 RTLgenproof.transl_stmtlist_correct
R36643 Cminor.exec_stmtlist
R36631 Cminor.outcome
R36619 Mem.mem
R36608 Cminor.env
R36587 Cminor.stmtlist
R36576 Mem.mem
R36566 Cminor.env
R36556 Values.val
R36860 RTLgenproof.outcome_node
R36890 Coq.Lists.List "x :: y" list_scope
R36860 RTLgenproof.outcome_node
R36890 Coq.Lists.List "x :: y" list_scope
R37416 RTLgenproof.transl_stmt_correct
R37458 Cminor.Out_exit
R37444 Cminor.Sexit
R37408 Coq.Init.Datatypes.nat
R37398 Mem.mem
R37388 Cminor.env
R37378 Values.val
R37534 Coq.Lists.List.nth_error
R37534 Coq.Lists.List.nth_error
R37620 Coq.Init.Logic "x = y" type_scope
R37620 Coq.Init.Logic "x = y" type_scope
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R37679 RTL.exec_refl
R37679 RTL.exec_refl
R37799 RTLgenproof.transl_stmt_correct
R37846 Cminor.Out_return
R37857 Coq.Init.Datatypes.None
R37827 Cminor.Sreturn
R37835 Coq.Init.Datatypes.None
R37791 Mem.mem
R37781 Cminor.env
R37771 Values.val
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R38014 RTL.exec_refl
R38014 RTL.exec_refl
R38246 RTLgenproof.transl_stmt_correct
R38299 Cminor.Out_return
R38311 Coq.Init.Datatypes.Some
R38274 Cminor.Sreturn
R38283 Coq.Init.Datatypes.Some
R38200 RTLgenproof.transl_expr_correct
R38223 Coq.Lists.List.nil
R38161 Cminor.eval_expr
R38177 Coq.Lists.List.nil
R38153 Values.val
R38143 Mem.mem
R38132 Cminor.env
R38115 Cminor.expr
R38105 Mem.mem
R38095 Cminor.env
R38085 Values.val
R38415 RTLgenproof1.target_reg_ok
R38436 RTLgen.mutated_expr
R38415 RTLgenproof1.target_reg_ok
R38436 RTLgen.mutated_expr
R38481 RTLgenproof1.target_reg_other
R38481 RTLgenproof1.target_reg_other
R38549 Coq.Lists.List.incl_refl
R38549 Coq.Lists.List.incl_refl
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R38756 RTLgenproof.transl_stmtlist_correct
R38796 Cminor.Out_normal
R38787 Cminor.Snil
R38748 Mem.mem
R38738 Cminor.env
R38728 Values.val
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R38953 RTL.exec_refl
R38953 RTL.exec_refl
R39345 RTLgenproof.transl_stmtlist_correct
R39377 Cminor.Scons
R39294 RTLgenproof.transl_stmtlist_correct
R39250 Cminor.exec_stmtlist
R39199 RTLgenproof.transl_stmt_correct
R39234 Cminor.Out_normal
R39155 Cminor.exec_stmt
R39183 Cminor.Out_normal
R39143 Cminor.outcome
R39131 Mem.mem
R39115 Cminor.env
R39104 Mem.mem
R39093 Cminor.env
R39077 Cminor.stmtlist
R39060 Cminor.stmt
R39050 Mem.mem
R39040 Cminor.env
R39030 Values.val
R39483 RTLgenproof1.map_wf
R39483 RTLgenproof1.map_wf
R39532 RTLgenproof.outcome_node
R39545 Cminor.Out_normal
R39532 RTLgenproof.outcome_node
R39545 Cminor.Out_normal
R39607 RTLgenproof1.return_reg_ok
R39607 RTLgenproof1.return_reg_ok
R39876 RTL.exec_trans
R39876 RTL.exec_trans
R39909 RTLgenproof1.exec_instrs_incr
R39909 RTLgenproof1.exec_instrs_incr
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R40263 RTLgenproof.transl_stmtlist_correct
R40295 Cminor.Scons
R40244 Coq.Init.Logic "x <> y" type_scope
R40247 Cminor.Out_normal
R40196 RTLgenproof.transl_stmt_correct
R40159 Cminor.exec_stmt
R40147 Cminor.outcome
R40135 Mem.mem
R40124 Cminor.env
R40108 Cminor.stmtlist
R40091 Cminor.stmt
R40081 Mem.mem
R40071 Cminor.env
R40061 Values.val
R40414 RTLgenproof1.map_wf
R40414 RTLgenproof1.map_wf
R40463 RTLgenproof.outcome_node
R40463 RTLgenproof.outcome_node
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R40554 RTLgenproof1.return_reg_ok
R40554 RTLgenproof1.return_reg_ok
R41165 RTLgenproof.transl_function_correct
R41126 Cminor.eval_funcall
R41217 RTLgenproof.eval_funcall_ind_6
R42272 RTLgenproof.transl_stmtlist_Scons_stop_correct
R42229 RTLgenproof.transl_stmtlist_Scons_continue_correct
R42196 RTLgenproof.transl_stmtlist_Snil_correct
R42159 RTLgenproof.transl_stmt_Sreturn_some_correct
R42122 RTLgenproof.transl_stmt_Sreturn_none_correct
R42092 RTLgenproof.transl_stmt_Sexit_correct
R42061 RTLgenproof.transl_stmt_Sblock_correct
R42026 RTLgenproof.transl_stmt_Sloop_stop_correct
R41991 RTLgenproof.transl_stmt_Sloop_loop_correct
R41955 RTLgenproof.transl_stmt_Sifthenelse_correct
R41925 RTLgenproof.transl_stmt_Sexpr_correct
R41898 RTLgenproof.transl_funcall_correct
R41864 RTLgenproof.transl_exprlist_Econs_correct
R41831 RTLgenproof.transl_exprlist_Enil_correct
R41790 RTLgenproof.transl_condition_CEcondition_correct
R41754 RTLgenproof.transl_condition_CEcond_correct
R41717 RTLgenproof.transl_condition_CEfalse_correct
R41681 RTLgenproof.transl_condition_CEtrue_correct
R41649 RTLgenproof.transl_expr_Eletvar_correct
R41620 RTLgenproof.transl_expr_Elet_correct
R41585 RTLgenproof.transl_expr_Econdition_correct
R41555 RTLgenproof.transl_expr_Ecall_correct
R41524 RTLgenproof.transl_expr_Estore_correct
R41494 RTLgenproof.transl_expr_Eload_correct
R41466 RTLgenproof.transl_expr_Eop_correct
R41434 RTLgenproof.transl_expr_Eassign_correct
R41405 RTLgenproof.transl_expr_Evar_correct
R41376 RTLgenproof.transl_stmtlist_correct
R41352 RTLgenproof.transl_stmt_correct
R41324 RTLgenproof.transl_function_correct
R41296 RTLgenproof.transl_exprlist_correct
R41267 RTLgenproof.transl_condition_correct
R41243 RTLgenproof.transl_expr_correct
R42395 RTL.exec_program
R42363 Cminor.exec_program
R42355 Values.val
R42491 RTLgenproof.function_ptr_translated
R42491 RTLgenproof.function_ptr_translated
R42612 RTLgenproof.symbols_preserved
R42612 RTLgenproof.symbols_preserved
R42643 AST.prog_main
R42666 AST.prog_main
R42643 AST.prog_main
R42666 AST.prog_main
R42752 RTLgen.transl_function
R42716 AST.transform_partial_program_main
R42752 RTLgen.transl_function
R42716 AST.transform_partial_program_main
R42872 RTLgen.transl_fun
R42885 RTLgen.init_state
R42872 RTLgen.transl_fun
R42885 RTLgen.init_state
R43017 Globalenvs.init_mem_transf_partial
R43046 RTLgen.transl_function
R43017 Globalenvs.init_mem_transf_partial
R43046 RTLgen.transl_function
R43085 RTLgenproof.transl_function_correctness
R43085 RTLgenproof.transl_function_correctness
FRTLtyping
R185 AST.typ
R178 Registers.reg
R224 RTLtyping.regenv
R248 RTL.function
R280 RTL.instruction
R348 RTL.Inop
R433 RTL.Iop
R447 Coq.Lists.List "x :: y" list_scope
R450 Coq.Lists.List.nil
R437 Op.Omove
R406 Coq.Init.Logic "x = y" type_scope
R511 RTL.Iop
R522 Coq.Lists.List.nil
R515 Op.Oundef
R685 RTL.Iop
R643 Coq.Init.Logic "x = y" type_scope
R614 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R615 Coq.Lists.List.map
R645 Op.type_of_operation
R595 Coq.Init.Logic "x <> y" type_scope
R598 Op.Oundef
R580 Coq.Init.Logic "x <> y" type_scope
R583 Op.Omove
R862 RTL.Iload
R821 Coq.Init.Logic "x = y" type_scope
R823 Op.type_of_chunk
R778 Coq.Init.Logic "x = y" type_scope
R760 Coq.Lists.List.map
R780 Op.type_of_addressing
R1050 RTL.Istore
R1009 Coq.Init.Logic "x = y" type_scope
R1011 Op.type_of_chunk
R966 Coq.Init.Logic "x = y" type_scope
R948 Coq.Lists.List.map
R968 Op.type_of_addressing
R1330 RTL.Icall
R1251 Coq.Init.Logic "x = y" type_scope
R1264 AST.sig_res
R1278 Coq.Init.Datatypes.None
R1286 AST.Tint
R1293 Coq.Init.Datatypes.Some
R1217 Coq.Init.Logic "x = y" type_scope
R1199 Coq.Lists.List.map
R1224 AST.sig_args
R1148 Coq.Init.Datatypes.inl
R1163 Coq.Init.Logic "x = y" type_scope
R1165 AST.Tint
R1172 Coq.Init.Datatypes.inr
R1181 Coq.Init.Logic.True
R1468 RTL.Icond
R1424 Coq.Init.Logic "x = y" type_scope
R1406 Coq.Lists.List.map
R1426 Op.type_of_condition
R1603 RTL.Ireturn
R1557 Coq.Init.Logic "x = y" type_scope
R1535 Coqlib.option_map
R1575 AST.sig_res
R1566 RTL.fn_sig
R1661 RTLtyping.regenv
R1673 RTL.function
R1760 Coq.Init.Logic "x = y" type_scope
R1733 Coq.Lists.List.map
R1749 RTL.fn_params
R1774 AST.sig_args
R1765 RTL.fn_sig
R1807 Coqlib.list_norepet
R1823 RTL.fn_params
R1904 RTLtyping.wt_instr
R1888 Coq.Init.Logic "x = y" type_scope
R1884 Maps "a ! b"
R1876 RTL.fn_code
R1890 Coq.Init.Datatypes.Some
R2107 AST.typ
R2129 Registers.reg
R2174 RTLtyping.myT
R2215 Coq.Init.Specif "{ A } + { B }" type_scope
R2217 Coq.Init.Logic "x = y" type_scope
R2223 Coq.Init.Logic "x <> y" type_scope
R2211 RTLtyping.T
R2211 RTLtyping.T
R2287 Coq.Init.Specif.right
R2320 Coq.Init.Specif.left
R2287 Coq.Init.Specif.right
R2287 Coq.Init.Specif.right
R2287 Coq.Init.Specif.right
R2287 Coq.Init.Specif.right
R2320 Coq.Init.Specif.left
R2320 Coq.Init.Specif.left
R2385 Coq.Init.Specif.right
R2416 Coq.Init.Specif.left
R2385 Coq.Init.Specif.right
R2385 Coq.Init.Specif.right
R2385 Coq.Init.Specif.right
R2385 Coq.Init.Specif.right
R2416 Coq.Init.Specif.left
R2416 Coq.Init.Specif.left
R2445 Coqlib.peq
R2445 Coqlib.peq
R2485 Coq.Init.Specif.left
R2497 Coq.Init.Logic.refl_equal
R2485 Coq.Init.Specif.left
R2497 Coq.Init.Logic.refl_equal
R2519 Coq.Init.Specif.right
R2519 Coq.Init.Specif.right
R2595 RTLtyping.T
R2640 Coq.NArith.BinPos.positive
R2675 RTLtyping.tTy
R2679 AST.Tint
R2687 Coq.NArith.BinPos.xH
R2696 RTLtyping.tTy
R2700 AST.Tfloat
R2710 Coq.NArith.BinPos.xI
R2713 Coq.NArith.BinPos.xH
R2722 RTLtyping.tReg
R2732 Coq.NArith.BinPos.xO
R2629 RTLtyping.T
R2783 RTLtyping.elt
R2813 Coq.NArith.BinPos.xH
R2819 RTLtyping.tTy
R2823 AST.Tint
R2834 Coq.NArith.BinPos.xI
R2842 RTLtyping.tTy
R2846 AST.Tfloat
R2859 Coq.NArith.BinPos.xO
R2867 RTLtyping.tReg
R2771 Coq.NArith.BinPos.positive
R2946 Coq.Init.Logic "x = y" type_scope
R2928 RTLtyping.decode
R2936 RTLtyping.encode
R2919 RTLtyping.T
R3093 Coq.Init.Logic "x = y" type_scope
R3077 Coq.Init.Logic "x = y" type_scope
R3068 RTLtyping.encode
R3079 RTLtyping.encode
R3058 RTLtyping.T
R3058 RTLtyping.T
R3258 Maps.t
R3266 Coq.NArith.BinPos.positive
R3298 Maps.empty
R3310 Coq.NArith.BinPos.positive
R3364 Coqlib.option_map
R3383 Maps.get
R3394 RTLtyping.encode
R3375 RTLtyping.decode
R3354 RTLtyping.T
R3344 RTLtyping.elt
R3458 Maps.set
R3482 RTLtyping.encode
R3469 RTLtyping.encode
R3448 RTLtyping.T
R3438 RTLtyping.elt
R3438 RTLtyping.elt
R3550 Coq.Init.Logic "x = y" type_scope
R3538 RTLtyping.get
R3544 RTLtyping.empty
R3552 Coq.Init.Datatypes.None
R3532 RTLtyping.elt
R3620 Maps.gempty
R3620 Maps.gempty
R3730 Coq.Init.Logic "x = y" type_scope
R3712 RTLtyping.get
R3719 RTLtyping.add
R3732 Coq.Init.Datatypes.Some
R3708 RTLtyping.T
R3698 RTLtyping.elt
R3698 RTLtyping.elt
R3801 Maps.gss
R3801 Maps.gss
R3831 RTLtyping.encode_decode
R3831 RTLtyping.encode_decode
R3943 Coq.Init.Logic "x = y" type_scope
R3925 RTLtyping.get
R3932 RTLtyping.add
R3945 RTLtyping.get
R3917 Coq.Init.Logic "x <> y" type_scope
R3911 RTLtyping.T
R3901 RTLtyping.elt
R3901 RTLtyping.elt
R3901 RTLtyping.elt
R4015 Maps.gso
R4015 Maps.gso
R4058 RTLtyping.encode_injective
R4058 RTLtyping.encode_injective
R4162 RTLtyping.identify
R4195 RTLtyping.tTy
R4199 AST.Tfloat
R4184 RTLtyping.tTy
R4188 AST.Tint
R4174 RTLtyping.empty
R4351 RTLtyping.T
R4314 Coq.Lists.List.list
R4300 Coq.Lists.List.list
R4288 RTLtyping.T
R4259 RTLtyping.T
R4241 RTLtyping.T
R4385 Coq.Lists.List "x :: y" list_scope
R4393 Coq.Lists.List "x :: y" list_scope
R4434 Coq.Lists.List.nil
R4439 Coq.Lists.List.nil
R4463 RTLtyping.error
R4314 Coq.Lists.List.list
R4300 Coq.Lists.List.list
R4288 RTLtyping.T
R4259 RTLtyping.T
R4241 RTLtyping.T
R4638 RTLtyping.T
R4670 Coq.Init.Datatypes.Some
R4678 Coq.Init.Datatypes.Some
R4703 Coq.Init.Datatypes.None
R4709 Coq.Init.Datatypes.None
R4734 RTLtyping.error
R4602 Coq.Init.Datatypes.option
R4586 Coq.Init.Datatypes.option
R4574 RTLtyping.T
R4536 RTLtyping.T
R4518 RTLtyping.T
R4781 Coq.Init.Datatypes.bool
R4815 AST.Tint
R4821 AST.Tint
R4829 Coq.Init.Datatypes.true
R4838 AST.Tfloat
R4846 AST.Tfloat
R4856 Coq.Init.Datatypes.true
R4873 Coq.Init.Datatypes.false
R4774 AST.typ
R4774 AST.typ
R4947 RTLtyping.identify
R4971 RTLtyping.tTy
R4962 RTLtyping.tReg
R4937 AST.typ
R4927 Registers.reg
R4916 RTLtyping.T
R5057 Coq.Init.Datatypes.inl
R5066 RTLtyping.identify
R5090 RTLtyping.tTy
R5094 AST.Tint
R5081 RTLtyping.tReg
R5104 Coq.Init.Datatypes.inr
R5025 Coq.Init.Datatypes "x + y" type_scope
R5022 Registers.reg
R5026 AST.ident
R5009 RTLtyping.T
R5184 AST.sig_res
R5198 Coq.Init.Datatypes.None
R5206 AST.Tint
R5213 Coq.Init.Datatypes.Some
R5157 AST.signature
R5349 RTL.Inop
R5365 RTL.Iop
R5369 Op.Omove
R5379 Coq.Lists.List "x :: y" list_scope
R5382 Coq.Lists.List.nil
R5395 RTLtyping.identify
R5420 RTLtyping.tReg
R5410 RTLtyping.tReg
R5433 RTL.Iop
R5437 Op.Omove
R5452 RTLtyping.error
R5462 RTL.Iop
R5466 Op.Oundef
R5473 Coq.Lists.List.nil
R5490 RTL.Iop
R5494 Op.Oundef
R5510 RTLtyping.error
R5520 RTL.Iop
R5570 Op.type_of_operation
R5644 RTLtyping.fold2
R5650 RTLtyping.type_rtl_arg
R5610 RTLtyping.type_rtl_arg
R5682 RTL.Iload
R5779 RTLtyping.fold2
R5807 Op.type_of_addressing
R5785 RTLtyping.type_rtl_arg
R5730 RTLtyping.type_rtl_arg
R5749 Op.type_of_chunk
R5836 RTL.Istore
R5932 RTLtyping.fold2
R5960 Op.type_of_addressing
R5938 RTLtyping.type_rtl_arg
R5883 RTLtyping.type_rtl_arg
R5902 Op.type_of_chunk
R5989 RTL.Icall
R6122 RTLtyping.fold2
R6155 AST.sig_args
R6128 RTLtyping.type_rtl_arg
R6071 RTLtyping.type_rtl_arg
R6091 RTLtyping.type_of_sig_res
R6033 RTLtyping.type_rtl_ros
R6169 RTL.Icond
R6198 RTLtyping.fold2
R6225 Op.type_of_condition
R6204 RTLtyping.type_rtl_arg
R6253 RTL.Ireturn
R6266 RTLtyping.option_fold2
R6279 RTLtyping.type_rtl_arg
R5314 RTL.instruction
R5299 Coq.NArith.BinPos.positive
R5288 RTLtyping.T
R5267 Coq.Init.Datatypes.option
R5274 AST.typ
R6356 RTLtyping.eq
R6387 RTLtyping.repr
R6398 RTLtyping.tTy
R6402 AST.Tfloat
R6366 RTLtyping.repr
R6377 RTLtyping.tReg
R6432 AST.Tint
R6418 AST.Tfloat
R6343 Registers.reg
R6332 RTLtyping.T
R6493 Coq.Init.Datatypes.bool
R6470 Coq.Lists.List.list
R6475 Registers.reg
R6460 Registers.reg
R6520 Coq.Lists.List.nil
R6527 Coq.Init.Datatypes.false
R6539 Coq.Lists.List "x :: y" list_scope
R6553 Coqlib.peq
R6566 Coq.Init.Datatypes.true
R6470 Coq.Lists.List.list
R6475 Registers.reg
R6460 Registers.reg
R6630 Coq.Init.Datatypes.bool
R6618 Coq.Lists.List.list
R6623 Registers.reg
R6657 Coq.Lists.List.nil
R6664 Coq.Init.Datatypes.false
R6676 Coq.Lists.List "x :: y" list_scope
R6701 Coq.Bool.Bool "x || y" bool_scope
R6687 RTLtyping.member
R6618 Coq.Lists.List.list
R6623 Registers.reg
R6956 RTLtyping.repet
R6965 RTL.fn_params
R7004 RTLtyping.eq
R7038 RTLtyping.repr
R7050 RTLtyping.tTy
R7054 AST.Tfloat
R7014 RTLtyping.repr
R7026 RTLtyping.tTy
R7030 AST.Tint
R7086 Coq.Init.Datatypes.Some
R7092 RTLtyping.mk_env
R7072 Coq.Init.Datatypes.None
R6985 Coq.Init.Datatypes.None
R6890 RTLtyping.fold2
R6938 AST.sig_args
R6929 RTL.fn_sig
R6915 RTL.fn_params
R6896 RTLtyping.type_rtl_arg
R6782 Maps.fold
R6866 RTLtyping.empty
R6857 RTL.fn_code
R6794 RTLtyping.type_rtl_instr
R6821 AST.sig_res
R6812 RTL.fn_sig
R6757 RTL.function
R7294 Coq.Init.Logic "x <> y" type_scope
R7273 RTLtyping.repr
R7284 RTLtyping.tTy
R7288 AST.Tint
R7297 RTLtyping.repr
R7308 RTLtyping.tTy
R7312 AST.Tfloat
R7262 RTLtyping.T
R7482 Coq.Init.Logic "x = y" type_scope
R7412 RTLtyping.eq
R7445 RTLtyping.repr
R7456 RTLtyping.tTy
R7460 AST.Tfloat
R7422 RTLtyping.repr
R7433 RTLtyping.tTy
R7437 AST.Tint
R7390 RTLtyping.consistent
R7360 RTLtyping.T
R7554 RTLtyping.eq
R7587 RTLtyping.repr
R7598 RTLtyping.tTy
R7602 AST.Tfloat
R7564 RTLtyping.repr
R7575 RTLtyping.tTy
R7579 AST.Tint
R7554 RTLtyping.eq
R7587 RTLtyping.repr
R7598 RTLtyping.tTy
R7602 AST.Tfloat
R7564 RTLtyping.repr
R7575 RTLtyping.tTy
R7579 AST.Tint
R7725 Coq.Init.Logic "x = y" type_scope
R7699 RTLtyping.eq
R7666 RTLtyping.myT
R7767 RTLtyping.eq
R7767 RTLtyping.eq
R7848 RTLtyping.consistent
R7859 RTLtyping.error
R7904 RTLtyping.consistent
R7915 RTLtyping.error
R7904 RTLtyping.consistent
R7915 RTLtyping.error
R8000 RTLtyping.sameclass_identify_1
R8000 RTLtyping.sameclass_identify_1
R8119 Coq.Init.Logic "x = y" type_scope
R8106 Coq.Init.Logic "x = y" type_scope
R8096 RTLtyping.teq
R8108 Coq.Init.Datatypes.true
R8090 AST.typ
R8090 AST.typ
R8327 Coq.Init.Logic "x = y" type_scope
R8313 RTLtyping.repr
R8329 RTLtyping.repr
R8294 Coq.Init.Logic "x = y" type_scope
R8280 RTLtyping.repr
R8296 RTLtyping.repr
R8270 RTLtyping.myT
R8270 RTLtyping.myT
R8237 RTLtyping.T
R8237 RTLtyping.T
R8388 RTLtyping.included
R8381 RTLtyping.T
R8535 RTLtyping.included
R8517 RTLtyping.included
R8499 RTLtyping.included
R8490 RTLtyping.T
R8490 RTLtyping.T
R8490 RTLtyping.T
R8685 RTLtyping.consistent
R8668 RTLtyping.consistent
R8650 RTLtyping.included
R8641 RTLtyping.T
R8641 RTLtyping.T
R8870 RTLtyping.included
R8882 RTLtyping.identify
R8864 RTLtyping.myT
R8864 RTLtyping.myT
R8849 RTLtyping.T
R8950 RTLtyping.sameclass_identify_2
R8950 RTLtyping.sameclass_identify_2
R9139 Coq.Init.Logic "x = y" type_scope
R9096 RTLtyping.repr
R9126 RTLtyping.tReg
R9105 RTLtyping.type_rtl_arg
R9141 RTLtyping.repr
R9171 RTLtyping.tTy
R9150 RTLtyping.type_rtl_arg
R9059 RTLtyping.consistent
R9071 RTLtyping.type_rtl_arg
R9051 AST.typ
R9041 Registers.reg
R9030 RTLtyping.T
R9237 RTLtyping.sameclass_identify_1
R9237 RTLtyping.sameclass_identify_1
R9413 Coq.Init.Logic "x = y" type_scope
R9383 RTLtyping.mk_env
R9391 RTLtyping.type_rtl_arg
R9348 RTLtyping.consistent
R9360 RTLtyping.type_rtl_arg
R9340 AST.typ
R9330 Registers.reg
R9319 RTLtyping.T
R9471 RTLtyping.type_arg_correct_1
R9471 RTLtyping.type_arg_correct_1
R9517 RTLtyping.consistent_not_eq
R9517 RTLtyping.consistent_not_eq
R9556 RTLtyping.eq
R9566 RTLtyping.repr
R9601 RTLtyping.tTy
R9605 AST.Tfloat
R9575 RTLtyping.type_rtl_arg
R9592 AST.Tfloat
R9556 RTLtyping.eq
R9566 RTLtyping.repr
R9601 RTLtyping.tTy
R9605 AST.Tfloat
R9575 RTLtyping.type_rtl_arg
R9592 AST.Tfloat
R9717 RTLtyping.included
R9729 RTLtyping.type_rtl_arg
R9711 AST.typ
R9701 Registers.reg
R9690 RTLtyping.T
R9806 RTLtyping.included_identify
R9806 RTLtyping.included_identify
R9936 RTLtyping.consistent
R9901 RTLtyping.consistent
R9913 RTLtyping.type_rtl_arg
R9893 AST.typ
R9883 Registers.reg
R9872 RTLtyping.T
R10013 RTLtyping.type_rtl_arg
R9981 RTLtyping.included_consistent
R10013 RTLtyping.type_rtl_arg
R9981 RTLtyping.included_consistent
R10044 RTLtyping.type_arg_included
R10044 RTLtyping.type_arg_included
R10208 RTLtyping.included
R10220 RTLtyping.fold2
R10226 RTLtyping.type_rtl_arg
R10163 RTLtyping.consistent
R10175 RTLtyping.fold2
R10181 RTLtyping.type_rtl_arg
R10154 RTLtyping.T
R10139 Coq.Lists.List.list
R10144 AST.typ
R10123 Coq.Lists.List.list
R10128 Registers.reg
R10326 RTLtyping.included_refl
R10326 RTLtyping.included_refl
R10363 RTLtyping.error_inconsistent
R10363 RTLtyping.error_inconsistent
R10411 RTLtyping.error_inconsistent
R10411 RTLtyping.error_inconsistent
R10501 RTLtyping.type_rtl_arg
R10474 RTLtyping.included_trans
R10501 RTLtyping.type_rtl_arg
R10474 RTLtyping.included_trans
R10532 RTLtyping.type_arg_included
R10532 RTLtyping.type_arg_included
R10709 RTLtyping.consistent
R10666 RTLtyping.consistent
R10678 RTLtyping.fold2
R10684 RTLtyping.type_rtl_arg
R10657 RTLtyping.T
R10642 Coq.Lists.List.list
R10647 AST.typ
R10626 Coq.Lists.List.list
R10631 Registers.reg
R10755 RTLtyping.included_consistent
R10780 RTLtyping.type_args_included
R10755 RTLtyping.included_consistent
R10780 RTLtyping.type_args_included
R11001 Coq.Init.Logic "x = y" type_scope
R10956 Coq.Lists.List.map
R10961 RTLtyping.mk_env
R10969 RTLtyping.fold2
R10975 RTLtyping.type_rtl_arg
R10911 RTLtyping.consistent
R10923 RTLtyping.fold2
R10929 RTLtyping.type_rtl_arg
R10902 RTLtyping.T
R10887 Coq.Lists.List.list
R10892 AST.typ
R10871 Coq.Lists.List.list
R10876 Registers.reg
R11114 RTLtyping.error_inconsistent
R11114 RTLtyping.error_inconsistent
R11191 RTLtyping.error_inconsistent
R11191 RTLtyping.error_inconsistent
R11266 RTLtyping.type_rtl_arg
R11266 RTLtyping.type_rtl_arg
R11338 RTLtyping.type_args_included
R11375 RTLtyping.tTy
R11379 AST.Tint
R11366 RTLtyping.tReg
R11338 RTLtyping.type_args_included
R11375 RTLtyping.tTy
R11379 AST.Tint
R11366 RTLtyping.tReg
R11399 RTLtyping.consistent_not_eq
R11399 RTLtyping.consistent_not_eq
R11434 RTLtyping.type_arg_correct_1
R11434 RTLtyping.type_arg_correct_1
R11464 RTLtyping.type_args_extends
R11464 RTLtyping.type_args_extends
R11529 RTLtyping.type_args_included
R11566 RTLtyping.tTy
R11570 AST.Tfloat
R11557 RTLtyping.tReg
R11529 RTLtyping.type_args_included
R11566 RTLtyping.tTy
R11570 AST.Tfloat
R11557 RTLtyping.tReg
R11592 RTLtyping.equal_eq
R11592 RTLtyping.equal_eq
R11618 RTLtyping.type_arg_correct_1
R11618 RTLtyping.type_arg_correct_1
R11648 RTLtyping.type_args_extends
R11648 RTLtyping.type_args_extends
R11888 Coq.Init.Logic "x = y" type_scope
R11861 Coq.Lists.List.map
R11877 RTL.fn_params
R11902 AST.sig_args
R11893 RTL.fn_sig
R11845 Coq.Init.Logic "x = y" type_scope
R11825 RTLtyping.type_rtl_function
R11847 Coq.Init.Datatypes.Some
R11814 RTLtyping.regenv
R11798 RTL.function
R11985 RTLtyping.repet
R11985 RTLtyping.repet
R12049 Maps.fold
R12102 RTLtyping.empty
R12061 RTLtyping.type_rtl_instr
R12077 AST.sig_res
R12049 Maps.fold
R12102 RTLtyping.empty
R12061 RTLtyping.type_rtl_instr
R12077 AST.sig_res
R12139 RTLtyping.consistent
R12151 RTLtyping.fold2
R12183 AST.sig_args
R12157 RTLtyping.type_rtl_arg
R12139 RTLtyping.consistent
R12151 RTLtyping.fold2
R12183 AST.sig_args
R12157 RTLtyping.type_rtl_arg
R12229 RTLtyping.repr
R12238 RTLtyping.fold2
R12270 AST.sig_args
R12244 RTLtyping.type_rtl_arg
R12229 RTLtyping.repr
R12238 RTLtyping.fold2
R12270 AST.sig_args
R12244 RTLtyping.type_rtl_arg
R12321 RTLtyping.eq
R12349 RTLtyping.tTy
R12353 AST.Tfloat
R12334 RTLtyping.tTy
R12338 AST.Tint
R12321 RTLtyping.eq
R12349 RTLtyping.tTy
R12353 AST.Tfloat
R12334 RTLtyping.tTy
R12338 AST.Tint
R12437 RTLtyping.type_args_correct
R12437 RTLtyping.type_args_correct
R12510 RTLtyping.equal_eq
R12510 RTLtyping.equal_eq
R12674 Coq.Init.Logic "~ x" type_scope
R12675 Coq.Lists.List.In
R12663 Coq.Init.Logic "x = y" type_scope
R12652 RTLtyping.member
R12665 Coq.Init.Datatypes.false
R12646 Registers.reg
R12631 Coq.Lists.List.list
R12636 Registers.reg
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R12749 Coqlib.peq
R12749 Coqlib.peq
R12933 Coqlib.list_norepet
R12922 Coq.Init.Logic "x = y" type_scope
R12914 RTLtyping.repet
R12924 Coq.Init.Datatypes.false
R12903 Coq.Lists.List.list
R12908 Registers.reg
R13002 Coqlib.list_norepet_nil
R13019 Registers.reg
R13002 Coqlib.list_norepet_nil
R13019 Registers.reg
R13036 Coq.Bool.Bool.orb_false_elim
R13065 RTLtyping.repet
R13052 RTLtyping.member
R13036 Coq.Bool.Bool.orb_false_elim
R13065 RTLtyping.repet
R13052 RTLtyping.member
R13097 Coqlib.list_norepet_cons
R13097 Coqlib.list_norepet_cons
R13128 RTLtyping.member_correct
R13128 RTLtyping.member_correct
R13291 Coqlib.list_norepet
R13307 RTL.fn_params
R13275 Coq.Init.Logic "x = y" type_scope
R13255 RTLtyping.type_rtl_function
R13277 Coq.Init.Datatypes.Some
R13244 RTLtyping.regenv
R13228 RTL.function
R13410 Coq.Init.Logic "x = y" type_scope
R13394 RTLtyping.repet
R13412 Coq.Init.Datatypes.false
R13410 Coq.Init.Logic "x = y" type_scope
R13394 RTLtyping.repet
R13412 Coq.Init.Datatypes.false
R13438 RTLtyping.repet_correct
R13438 RTLtyping.repet_correct
R13474 RTLtyping.repet
R13474 RTLtyping.repet
R13648 Coq.Init.Logic "'exists' x : t , p" type_scope
R13808 Coq.Init.Logic "A /\ B" type_scope
R13673 RTLtyping.included
R13683 Maps.fold
R13772 RTLtyping.empty
R13763 RTL.fn_code
R13695 RTLtyping.type_rtl_instr
R13722 AST.sig_res
R13713 RTL.fn_sig
R13834 Coq.Init.Logic "A /\ B" type_scope
R13815 Coq.Init.Logic "x = y" type_scope
R13817 RTLtyping.mk_env
R13837 RTLtyping.consistent
R13660 RTLtyping.T
R13632 Coq.Init.Logic "x = y" type_scope
R13612 RTLtyping.type_rtl_function
R13634 Coq.Init.Datatypes.Some
R13601 RTLtyping.regenv
R13584 RTL.function
R13896 Maps.fold
R13985 RTLtyping.empty
R13976 RTL.fn_code
R13908 RTLtyping.type_rtl_instr
R13935 AST.sig_res
R13926 RTL.fn_sig
R13896 Maps.fold
R13985 RTLtyping.empty
R13976 RTL.fn_code
R13908 RTLtyping.type_rtl_instr
R13935 AST.sig_res
R13926 RTL.fn_sig
R14066 RTLtyping.repet
R14075 RTL.fn_params
R14066 RTLtyping.repet
R14075 RTL.fn_params
R14139 RTLtyping.fold2
R14187 AST.sig_args
R14178 RTL.fn_sig
R14164 RTL.fn_params
R14145 RTLtyping.type_rtl_arg
R14139 RTLtyping.fold2
R14187 AST.sig_args
R14178 RTL.fn_sig
R14164 RTL.fn_params
R14145 RTLtyping.type_rtl_arg
R14245 RTLtyping.eq
R14279 RTLtyping.repr
R14291 RTLtyping.tTy
R14295 AST.Tfloat
R14255 RTLtyping.repr
R14267 RTLtyping.tTy
R14271 AST.Tint
R14245 RTLtyping.eq
R14279 RTLtyping.repr
R14291 RTLtyping.tTy
R14295 AST.Tfloat
R14255 RTLtyping.repr
R14267 RTLtyping.tTy
R14271 AST.Tint
R14350 RTLtyping.equal_eq
R14350 RTLtyping.equal_eq
R14405 RTLtyping.consistent_not_eq
R14405 RTLtyping.consistent_not_eq
R14439 Coq.Init.Logic.conj
R14439 Coq.Init.Logic.conj
R14470 RTLtyping.type_args_included
R14470 RTLtyping.type_args_included
R14510 Coq.Init.Logic.conj
R14510 Coq.Init.Logic.conj
R14737 Coq.Init.Logic "x = y" type_scope
R14684 RTLtyping.fold2
R14704 RTLtyping.type_rtl_arg
R14690 RTLtyping.type_rtl_arg
R14743 RTLtyping.fold2
R14792 Coq.Init.Datatypes.fst
R14763 RTLtyping.type_rtl_arg
R14781 Coq.Init.Datatypes.snd
R14749 RTLtyping.type_rtl_arg
R14641 Coq.Init.Datatypes "x * y" type_scope
R14632 Coq.Lists.List.list
R14637 AST.typ
R14643 AST.typ
R14622 Registers.reg
R14607 Coq.Lists.List.list
R14612 Registers.reg
R14596 RTLtyping.T
R14830 Coq.Init.Datatypes.surjective_pairing
R14830 Coq.Init.Datatypes.surjective_pairing
R15044 RTLtyping.included
R15056 RTLtyping.fold2
R15076 RTLtyping.type_rtl_arg
R15062 RTLtyping.type_rtl_arg
R14980 RTLtyping.consistent
R14992 RTLtyping.fold2
R15012 RTLtyping.type_rtl_arg
R14998 RTLtyping.type_rtl_arg
R14972 AST.typ
R14962 Registers.reg
R14951 RTLtyping.T
R14936 Coq.Lists.List.list
R14941 AST.typ
R14920 Coq.Lists.List.list
R14925 Registers.reg
R15158 RTLtyping.type_rtl_arg
R15131 RTLtyping.included_trans
R15158 RTLtyping.type_rtl_arg
R15131 RTLtyping.included_trans
R15187 RTLtyping.type_arg_included
R15187 RTLtyping.type_arg_included
R15214 RTLtyping.type_args_included
R15214 RTLtyping.type_args_included
R15468 RTLtyping.included
R15480 RTLtyping.fold2
R15500 RTLtyping.type_rtl_arg
R15514 RTLtyping.type_rtl_ros
R15486 RTLtyping.type_rtl_arg
R15385 RTLtyping.consistent
R15397 RTLtyping.fold2
R15417 RTLtyping.type_rtl_arg
R15431 RTLtyping.type_rtl_ros
R15403 RTLtyping.type_rtl_arg
R15374 Coq.Init.Datatypes "x + y" type_scope
R15371 Registers.reg
R15375 AST.ident
R15350 AST.typ
R15340 Registers.reg
R15329 RTLtyping.T
R15314 Coq.Lists.List.list
R15319 AST.typ
R15298 Coq.Lists.List.list
R15303 Registers.reg
R15599 RTLtyping.type_rtl_ros
R15572 RTLtyping.included_trans
R15599 RTLtyping.type_rtl_ros
R15572 RTLtyping.included_trans
R15665 RTLtyping.included_identify
R15665 RTLtyping.included_identify
R15692 RTLtyping.included_refl
R15692 RTLtyping.included_refl
R15715 RTLtyping.type_args_res_included
R15715 RTLtyping.type_args_res_included
R15903 RTLtyping.included
R15915 RTLtyping.type_rtl_instr
R15857 RTLtyping.consistent
R15869 RTLtyping.type_rtl_instr
R15842 Coq.Init.Datatypes.option
R15849 AST.typ
R15826 RTLtyping.T
R15808 RTL.instruction
R15793 Coq.NArith.BinPos.positive
R16011 RTLtyping.type_args_res_included
R16011 RTLtyping.type_args_res_included
R16011 RTLtyping.type_args_res_included
R16011 RTLtyping.type_args_res_included
R16011 RTLtyping.type_args_res_included
R16011 RTLtyping.type_args_res_included
R16011 RTLtyping.type_args_res_included
R16011 RTLtyping.type_args_res_included
R16051 RTLtyping.included_refl
R16051 RTLtyping.included_refl
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16117 RTLtyping.type_args_res_included
R16198 RTLtyping.error_inconsistent
R16198 RTLtyping.error_inconsistent
R16275 RTLtyping.included_identify
R16275 RTLtyping.included_identify
R16304 RTLtyping.error_inconsistent
R16304 RTLtyping.error_inconsistent
R16381 RTLtyping.included_refl
R16381 RTLtyping.included_refl
R16406 RTLtyping.error_inconsistent
R16406 RTLtyping.error_inconsistent
R16442 RTLtyping.type_args_res_ros_included
R16442 RTLtyping.type_args_res_ros_included
R16486 RTLtyping.type_args_included
R16486 RTLtyping.type_args_included
R16581 RTLtyping.error_inconsistent
R16581 RTLtyping.error_inconsistent
R16581 RTLtyping.error_inconsistent
R16581 RTLtyping.error_inconsistent
R16581 RTLtyping.error_inconsistent
R16624 RTLtyping.type_arg_included
R16624 RTLtyping.type_arg_included
R16653 RTLtyping.included_refl
R16653 RTLtyping.included_refl
R16877 RTLtyping.consistent
R16786 RTLtyping.consistent
R16804 Coq.Lists.List.fold_left
R16826 RTLtyping.type_rtl_instr
R16859 Coq.Init.Datatypes.snd
R16851 Coq.Init.Datatypes.fst
R16771 Coq.Init.Datatypes.option
R16778 AST.typ
R16755 RTLtyping.T
R16719 Coq.Lists.List.list
R16734 Coq.Init.Datatypes "x * y" type_scope
R16725 Coq.NArith.BinPos.positive
R16736 RTL.instruction
R16982 RTLtyping.type_rtl_instr
R17015 Coq.Init.Datatypes.snd
R17007 Coq.Init.Datatypes.fst
R16944 RTLtyping.included_consistent
R16982 RTLtyping.type_rtl_instr
R17015 Coq.Init.Datatypes.snd
R17007 Coq.Init.Datatypes.fst
R16944 RTLtyping.included_consistent
R17033 RTLtyping.type_instr_included
R17033 RTLtyping.type_instr_included
R17347 RTLtyping.included
R17368 Coq.Lists.List.fold_left
R17390 RTLtyping.type_rtl_instr
R17423 Coq.Init.Datatypes.snd
R17415 Coq.Init.Datatypes.fst
R17256 RTLtyping.consistent
R17274 Coq.Lists.List.fold_left
R17296 RTLtyping.type_rtl_instr
R17329 Coq.Init.Datatypes.snd
R17321 Coq.Init.Datatypes.fst
R17241 Coq.Init.Datatypes.option
R17248 AST.typ
R17225 RTLtyping.T
R17189 Coq.Lists.List.list
R17204 Coq.Init.Datatypes "x * y" type_scope
R17195 Coq.NArith.BinPos.positive
R17206 RTL.instruction
R17488 RTLtyping.included_refl
R17488 RTLtyping.included_refl
R17547 RTLtyping.type_rtl_instr
R17580 Coq.Init.Datatypes.snd
R17572 Coq.Init.Datatypes.fst
R17519 RTLtyping.included_trans
R17547 RTLtyping.type_rtl_instr
R17580 Coq.Init.Datatypes.snd
R17572 Coq.Init.Datatypes.fst
R17519 RTLtyping.included_trans
R17600 RTLtyping.type_instr_included
R17600 RTLtyping.type_instr_included
R17631 RTLtyping.type_instrs_extends
R17631 RTLtyping.type_instrs_extends
R17912 Coq.Init.Logic "'exists' x : t , p" type_scope
R17984 Coq.Init.Logic "A /\ B" type_scope
R17937 RTLtyping.consistent
R17949 RTLtyping.type_rtl_instr
R17987 RTLtyping.included
R18048 Maps.fold
R18060 RTLtyping.type_rtl_instr
R17997 RTLtyping.type_rtl_instr
R17923 RTLtyping.T
R17898 Coq.Init.Logic "x = y" type_scope
R17894 Maps "a ! b"
R17900 Coq.Init.Datatypes.Some
R17877 RTL.instruction
R17862 Coq.NArith.BinPos.positive
R17791 RTLtyping.consistent
R17803 Maps.fold
R17815 RTLtyping.type_rtl_instr
R17782 RTLtyping.T
R17770 RTL.code
R17753 Coq.Init.Datatypes.option
R17760 AST.typ
R18123 Maps.fold_spec
R18123 Maps.fold_spec
R18152 Maps.fold_spec
R18152 Maps.fold_spec
R18190 Maps.elements_correct
R18190 Maps.elements_correct
R18322 Maps.elements
R18322 Maps.elements
R18365 Coq.Lists.List.In
R18376 Coq.Lists.List.nil
R18368 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18365 Coq.Lists.List.In
R18376 Coq.Lists.List.nil
R18368 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18392 Coq.Lists.List.in_nil
R18392 Coq.Lists.List.in_nil
R18547 Coq.Init.Logic.conj
R18547 Coq.Init.Logic.conj
R18563 RTLtyping.type_instrs_extends
R18563 RTLtyping.type_instrs_extends
R18637 RTLtyping.type_instrs_included
R18637 RTLtyping.type_instrs_included
R18824 Coq.Init.Logic "A \/ B" type_scope
R18797 Coq.Init.Logic "x = y" type_scope
R18778 RTLtyping.repr
R18789 RTLtyping.tReg
R18799 RTLtyping.repr
R18810 RTLtyping.tTy
R18814 AST.Tfloat
R18846 Coq.Init.Logic "x = y" type_scope
R18827 RTLtyping.repr
R18838 RTLtyping.tReg
R18848 RTLtyping.repr
R18859 RTLtyping.tTy
R18863 AST.Tint
R18768 Registers.reg
R18757 RTLtyping.T
R18942 RTL.Inop
R18952 Coq.Init.Logic.True
R18961 RTL.Iop
R18965 Op.Omove
R18975 Coq.Lists.List "x :: y" list_scope
R18978 Coq.Lists.List.nil
R19011 Coq.Init.Logic "x = y" type_scope
R18991 RTLtyping.repr
R19002 RTLtyping.tReg
R19013 RTLtyping.repr
R19024 RTLtyping.tReg
R19037 RTL.Iop
R19041 Op.Oundef
R19057 Coq.Init.Logic.True
R19066 RTL.Iop
R19106 Coq.Init.Logic "A /\ B" type_scope
R19094 RTLtyping.mapped
R19138 RTLtyping.mapped
R19125 Coq.Lists.List.In
R19120 Registers.reg
R19153 RTL.Iload
R19197 Coq.Init.Logic "A /\ B" type_scope
R19185 RTLtyping.mapped
R19229 RTLtyping.mapped
R19216 Coq.Lists.List.In
R19211 Registers.reg
R19244 RTL.Istore
R19289 Coq.Init.Logic "A /\ B" type_scope
R19277 RTLtyping.mapped
R19321 RTLtyping.mapped
R19308 Coq.Lists.List.In
R19303 Registers.reg
R19336 RTL.Icall
R19424 Coq.Init.Logic "A /\ B" type_scope
R19382 Coq.Init.Datatypes.inl
R19391 RTLtyping.mapped
R19409 Coq.Init.Logic.True
R19439 Coq.Init.Logic "A /\ B" type_scope
R19427 RTLtyping.mapped
R19471 RTLtyping.mapped
R19458 Coq.Lists.List.In
R19453 Registers.reg
R19486 RTL.Icond
R19541 RTLtyping.mapped
R19528 Coq.Lists.List.In
R19523 Registers.reg
R19556 RTL.Ireturn
R19564 Coq.Init.Datatypes.None
R19572 Coq.Init.Logic.True
R19581 RTL.Ireturn
R19590 Coq.Init.Datatypes.Some
R19601 RTLtyping.mapped
R18907 RTL.instruction
R18896 RTLtyping.T
R19689 RTLtyping.mapped
R19697 RTLtyping.type_rtl_arg
R19681 AST.typ
R19671 Registers.reg
R19660 RTLtyping.T
R19806 RTLtyping.sameclass_identify_1
R19806 RTLtyping.sameclass_identify_1
R19845 RTLtyping.sameclass_identify_1
R19845 RTLtyping.sameclass_identify_1
R19961 RTLtyping.mapped
R19969 RTLtyping.type_rtl_arg
R19946 RTLtyping.mapped
R19938 AST.typ
R19928 Registers.reg
R19928 Registers.reg
R19914 RTLtyping.T
R20082 RTLtyping.sameclass_identify_2
R20082 RTLtyping.sameclass_identify_2
R20128 RTLtyping.sameclass_identify_2
R20128 RTLtyping.sameclass_identify_2
R20318 RTLtyping.mapped
R20326 RTLtyping.fold2
R20332 RTLtyping.type_rtl_arg
R20300 RTLtyping.mapped
R20255 RTLtyping.consistent
R20267 RTLtyping.fold2
R20273 RTLtyping.type_rtl_arg
R20247 Registers.reg
R20236 RTLtyping.T
R20221 Coq.Lists.List.list
R20226 AST.typ
R20205 Coq.Lists.List.list
R20210 Registers.reg
R20434 RTLtyping.error_inconsistent
R20434 RTLtyping.error_inconsistent
R20506 RTLtyping.error_inconsistent
R20506 RTLtyping.error_inconsistent
R20506 RTLtyping.error_inconsistent
R20569 RTLtyping.type_arg_mapped
R20569 RTLtyping.type_arg_mapped
R20747 RTLtyping.mapped
R20755 RTLtyping.fold2
R20761 RTLtyping.type_rtl_arg
R20736 Coq.Lists.List.In
R20680 RTLtyping.consistent
R20692 RTLtyping.fold2
R20698 RTLtyping.type_rtl_arg
R20671 RTLtyping.T
R20656 Coq.Lists.List.list
R20661 AST.typ
R20640 Coq.Lists.List.list
R20645 Registers.reg
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R20888 RTLtyping.error_inconsistent
R20888 RTLtyping.error_inconsistent
R20974 RTLtyping.type_args_mapped
R20974 RTLtyping.type_args_mapped
R21006 RTLtyping.type_arg_complete
R21006 RTLtyping.type_arg_complete
R21216 RTLtyping.mapped
R21224 RTLtyping.fold2
R21244 RTLtyping.type_rtl_arg
R21230 RTLtyping.type_rtl_arg
R21152 RTLtyping.consistent
R21164 RTLtyping.fold2
R21184 RTLtyping.type_rtl_arg
R21170 RTLtyping.type_rtl_arg
R21144 AST.typ
R21134 Registers.reg
R21119 Coq.Lists.List.list
R21124 AST.typ
R21103 Coq.Lists.List.list
R21108 Registers.reg
R21091 RTLtyping.T
R21299 RTLtyping.type_args_mapped
R21299 RTLtyping.type_args_mapped
R21331 RTLtyping.type_arg_complete
R21331 RTLtyping.type_arg_complete
R21589 Coq.Init.Logic "A /\ B" type_scope
R21526 RTLtyping.mapped
R21534 RTLtyping.fold2
R21554 RTLtyping.type_rtl_arg
R21540 RTLtyping.type_rtl_arg
R21616 RTLtyping.mapped
R21624 RTLtyping.fold2
R21644 RTLtyping.type_rtl_arg
R21630 RTLtyping.type_rtl_arg
R21604 Coq.Lists.List.In
R21462 RTLtyping.consistent
R21474 RTLtyping.fold2
R21494 RTLtyping.type_rtl_arg
R21480 RTLtyping.type_rtl_arg
R21454 AST.typ
R21444 Registers.reg
R21429 Coq.Lists.List.list
R21434 AST.typ
R21413 Coq.Lists.List.list
R21418 Registers.reg
R21401 RTLtyping.T
R21801 Coq.Init.Logic.conj
R21801 Coq.Init.Logic.conj
R21815 RTLtyping.type_res_complete
R21815 RTLtyping.type_res_complete
R21848 RTLtyping.type_args_complete
R21848 RTLtyping.type_args_complete
R22116 RTLtyping.mapped
R22124 RTLtyping.fold2
R22144 RTLtyping.type_rtl_arg
R22190 RTLtyping.type_rtl_ros
R22206 Coq.Init.Datatypes.inl
R22210 AST.ident
R22130 RTLtyping.type_rtl_arg
R21984 RTLtyping.consistent
R21996 RTLtyping.fold2
R22016 RTLtyping.type_rtl_arg
R22066 RTLtyping.type_rtl_ros
R22082 Coq.Init.Datatypes.inl
R22086 AST.ident
R22002 RTLtyping.type_rtl_arg
R21976 AST.typ
R21966 Registers.reg
R21966 Registers.reg
R21948 Coq.Lists.List.list
R21953 AST.typ
R21932 Coq.Lists.List.list
R21937 Registers.reg
R21920 RTLtyping.T
R22262 RTLtyping.type_args_mapped
R22262 RTLtyping.type_args_mapped
R22294 RTLtyping.type_arg_mapped
R22294 RTLtyping.type_arg_mapped
R22368 RTLtyping.sameclass_identify_1
R22368 RTLtyping.sameclass_identify_1
R22626 Coq.Init.Logic "x = y" type_scope
R22569 RTLtyping.mk_env
R22577 RTLtyping.fold2
R22597 RTLtyping.type_rtl_arg
R22583 RTLtyping.type_rtl_arg
R22505 RTLtyping.consistent
R22517 RTLtyping.fold2
R22537 RTLtyping.type_rtl_arg
R22523 RTLtyping.type_rtl_arg
R22497 AST.typ
R22487 Registers.reg
R22472 Coq.Lists.List.list
R22477 AST.typ
R22456 Coq.Lists.List.list
R22461 Registers.reg
R22444 RTLtyping.T
R22676 RTLtyping.type_args_included
R22713 RTLtyping.tTy
R22704 RTLtyping.tReg
R22676 RTLtyping.type_args_included
R22713 RTLtyping.tTy
R22704 RTLtyping.tReg
R22744 RTLtyping.consistent_not_eq
R22744 RTLtyping.consistent_not_eq
R22777 RTLtyping.equal_eq
R22777 RTLtyping.equal_eq
R22822 RTLtyping.sameclass_identify_1
R22822 RTLtyping.sameclass_identify_1
R23216 Coq.Init.Logic "x = y" type_scope
R23094 RTLtyping.mk_env
R23102 RTLtyping.fold2
R23122 RTLtyping.type_rtl_arg
R23168 RTLtyping.type_rtl_ros
R23184 Coq.Init.Datatypes.inl
R23188 AST.ident
R23108 RTLtyping.type_rtl_arg
R23218 AST.Tint
R22962 RTLtyping.consistent
R22974 RTLtyping.fold2
R22994 RTLtyping.type_rtl_arg
R23044 RTLtyping.type_rtl_ros
R23060 Coq.Init.Datatypes.inl
R23064 AST.ident
R22980 RTLtyping.type_rtl_arg
R22954 AST.typ
R22944 Registers.reg
R22944 Registers.reg
R22926 Coq.Lists.List.list
R22931 AST.typ
R22910 Coq.Lists.List.list
R22915 Registers.reg
R22898 RTLtyping.T
R23269 RTLtyping.type_args_included
R23307 RTLtyping.tTy
R23311 AST.Tint
R23297 RTLtyping.tReg
R23269 RTLtyping.type_args_included
R23307 RTLtyping.tTy
R23311 AST.Tint
R23297 RTLtyping.tReg
R23327 RTLtyping.consistent_not_eq
R23327 RTLtyping.consistent_not_eq
R23363 RTLtyping.type_arg_included
R23428 RTLtyping.tTy
R23432 AST.Tint
R23418 RTLtyping.tReg
R23382 RTLtyping.type_rtl_ros
R23398 Coq.Init.Datatypes.inl
R23402 AST.ident
R23363 RTLtyping.type_arg_included
R23428 RTLtyping.tTy
R23432 AST.Tint
R23418 RTLtyping.tReg
R23382 RTLtyping.type_rtl_ros
R23398 Coq.Init.Datatypes.inl
R23402 AST.ident
R23465 RTLtyping.sameclass_identify_1
R23465 RTLtyping.sameclass_identify_1
R23754 Coq.Init.Logic "A /\ B" type_scope
R23682 RTLtyping.wt_instr
R23692 RTLtyping.mk_env
R23700 RTLtyping.type_rtl_instr
R23727 AST.sig_res
R23718 RTL.fn_sig
R23757 RTLtyping.definite
R23767 RTLtyping.type_rtl_instr
R23794 AST.sig_res
R23785 RTL.fn_sig
R23618 RTLtyping.consistent
R23630 RTLtyping.type_rtl_instr
R23657 AST.sig_res
R23648 RTL.fn_sig
R23604 Coq.Init.Logic "x = y" type_scope
R23600 Maps "a ! b"
R23606 Coq.Init.Datatypes.Some
R23586 Coq.NArith.BinPos.positive
R23567 RTL.instruction
R23556 RTL.code
R23541 RTL.function
R23530 RTLtyping.T
R23923 Coq.Init.Logic.conj
R23923 Coq.Init.Logic.conj
R23941 RTLtyping.wt_Inop
R23941 RTLtyping.wt_Inop
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24000 Coq.Init.Logic.conj
R24027 RTLtyping.wt_Iop
R24082 RTLtyping.type_args_correct
R24135 RTLtyping.type_res_correct
R24207 RTLtyping.type_args_res_complete
R24290 RTLtyping.error_inconsistent
R24290 RTLtyping.error_inconsistent
R24358 RTLtyping.error_inconsistent
R24358 RTLtyping.error_inconsistent
R24397 Coq.Init.Logic.conj
R24397 Coq.Init.Logic.conj
R24415 RTLtyping.wt_Iopmove
R24415 RTLtyping.wt_Iopmove
R24475 RTLtyping.sameclass_identify_1
R24475 RTLtyping.sameclass_identify_1
R24545 RTLtyping.sameclass_identify_1
R24545 RTLtyping.sameclass_identify_1
R24634 RTLtyping.error_inconsistent
R24634 RTLtyping.error_inconsistent
R24673 Coq.Init.Logic.conj
R24673 Coq.Init.Logic.conj
R24685 RTLtyping.wt_Iopundef
R24685 RTLtyping.wt_Iopundef
R24755 Coq.Init.Logic.conj
R24755 Coq.Init.Logic.conj
R24773 RTLtyping.wt_Iload
R24773 RTLtyping.wt_Iload
R24799 RTLtyping.type_args_correct
R24799 RTLtyping.type_args_correct
R24850 RTLtyping.type_res_correct
R24850 RTLtyping.type_res_correct
R24908 RTLtyping.type_args_res_complete
R24908 RTLtyping.type_args_res_complete
R24975 Coq.Init.Logic.conj
R24975 Coq.Init.Logic.conj
R24993 RTLtyping.wt_Istore
R24993 RTLtyping.wt_Istore
R25020 RTLtyping.type_args_correct
R25020 RTLtyping.type_args_correct
R25071 RTLtyping.type_res_correct
R25071 RTLtyping.type_res_correct
R25129 RTLtyping.type_args_res_complete
R25129 RTLtyping.type_args_res_complete
R25195 Coq.Init.Logic.conj
R25195 Coq.Init.Logic.conj
R25213 RTLtyping.wt_Icall
R25213 RTLtyping.wt_Icall
R25255 RTLtyping.type_ros_correct
R25255 RTLtyping.type_ros_correct
R25292 RTLtyping.type_args_correct
R25292 RTLtyping.type_args_correct
R25330 RTLtyping.type_of_sig_res
R25330 RTLtyping.type_of_sig_res
R25356 RTLtyping.type_res_correct
R25356 RTLtyping.type_res_correct
R25412 Coq.Init.Logic.conj
R25412 Coq.Init.Logic.conj
R25432 RTLtyping.type_ros_complete
R25432 RTLtyping.type_ros_complete
R25471 RTLtyping.type_args_res_complete
R25471 RTLtyping.type_args_res_complete
R25514 Coq.Init.Logic.conj
R25514 Coq.Init.Logic.conj
R25541 RTLtyping.type_args_res_complete
R25541 RTLtyping.type_args_res_complete
R25600 Coq.Init.Logic.conj
R25600 Coq.Init.Logic.conj
R25618 RTLtyping.wt_Icond
R25618 RTLtyping.wt_Icond
R25642 RTLtyping.type_args_correct
R25642 RTLtyping.type_args_correct
R25692 RTLtyping.type_args_complete
R25692 RTLtyping.type_args_complete
R25777 Coq.Init.Logic.conj
R25777 Coq.Init.Logic.conj
R25796 RTLtyping.wt_Ireturn
R25796 RTLtyping.wt_Ireturn
R25838 AST.sig_res
R25829 RTL.fn_sig
R25838 AST.sig_res
R25829 RTL.fn_sig
R25886 RTLtyping.type_arg_correct
R25886 RTLtyping.type_arg_correct
R25926 RTLtyping.error_inconsistent
R25926 RTLtyping.error_inconsistent
R25980 AST.sig_res
R25971 RTL.fn_sig
R25980 AST.sig_res
R25971 RTL.fn_sig
R26026 RTLtyping.type_arg_complete
R26026 RTLtyping.type_arg_complete
R26061 RTLtyping.error_inconsistent
R26061 RTLtyping.error_inconsistent
R26099 Coq.Init.Logic.conj
R26099 Coq.Init.Logic.conj
R26117 RTLtyping.wt_Ireturn
R26117 RTLtyping.wt_Ireturn
R26158 AST.sig_res
R26149 RTL.fn_sig
R26158 AST.sig_res
R26149 RTL.fn_sig
R26203 RTLtyping.error_inconsistent
R26203 RTLtyping.error_inconsistent
R26428 Coq.Init.Logic "x = y" type_scope
R26416 RTLtyping.mk_env
R26430 RTLtyping.mk_env
R26397 RTLtyping.consistent
R26377 RTLtyping.included
R26360 RTLtyping.mapped
R26352 Registers.reg
R26341 RTLtyping.T
R26341 RTLtyping.T
R26560 RTLtyping.equal_eq
R26578 RTLtyping.equal_eq
R26560 RTLtyping.equal_eq
R26578 RTLtyping.equal_eq
R26605 RTLtyping.consistent_not_eq
R26605 RTLtyping.consistent_not_eq
R26639 RTLtyping.consistent_not_eq
R26639 RTLtyping.consistent_not_eq
R26678 RTLtyping.included_consistent
R26678 RTLtyping.included_consistent
R26917 Coq.Init.Logic "x = y" type_scope
R26898 Coq.Lists.List.map
R26903 RTLtyping.mk_env
R26919 Coq.Lists.List.map
R26924 RTLtyping.mk_env
R26877 RTLtyping.consistent
R26857 RTLtyping.included
R26839 RTLtyping.mapped
R26828 Coq.Lists.List.In
R26804 Coq.Lists.List.list
R26809 Registers.reg
R26792 RTLtyping.T
R26792 RTLtyping.T
R26996 RTLtyping.mapped_included_consistent
R26996 RTLtyping.mapped_included_consistent
R27214 RTLtyping.mapped
R27195 RTLtyping.mapped
R27175 RTLtyping.included
R27167 Registers.reg
R27156 RTLtyping.T
R27156 RTLtyping.T
R27526 Coq.Init.Logic "A /\ B" type_scope
R27514 RTLtyping.mapped
R27550 RTLtyping.mapped
R27540 Coq.Lists.List.In
R27470 Coq.Init.Logic "A /\ B" type_scope
R27458 RTLtyping.mapped
R27494 RTLtyping.mapped
R27484 Coq.Lists.List.In
R27438 RTLtyping.included
R27425 Coq.Lists.List.list
R27430 Registers.reg
R27415 Registers.reg
R27404 RTLtyping.T
R27404 RTLtyping.T
R27608 Coq.Init.Logic.conj
R27608 Coq.Init.Logic.conj
R27623 RTLtyping.included_mapped
R27623 RTLtyping.included_mapped
R27674 RTLtyping.included_mapped
R27674 RTLtyping.included_mapped
R27831 RTLtyping.definite
R27814 RTLtyping.definite
R27796 RTLtyping.included
R27780 RTL.instruction
R27769 RTLtyping.T
R27769 RTLtyping.T
R27907 RTLtyping.included_mapped_forall
R27907 RTLtyping.included_mapped_forall
R27907 RTLtyping.included_mapped_forall
R27907 RTLtyping.included_mapped_forall
R27907 RTLtyping.included_mapped_forall
R27907 RTLtyping.included_mapped_forall
R27907 RTLtyping.included_mapped_forall
R27907 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R27976 RTLtyping.included_mapped_forall
R28049 RTLtyping.included_mapped_forall
R28049 RTLtyping.included_mapped_forall
R28116 RTLtyping.included_mapped_forall
R28116 RTLtyping.included_mapped_forall
R28202 Coq.Init.Logic.conj
R28202 Coq.Init.Logic.conj
R28217 RTLtyping.included_mapped
R28217 RTLtyping.included_mapped
R28255 RTLtyping.included_mapped_forall
R28255 RTLtyping.included_mapped_forall
R28320 Coq.Init.Logic.conj
R28320 Coq.Init.Logic.conj
R28341 RTLtyping.included_mapped_forall
R28341 RTLtyping.included_mapped_forall
R28398 RTLtyping.included_mapped
R28398 RTLtyping.included_mapped
R28463 RTLtyping.included_mapped
R28463 RTLtyping.included_mapped
R28662 RTLtyping.wt_instr
R28672 RTLtyping.mk_env
R28641 RTLtyping.consistent
R28622 RTLtyping.definite
R28592 RTLtyping.wt_instr
R28602 RTLtyping.mk_env
R28572 RTLtyping.included
R28556 RTL.instruction
R28545 RTLtyping.T
R28545 RTLtyping.T
R28526 RTL.function
R28796 RTLtyping.wt_Inop
R28796 RTLtyping.wt_Inop
R28816 RTLtyping.wt_Iopmove
R28816 RTLtyping.wt_Iopmove
R28881 RTLtyping.wt_Iopundef
R28881 RTLtyping.wt_Iopundef
R28905 RTLtyping.wt_Iop
R28905 RTLtyping.wt_Iop
R29021 RTLtyping.mapped_included_consistent
R29080 RTLtyping.mapped_list_included
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29021 RTLtyping.mapped_included_consistent
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29080 RTLtyping.mapped_list_included
R29132 RTLtyping.wt_Iload
R29132 RTLtyping.wt_Iload
R29157 RTLtyping.mapped_list_included
R29157 RTLtyping.mapped_list_included
R29213 RTLtyping.mapped_included_consistent
R29213 RTLtyping.mapped_included_consistent
R29273 RTLtyping.wt_Istore
R29273 RTLtyping.wt_Istore
R29299 RTLtyping.mapped_list_included
R29299 RTLtyping.mapped_list_included
R29355 RTLtyping.mapped_included_consistent
R29355 RTLtyping.mapped_included_consistent
R29446 RTLtyping.wt_Icall
R29446 RTLtyping.wt_Icall
R29446 RTLtyping.wt_Icall
R29471 RTLtyping.mapped_included_consistent
R29471 RTLtyping.mapped_included_consistent
R29535 RTLtyping.mapped_list_included
R29535 RTLtyping.mapped_list_included
R29591 RTLtyping.mapped_included_consistent
R29591 RTLtyping.mapped_included_consistent
R29667 RTLtyping.mapped_list_included
R29667 RTLtyping.mapped_list_included
R29723 RTLtyping.mapped_included_consistent
R29723 RTLtyping.mapped_included_consistent
R29783 RTLtyping.wt_Icond
R29783 RTLtyping.wt_Icond
R29802 RTLtyping.mapped_list_included
R29802 RTLtyping.mapped_list_included
R29854 RTLtyping.wt_Ireturn
R29854 RTLtyping.wt_Ireturn
R29910 AST.sig_res
R29901 RTL.fn_sig
R29910 AST.sig_res
R29901 RTL.fn_sig
R29910 AST.sig_res
R29901 RTL.fn_sig
R29980 RTLtyping.mapped_included_consistent
R29980 RTLtyping.mapped_included_consistent
R30186 RTLtyping.wt_instr
R30174 Coq.Init.Logic "x = y" type_scope
R30170 Maps "a ! b"
R30162 RTL.fn_code
R30176 Coq.Init.Datatypes.Some
R30130 Coq.Init.Logic "x = y" type_scope
R30110 RTLtyping.type_rtl_function
R30132 Coq.Init.Datatypes.Some
R30099 RTLtyping.regenv
R30083 RTL.function
R30235 RTLtyping.step1
R30235 RTLtyping.step1
R30337 RTLtyping.step2
R30350 RTLtyping.included_consistent
R30337 RTLtyping.step2
R30350 RTLtyping.included_consistent
R30433 RTLtyping.step3
R30433 RTLtyping.step3
R30480 RTLtyping.step4
R30480 RTLtyping.step4
R30516 RTLtyping.step4
R30516 RTLtyping.step4
R30553 RTLtyping.included_consistent
R30553 RTLtyping.included_consistent
R30599 RTLtyping.definite_included
R30599 RTLtyping.definite_included
R30789 RTLtyping.wt_function
R30775 Coq.Init.Logic "x = y" type_scope
R30755 RTLtyping.type_rtl_function
R30777 Coq.Init.Datatypes.Some
R30744 RTLtyping.regenv
R30728 RTL.function
R30840 RTLtyping.mk_wt_function
R30993 RTLtyping.type_rtl_function_instrs
R30927 RTLtyping.type_rtl_function_norepet
R30862 RTLtyping.type_rtl_function_params
R30840 RTLtyping.mk_wt_function
R30993 RTLtyping.type_rtl_function_instrs
R30927 RTLtyping.type_rtl_function_norepet
R30862 RTLtyping.type_rtl_function_params
R31142 Coq.Init.Logic "x <> y" type_scope
R31122 RTLtyping.type_rtl_function
R31145 Coq.Init.Datatypes.None
R31094 Coq.Lists.List.In
R31105 AST.prog_funct
R31097 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R31061 RTL.program
R31408 Values.has_type
R31424 Registers "a # b"
R31378 RTL.regset
R31365 RTLtyping.regenv
R31535 RTLtyping.wt_regset
R31552 Registers "a # b <- c"
R31507 Values.has_type
R31485 RTLtyping.wt_regset
R31603 Registers.gsspec
R31603 Registers.gsspec
R31626 Coqlib.peq
R31626 Coqlib.peq
R31759 Values.has_type_list
R31787 Coq.Lists.List.map
R31780 Registers "a ## b"
R31726 RTLtyping.wt_regset
R31971 RTLtyping.wt_regset
R31986 RTL.init_regs
R31925 Values.has_type_list
R31949 Coq.Lists.List.map
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R32085 Registers.gi
R32085 Registers.gi
R32118 RTLtyping.wt_regset_assign
R32118 RTLtyping.wt_regset_assign
FKildall
R96 Coq.Init.Datatypes.nat
R303 Coq.Init.Datatypes.option
R311 Maps.t
R318 Kildall.t
R274 Coq.Lists.List.list
R289 Coq.Init.Datatypes "x * y" type_scope
R280 Coq.NArith.BinPos.positive
R291 Kildall.t
R262 Kildall.t
R255 Kildall.t
R243 Coq.NArith.BinPos.positive
R226 Coq.NArith.BinPos.positive
R204 Coq.Lists.List.list
R209 Coq.NArith.BinPos.positive
R192 Coq.NArith.BinPos.positive
R528 Kildall.ge
R553 Maps "a !! b"
R536 Maps "a !! b"
R501 Coq.Lists.List.In
R484 Coqlib.Plt
R466 Coq.Init.Logic "x = y" type_scope
R419 Kildall.fixpoint
R468 Coq.Init.Datatypes.Some
R745 Kildall.ge
R753 Maps "a !! b"
R716 Coq.Lists.List.In
R719 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R698 Coq.Init.Logic "x = y" type_scope
R651 Kildall.fixpoint
R700 Coq.Init.Datatypes.Some
R960 Coq.Lists.List.list
R965 Coq.NArith.BinPos.positive
R948 Coq.NArith.BinPos.positive
R993 Coq.NArith.BinPos.positive
R1039 Kildall.t
R1032 Kildall.t
R1020 Coq.NArith.BinPos.positive
R1066 Coq.Lists.List.list
R1081 Coq.Init.Datatypes "x * y" type_scope
R1072 Coq.NArith.BinPos.positive
R1083 Kildall.t
R1131 Maps.t
R1138 Kildall.t
R1151 Coq.Lists.List.list
R1156 Coq.NArith.BinPos.positive
R1223 Maps.t
R1230 Kildall.t
R1198 Coq.Lists.List.list
R1213 Coq.Init.Datatypes "x * y" type_scope
R1204 Coq.NArith.BinPos.positive
R1215 Kildall.t
R1257 Coq.Lists.List.nil
R1270 Maps.init
R1280 Kildall.bot
R1297 Coq.Lists.List "x :: y" list_scope
R1290 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R1344 Maps.set
R1356 Kildall.lub
R1363 Maps "a !! b"
R1198 Coq.Lists.List.list
R1213 Coq.Init.Datatypes "x * y" type_scope
R1204 Coq.NArith.BinPos.positive
R1215 Kildall.t
R1412 Coqlib.positive_rec
R1447 Coq.Lists.List.cons
R1452 Coq.NArith.BinPos.positive
R1441 Coq.Lists.List.nil
R1426 Coq.Lists.List.list
R1431 Coq.NArith.BinPos.positive
R1500 Kildall.mkstate
R1537 Kildall.start_state_wrk
R1509 Kildall.start_state_in
R1625 Coq.Lists.List.In_dec
R1637 Coqlib.peq
R1663 Coq.Lists.List "x :: y" list_scope
R1602 Coq.Lists.List.list
R1607 Coq.NArith.BinPos.positive
R1586 Coq.NArith.BinPos.positive
R1804 Kildall.eq
R1835 Kildall.mkstate
R1872 Kildall.add_to_worklist
R1893 Kildall.st_wrk
R1844 Maps.set
R1863 Kildall.st_in
R1781 Kildall.lub
R1760 Maps "a !! b"
R1754 Kildall.st_in
R1724 Coq.NArith.BinPos.positive
R1715 Kildall.t
R1702 Kildall.state
R2024 Kildall.state
R1963 Coq.Lists.List.list
R1968 Coq.NArith.BinPos.positive
R1950 Kildall.t
R1937 Kildall.state
R2056 Coq.Lists.List.nil
R2071 Coq.Lists.List "x :: y" list_scope
R2102 Kildall.propagate_succ
R1963 Coq.Lists.List.list
R1968 Coq.NArith.BinPos.positive
R1950 Kildall.t
R1937 Kildall.state
R2240 Coq.Init.Datatypes.option
R2248 Maps.t
R2255 Kildall.t
R2221 Kildall.state
R2212 Coq.Init.Datatypes.nat
R2282 Coq.Init.Datatypes.O
R2287 Coq.Init.Datatypes.None
R2296 Coq.Init.Datatypes.S
R2318 Kildall.st_wrk
R2339 Coq.Lists.List.nil
R2356 Coq.Init.Datatypes.Some
R2364 Kildall.st_in
R2381 Coq.Lists.List "x :: y" list_scope
R2424 Kildall.propagate_succ_list
R2515 Maps "a !! b"
R2509 Kildall.st_in
R2459 Kildall.mkstate
R2470 Kildall.st_in
R2221 Kildall.state
R2212 Coq.Init.Datatypes.nat
R2591 Kildall.iterate
R2614 Kildall.start_state
R2599 Kildall.num_iterations
R2711 Kildall.ge
R2726 Maps "a !! b"
R2719 Maps "a !! b"
R2677 Maps.t
R2684 Kildall.t
R2677 Maps.t
R2684 Kildall.t
R2766 Kildall.in_incr
R2822 Kildall.ge_refl
R2822 Kildall.ge_refl
R2920 Kildall.in_incr
R2901 Kildall.in_incr
R2882 Kildall.in_incr
R2995 Maps "a !! b"
R2976 Kildall.ge_trans
R2995 Maps "a !! b"
R2976 Kildall.ge_trans
R3060 Kildall.in_incr
R3106 Kildall.st_in
R3080 Kildall.propagate_succ
R3072 Kildall.st_in
R3178 Kildall.eq
R3198 Kildall.lub
R3214 Maps "a !! b"
R3208 Kildall.st_in
R3193 Maps "a !! b"
R3187 Kildall.st_in
R3178 Kildall.eq
R3198 Kildall.lub
R3214 Maps "a !! b"
R3208 Kildall.st_in
R3193 Maps "a !! b"
R3187 Kildall.st_in
R3240 Kildall.ge_refl
R3240 Kildall.ge_refl
R3266 Coqlib.peq
R3266 Coqlib.peq
R3304 Maps.gss
R3304 Maps.gss
R3320 Kildall.ge_lub_left
R3320 Kildall.ge_lub_left
R3345 Maps.gso
R3345 Maps.gso
R3367 Kildall.ge_refl
R3367 Kildall.ge_refl
R3441 Kildall.in_incr
R3496 Kildall.st_in
R3461 Kildall.propagate_succ_list
R3453 Kildall.st_in
R3553 Kildall.in_incr_refl
R3553 Kildall.in_incr_refl
R3621 Kildall.st_in
R3595 Kildall.propagate_succ
R3575 Kildall.in_incr_trans
R3621 Kildall.st_in
R3595 Kildall.propagate_succ
R3575 Kildall.in_incr_trans
R3638 Kildall.propagate_succ_incr
R3638 Kildall.propagate_succ_incr
R3742 Kildall.in_incr
R3754 Kildall.st_in
R3726 Coq.Init.Logic "x = y" type_scope
R3713 Kildall.iterate
R3728 Coq.Init.Datatypes.Some
R3849 Kildall.st_wrk
R3849 Kildall.st_wrk
R3917 Kildall.ge_refl
R3917 Kildall.ge_refl
R4103 Kildall.st_in
R3968 Kildall.propagate_succ_list
R4055 Maps "a !! b"
R4047 Kildall.st_in
R3989 Kildall.mkstate
R3998 Kildall.st_in
R3944 Kildall.in_incr_trans
R4103 Kildall.st_in
R3968 Kildall.propagate_succ_list
R4055 Maps "a !! b"
R4047 Kildall.st_in
R3989 Kildall.mkstate
R3998 Kildall.st_in
R3944 Kildall.in_incr_trans
R4137 Kildall.st_in
R4144 Kildall.mkstate
R4153 Kildall.st_in
R4121 Kildall.st_in
R4137 Kildall.st_in
R4144 Kildall.mkstate
R4153 Kildall.st_in
R4121 Kildall.st_in
R4176 Kildall.propagate_succ_list_incr
R4176 Kildall.propagate_succ_list_incr
R4287 Kildall.in_incr
R4296 Kildall.start_state_in
R4273 Coq.Init.Logic "x = y" type_scope
R4264 Kildall.fixpoint
R4275 Coq.Init.Datatypes.Some
R4419 Kildall.st_in
R4406 Kildall.start_state
R4373 Kildall.start_state_in
R4419 Kildall.st_in
R4406 Kildall.start_state
R4373 Kildall.start_state_in
R4453 Kildall.num_iterations
R4435 Kildall.iterate_incr
R4453 Kildall.num_iterations
R4435 Kildall.iterate_incr
R4604 Coq.Init.Logic "A \/ B" type_scope
R4587 Coq.Lists.List.In
R4596 Kildall.st_wrk
R4660 Kildall.ge
R4699 Maps "a !! b"
R4693 Kildall.st_in
R4675 Maps "a !! b"
R4669 Kildall.st_in
R4620 Coq.Lists.List.In
R4568 Coqlib.Plt
R4537 Kildall.state
R4733 Kildall.good_state
R4744 Kildall.start_state
R4884 Coqlib.positive_Peano_ind
R4884 Coqlib.positive_Peano_ind
R4972 Coqlib.positive_rec_succ
R4972 Coqlib.positive_rec_succ
R5000 Coqlib.Plt_succ_inv
R5000 Coqlib.Plt_succ_inv
R5125 Coq.Lists.List.In
R5131 Kildall.add_to_worklist
R5204 Coq.Lists.List.In_dec
R5211 Coqlib.peq
R5204 Coq.Lists.List.In_dec
R5211 Coqlib.peq
R5304 Coq.Lists.List.In
R5311 Kildall.add_to_worklist
R5291 Coq.Lists.List.In
R5384 Coq.Lists.List.In_dec
R5391 Coqlib.peq
R5384 Coq.Lists.List.In_dec
R5391 Coqlib.peq
R5542 Coq.Init.Logic "A /\ B" type_scope
R5518 Kildall.ge
R5534 Maps "a !! b"
R5528 Kildall.st_in
R5583 Coq.Init.Logic "x = y" type_scope
R5579 Maps "a !! b"
R5573 Kildall.st_in
R5595 Maps "a !! b"
R5589 Kildall.st_in
R5560 Coq.Init.Logic "x <> y" type_scope
R5489 Kildall.propagate_succ
R5656 Kildall.eq
R5678 Kildall.lub
R5693 Maps "a !! b"
R5685 Kildall.st_in
R5670 Maps "a !! b"
R5662 Kildall.st_in
R5656 Kildall.eq
R5678 Kildall.lub
R5693 Maps "a !! b"
R5685 Kildall.st_in
R5670 Maps "a !! b"
R5662 Kildall.st_in
R5742 Kildall.lub_commut
R5742 Kildall.lub_commut
R5762 Kildall.ge_lub_left
R5762 Kildall.ge_lub_left
R5811 Maps.gss
R5811 Maps.gss
R5829 Kildall.lub_commut
R5829 Kildall.lub_commut
R5849 Kildall.ge_lub_left
R5849 Kildall.ge_lub_left
R5882 Maps.gso
R5882 Maps.gso
R6063 Coq.Init.Logic "A /\ B" type_scope
R6040 Kildall.ge
R6056 Maps "a !! b"
R6050 Kildall.st_in
R6026 Coq.Lists.List.In
R6103 Coq.Init.Logic "x = y" type_scope
R6099 Maps "a !! b"
R6093 Kildall.st_in
R6115 Maps "a !! b"
R6109 Kildall.st_in
R6071 Coq.Init.Logic "~ x" type_scope
R6073 Coq.Lists.List.In
R5975 Kildall.propagate_succ_list
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R6194 Kildall.propagate_succ
R6194 Kildall.propagate_succ
R6251 Kildall.propagate_succ_charact
R6251 Kildall.propagate_succ_charact
R6401 Maps "a !! b"
R6395 Kildall.st_in
R6369 Kildall.propagate_succ
R6352 Kildall.ge_trans
R6401 Maps "a !! b"
R6395 Kildall.st_in
R6369 Kildall.propagate_succ
R6352 Kildall.ge_trans
R6414 Kildall.propagate_succ_list_incr
R6414 Kildall.propagate_succ_list_incr
R6517 Maps "a !! b"
R6511 Kildall.st_in
R6485 Kildall.propagate_succ
R6517 Maps "a !! b"
R6511 Kildall.st_in
R6485 Kildall.propagate_succ
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R6621 Coq.Lists.List.incl
R6665 Kildall.st_wrk
R6639 Kildall.propagate_succ
R6630 Kildall.st_wrk
R6723 Kildall.eq
R6745 Kildall.lub
R6760 Maps "a !! b"
R6752 Kildall.st_in
R6737 Maps "a !! b"
R6729 Kildall.st_in
R6723 Kildall.eq
R6745 Kildall.lub
R6760 Maps "a !! b"
R6752 Kildall.st_in
R6737 Maps "a !! b"
R6729 Kildall.st_in
R6789 Coq.Lists.List.incl_refl
R6789 Coq.Lists.List.incl_refl
R6828 Kildall.add_to_worklist_2
R6828 Kildall.add_to_worklist_2
R6925 Coq.Lists.List.incl
R6978 Kildall.st_wrk
R6943 Kildall.propagate_succ_list
R6934 Kildall.st_wrk
R7036 Coq.Lists.List.incl_refl
R7036 Coq.Lists.List.incl_refl
R7097 Kildall.st_wrk
R7071 Kildall.propagate_succ
R7055 Coq.Lists.List.incl_tran
R7097 Kildall.st_wrk
R7071 Kildall.propagate_succ
R7055 Coq.Lists.List.incl_tran
R7114 Kildall.propagate_succ_incr_worklist
R7114 Kildall.propagate_succ_incr_worklist
R7277 Coq.Init.Logic "A \/ B" type_scope
R7259 Coq.Lists.List.In
R7269 Kildall.st_wrk
R7295 Coq.Init.Logic "x = y" type_scope
R7291 Maps "a !! b"
R7285 Kildall.st_in
R7307 Maps "a !! b"
R7301 Kildall.st_in
R7230 Kildall.propagate_succ
R7368 Kildall.eq
R7390 Kildall.lub
R7405 Maps "a !! b"
R7397 Kildall.st_in
R7382 Maps "a !! b"
R7374 Kildall.st_in
R7368 Kildall.eq
R7390 Kildall.lub
R7405 Maps "a !! b"
R7397 Kildall.st_in
R7382 Maps "a !! b"
R7374 Kildall.st_in
R7449 Coqlib.peq
R7449 Coqlib.peq
R7496 Kildall.add_to_worklist_1
R7496 Kildall.add_to_worklist_1
R7537 Maps.gso
R7537 Maps.gso
R7696 Coq.Init.Logic "A \/ B" type_scope
R7678 Coq.Lists.List.In
R7688 Kildall.st_wrk
R7714 Coq.Init.Logic "x = y" type_scope
R7710 Maps "a !! b"
R7704 Kildall.st_in
R7726 Maps "a !! b"
R7720 Kildall.st_in
R7640 Kildall.propagate_succ_list
R7795 Kildall.propagate_succ_records_changes
R7795 Kildall.propagate_succ_records_changes
R7860 Kildall.propagate_succ_list_incr_worklist
R7860 Kildall.propagate_succ_list_incr_worklist
R8020 Kildall.good_state
R8032 Kildall.propagate_succ_list
R8131 Maps "a !! b"
R8125 Kildall.st_in
R8053 Kildall.mkstate
R8065 Kildall.st_in
R8001 Kildall.good_state
R7985 Coq.Init.Logic "x = y" type_scope
R7977 Kildall.st_wrk
R7989 Coq.Lists.List "x :: y" list_scope
R8280 Maps "a !! b"
R8274 Kildall.st_in
R8280 Maps "a !! b"
R8274 Kildall.st_in
R8317 Kildall.propagate_succ_list_records_changes
R8384 Kildall.mkstate
R8396 Kildall.st_in
R8317 Kildall.propagate_succ_list_records_changes
R8384 Kildall.mkstate
R8396 Kildall.st_in
R8494 Coqlib.peq
R8494 Coqlib.peq
R8557 Kildall.propagate_succ_list_charact
R8615 Kildall.mkstate
R8627 Kildall.st_in
R8557 Kildall.propagate_succ_list_charact
R8615 Kildall.mkstate
R8627 Kildall.st_in
R8778 Kildall.propagate_succ_list_incr_worklist
R8778 Kildall.propagate_succ_list_incr_worklist
R8923 Coq.Lists.List.In_dec
R8930 Coqlib.peq
R8923 Coq.Lists.List.In_dec
R8930 Coqlib.peq
R9059 Maps "a !! b"
R9053 Kildall.st_in
R9033 Kildall.ge_trans
R9059 Maps "a !! b"
R9053 Kildall.st_in
R9033 Kildall.ge_trans
R9124 Maps "a !! b"
R9118 Kildall.st_in
R9093 Kildall.mkstate
R9105 Kildall.st_in
R9083 Maps "a !! b"
R9077 Kildall.st_in
R9124 Maps "a !! b"
R9118 Kildall.st_in
R9093 Kildall.mkstate
R9105 Kildall.st_in
R9083 Maps "a !! b"
R9077 Kildall.st_in
R9137 Kildall.propagate_succ_list_incr
R9137 Kildall.propagate_succ_list_incr
R9245 Kildall.propagate_succ_list_charact
R9303 Kildall.mkstate
R9315 Kildall.st_in
R9245 Kildall.propagate_succ_list_charact
R9303 Kildall.mkstate
R9315 Kildall.st_in
R9525 Kildall.ge
R9550 Maps "a !! b"
R9533 Maps "a !! b"
R9500 Coq.Lists.List.In
R9483 Coqlib.Plt
R9467 Coq.Init.Logic "x = y" type_scope
R9450 Kildall.iterate
R9469 Coq.Init.Datatypes.Some
R9431 Kildall.good_state
R9651 Kildall.st_wrk
R9651 Kildall.st_wrk
R9801 Kildall.propagate_succ_list
R9872 Maps "a !! b"
R9866 Kildall.st_in
R9822 Kildall.mkstate
R9834 Kildall.st_in
R9801 Kildall.propagate_succ_list
R9872 Maps "a !! b"
R9866 Kildall.st_in
R9822 Kildall.mkstate
R9834 Kildall.st_in
R9903 Kildall.step_state_good
R9903 Kildall.step_state_good
R10066 Kildall.ge
R10091 Maps "a !! b"
R10074 Maps "a !! b"
R10041 Coq.Lists.List.In
R10024 Coqlib.Plt
R10008 Coq.Init.Logic "x = y" type_scope
R9999 Kildall.fixpoint
R10010 Coq.Init.Datatypes.Some
R10161 Kildall.num_iterations
R10176 Kildall.start_state
R10139 Kildall.iterate_solution
R10161 Kildall.num_iterations
R10176 Kildall.start_state
R10139 Kildall.iterate_solution
R10197 Kildall.start_state_good
R10197 Kildall.start_state_good
R10306 Kildall.ge
R10329 Maps "a !! b"
R10312 Kildall.start_state_in
R10288 Coq.Lists.List.In
R10291 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10422 Maps.gss
R10422 Maps.gss
R10440 Kildall.lub_commut
R10440 Kildall.lub_commut
R10460 Kildall.ge_lub_left
R10460 Kildall.ge_lub_left
R10497 Maps.gsspec
R10497 Maps.gsspec
R10516 Coqlib.peq
R10516 Coqlib.peq
R10584 Maps "a !! b"
R10567 Kildall.start_state_in
R10550 Kildall.ge_trans
R10584 Maps "a !! b"
R10567 Kildall.start_state_in
R10550 Kildall.ge_trans
R10598 Kildall.ge_lub_left
R10598 Kildall.ge_lub_left
R10729 Kildall.ge
R10737 Maps "a !! b"
R10702 Coq.Lists.List.In
R10705 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10686 Coq.Init.Logic "x = y" type_scope
R10677 Kildall.fixpoint
R10688 Coq.Init.Datatypes.Some
R10812 Maps "a !! b"
R10786 Kildall.start_state_in
R10769 Kildall.ge_trans
R10812 Maps "a !! b"
R10786 Kildall.start_state_in
R10769 Kildall.ge_trans
R10826 Kildall.fixpoint_incr
R10826 Kildall.fixpoint_incr
R10855 Kildall.start_state_in_entry
R10855 Kildall.start_state_in_entry
R11028 Coq.Lists.List.list
R11033 Coq.NArith.BinPos.positive
R11016 Coq.NArith.BinPos.positive
R11061 Coq.NArith.BinPos.positive
R11234 Maps.t
R11242 Coq.Lists.List.list
R11247 Coq.NArith.BinPos.positive
R11177 Coq.Lists.List.list
R11182 Coq.NArith.BinPos.positive
R11158 Coq.NArith.BinPos.positive
R11103 Maps.t
R11111 Coq.Lists.List.list
R11116 Coq.NArith.BinPos.positive
R11284 Coq.Lists.List.nil
R11303 Coq.Lists.List "x :: y" list_scope
R11335 Maps.set
R11353 Coq.Lists.List "x :: y" list_scope
R11360 Maps "a !! b"
R11177 Coq.Lists.List.list
R11182 Coq.NArith.BinPos.positive
R11158 Coq.NArith.BinPos.positive
R11103 Maps.t
R11111 Coq.Lists.List.list
R11116 Coq.NArith.BinPos.positive
R11500 Coq.Lists.List.In
R11537 Maps "a !! b"
R11506 Kildall.add_successors
R11465 Coq.Init.Logic "A \/ B" type_scope
R11452 Coq.Lists.List.In
R11461 Maps "a !! b"
R11478 Coq.Init.Logic "A /\ B" type_scope
R11471 Coq.Init.Logic "x = y" type_scope
R11481 Coq.Lists.List.In
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R11622 Maps.gsspec
R11622 Maps.gsspec
R11641 Coqlib.peq
R11641 Coqlib.peq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R11825 Maps.t
R11833 Coq.Lists.List.list
R11838 Coq.NArith.BinPos.positive
R11853 Coqlib.positive_rec
R11926 Kildall.add_successors
R11892 Maps.init
R11902 Coq.Lists.List.nil
R11867 Maps.t
R11875 Coq.Lists.List.list
R11880 Coq.NArith.BinPos.positive
R12071 Coq.Lists.List.In
R12093 Maps "a !! b"
R12076 Kildall.make_predecessors
R12046 Coq.Lists.List.In
R12027 Coqlib.Plt
R12159 Coqlib.positive_Peano_ind
R12159 Coqlib.positive_Peano_ind
R12239 Coqlib.positive_rec_succ
R12239 Coqlib.positive_rec_succ
R12266 Kildall.add_successors_correct
R12266 Kildall.add_successors_correct
R12298 Coqlib.Plt_succ_inv
R12298 Coqlib.Plt_succ_inv
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R12637 Coq.Init.Datatypes.option
R12645 Maps.t
R12652 Kildall.t
R12608 Coq.Lists.List.list
R12623 Coq.Init.Datatypes "x * y" type_scope
R12614 Coq.NArith.BinPos.positive
R12625 Kildall.t
R12596 Kildall.t
R12589 Kildall.t
R12577 Coq.NArith.BinPos.positive
R12560 Coq.NArith.BinPos.positive
R12538 Coq.Lists.List.list
R12543 Coq.NArith.BinPos.positive
R12526 Coq.NArith.BinPos.positive
R12879 Kildall.ge
R12904 Maps "a !! b"
R12887 Maps "a !! b"
R12852 Coq.Lists.List.In
R12835 Coqlib.Plt
R12818 Coqlib.Plt
R12800 Coq.Init.Logic "x = y" type_scope
R12753 Kildall.fixpoint
R12802 Coq.Init.Datatypes.Some
R13096 Kildall.ge
R13104 Maps "a !! b"
R13067 Coq.Lists.List.In
R13070 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13049 Coq.Init.Logic "x = y" type_scope
R13002 Kildall.fixpoint
R13051 Coq.Init.Datatypes.Some
R13364 Coq.Lists.List.list
R13369 Coq.NArith.BinPos.positive
R13352 Coq.NArith.BinPos.positive
R13397 Coq.NArith.BinPos.positive
R13443 Kildall.t
R13436 Kildall.t
R13424 Coq.NArith.BinPos.positive
R13470 Coq.Lists.List.list
R13485 Coq.Init.Datatypes "x * y" type_scope
R13476 Coq.NArith.BinPos.positive
R13487 Kildall.t
R13573 Kildall.fixpoint
R13599 Maps "a !! b"
R13531 Kildall.make_predecessors
R13766 Kildall.ge
R13791 Maps "a !! b"
R13774 Maps "a !! b"
R13741 Coq.Lists.List.In
R13722 Coqlib.Plt
R13705 Coqlib.Plt
R13689 Coq.Init.Logic "x = y" type_scope
R13680 Kildall.fixpoint
R13691 Coq.Init.Datatypes.Some
R13897 Maps "a !! b"
R13861 Kildall.make_predecessors
R13820 Kildall.fixpoint_solution
R13897 Maps "a !! b"
R13861 Kildall.make_predecessors
R13820 Kildall.fixpoint_solution
R13957 Kildall.make_predecessors_correct
R13957 Kildall.make_predecessors_correct
R14092 Kildall.ge
R14100 Maps "a !! b"
R14065 Coq.Lists.List.In
R14068 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14049 Coq.Init.Logic "x = y" type_scope
R14040 Kildall.fixpoint
R14051 Coq.Init.Datatypes.Some
R14204 Maps "a !! b"
R14168 Kildall.make_predecessors
R14130 Kildall.fixpoint_entry
R14204 Maps "a !! b"
R14168 Kildall.make_predecessors
R14130 Kildall.fixpoint_entry
R14422 Kildall.t
R14417 Kildall.t
R14449 Kildall.t
R14483 Kildall.ge
R14486 Kildall.top
R14525 Kildall.ge
R14758 Coq.Init.Datatypes.option
R14766 Maps.t
R14773 Kildall.t
R14742 Coq.NArith.BinPos.positive
R14730 Kildall.t
R14723 Kildall.t
R14711 Coq.NArith.BinPos.positive
R14694 Coq.NArith.BinPos.positive
R14672 Coq.Lists.List.list
R14677 Coq.NArith.BinPos.positive
R14660 Coq.NArith.BinPos.positive
R14981 Kildall.ge
R15006 Maps "a !! b"
R14989 Maps "a !! b"
R14954 Coq.Lists.List.In
R14937 Coqlib.Plt
R14919 Coq.Init.Logic "x = y" type_scope
R14873 Kildall.fixpoint
R14921 Coq.Init.Datatypes.Some
R15179 Coq.Init.Logic "x = y" type_scope
R15166 Maps "a !! b"
R15181 Kildall.top
R15145 Coq.Init.Logic "x = y" type_scope
R15099 Kildall.fixpoint
R15147 Coq.Init.Datatypes.Some
R15452 Maps "a !! b"
R15429 Coq.Init.Logic "x = y" type_scope
R15383 Kildall.fixpoint
R15431 Coq.Init.Datatypes.Some
R15306 Kildall.top
R15286 Kildall.t
R15658 Coq.Lists.List.list
R15663 Coq.NArith.BinPos.positive
R15646 Coq.NArith.BinPos.positive
R15691 Coq.NArith.BinPos.positive
R15737 Kildall.t
R15730 Kildall.t
R15718 Coq.NArith.BinPos.positive
R15763 Coq.NArith.BinPos.positive
R15785 Kildall.t
R15817 Kildall.top
R15914 Coq.Init.Datatypes.bool
R15902 Coq.NArith.BinPos.positive
R15941 Maps.t
R15948 Kildall.t
R15995 Kildall.result
R16011 Coq.Lists.List.list
R16016 Coq.NArith.BinPos.positive
R16140 Kildall.state
R16112 Kildall.state
R16102 Kildall.t
R16083 Coq.Lists.List.list
R16088 Coq.NArith.BinPos.positive
R16068 Kildall.bbmap
R16172 Coq.Lists.List.nil
R16189 Coq.Lists.List "x :: y" list_scope
R16317 Kildall.mkstate
R16375 Coq.Lists.List "x :: y" list_scope
R16382 Kildall.st_wrk
R16326 Maps.set
R16344 Kildall.st_in
R16112 Kildall.state
R16102 Kildall.t
R16083 Coq.Lists.List.list
R16088 Coq.NArith.BinPos.positive
R16068 Kildall.bbmap
R16480 Coq.Init.Datatypes.option
R16487 Kildall.result
R16452 Kildall.state
R16440 Kildall.bbmap
R16430 Coq.Init.Datatypes.nat
R16520 Coq.Init.Datatypes.O
R16525 Coq.Init.Datatypes.None
R16534 Coq.Init.Datatypes.S
R16559 Kildall.st_wrk
R16580 Coq.Lists.List.nil
R16587 Coq.Init.Datatypes.Some
R16596 Kildall.st_in
R16614 Coq.Lists.List "x :: y" list_scope
R16637 Coqlib.plt
R16887 Kildall.mkstate
R16899 Kildall.st_in
R16699 Kildall.propagate_successors
R16819 Kildall.mkstate
R16831 Kildall.st_in
R16795 Maps "a !! b"
R16789 Kildall.st_in
R16452 Kildall.state
R16440 Kildall.bbmap
R16430 Coq.Init.Datatypes.nat
R17014 Coq.Init.Datatypes.bool
R17035 Maps "a !! b"
R17049 Coq.Lists.List.nil
R17056 Coq.Init.Datatypes.true
R17104 Coq.Lists.List "x :: y" list_scope
R17107 Coq.Lists.List.nil
R17124 Coqlib.peq
R17157 Coqlib.peq
R17190 Coq.Init.Datatypes.false
R17180 Coq.Init.Datatypes.true
R17138 Coq.Init.Datatypes.true
R17202 Coq.Lists.List "x :: y" list_scope
R17207 Coq.Lists.List "x :: y" list_scope
R17215 Coq.Init.Datatypes.true
R17002 Coq.NArith.BinPos.positive
R16973 Maps.t
R16981 Coq.Lists.List.list
R16986 Coq.NArith.BinPos.positive
R17257 Kildall.bbmap
R17268 Kildall.is_basic_block_head
R17289 Kildall.make_predecessors
R17371 Coq.Lists.List.list
R17376 Coq.NArith.BinPos.positive
R17390 Coqlib.positive_rec
R17457 Coq.Lists.List "x :: y" list_scope
R17419 Coq.Lists.List.nil
R17404 Coq.Lists.List.list
R17409 Coq.NArith.BinPos.positive
R17362 Kildall.bbmap
R17503 Coq.Init.Datatypes.option
R17510 Kildall.result
R17553 Kildall.analyze
R17580 Kildall.mkstate
R17607 Kildall.basic_block_list
R17589 Maps.init
R17599 Kildall.top
R17561 Kildall.num_iterations
R17532 Kildall.basic_block_map
R17683 Kildall.make_predecessors
R17806 Coq.Lists.List.In
R17823 Maps "a !! b"
R17811 Kildall.predecessors
R17783 Coq.Lists.List.In
R17766 Coqlib.Plt
R17873 Kildall.make_predecessors_correct
R17873 Kildall.make_predecessors_correct
R18082 Coq.Init.Logic "x = y" type_scope
R18064 Kildall.basic_block_map
R18084 Coq.Init.Datatypes.true
R18053 Coq.Init.Logic "x <> y" type_scope
R18024 Coq.Lists.List.In
R18006 Coqlib.Plt
R17980 Coq.Lists.List.In
R17962 Coqlib.Plt
R18118 Coq.Lists.List.In
R18136 Maps "a !! b"
R18124 Kildall.predecessors
R18118 Coq.Lists.List.In
R18136 Maps "a !! b"
R18124 Kildall.predecessors
R18148 Kildall.predecessors_correct
R18148 Kildall.predecessors_correct
R18186 Coq.Lists.List.In
R18204 Maps "a !! b"
R18192 Kildall.predecessors
R18186 Coq.Lists.List.In
R18204 Maps "a !! b"
R18192 Kildall.predecessors
R18216 Kildall.predecessors_correct
R18216 Kildall.predecessors_correct
R18298 Kildall.predecessors
R18298 Kildall.predecessors
R18336 Maps "a !! b"
R18324 Kildall.predecessors
R18336 Maps "a !! b"
R18324 Kildall.predecessors
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R18522 Coq.Init.Logic "x = y" type_scope
R18504 Kildall.basic_block_map
R18524 Coq.Init.Datatypes.true
R18481 Coq.Lists.List.In
R18464 Coqlib.Plt
R18599 Kildall.predecessors
R18599 Kildall.predecessors
R18628 Kildall.predecessors_correct
R18628 Kildall.predecessors_correct
R18691 Maps "a !! b"
R18679 Kildall.predecessors
R18691 Maps "a !! b"
R18679 Kildall.predecessors
R18741 Coqlib.peq_true
R18741 Coqlib.peq_true
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R18897 Coq.Init.Logic "A /\ B" type_scope
R18890 Coq.Init.Logic "x = y" type_scope
R18886 Maps "a !! b"
R18880 Kildall.st_in
R18892 Kildall.top
R18866 Coq.Init.Logic "x = y" type_scope
R18848 Kildall.basic_block_map
R18868 Coq.Init.Datatypes.true
R18952 Coq.Init.Logic "A \/ B" type_scope
R18935 Coq.Lists.List.In
R18944 Kildall.st_wrk
R19008 Kildall.ge
R19047 Maps "a !! b"
R19041 Kildall.st_in
R19023 Maps "a !! b"
R19017 Kildall.st_in
R18969 Coq.Lists.List.In
R18915 Coqlib.Plt
R18818 Kildall.state
R19119 Coq.Lists.List.incl
R19181 Kildall.st_wrk
R19144 Kildall.propagate_successors
R19128 Kildall.st_wrk
R19239 Coq.Lists.List.incl_refl
R19239 Coq.Lists.List.incl_refl
R19299 Coq.Lists.List "x :: y" list_scope
R19302 Kildall.st_wrk
R19281 Coq.Lists.List.incl_tran
R19299 Coq.Lists.List "x :: y" list_scope
R19302 Kildall.st_wrk
R19281 Coq.Lists.List.incl_tran
R19322 Coq.Lists.List.incl_tl
R19322 Coq.Lists.List.incl_tl
R19337 Coq.Lists.List.incl_refl
R19337 Coq.Lists.List.incl_refl
R19363 Kildall.mkstate
R19400 Coq.Lists.List "x :: y" list_scope
R19403 Kildall.st_wrk
R19372 Maps.set
R19386 Kildall.st_in
R19363 Kildall.mkstate
R19400 Coq.Lists.List "x :: y" list_scope
R19403 Kildall.st_wrk
R19372 Maps.set
R19386 Kildall.st_in
R19449 Kildall.st_wrk
R19429 Coq.Lists.List "x :: y" list_scope
R19432 Kildall.st_wrk
R19449 Kildall.st_wrk
R19429 Coq.Lists.List "x :: y" list_scope
R19432 Kildall.st_wrk
R19662 Coq.Init.Logic "A /\ B" type_scope
R19641 Coq.Init.Logic "A /\ B" type_scope
R19623 Coq.Lists.List.In
R19633 Kildall.st_wrk
R19659 Coq.Init.Logic "x = y" type_scope
R19655 Maps "a !! b"
R19649 Kildall.st_in
R19612 Coq.Init.Logic "x = y" type_scope
R19614 Coq.Init.Datatypes.false
R19593 Coq.Lists.List.In
R19713 Coq.Init.Logic "x = y" type_scope
R19709 Maps "a !! b"
R19703 Kildall.st_in
R19725 Maps "a !! b"
R19719 Kildall.st_in
R19680 Coq.Init.Logic "A \/ B" type_scope
R19668 Coq.Init.Logic "~ x" type_scope
R19669 Coq.Lists.List.In
R19688 Coq.Init.Logic "x = y" type_scope
R19690 Coq.Init.Datatypes.true
R19552 Kildall.propagate_successors
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R20007 Kildall.mkstate
R20044 Coq.Lists.List "x :: y" list_scope
R20047 Kildall.st_wrk
R20016 Maps.set
R20030 Kildall.st_in
R20007 Kildall.mkstate
R20044 Coq.Lists.List "x :: y" list_scope
R20047 Kildall.st_wrk
R20016 Maps.set
R20030 Kildall.st_in
R20160 Kildall.propagate_successors_charact1
R20160 Kildall.propagate_successors_charact1
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R20213 Coq.Lists.List.In_dec
R20220 Coqlib.peq
R20213 Coq.Lists.List.In_dec
R20220 Coqlib.peq
R20302 Maps.gss
R20302 Maps.gss
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R20374 Maps.gso
R20374 Maps.gso
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R20587 Kildall.state_invariant
R20609 Kildall.propagate_successors
R20735 Kildall.mkstate
R20702 Maps "a !! b"
R20630 Kildall.basic_block_map
R20540 Kildall.state_invariant
R20557 Kildall.mkstate
R20573 Coq.Lists.List "x :: y" list_scope
R20520 Coqlib.Plt
R20859 Maps "a !! b"
R20859 Maps "a !! b"
R20880 Kildall.propagate_successors_charact1
R20961 Kildall.mkstate
R20910 Kildall.basic_block_map
R20880 Kildall.propagate_successors_charact1
R20961 Kildall.mkstate
R20910 Kildall.basic_block_map
R20994 Kildall.propagate_successors_charact2
R21075 Kildall.mkstate
R21024 Kildall.basic_block_map
R20994 Kildall.propagate_successors_charact2
R21075 Kildall.mkstate
R21024 Kildall.basic_block_map
R21108 Kildall.propagate_successors
R21181 Kildall.mkstate
R21129 Kildall.basic_block_map
R21108 Kildall.propagate_successors
R21181 Kildall.mkstate
R21129 Kildall.basic_block_map
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R21411 Coqlib.peq
R21411 Coqlib.peq
R21505 Maps "a !! b"
R21499 Kildall.st_in
R21519 Maps "a !! b"
R21505 Maps "a !! b"
R21499 Kildall.st_in
R21519 Maps "a !! b"
R21544 Kildall.basic_block_map
R21544 Kildall.basic_block_map
R21611 Kildall.top_ge
R21611 Kildall.top_ge
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R21679 Kildall.refl_ge
R21679 Kildall.refl_ge
R21751 Coq.Lists.List.In_dec
R21758 Coqlib.peq
R21751 Coq.Lists.List.In_dec
R21758 Coqlib.peq
R21805 Kildall.no_self_loop
R21805 Kildall.no_self_loop
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R22093 Coq.Init.Logic "x = y" type_scope
R22089 Maps "a !! b"
R22083 Kildall.st_in
R22098 Maps "a !! b"
R22055 Coq.Lists.List.In
R22093 Coq.Init.Logic "x = y" type_scope
R22089 Maps "a !! b"
R22083 Kildall.st_in
R22098 Maps "a !! b"
R22055 Coq.Lists.List.In
R22425 Coq.Lists.List.In_dec
R22432 Coqlib.peq
R22425 Coq.Lists.List.In_dec
R22432 Coqlib.peq
R22480 Kildall.multiple_predecessors
R22480 Kildall.multiple_predecessors
R22543 Coq.Lists.List.In_dec
R22550 Coqlib.peq
R22543 Coq.Lists.List.In_dec
R22550 Coqlib.peq
R22690 Kildall.basic_block_map
R22690 Kildall.basic_block_map
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R23169 Kildall.state_invariant
R23186 Kildall.mkstate
R23122 Kildall.state_invariant
R23139 Kildall.mkstate
R23155 Coq.Lists.List "x :: y" list_scope
R23099 Coq.Init.Logic "~ x" type_scope
R23101 Coqlib.Plt
R23523 Kildall.state_invariant
R23540 Kildall.mkstate
R23552 Coq.Lists.List.nil
R23499 Kildall.state_invariant
R23483 Coq.Init.Logic "x = y" type_scope
R23450 Kildall.analyze
R23464 Kildall.basic_block_map
R23485 Coq.Init.Datatypes.Some
R23734 Coqlib.plt
R23734 Coqlib.plt
R23790 Kildall.propagate_successors_invariant
R23790 Kildall.propagate_successors_invariant
R23860 Kildall.discard_top_worklist_invariant
R23860 Kildall.discard_top_worklist_invariant
R23938 Kildall.state_invariant
R23955 Kildall.mkstate
R23982 Kildall.basic_block_list
R23999 Kildall.basic_block_map
R23964 Maps.init
R23974 Kildall.top
R24057 Maps.gi
R24057 Maps.gi
R24098 Maps.gi
R24098 Maps.gi
R24098 Maps.gi
R24098 Maps.gi
R24113 Kildall.top_ge
R24113 Kildall.top_ge
R24243 Kildall.ge
R24268 Maps "a !! b"
R24251 Maps "a !! b"
R24218 Coq.Lists.List.In
R24201 Coqlib.Plt
R24185 Coq.Init.Logic "x = y" type_scope
R24176 Kildall.fixpoint
R24187 Coq.Init.Datatypes.Some
R24322 Kildall.state_invariant
R24339 Kildall.mkstate
R24351 Coq.Lists.List.nil
R24322 Kildall.state_invariant
R24339 Kildall.mkstate
R24351 Coq.Lists.List.nil
R24367 Kildall.analyze_invariant
R24367 Kildall.analyze_invariant
R24399 Kildall.initial_state_invariant
R24399 Kildall.initial_state_invariant
R24590 Coq.Init.Logic "x = y" type_scope
R24577 Maps "a !! b"
R24592 Kildall.top
R24558 Coq.Init.Logic "x = y" type_scope
R24549 Kildall.fixpoint
R24560 Coq.Init.Datatypes.Some
R24647 Kildall.state_invariant
R24664 Kildall.mkstate
R24676 Coq.Lists.List.nil
R24647 Kildall.state_invariant
R24664 Kildall.mkstate
R24676 Coq.Lists.List.nil
R24692 Kildall.analyze_invariant
R24692 Kildall.analyze_invariant
R24724 Kildall.initial_state_invariant
R24724 Kildall.initial_state_invariant
R24840 Kildall.predecessors
R24840 Kildall.predecessors
R24879 Maps "a !! b"
R24867 Kildall.predecessors
R24879 Maps "a !! b"
R24867 Kildall.predecessors
R24924 Coqlib.peq
R24924 Coqlib.peq
R24955 Coqlib.peq_true
R24955 Coqlib.peq_true
R25045 Maps "a !! b"
R25039 Kildall.st_in
R25003 Kildall.state
R25142 Kildall.Pstate
R25150 Kildall.propagate_successors
R25127 Kildall.Pstate
R25306 Maps.gsspec
R25306 Maps.gsspec
R25325 Coqlib.peq
R25325 Coqlib.peq
R25482 Maps "a !! b"
R25449 Kildall.Pstate
R25432 Coq.Init.Logic "x = y" type_scope
R25412 Kildall.analyze
R25434 Coq.Init.Datatypes.Some
R25568 Kildall.st_wrk
R25568 Kildall.st_wrk
R25622 Coqlib.plt
R25622 Coqlib.plt
R25680 Kildall.propagate_successors_P
R25680 Kildall.propagate_successors_P
R25858 Maps "a !! b"
R25839 Coq.Init.Logic "x = y" type_scope
R25830 Kildall.fixpoint
R25841 Coq.Init.Datatypes.Some
R25910 Kildall.analyze_P
R25910 Kildall.analyze_P
R25957 Maps.gi
R25957 Maps.gi
FConstprop
R372 Integers.int
R393 Floats.float
R425 Integers.int
R416 AST.ident
R498 Constprop.approx
R535 Coq.Init.Specif "{ A } + { B }" type_scope
R537 Coq.Init.Logic "x = y" type_scope
R545 Coq.Init.Logic "x <> y" type_scope
R531 Constprop.t
R531 Constprop.t
R591 Integers.eq_dec
R591 Integers.eq_dec
R613 Floats.eq_dec
R613 Floats.eq_dec
R637 Integers.eq_dec
R637 Integers.eq_dec
R659 AST.ident_eq
R659 AST.ident_eq
R727 Coq.Init.Logic "A \/ B" type_scope
R717 Coq.Init.Logic "x = y" type_scope
R719 Constprop.Unknown
R742 Coq.Init.Logic "A \/ B" type_scope
R732 Coq.Init.Logic "x = y" type_scope
R734 Constprop.Novalue
R747 Coq.Init.Logic "x = y" type_scope
R698 Constprop.t
R698 Constprop.t
R779 Constprop.ge
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R877 Constprop.ge
R867 Constprop.ge
R857 Constprop.ge
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R958 Constprop.Novalue
R987 Constprop.Unknown
R1022 Constprop.ge
R1027 Constprop.bot
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R1101 Constprop.ge
R1104 Constprop.top
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R1182 Constprop.t
R1194 Constprop.eq
R1239 Constprop.Novalue
R1264 Constprop.Novalue
R1291 Constprop.Unknown
R1177 Constprop.t
R1177 Constprop.t
R1348 Coq.Init.Logic "x = y" type_scope
R1340 Constprop.lub
R1350 Constprop.lub
R1402 Constprop.eq
R1417 Constprop.eq
R1402 Constprop.eq
R1417 Constprop.eq
R1417 Constprop.eq
R1524 Constprop.ge
R1528 Constprop.lub
R1583 Constprop.eq
R1583 Constprop.eq
R1609 Constprop.ge_refl
R1609 Constprop.ge_refl
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R2407 Coq.Lists.List.list
R2412 Constprop.approx
R2391 Op.condition
R2533 Coq.Lists.List "x :: y" list_scope
R2528 Constprop.I
R2541 Coq.Lists.List "x :: y" list_scope
R2536 Constprop.I
R2544 Coq.Lists.List.nil
R2518 Op.Ccomp
R2655 Coq.Lists.List "x :: y" list_scope
R2650 Constprop.I
R2663 Coq.Lists.List "x :: y" list_scope
R2658 Constprop.I
R2666 Coq.Lists.List.nil
R2639 Op.Ccompu
R2780 Coq.Lists.List "x :: y" list_scope
R2775 Constprop.I
R2783 Coq.Lists.List.nil
R2760 Op.Ccompimm
R2898 Coq.Lists.List "x :: y" list_scope
R2893 Constprop.I
R2901 Coq.Lists.List.nil
R2877 Op.Ccompuimm
R3012 Coq.Lists.List "x :: y" list_scope
R3007 Constprop.F
R3020 Coq.Lists.List "x :: y" list_scope
R3015 Constprop.F
R3023 Coq.Lists.List.nil
R2996 Op.Ccompf
R3137 Coq.Lists.List "x :: y" list_scope
R3132 Constprop.F
R3145 Coq.Lists.List "x :: y" list_scope
R3140 Constprop.F
R3148 Coq.Lists.List.nil
R3118 Op.Cnotcompf
R3259 Coq.Lists.List "x :: y" list_scope
R3254 Constprop.I
R3262 Coq.Lists.List.nil
R3240 Op.Cmaskzero
R3376 Coq.Lists.List "x :: y" list_scope
R3371 Constprop.I
R3379 Coq.Lists.List.nil
R3354 Op.Cmasknotzero
R3455 Coq.Lists.List.list
R3460 Constprop.approx
R3439 Op.condition
R3627 Constprop.eval_static_condition_cases
R3670 Op.Ccomp
R3684 Coq.Lists.List "x :: y" list_scope
R3679 Constprop.I
R3692 Coq.Lists.List "x :: y" list_scope
R3687 Constprop.I
R3695 Coq.Lists.List.nil
R3708 Constprop.eval_static_condition_case1
R3748 Op.Ccompu
R3763 Coq.Lists.List "x :: y" list_scope
R3758 Constprop.I
R3771 Coq.Lists.List "x :: y" list_scope
R3766 Constprop.I
R3774 Coq.Lists.List.nil
R3787 Constprop.eval_static_condition_case2
R3827 Op.Ccompimm
R3846 Coq.Lists.List "x :: y" list_scope
R3841 Constprop.I
R3849 Coq.Lists.List.nil
R3862 Constprop.eval_static_condition_case3
R3901 Op.Ccompuimm
R3921 Coq.Lists.List "x :: y" list_scope
R3916 Constprop.I
R3924 Coq.Lists.List.nil
R3937 Constprop.eval_static_condition_case4
R3976 Op.Ccompf
R3991 Coq.Lists.List "x :: y" list_scope
R3986 Constprop.F
R3999 Coq.Lists.List "x :: y" list_scope
R3994 Constprop.F
R4002 Coq.Lists.List.nil
R4015 Constprop.eval_static_condition_case5
R4055 Op.Cnotcompf
R4073 Coq.Lists.List "x :: y" list_scope
R4068 Constprop.F
R4081 Coq.Lists.List "x :: y" list_scope
R4076 Constprop.F
R4084 Coq.Lists.List.nil
R4097 Constprop.eval_static_condition_case6
R4137 Op.Cmaskzero
R4155 Coq.Lists.List "x :: y" list_scope
R4150 Constprop.I
R4158 Coq.Lists.List.nil
R4171 Constprop.eval_static_condition_case7
R4208 Op.Cmasknotzero
R4229 Coq.Lists.List "x :: y" list_scope
R4224 Constprop.I
R4232 Coq.Lists.List.nil
R4245 Constprop.eval_static_condition_case8
R4300 Constprop.eval_static_condition_default
R3575 Coq.Lists.List.list
R3580 Constprop.approx
R3559 Op.condition
R4426 Constprop.eval_static_condition_match
R4471 Constprop.eval_static_condition_case1
R4516 Coq.Init.Datatypes.Some
R4521 Integers.cmp
R4542 Constprop.eval_static_condition_case2
R4587 Coq.Init.Datatypes.Some
R4592 Integers.cmpu
R4614 Constprop.eval_static_condition_case3
R4658 Coq.Init.Datatypes.Some
R4663 Integers.cmp
R4683 Constprop.eval_static_condition_case4
R4727 Coq.Init.Datatypes.Some
R4732 Integers.cmpu
R4753 Constprop.eval_static_condition_case5
R4798 Coq.Init.Datatypes.Some
R4803 Floats.cmp
R4826 Constprop.eval_static_condition_case6
R4871 Coq.Init.Datatypes.Some
R4876 Coq.Bool.Bool.negb
R4881 Floats.cmp
R4905 Constprop.eval_static_condition_case7
R4947 Coq.Init.Datatypes.Some
R4952 Integers.eq
R4974 Integers.zero
R4960 Integers.and
R4988 Constprop.eval_static_condition_case8
R5030 Coq.Init.Datatypes.Some
R5035 Coq.Bool.Bool.negb
R5040 Integers.eq
R5062 Integers.zero
R5048 Integers.and
R5077 Constprop.eval_static_condition_default
R5124 Coq.Init.Datatypes.None
R4402 Coq.Lists.List.list
R4407 Constprop.approx
R4386 Op.condition
R8057 Coq.Lists.List.list
R8062 Constprop.approx
R8041 Op.operation
R8173 Coq.Lists.List "x :: y" list_scope
R8175 Coq.Lists.List.nil
R8163 Op.Omove
R8278 Coq.Lists.List.nil
R8264 Op.Ointconst
R8383 Coq.Lists.List.nil
R8367 Op.Ofloatconst
R8492 Coq.Lists.List.nil
R8474 Op.Oaddrsymbol
R8602 Coq.Lists.List "x :: y" list_scope
R8597 Constprop.I
R8605 Coq.Lists.List.nil
R8582 Op.Ocast8signed
R8716 Coq.Lists.List "x :: y" list_scope
R8711 Constprop.I
R8719 Coq.Lists.List.nil
R8695 Op.Ocast16signed
R8824 Coq.Lists.List "x :: y" list_scope
R8819 Constprop.I
R8832 Coq.Lists.List "x :: y" list_scope
R8827 Constprop.I
R8835 Coq.Lists.List.nil
R8812 Op.Oadd
R8946 Coq.Lists.List "x :: y" list_scope
R8938 Constprop.S
R8954 Coq.Lists.List "x :: y" list_scope
R8949 Constprop.I
R8957 Coq.Lists.List.nil
R8931 Op.Oadd
R9067 Coq.Lists.List "x :: y" list_scope
R9062 Constprop.I
R9070 Coq.Lists.List.nil
R9050 Op.Oaddimm
R9186 Coq.Lists.List "x :: y" list_scope
R9178 Constprop.S
R9189 Coq.Lists.List.nil
R9166 Op.Oaddimm
R9295 Coq.Lists.List "x :: y" list_scope
R9290 Constprop.I
R9303 Coq.Lists.List "x :: y" list_scope
R9298 Constprop.I
R9306 Coq.Lists.List.nil
R9283 Op.Osub
R9418 Coq.Lists.List "x :: y" list_scope
R9410 Constprop.S
R9426 Coq.Lists.List "x :: y" list_scope
R9421 Constprop.I
R9429 Coq.Lists.List.nil
R9403 Op.Osub
R9539 Coq.Lists.List "x :: y" list_scope
R9534 Constprop.I
R9542 Coq.Lists.List.nil
R9522 Op.Osubimm
R9648 Coq.Lists.List "x :: y" list_scope
R9643 Constprop.I
R9656 Coq.Lists.List "x :: y" list_scope
R9651 Constprop.I
R9659 Coq.Lists.List.nil
R9636 Op.Omul
R9769 Coq.Lists.List "x :: y" list_scope
R9764 Constprop.I
R9772 Coq.Lists.List.nil
R9752 Op.Omulimm
R9878 Coq.Lists.List "x :: y" list_scope
R9873 Constprop.I
R9886 Coq.Lists.List "x :: y" list_scope
R9881 Constprop.I
R9889 Coq.Lists.List.nil
R9866 Op.Odiv
R9996 Coq.Lists.List "x :: y" list_scope
R9991 Constprop.I
R10004 Coq.Lists.List "x :: y" list_scope
R9999 Constprop.I
R10007 Coq.Lists.List.nil
R9983 Op.Odivu
R10113 Coq.Lists.List "x :: y" list_scope
R10108 Constprop.I
R10121 Coq.Lists.List "x :: y" list_scope
R10116 Constprop.I
R10124 Coq.Lists.List.nil
R10101 Op.Oand
R10234 Coq.Lists.List "x :: y" list_scope
R10229 Constprop.I
R10237 Coq.Lists.List.nil
R10217 Op.Oandimm
R10342 Coq.Lists.List "x :: y" list_scope
R10337 Constprop.I
R10350 Coq.Lists.List "x :: y" list_scope
R10345 Constprop.I
R10353 Coq.Lists.List.nil
R10331 Op.Oor
R10462 Coq.Lists.List "x :: y" list_scope
R10457 Constprop.I
R10465 Coq.Lists.List.nil
R10446 Op.Oorimm
R10571 Coq.Lists.List "x :: y" list_scope
R10566 Constprop.I
R10579 Coq.Lists.List "x :: y" list_scope
R10574 Constprop.I
R10582 Coq.Lists.List.nil
R10559 Op.Oxor
R10692 Coq.Lists.List "x :: y" list_scope
R10687 Constprop.I
R10695 Coq.Lists.List.nil
R10675 Op.Oxorimm
R10802 Coq.Lists.List "x :: y" list_scope
R10797 Constprop.I
R10810 Coq.Lists.List "x :: y" list_scope
R10805 Constprop.I
R10813 Coq.Lists.List.nil
R10789 Op.Onand
R10919 Coq.Lists.List "x :: y" list_scope
R10914 Constprop.I
R10927 Coq.Lists.List "x :: y" list_scope
R10922 Constprop.I
R10930 Coq.Lists.List.nil
R10907 Op.Onor
R11037 Coq.Lists.List "x :: y" list_scope
R11032 Constprop.I
R11045 Coq.Lists.List "x :: y" list_scope
R11040 Constprop.I
R11048 Coq.Lists.List.nil
R11024 Op.Onxor
R11154 Coq.Lists.List "x :: y" list_scope
R11149 Constprop.I
R11162 Coq.Lists.List "x :: y" list_scope
R11157 Constprop.I
R11165 Coq.Lists.List.nil
R11142 Op.Oshl
R11271 Coq.Lists.List "x :: y" list_scope
R11266 Constprop.I
R11279 Coq.Lists.List "x :: y" list_scope
R11274 Constprop.I
R11282 Coq.Lists.List.nil
R11259 Op.Oshr
R11392 Coq.Lists.List "x :: y" list_scope
R11387 Constprop.I
R11395 Coq.Lists.List.nil
R11375 Op.Oshrimm
R11506 Coq.Lists.List "x :: y" list_scope
R11501 Constprop.I
R11509 Coq.Lists.List.nil
R11488 Op.Oshrximm
R11616 Coq.Lists.List "x :: y" list_scope
R11611 Constprop.I
R11624 Coq.Lists.List "x :: y" list_scope
R11619 Constprop.I
R11627 Coq.Lists.List.nil
R11603 Op.Oshru
R11755 Coq.Lists.List "x :: y" list_scope
R11750 Constprop.I
R11758 Coq.Lists.List.nil
R11730 Op.Orolm
R11862 Coq.Lists.List "x :: y" list_scope
R11857 Constprop.F
R11865 Coq.Lists.List.nil
R11849 Op.Onegf
R11969 Coq.Lists.List "x :: y" list_scope
R11964 Constprop.F
R11972 Coq.Lists.List.nil
R11956 Op.Oabsf
R12079 Coq.Lists.List "x :: y" list_scope
R12074 Constprop.F
R12087 Coq.Lists.List "x :: y" list_scope
R12082 Constprop.F
R12090 Coq.Lists.List.nil
R12066 Op.Oaddf
R12197 Coq.Lists.List "x :: y" list_scope
R12192 Constprop.F
R12205 Coq.Lists.List "x :: y" list_scope
R12200 Constprop.F
R12208 Coq.Lists.List.nil
R12184 Op.Osubf
R12315 Coq.Lists.List "x :: y" list_scope
R12310 Constprop.F
R12323 Coq.Lists.List "x :: y" list_scope
R12318 Constprop.F
R12326 Coq.Lists.List.nil
R12302 Op.Omulf
R12433 Coq.Lists.List "x :: y" list_scope
R12428 Constprop.F
R12441 Coq.Lists.List "x :: y" list_scope
R12436 Constprop.F
R12444 Coq.Lists.List.nil
R12420 Op.Odivf
R12557 Coq.Lists.List "x :: y" list_scope
R12552 Constprop.F
R12565 Coq.Lists.List "x :: y" list_scope
R12560 Constprop.F
R12573 Coq.Lists.List "x :: y" list_scope
R12568 Constprop.F
R12576 Coq.Lists.List.nil
R12541 Op.Omuladdf
R12689 Coq.Lists.List "x :: y" list_scope
R12684 Constprop.F
R12697 Coq.Lists.List "x :: y" list_scope
R12692 Constprop.F
R12705 Coq.Lists.List "x :: y" list_scope
R12700 Constprop.F
R12708 Coq.Lists.List.nil
R12673 Op.Omulsubf
R12821 Coq.Lists.List "x :: y" list_scope
R12816 Constprop.F
R12824 Coq.Lists.List.nil
R12799 Op.Osingleoffloat
R12934 Coq.Lists.List "x :: y" list_scope
R12929 Constprop.F
R12937 Coq.Lists.List.nil
R12915 Op.Ointoffloat
R13047 Coq.Lists.List "x :: y" list_scope
R13042 Constprop.I
R13050 Coq.Lists.List.nil
R13028 Op.Ofloatofint
R13161 Coq.Lists.List "x :: y" list_scope
R13156 Constprop.I
R13164 Coq.Lists.List.nil
R13141 Op.Ofloatofintu
R13257 Op.Ocmp
R13339 Coq.Lists.List.list
R13344 Constprop.approx
R13323 Op.operation
R13505 Constprop.eval_static_operation_cases
R13548 Op.Omove
R13557 Coq.Lists.List "x :: y" list_scope
R13559 Coq.Lists.List.nil
R13572 Constprop.eval_static_operation_case1
R13607 Op.Ointconst
R13620 Coq.Lists.List.nil
R13633 Constprop.eval_static_operation_case2
R13667 Op.Ofloatconst
R13682 Coq.Lists.List.nil
R13695 Constprop.eval_static_operation_case3
R13729 Op.Oaddrsymbol
R13746 Coq.Lists.List.nil
R13759 Constprop.eval_static_operation_case4
R13795 Op.Ocast8signed
R13814 Coq.Lists.List "x :: y" list_scope
R13809 Constprop.I
R13817 Coq.Lists.List.nil
R13830 Constprop.eval_static_operation_case6
R13865 Op.Ocast16signed
R13885 Coq.Lists.List "x :: y" list_scope
R13880 Constprop.I
R13888 Coq.Lists.List.nil
R13901 Constprop.eval_static_operation_case7
R13936 Op.Oadd
R13947 Coq.Lists.List "x :: y" list_scope
R13942 Constprop.I
R13955 Coq.Lists.List "x :: y" list_scope
R13950 Constprop.I
R13958 Coq.Lists.List.nil
R13971 Constprop.eval_static_operation_case8
R14009 Op.Oadd
R14023 Coq.Lists.List "x :: y" list_scope
R14015 Constprop.S
R14031 Coq.Lists.List "x :: y" list_scope
R14026 Constprop.I
R14034 Coq.Lists.List.nil
R14047 Constprop.eval_static_operation_case9
R14088 Op.Oaddimm
R14104 Coq.Lists.List "x :: y" list_scope
R14099 Constprop.I
R14107 Coq.Lists.List.nil
R14120 Constprop.eval_static_operation_case11
R14158 Op.Oaddimm
R14177 Coq.Lists.List "x :: y" list_scope
R14169 Constprop.S
R14180 Coq.Lists.List.nil
R14193 Constprop.eval_static_operation_case12
R14234 Op.Osub
R14245 Coq.Lists.List "x :: y" list_scope
R14240 Constprop.I
R14253 Coq.Lists.List "x :: y" list_scope
R14248 Constprop.I
R14256 Coq.Lists.List.nil
R14269 Constprop.eval_static_operation_case13
R14308 Op.Osub
R14322 Coq.Lists.List "x :: y" list_scope
R14314 Constprop.S
R14330 Coq.Lists.List "x :: y" list_scope
R14325 Constprop.I
R14333 Coq.Lists.List.nil
R14346 Constprop.eval_static_operation_case14
R14388 Op.Osubimm
R14404 Coq.Lists.List "x :: y" list_scope
R14399 Constprop.I
R14407 Coq.Lists.List.nil
R14420 Constprop.eval_static_operation_case15
R14458 Op.Omul
R14469 Coq.Lists.List "x :: y" list_scope
R14464 Constprop.I
R14477 Coq.Lists.List "x :: y" list_scope
R14472 Constprop.I
R14480 Coq.Lists.List.nil
R14493 Constprop.eval_static_operation_case16
R14532 Op.Omulimm
R14548 Coq.Lists.List "x :: y" list_scope
R14543 Constprop.I
R14551 Coq.Lists.List.nil
R14564 Constprop.eval_static_operation_case17
R14602 Op.Odiv
R14613 Coq.Lists.List "x :: y" list_scope
R14608 Constprop.I
R14621 Coq.Lists.List "x :: y" list_scope
R14616 Constprop.I
R14624 Coq.Lists.List.nil
R14637 Constprop.eval_static_operation_case18
R14676 Op.Odivu
R14688 Coq.Lists.List "x :: y" list_scope
R14683 Constprop.I
R14696 Coq.Lists.List "x :: y" list_scope
R14691 Constprop.I
R14699 Coq.Lists.List.nil
R14712 Constprop.eval_static_operation_case19
R14751 Op.Oand
R14762 Coq.Lists.List "x :: y" list_scope
R14757 Constprop.I
R14770 Coq.Lists.List "x :: y" list_scope
R14765 Constprop.I
R14773 Coq.Lists.List.nil
R14786 Constprop.eval_static_operation_case20
R14825 Op.Oandimm
R14841 Coq.Lists.List "x :: y" list_scope
R14836 Constprop.I
R14844 Coq.Lists.List.nil
R14857 Constprop.eval_static_operation_case21
R14895 Op.Oor
R14905 Coq.Lists.List "x :: y" list_scope
R14900 Constprop.I
R14913 Coq.Lists.List "x :: y" list_scope
R14908 Constprop.I
R14916 Coq.Lists.List.nil
R14929 Constprop.eval_static_operation_case22
R14968 Op.Oorimm
R14983 Coq.Lists.List "x :: y" list_scope
R14978 Constprop.I
R14986 Coq.Lists.List.nil
R14999 Constprop.eval_static_operation_case23
R15037 Op.Oxor
R15048 Coq.Lists.List "x :: y" list_scope
R15043 Constprop.I
R15056 Coq.Lists.List "x :: y" list_scope
R15051 Constprop.I
R15059 Coq.Lists.List.nil
R15072 Constprop.eval_static_operation_case24
R15111 Op.Oxorimm
R15127 Coq.Lists.List "x :: y" list_scope
R15122 Constprop.I
R15130 Coq.Lists.List.nil
R15143 Constprop.eval_static_operation_case25
R15181 Op.Onand
R15193 Coq.Lists.List "x :: y" list_scope
R15188 Constprop.I
R15201 Coq.Lists.List "x :: y" list_scope
R15196 Constprop.I
R15204 Coq.Lists.List.nil
R15217 Constprop.eval_static_operation_case26
R15256 Op.Onor
R15267 Coq.Lists.List "x :: y" list_scope
R15262 Constprop.I
R15275 Coq.Lists.List "x :: y" list_scope
R15270 Constprop.I
R15278 Coq.Lists.List.nil
R15291 Constprop.eval_static_operation_case27
R15330 Op.Onxor
R15342 Coq.Lists.List "x :: y" list_scope
R15337 Constprop.I
R15350 Coq.Lists.List "x :: y" list_scope
R15345 Constprop.I
R15353 Coq.Lists.List.nil
R15366 Constprop.eval_static_operation_case28
R15405 Op.Oshl
R15416 Coq.Lists.List "x :: y" list_scope
R15411 Constprop.I
R15424 Coq.Lists.List "x :: y" list_scope
R15419 Constprop.I
R15427 Coq.Lists.List.nil
R15440 Constprop.eval_static_operation_case29
R15479 Op.Oshr
R15490 Coq.Lists.List "x :: y" list_scope
R15485 Constprop.I
R15498 Coq.Lists.List "x :: y" list_scope
R15493 Constprop.I
R15501 Coq.Lists.List.nil
R15514 Constprop.eval_static_operation_case30
R15553 Op.Oshrimm
R15569 Coq.Lists.List "x :: y" list_scope
R15564 Constprop.I
R15572 Coq.Lists.List.nil
R15585 Constprop.eval_static_operation_case31
R15623 Op.Oshrximm
R15640 Coq.Lists.List "x :: y" list_scope
R15635 Constprop.I
R15643 Coq.Lists.List.nil
R15656 Constprop.eval_static_operation_case32
R15694 Op.Oshru
R15706 Coq.Lists.List "x :: y" list_scope
R15701 Constprop.I
R15714 Coq.Lists.List "x :: y" list_scope
R15709 Constprop.I
R15717 Coq.Lists.List.nil
R15730 Constprop.eval_static_operation_case33
R15769 Op.Orolm
R15793 Coq.Lists.List "x :: y" list_scope
R15788 Constprop.I
R15796 Coq.Lists.List.nil
R15809 Constprop.eval_static_operation_case34
R15857 Op.Onegf
R15869 Coq.Lists.List "x :: y" list_scope
R15864 Constprop.F
R15872 Coq.Lists.List.nil
R15885 Constprop.eval_static_operation_case35
R15921 Op.Oabsf
R15933 Coq.Lists.List "x :: y" list_scope
R15928 Constprop.F
R15936 Coq.Lists.List.nil
R15949 Constprop.eval_static_operation_case36
R15985 Op.Oaddf
R15997 Coq.Lists.List "x :: y" list_scope
R15992 Constprop.F
R16005 Coq.Lists.List "x :: y" list_scope
R16000 Constprop.F
R16008 Coq.Lists.List.nil
R16021 Constprop.eval_static_operation_case37
R16060 Op.Osubf
R16072 Coq.Lists.List "x :: y" list_scope
R16067 Constprop.F
R16080 Coq.Lists.List "x :: y" list_scope
R16075 Constprop.F
R16083 Coq.Lists.List.nil
R16096 Constprop.eval_static_operation_case38
R16135 Op.Omulf
R16147 Coq.Lists.List "x :: y" list_scope
R16142 Constprop.F
R16155 Coq.Lists.List "x :: y" list_scope
R16150 Constprop.F
R16158 Coq.Lists.List.nil
R16171 Constprop.eval_static_operation_case39
R16210 Op.Odivf
R16222 Coq.Lists.List "x :: y" list_scope
R16217 Constprop.F
R16230 Coq.Lists.List "x :: y" list_scope
R16225 Constprop.F
R16233 Coq.Lists.List.nil
R16246 Constprop.eval_static_operation_case40
R16285 Op.Omuladdf
R16300 Coq.Lists.List "x :: y" list_scope
R16295 Constprop.F
R16308 Coq.Lists.List "x :: y" list_scope
R16303 Constprop.F
R16316 Coq.Lists.List "x :: y" list_scope
R16311 Constprop.F
R16319 Coq.Lists.List.nil
R16332 Constprop.eval_static_operation_case41
R16374 Op.Omulsubf
R16389 Coq.Lists.List "x :: y" list_scope
R16384 Constprop.F
R16397 Coq.Lists.List "x :: y" list_scope
R16392 Constprop.F
R16405 Coq.Lists.List "x :: y" list_scope
R16400 Constprop.F
R16408 Coq.Lists.List.nil
R16421 Constprop.eval_static_operation_case42
R16463 Op.Osingleoffloat
R16484 Coq.Lists.List "x :: y" list_scope
R16479 Constprop.F
R16487 Coq.Lists.List.nil
R16500 Constprop.eval_static_operation_case43
R16536 Op.Ointoffloat
R16554 Coq.Lists.List "x :: y" list_scope
R16549 Constprop.F
R16557 Coq.Lists.List.nil
R16570 Constprop.eval_static_operation_case44
R16606 Op.Ofloatofint
R16624 Coq.Lists.List "x :: y" list_scope
R16619 Constprop.I
R16627 Coq.Lists.List.nil
R16640 Constprop.eval_static_operation_case45
R16676 Op.Ofloatofintu
R16695 Coq.Lists.List "x :: y" list_scope
R16690 Constprop.I
R16698 Coq.Lists.List.nil
R16711 Constprop.eval_static_operation_case46
R16747 Op.Ocmp
R16767 Constprop.eval_static_operation_case47
R16821 Constprop.eval_static_operation_default
R13455 Coq.Lists.List.list
R13460 Constprop.approx
R13439 Op.operation
R16943 Constprop.eval_static_operation_match
R16986 Constprop.eval_static_operation_case1
R17033 Constprop.eval_static_operation_case2
R17072 Constprop.I
R17080 Constprop.eval_static_operation_case3
R17119 Constprop.F
R17127 Constprop.eval_static_operation_case4
R17168 Constprop.S
R17178 Constprop.eval_static_operation_case6
R17218 Constprop.I
R17220 Integers.cast8signed
R17244 Constprop.eval_static_operation_case7
R17284 Constprop.I
R17286 Integers.cast16signed
R17311 Constprop.eval_static_operation_case8
R17354 Constprop.I
R17356 Integers.add
R17375 Constprop.eval_static_operation_case9
R17421 Constprop.S
R17427 Integers.add
R17446 Constprop.eval_static_operation_case11
R17489 Constprop.I
R17492 Integers.add
R17510 Constprop.eval_static_operation_case12
R17556 Constprop.S
R17562 Integers.add
R17580 Constprop.eval_static_operation_case13
R17624 Constprop.I
R17626 Integers.sub
R17645 Constprop.eval_static_operation_case14
R17692 Constprop.S
R17698 Integers.sub
R17717 Constprop.eval_static_operation_case15
R17760 Constprop.I
R17763 Integers.sub
R17781 Constprop.eval_static_operation_case16
R17825 Constprop.I
R17827 Integers.mul
R17846 Constprop.eval_static_operation_case17
R17889 Constprop.I
R17891 Integers.mul
R17909 Constprop.eval_static_operation_case18
R17956 Integers.eq
R17966 Integers.zero
R17993 Constprop.I
R17995 Integers.divs
R17980 Constprop.Unknown
R18015 Constprop.eval_static_operation_case19
R18062 Integers.eq
R18072 Integers.zero
R18099 Constprop.I
R18101 Integers.divu
R18086 Constprop.Unknown
R18121 Constprop.eval_static_operation_case20
R18165 Constprop.I
R18167 Integers.and
R18186 Constprop.eval_static_operation_case21
R18229 Constprop.I
R18231 Integers.and
R18249 Constprop.eval_static_operation_case22
R18293 Constprop.I
R18295 Integers.or
R18313 Constprop.eval_static_operation_case23
R18356 Constprop.I
R18358 Integers.or
R18375 Constprop.eval_static_operation_case24
R18419 Constprop.I
R18421 Integers.xor
R18440 Constprop.eval_static_operation_case25
R18483 Constprop.I
R18485 Integers.xor
R18503 Constprop.eval_static_operation_case26
R18547 Constprop.I
R18549 Integers.xor
R18573 Integers.mone
R18558 Integers.and
R18587 Constprop.eval_static_operation_case27
R18631 Constprop.I
R18633 Integers.xor
R18656 Integers.mone
R18642 Integers.or
R18670 Constprop.eval_static_operation_case28
R18714 Constprop.I
R18716 Integers.xor
R18740 Integers.mone
R18725 Integers.xor
R18754 Constprop.eval_static_operation_case29
R18801 Integers.ltu
R18813 Integers.repr
R18853 Constprop.Unknown
R18831 Constprop.I
R18833 Integers.shl
R18865 Constprop.eval_static_operation_case30
R18912 Integers.ltu
R18924 Integers.repr
R18964 Constprop.Unknown
R18942 Constprop.I
R18944 Integers.shr
R18976 Constprop.eval_static_operation_case31
R19022 Integers.ltu
R19033 Integers.repr
R19072 Constprop.Unknown
R19051 Constprop.I
R19053 Integers.shr
R19084 Constprop.eval_static_operation_case32
R19130 Integers.ltu
R19141 Integers.repr
R19181 Constprop.Unknown
R19159 Constprop.I
R19161 Integers.shrx
R19193 Constprop.eval_static_operation_case33
R19240 Integers.ltu
R19252 Integers.repr
R19293 Constprop.Unknown
R19270 Constprop.I
R19272 Integers.shru
R19305 Constprop.eval_static_operation_case34
R19358 Constprop.I
R19360 Integers.rolm
R19389 Constprop.eval_static_operation_case35
R19430 Constprop.F
R19432 Floats.neg
R19450 Constprop.eval_static_operation_case36
R19491 Constprop.F
R19493 Floats.abs
R19511 Constprop.eval_static_operation_case37
R19555 Constprop.F
R19557 Floats.add
R19578 Constprop.eval_static_operation_case38
R19622 Constprop.F
R19624 Floats.sub
R19645 Constprop.eval_static_operation_case39
R19689 Constprop.F
R19691 Floats.mul
R19712 Constprop.eval_static_operation_case40
R19756 Constprop.F
R19758 Floats.div
R19779 Constprop.eval_static_operation_case41
R19826 Constprop.F
R19828 Floats.add
R19839 Floats.mul
R19864 Constprop.eval_static_operation_case42
R19911 Constprop.F
R19913 Floats.sub
R19924 Floats.mul
R19949 Constprop.eval_static_operation_case43
R19990 Constprop.F
R19992 Floats.singleoffloat
R20020 Constprop.eval_static_operation_case44
R20061 Constprop.I
R20063 Floats.intoffloat
R20088 Constprop.eval_static_operation_case45
R20129 Constprop.F
R20131 Floats.floatofint
R20156 Constprop.eval_static_operation_case46
R20197 Constprop.F
R20199 Floats.floatofintu
R20225 Constprop.eval_static_operation_case47
R20274 Constprop.eval_static_condition
R20314 Coq.Init.Datatypes.None
R20322 Constprop.Unknown
R20338 Coq.Init.Datatypes.Some
R20348 Constprop.I
R20373 Integers.zero
R20360 Integers.one
R20397 Constprop.eval_static_operation_default
R20442 Constprop.Unknown
R16919 Coq.Lists.List.list
R16924 Constprop.approx
R16903 Op.operation
R20515 Coq.Lists.List.map
R20534 Constprop.get
R20505 Constprop.t
R20486 Coq.Lists.List.list
R20491 Registers.reg
R20636 Maps "a ! b"
R20628 RTL.fn_code
R20649 Coq.Init.Datatypes.None
R20668 Coq.Init.Datatypes.Some
R20705 RTL.Inop
R20740 RTL.Iop
R20844 Constprop.set
R20780 Constprop.eval_static_operation
R20806 Constprop.approx_regs
R20871 RTL.Iload
R20912 Constprop.set
R20922 Constprop.Unknown
R20945 RTL.Istore
R21002 RTL.Icall
R21040 Constprop.set
R21050 Constprop.Unknown
R21073 RTL.Icond
R21128 RTL.Ireturn
R20609 Constprop.t
R20594 RTL.node
R20579 RTL.function
R21252 Coq.Init.Datatypes.option
R21260 Maps.t
R21267 Constprop.t
R21277 Constprop.fixpoint
R21374 Coq.Lists.List "x :: y" list_scope
R21347 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21351 RTL.fn_entrypoint
R21367 Constprop.top
R21377 Coq.Lists.List.nil
R21319 Constprop.transfer
R21307 RTL.fn_nextpc
R21290 RTL.successors
R21237 RTL.function
R21456 Constprop.t
R21491 Coq.Init.Datatypes.option
R21498 Integers.int
R21513 Constprop.get
R21533 Constprop.I
R21540 Coq.Init.Datatypes.Some
R21554 Coq.Init.Datatypes.None
R21484 Registers.reg
R21619 Coq.Lists.List.list
R21624 Registers.reg
R21606 Op.condition
R21725 Coq.Lists.List "x :: y" list_scope
R21731 Coq.Lists.List "x :: y" list_scope
R21734 Coq.Lists.List.nil
R21712 Op.Ccomp
R21827 Coq.Lists.List "x :: y" list_scope
R21833 Coq.Lists.List "x :: y" list_scope
R21836 Coq.Lists.List.nil
R21813 Op.Ccompu
R22031 Constprop.cond_strength_reduction_cases
R22074 Op.Ccomp
R22086 Coq.Lists.List "x :: y" list_scope
R22092 Coq.Lists.List "x :: y" list_scope
R22095 Coq.Lists.List.nil
R22108 Constprop.csr_case1
R22130 Op.Ccompu
R22143 Coq.Lists.List "x :: y" list_scope
R22149 Coq.Lists.List "x :: y" list_scope
R22152 Coq.Lists.List.nil
R22165 Constprop.csr_case2
R22205 Constprop.csr_default
R21984 Coq.Lists.List.list
R21989 Registers.reg
R21968 Op.condition
R22329 Coq.Init.Datatypes "x * y" type_scope
R22319 Op.condition
R22331 Coq.Lists.List.list
R22336 Registers.reg
R22351 Constprop.cond_strength_reduction_match
R22400 Constprop.csr_case1
R22444 Constprop.intval
R22433 Constprop.intval
R22467 Coq.Init.Datatypes.Some
R22490 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22491 Op.Ccompimm
R22501 AST.swap_comparison
R22526 Coq.Lists.List "x :: y" list_scope
R22529 Coq.Lists.List.nil
R22545 Coq.Init.Datatypes.Some
R22565 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22566 Op.Ccompimm
R22583 Coq.Lists.List "x :: y" list_scope
R22586 Coq.Lists.List.nil
R22617 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22644 Constprop.csr_case2
R22688 Constprop.intval
R22677 Constprop.intval
R22711 Coq.Init.Datatypes.Some
R22734 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22735 Op.Ccompuimm
R22746 AST.swap_comparison
R22771 Coq.Lists.List "x :: y" list_scope
R22774 Coq.Lists.List.nil
R22790 Coq.Init.Datatypes.Some
R22810 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22811 Op.Ccompuimm
R22829 Coq.Lists.List "x :: y" list_scope
R22832 Coq.Lists.List.nil
R22863 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22890 Constprop.csr_default
R22921 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22307 Coq.Lists.List.list
R22312 Registers.reg
R22289 Op.condition
R22991 Integers.eq
R23000 Integers.zero
R23041 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23042 Op.Oaddimm
R23055 Coq.Lists.List "x :: y" list_scope
R23058 Coq.Lists.List.nil
R23016 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23017 Op.Omove
R23026 Coq.Lists.List "x :: y" list_scope
R23029 Coq.Lists.List.nil
R22978 Registers.reg
R22969 Integers.int
R23114 Integers.eq
R23123 Integers.zero
R23164 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23165 Op.Orolm
R23174 Integers.shl
R23182 Integers.mone
R23197 Coq.Lists.List "x :: y" list_scope
R23200 Coq.Lists.List.nil
R23139 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23140 Op.Omove
R23149 Coq.Lists.List "x :: y" list_scope
R23152 Coq.Lists.List.nil
R23101 Registers.reg
R23092 Integers.int
R23256 Integers.eq
R23265 Integers.zero
R23306 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23307 Op.Oshrimm
R23320 Coq.Lists.List "x :: y" list_scope
R23323 Coq.Lists.List.nil
R23281 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23282 Op.Omove
R23291 Coq.Lists.List "x :: y" list_scope
R23294 Coq.Lists.List.nil
R23243 Registers.reg
R23234 Integers.int
R23380 Integers.eq
R23389 Integers.zero
R23430 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23431 Op.Orolm
R23464 Integers.shru
R23473 Integers.mone
R23438 Integers.sub
R23447 Integers.repr
R23488 Coq.Lists.List "x :: y" list_scope
R23491 Coq.Lists.List.nil
R23405 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23406 Op.Omove
R23415 Coq.Lists.List "x :: y" list_scope
R23418 Coq.Lists.List.nil
R23367 Registers.reg
R23358 Integers.int
R23547 Integers.eq
R23556 Integers.zero
R23610 Integers.eq
R23619 Integers.one
R23671 Integers.is_power2
R23698 Coq.Init.Datatypes.Some
R23708 Constprop.make_shlimm
R23730 Coq.Init.Datatypes.None
R23738 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23739 Op.Omulimm
R23752 Coq.Lists.List "x :: y" list_scope
R23755 Coq.Lists.List.nil
R23636 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23637 Op.Omove
R23646 Coq.Lists.List "x :: y" list_scope
R23649 Coq.Lists.List.nil
R23574 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23575 Op.Ointconst
R23585 Integers.zero
R23595 Coq.Lists.List.nil
R23534 Registers.reg
R23525 Integers.int
R23819 Integers.eq
R23828 Integers.zero
R23880 Integers.eq
R23889 Integers.mone
R23928 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23929 Op.Oandimm
R23942 Coq.Lists.List "x :: y" list_scope
R23945 Coq.Lists.List.nil
R23903 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23904 Op.Omove
R23913 Coq.Lists.List "x :: y" list_scope
R23916 Coq.Lists.List.nil
R23844 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23845 Op.Ointconst
R23855 Integers.zero
R23865 Coq.Lists.List.nil
R23806 Registers.reg
R23797 Integers.int
R24000 Integers.eq
R24009 Integers.zero
R24051 Integers.eq
R24060 Integers.mone
R24107 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R24108 Op.Oorimm
R24120 Coq.Lists.List "x :: y" list_scope
R24123 Coq.Lists.List.nil
R24074 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R24075 Op.Ointconst
R24085 Integers.mone
R24095 Coq.Lists.List.nil
R24023 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R24024 Op.Omove
R24033 Coq.Lists.List "x :: y" list_scope
R24036 Coq.Lists.List.nil
R23987 Registers.reg
R23978 Integers.int
R24179 Integers.eq
R24188 Integers.zero
R24229 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R24230 Op.Oxorimm
R24243 Coq.Lists.List "x :: y" list_scope
R24246 Coq.Lists.List.nil
R24204 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R24205 Op.Omove
R24214 Coq.Lists.List "x :: y" list_scope
R24217 Coq.Lists.List.nil
R24166 Registers.reg
R24157 Integers.int
R24305 Coq.Lists.List.list
R24310 Registers.reg
R24292 Op.operation
R24434 Coq.Lists.List "x :: y" list_scope
R24440 Coq.Lists.List "x :: y" list_scope
R24443 Coq.Lists.List.nil
R24425 Op.Oadd
R24385 Registers.reg
R24375 Registers.reg
R24558 Coq.Lists.List "x :: y" list_scope
R24564 Coq.Lists.List "x :: y" list_scope
R24567 Coq.Lists.List.nil
R24549 Op.Osub
R24509 Registers.reg
R24499 Registers.reg
R24682 Coq.Lists.List "x :: y" list_scope
R24688 Coq.Lists.List "x :: y" list_scope
R24691 Coq.Lists.List.nil
R24673 Op.Omul
R24633 Registers.reg
R24623 Registers.reg
R24806 Coq.Lists.List "x :: y" list_scope
R24812 Coq.Lists.List "x :: y" list_scope
R24815 Coq.Lists.List.nil
R24797 Op.Odiv
R24757 Registers.reg
R24747 Registers.reg
R24931 Coq.Lists.List "x :: y" list_scope
R24937 Coq.Lists.List "x :: y" list_scope
R24940 Coq.Lists.List.nil
R24921 Op.Odivu
R24881 Registers.reg
R24871 Registers.reg
R25055 Coq.Lists.List "x :: y" list_scope
R25061 Coq.Lists.List "x :: y" list_scope
R25064 Coq.Lists.List.nil
R25046 Op.Oand
R25006 Registers.reg
R24996 Registers.reg
R25178 Coq.Lists.List "x :: y" list_scope
R25184 Coq.Lists.List "x :: y" list_scope
R25187 Coq.Lists.List.nil
R25170 Op.Oor
R25130 Registers.reg
R25120 Registers.reg
R25302 Coq.Lists.List "x :: y" list_scope
R25308 Coq.Lists.List "x :: y" list_scope
R25311 Coq.Lists.List.nil
R25293 Op.Oxor
R25253 Registers.reg
R25243 Registers.reg
R25426 Coq.Lists.List "x :: y" list_scope
R25432 Coq.Lists.List "x :: y" list_scope
R25435 Coq.Lists.List.nil
R25417 Op.Oshl
R25377 Registers.reg
R25367 Registers.reg
R25551 Coq.Lists.List "x :: y" list_scope
R25557 Coq.Lists.List "x :: y" list_scope
R25560 Coq.Lists.List.nil
R25542 Op.Oshr
R25502 Registers.reg
R25492 Registers.reg
R25677 Coq.Lists.List "x :: y" list_scope
R25683 Coq.Lists.List "x :: y" list_scope
R25686 Coq.Lists.List.nil
R25667 Op.Oshru
R25627 Registers.reg
R25617 Registers.reg
R25804 Op.Ocmp
R25758 Coq.Lists.List.list
R25763 Registers.reg
R25742 Op.condition
R25886 Coq.Lists.List.list
R25891 Registers.reg
R25868 Op.operation
R26052 Constprop.op_strength_reduction_cases
R26095 Op.Oadd
R26104 Coq.Lists.List "x :: y" list_scope
R26110 Coq.Lists.List "x :: y" list_scope
R26113 Coq.Lists.List.nil
R26126 Constprop.op_strength_reduction_case1
R26164 Op.Osub
R26173 Coq.Lists.List "x :: y" list_scope
R26179 Coq.Lists.List "x :: y" list_scope
R26182 Coq.Lists.List.nil
R26195 Constprop.op_strength_reduction_case2
R26233 Op.Omul
R26242 Coq.Lists.List "x :: y" list_scope
R26248 Coq.Lists.List "x :: y" list_scope
R26251 Coq.Lists.List.nil
R26264 Constprop.op_strength_reduction_case3
R26302 Op.Odiv
R26311 Coq.Lists.List "x :: y" list_scope
R26317 Coq.Lists.List "x :: y" list_scope
R26320 Coq.Lists.List.nil
R26333 Constprop.op_strength_reduction_case4
R26371 Op.Odivu
R26381 Coq.Lists.List "x :: y" list_scope
R26387 Coq.Lists.List "x :: y" list_scope
R26390 Coq.Lists.List.nil
R26403 Constprop.op_strength_reduction_case5
R26441 Op.Oand
R26450 Coq.Lists.List "x :: y" list_scope
R26456 Coq.Lists.List "x :: y" list_scope
R26459 Coq.Lists.List.nil
R26472 Constprop.op_strength_reduction_case6
R26510 Op.Oor
R26518 Coq.Lists.List "x :: y" list_scope
R26524 Coq.Lists.List "x :: y" list_scope
R26527 Coq.Lists.List.nil
R26540 Constprop.op_strength_reduction_case7
R26578 Op.Oxor
R26587 Coq.Lists.List "x :: y" list_scope
R26593 Coq.Lists.List "x :: y" list_scope
R26596 Coq.Lists.List.nil
R26609 Constprop.op_strength_reduction_case8
R26647 Op.Oshl
R26656 Coq.Lists.List "x :: y" list_scope
R26662 Coq.Lists.List "x :: y" list_scope
R26665 Coq.Lists.List.nil
R26678 Constprop.op_strength_reduction_case9
R26716 Op.Oshr
R26725 Coq.Lists.List "x :: y" list_scope
R26731 Coq.Lists.List "x :: y" list_scope
R26734 Coq.Lists.List.nil
R26747 Constprop.op_strength_reduction_case10
R26786 Op.Oshru
R26796 Coq.Lists.List "x :: y" list_scope
R26802 Coq.Lists.List "x :: y" list_scope
R26805 Coq.Lists.List.nil
R26818 Constprop.op_strength_reduction_case11
R26857 Op.Ocmp
R26877 Constprop.op_strength_reduction_case12
R26933 Constprop.op_strength_reduction_default
R26003 Coq.Lists.List.list
R26008 Registers.reg
R25985 Op.operation
R27056 Constprop.op_strength_reduction_match
R27101 Constprop.op_strength_reduction_case1
R27172 Constprop.intval
R27161 Constprop.intval
R27195 Coq.Init.Datatypes.Some
R27208 Constprop.make_addimm
R27236 Coq.Init.Datatypes.Some
R27246 Constprop.make_addimm
R27279 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R27304 Constprop.op_strength_reduction_case2
R27375 Constprop.intval
R27364 Constprop.intval
R27398 Coq.Init.Datatypes.Some
R27411 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R27412 Op.Osubimm
R27426 Coq.Lists.List "x :: y" list_scope
R27429 Coq.Lists.List.nil
R27445 Coq.Init.Datatypes.Some
R27455 Constprop.make_addimm
R27468 Integers.neg
R27498 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R27523 Constprop.op_strength_reduction_case3
R27594 Constprop.intval
R27583 Constprop.intval
R27617 Coq.Init.Datatypes.Some
R27630 Constprop.make_mulimm
R27658 Coq.Init.Datatypes.Some
R27668 Constprop.make_mulimm
R27701 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R27726 Constprop.op_strength_reduction_case4
R27786 Constprop.intval
R27809 Coq.Init.Datatypes.Some
R27835 Integers.is_power2
R27868 Coq.Init.Datatypes.Some
R27878 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R27879 Op.Oshrximm
R27894 Coq.Lists.List "x :: y" list_scope
R27897 Coq.Lists.List.nil
R27914 Coq.Init.Datatypes.None
R27924 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R27957 Coq.Init.Datatypes.None
R27975 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R28000 Constprop.op_strength_reduction_case5
R28061 Constprop.intval
R28084 Coq.Init.Datatypes.Some
R28110 Integers.is_power2
R28143 Coq.Init.Datatypes.Some
R28153 Constprop.make_shruimm
R28183 Coq.Init.Datatypes.None
R28193 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R28226 Coq.Init.Datatypes.None
R28244 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R28269 Constprop.op_strength_reduction_case6
R28340 Constprop.intval
R28329 Constprop.intval
R28363 Coq.Init.Datatypes.Some
R28376 Constprop.make_andimm
R28404 Coq.Init.Datatypes.Some
R28414 Constprop.make_andimm
R28447 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R28472 Constprop.op_strength_reduction_case7
R28542 Constprop.intval
R28531 Constprop.intval
R28565 Coq.Init.Datatypes.Some
R28578 Constprop.make_orimm
R28605 Coq.Init.Datatypes.Some
R28615 Constprop.make_orimm
R28647 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R28672 Constprop.op_strength_reduction_case8
R28743 Constprop.intval
R28732 Constprop.intval
R28766 Coq.Init.Datatypes.Some
R28779 Constprop.make_xorimm
R28807 Coq.Init.Datatypes.Some
R28817 Constprop.make_xorimm
R28850 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R28875 Constprop.op_strength_reduction_case9
R28935 Constprop.intval
R28958 Coq.Init.Datatypes.Some
R28981 Integers.ltu
R28992 Integers.repr
R29052 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R29020 Constprop.make_shlimm
R29076 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R29101 Constprop.op_strength_reduction_case10
R29162 Constprop.intval
R29185 Coq.Init.Datatypes.Some
R29208 Integers.ltu
R29219 Integers.repr
R29279 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R29247 Constprop.make_shrimm
R29303 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R29328 Constprop.op_strength_reduction_case11
R29390 Constprop.intval
R29413 Coq.Init.Datatypes.Some
R29436 Integers.ltu
R29447 Integers.repr
R29508 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R29475 Constprop.make_shruimm
R29532 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R29557 Constprop.op_strength_reduction_case12
R29632 Constprop.cond_strength_reduction
R29672 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R29673 Op.Ocmp
R29693 Constprop.op_strength_reduction_default
R29754 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R27035 Coq.Lists.List.list
R27040 Registers.reg
R27017 Op.operation
R29847 Coq.Lists.List.list
R29852 Registers.reg
R29828 Op.addressing
R29986 Coq.Lists.List "x :: y" list_scope
R29992 Coq.Lists.List "x :: y" list_scope
R29995 Coq.Lists.List.nil
R29971 Op.Aindexed2
R29928 Registers.reg
R29918 Registers.reg
R30142 Coq.Lists.List "x :: y" list_scope
R30145 Coq.Lists.List.nil
R30121 Op.Abased
R30078 Registers.reg
R30068 Integers.int
R30055 AST.ident
R30257 Coq.Lists.List "x :: y" list_scope
R30260 Coq.Lists.List.nil
R30241 Op.Aindexed
R30341 Coq.Lists.List.list
R30346 Registers.reg
R30322 Op.addressing
R30518 Constprop.addr_strength_reduction_cases
R30563 Op.Aindexed2
R30577 Coq.Lists.List "x :: y" list_scope
R30583 Coq.Lists.List "x :: y" list_scope
R30586 Coq.Lists.List.nil
R30599 Constprop.addr_strength_reduction_case1
R30639 Op.Abased
R30659 Coq.Lists.List "x :: y" list_scope
R30662 Coq.Lists.List.nil
R30675 Constprop.addr_strength_reduction_case2
R30721 Op.Aindexed
R30736 Coq.Lists.List "x :: y" list_scope
R30739 Coq.Lists.List.nil
R30752 Constprop.addr_strength_reduction_case3
R30811 Constprop.addr_strength_reduction_default
R30467 Coq.Lists.List.list
R30472 Registers.reg
R30448 Op.addressing
R30943 Constprop.addr_strength_reduction_match
R30992 Constprop.addr_strength_reduction_case1
R31076 Constprop.get
R31059 Constprop.get
R31105 Constprop.S
R31116 Constprop.I
R31124 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R31125 Op.Aglobal
R31139 Integers.add
R31155 Coq.Lists.List.nil
R31168 Constprop.S
R31184 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R31185 Op.Abased
R31204 Coq.Lists.List "x :: y" list_scope
R31207 Coq.Lists.List.nil
R31220 Constprop.I
R31226 Constprop.S
R31239 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R31240 Op.Aglobal
R31254 Integers.add
R31270 Coq.Lists.List.nil
R31283 Constprop.I
R31294 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R31295 Op.Aindexed
R31311 Coq.Lists.List "x :: y" list_scope
R31314 Coq.Lists.List.nil
R31330 Constprop.S
R31343 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R31344 Op.Abased
R31363 Coq.Lists.List "x :: y" list_scope
R31366 Coq.Lists.List.nil
R31382 Constprop.I
R31390 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R31391 Op.Aindexed
R31407 Coq.Lists.List "x :: y" list_scope
R31410 Coq.Lists.List.nil
R31431 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R31458 Constprop.addr_strength_reduction_case2
R31528 Constprop.intval
R31551 Coq.Init.Datatypes.Some
R31561 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R31562 Op.Aglobal
R31576 Integers.add
R31592 Coq.Lists.List.nil
R31610 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R31637 Constprop.addr_strength_reduction_case3
R31702 Constprop.get
R31731 Constprop.S
R31745 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R31746 Op.Aglobal
R31760 Integers.add
R31776 Coq.Lists.List.nil
R31794 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R31821 Constprop.addr_strength_reduction_default
R31886 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R30922 Coq.Lists.List.list
R30927 Registers.reg
R30903 Op.addressing
R32044 RTL.Iop
R32077 Constprop.eval_static_operation
R32103 Constprop.approx_regs
R32141 Constprop.I
R32158 RTL.Iop
R32176 Coq.Lists.List.nil
R32163 Op.Ointconst
R32194 Constprop.F
R32211 RTL.Iop
R32231 Coq.Lists.List.nil
R32216 Op.Ofloatconst
R32249 Constprop.S
R32273 RTL.Iop
R32300 Coq.Lists.List.nil
R32278 Op.Oaddrsymbol
R32353 Constprop.op_strength_reduction
R32403 RTL.Iop
R32437 RTL.Iload
R32496 Constprop.addr_strength_reduction
R32546 RTL.Iload
R32586 RTL.Istore
R32646 Constprop.addr_strength_reduction
R32696 RTL.Istore
R32737 RTL.Icall
R33022 RTL.Icall
R32816 Coq.Init.Datatypes.inl
R32843 Constprop.get
R32877 Constprop.S
R32894 Integers.eq
R32905 Integers.zero
R32919 Coq.Init.Datatypes.inr
R32988 Coq.Init.Datatypes.inr
R33052 RTL.Icond
R33089 Constprop.eval_static_condition
R33117 Constprop.approx_regs
R33155 Coq.Init.Datatypes.Some
R33198 RTL.Inop
R33185 RTL.Inop
R33214 Coq.Init.Datatypes.None
R33254 Constprop.cond_strength_reduction
R33308 RTL.Icond
R32005 RTL.instruction
R31992 Constprop.t
R33433 RTL.code
R33443 Maps.map
R33470 Constprop.transf_instr
R33490 Maps "a !! b"
R33425 RTL.code
R33404 Maps.t
R33411 Constprop.t
R33658 Coq.Init.Logic "A \/ B" type_scope
R33631 Coqlib.Plt
R33641 RTL.fn_nextpc
R33698 Coq.Init.Logic "x = y" type_scope
R33693 Maps "a ! b"
R33662 Constprop.transf_code
R33685 RTL.fn_code
R33700 Coq.Init.Datatypes.None
R33588 Coq.Init.Logic "A \/ B" type_scope
R33567 Coqlib.Plt
R33577 RTL.fn_nextpc
R33606 Coq.Init.Logic "x = y" type_scope
R33602 Maps "a ! b"
R33594 RTL.fn_code
R33608 Coq.Init.Datatypes.None
R33798 Maps.gmap
R33798 Maps.gmap
R33906 RTL.function
R33926 Constprop.analyze
R33945 Coq.Init.Datatypes.None
R33959 Coq.Init.Datatypes.Some
R33981 RTL.mkfunction
R34157 Constprop.transf_code_wf
R34185 RTL.fn_code_wf
R34137 RTL.fn_nextpc
R34111 RTL.fn_entrypoint
R34067 Constprop.transf_code
R34090 RTL.fn_code
R34044 RTL.fn_stacksize
R34022 RTL.fn_params
R34003 RTL.fn_sig
R33894 RTL.function
R34247 RTL.program
R34260 AST.transform_program
R34278 Constprop.transf_function
R34236 RTL.program
FConstpropproof
R334 RTL.genv
R419 Constprop.Unknown
R430 Coq.Init.Logic.True
R439 Constprop.I
R448 Coq.Init.Logic "x = y" type_scope
R450 Values.Vint
R461 Constprop.F
R470 Coq.Init.Logic "x = y" type_scope
R472 Values.Vfloat
R485 Constprop.S
R499 Coq.Init.Logic "'exists' x , p" type_scope
R543 Coq.Init.Logic "A /\ B" type_scope
R534 Coq.Init.Logic "x = y" type_scope
R509 Globalenvs.find_symbol
R536 Coq.Init.Datatypes.Some
R548 Coq.Init.Logic "x = y" type_scope
R550 Values.Vptr
R570 Coq.Init.Logic.False
R385 Values.val
R373 Constprop.approx
R657 Constpropproof.val_match_approx
R688 Registers "a # b"
R675 Constprop.get
R627 RTL.regset
R617 Constprop.t
R792 Constpropproof.val_match_approx
R767 Constpropproof.val_match_approx
R748 Constprop.ge
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R1033 Constpropproof.regs_match_approx
R1006 Constpropproof.regs_match_approx
R992 Constprop.ge
R1149 Constprop.get
R1115 Constpropproof.val_match_approx_increasing
R1149 Constprop.get
R1115 Constpropproof.val_match_approx_increasing
R1285 Constpropproof.regs_match_approx
R1321 Registers "a # b <- c"
R1304 Constprop.set
R1256 Constpropproof.regs_match_approx
R1230 Constpropproof.val_match_approx
R1369 Registers.gsspec
R1369 Registers.gsspec
R1393 Coqlib.peq
R1393 Coqlib.peq
R1431 Constprop.gss
R1431 Constprop.gss
R1454 Constprop.gso
R1454 Constprop.gso
R1522 Coq.Lists.List.list
R1527 Values.val
R1507 Coq.Lists.List.list
R1512 Constprop.approx
R1588 Coq.Lists.List.nil
R1584 Coq.Lists.List.nil
R1739 Coq.Lists.List "x :: y" list_scope
R1729 Coq.Lists.List "x :: y" list_scope
R1637 Constpropproof.val_match_approx
R1826 Constpropproof.val_list_match_approx
R1870 Registers "a ## b"
R1849 Constprop.approx_regs
R1797 Constpropproof.regs_match_approx
R2008 Constpropproof.val_match_approx
R2026 Constprop.I
R2093 Constpropproof.val_match_approx
R2111 Constprop.F
R2178 Constpropproof.val_match_approx
R2196 Constprop.S
R2460 Constpropproof.val_list_match_approx
R2482 Coq.Lists.List.nil
R2525 Constpropproof.val_list_match_approx
R2551 Coq.Lists.List "x :: y" list_scope
R2812 Coq.Init.Logic "x = y" type_scope
R2789 Op.eval_condition
R2814 Coq.Init.Datatypes.Some
R2775 Coq.Init.Logic "x = y" type_scope
R2745 Constprop.eval_static_condition
R2777 Coq.Init.Datatypes.Some
R2712 Constpropproof.val_list_match_approx
R2888 Constprop.eval_static_condition_match
R2888 Constprop.eval_static_condition_match
R3107 Constpropproof.val_match_approx
R3125 Constprop.eval_static_operation
R3093 Coq.Init.Logic "x = y" type_scope
R3066 Op.eval_operation
R3095 Coq.Init.Datatypes.Some
R3033 Constpropproof.val_list_match_approx
R3223 Constprop.eval_static_operation_match
R3223 Constprop.eval_static_operation_match
R3368 Globalenvs.find_symbol
R3368 Globalenvs.find_symbol
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R3584 Integers.eq
R3594 Integers.zero
R3584 Integers.eq
R3594 Integers.zero
R3716 Integers.eq
R3726 Integers.zero
R3716 Integers.eq
R3726 Integers.zero
R3966 Integers.ltu
R3978 Integers.repr
R3966 Integers.ltu
R3978 Integers.repr
R4104 Integers.ltu
R4116 Integers.repr
R4104 Integers.ltu
R4116 Integers.repr
R4222 Integers.ltu
R4233 Integers.repr
R4222 Integers.ltu
R4233 Integers.repr
R4327 Integers.ltu
R4338 Integers.repr
R4327 Integers.ltu
R4338 Integers.repr
R4452 Integers.ltu
R4464 Integers.repr
R4452 Integers.ltu
R4464 Integers.repr
R4568 Constprop.eval_static_condition
R4568 Constprop.eval_static_condition
R4620 Constpropproof.eval_static_condition_correct
R4620 Constpropproof.eval_static_condition_correct
R4946 Constpropproof.regs_match_approx
R4965 Constprop.transfer
R4917 Constpropproof.regs_match_approx
R4898 Coq.Init.Logic "x = y" type_scope
R4903 RTL.fn_code
R4853 RTL.exec_instr
R5081 Constpropproof.regs_match_approx_update
R5081 Constpropproof.regs_match_approx_update
R5156 Registers "a ## b"
R5116 Constpropproof.eval_static_operation_correct
R5156 Registers "a ## b"
R5116 Constpropproof.eval_static_operation_correct
R5174 Constpropproof.approx_regs_val_list
R5174 Constpropproof.approx_regs_val_list
R5236 Constpropproof.regs_match_approx_update
R5236 Constpropproof.regs_match_approx_update
R5303 Constpropproof.regs_match_approx_update
R5303 Constpropproof.regs_match_approx_update
R5567 Constpropproof.regs_match_approx
R5592 Maps "a !! b"
R5529 Constpropproof.regs_match_approx
R5554 Maps "a !! b"
R5510 Coq.Init.Logic "x = y" type_scope
R5515 RTL.fn_code
R5465 RTL.exec_instr
R5411 Coq.Init.Logic "x = y" type_scope
R5401 Constprop.analyze
R5413 Coq.Init.Datatypes.Some
R5664 Constprop.transfer
R5685 Maps "a !! b"
R5629 Constpropproof.regs_match_approx_increasing
R5664 Constprop.transfer
R5685 Maps "a !! b"
R5629 Constpropproof.regs_match_approx_increasing
R5701 Constprop.fixpoint_solution
R5701 Constprop.fixpoint_solution
R5766 RTL.fn_code_wf
R5766 RTL.fn_code_wf
R5812 RTL.exec_instr_present
R5812 RTL.exec_instr_present
R5899 RTL.successors_correct
R5899 RTL.successors_correct
R5950 Constpropproof.transfer_correct
R5950 Constpropproof.transfer_correct
R6195 Constpropproof.regs_match_approx
R6220 Maps "a !! b"
R6157 Constpropproof.regs_match_approx
R6182 Maps "a !! b"
R6138 Coq.Init.Logic "x = y" type_scope
R6143 RTL.fn_code
R6092 RTL.exec_instrs
R6038 Coq.Init.Logic "x = y" type_scope
R6028 Constprop.analyze
R6040 Coq.Init.Datatypes.Some
R6300 Constpropproof.analyze_correct_1
R6300 Constpropproof.analyze_correct_1
R6421 Constpropproof.regs_match_approx
R6446 Maps "a !! b"
R6452 RTL.fn_entrypoint
R6401 Coq.Init.Logic "x = y" type_scope
R6391 Constprop.analyze
R6403 Coq.Init.Datatypes.Some
R6532 Constprop.top
R6498 Constpropproof.regs_match_approx_increasing
R6532 Constprop.top
R6498 Constpropproof.regs_match_approx_increasing
R6548 Constprop.fixpoint_entry
R6548 Constprop.fixpoint_entry
R6641 Constprop.get_top
R6641 Constprop.get_top
R6717 Constprop.t
R6735 Values.val
R6753 RTL.regset
R6779 Constpropproof.regs_match_approx
R6880 Coq.Init.Logic "x = y" type_scope
R6877 Registers "a # b"
R6882 Values.Vint
R6863 Coq.Init.Logic "x = y" type_scope
R6847 Constprop.intval
R6865 Coq.Init.Datatypes.Some
R6940 Constprop.get
R6940 Constprop.get
R7147 Constprop.cond_strength_reduction
R7224 Coq.Init.Logic "x = y" type_scope
R7193 Op.eval_condition
R7216 Registers "a ## b"
R7226 Op.eval_condition
R7248 Registers "a ## b"
R7313 Constprop.cond_strength_reduction_match
R7313 Constprop.cond_strength_reduction_match
R7373 Constprop.intval
R7373 Constprop.intval
R7418 Constpropproof.intval_correct
R7418 Constpropproof.intval_correct
R7456 Registers "a # b"
R7456 Registers "a # b"
R7476 Integers.swap_cmp
R7476 Integers.swap_cmp
R7533 Constprop.intval
R7533 Constprop.intval
R7578 Constpropproof.intval_correct
R7578 Constpropproof.intval_correct
R7626 Constprop.intval
R7626 Constprop.intval
R7671 Constpropproof.intval_correct
R7671 Constpropproof.intval_correct
R7709 Registers "a # b"
R7709 Registers "a # b"
R7729 Integers.swap_cmpu
R7729 Integers.swap_cmpu
R7787 Constprop.intval
R7787 Constprop.intval
R7832 Constpropproof.intval_correct
R7832 Constpropproof.intval_correct
R7947 Constprop.make_addimm
R8065 Coq.Init.Logic "x = y" type_scope
R8032 Op.eval_operation
R8058 Registers "a ## b"
R8067 Coq.Init.Datatypes.Some
R8018 Coq.Init.Logic "x = y" type_scope
R7968 Op.eval_operation
R8000 Coq.Lists.List "x :: y" list_scope
R7997 Registers "a # b"
R8010 Coq.Lists.List "x :: y" list_scope
R8003 Values.Vint
R8013 Coq.Lists.List.nil
R7989 Op.Oadd
R8020 Coq.Init.Datatypes.Some
R8126 Integers.eq_spec
R8140 Integers.zero
R8157 Integers.eq
R8166 Integers.zero
R8126 Integers.eq_spec
R8140 Integers.zero
R8157 Integers.eq
R8166 Integers.zero
R8225 Integers.add_zero
R8225 Integers.add_zero
R8266 Integers.add_zero
R8266 Integers.add_zero
R8380 Constprop.make_shlimm
R8498 Coq.Init.Logic "x = y" type_scope
R8465 Op.eval_operation
R8491 Registers "a ## b"
R8500 Coq.Init.Datatypes.Some
R8451 Coq.Init.Logic "x = y" type_scope
R8401 Op.eval_operation
R8433 Coq.Lists.List "x :: y" list_scope
R8430 Registers "a # b"
R8443 Coq.Lists.List "x :: y" list_scope
R8436 Values.Vint
R8446 Coq.Lists.List.nil
R8422 Op.Oshl
R8453 Coq.Init.Datatypes.Some
R8559 Integers.eq_spec
R8573 Integers.zero
R8590 Integers.eq
R8599 Integers.zero
R8559 Integers.eq_spec
R8573 Integers.zero
R8590 Integers.eq
R8599 Integers.zero
R8658 Integers.shl_zero
R8658 Integers.shl_zero
R8720 Integers.ltu
R8731 Integers.repr
R8720 Integers.ltu
R8731 Integers.repr
R8782 Integers.shl_rolm
R8782 Integers.shl_rolm
R8921 Constprop.make_shrimm
R9039 Coq.Init.Logic "x = y" type_scope
R9006 Op.eval_operation
R9032 Registers "a ## b"
R9041 Coq.Init.Datatypes.Some
R8992 Coq.Init.Logic "x = y" type_scope
R8942 Op.eval_operation
R8974 Coq.Lists.List "x :: y" list_scope
R8971 Registers "a # b"
R8984 Coq.Lists.List "x :: y" list_scope
R8977 Values.Vint
R8987 Coq.Lists.List.nil
R8963 Op.Oshr
R8994 Coq.Init.Datatypes.Some
R9100 Integers.eq_spec
R9114 Integers.zero
R9131 Integers.eq
R9140 Integers.zero
R9100 Integers.eq_spec
R9114 Integers.zero
R9131 Integers.eq
R9140 Integers.zero
R9199 Integers.shr_zero
R9199 Integers.shr_zero
R9314 Constprop.make_shruimm
R9434 Coq.Init.Logic "x = y" type_scope
R9401 Op.eval_operation
R9427 Registers "a ## b"
R9436 Coq.Init.Datatypes.Some
R9387 Coq.Init.Logic "x = y" type_scope
R9336 Op.eval_operation
R9369 Coq.Lists.List "x :: y" list_scope
R9366 Registers "a # b"
R9379 Coq.Lists.List "x :: y" list_scope
R9372 Values.Vint
R9382 Coq.Lists.List.nil
R9357 Op.Oshru
R9389 Coq.Init.Datatypes.Some
R9496 Integers.eq_spec
R9510 Integers.zero
R9527 Integers.eq
R9536 Integers.zero
R9496 Integers.eq_spec
R9510 Integers.zero
R9527 Integers.eq
R9536 Integers.zero
R9595 Integers.shru_zero
R9595 Integers.shru_zero
R9658 Integers.ltu
R9669 Integers.repr
R9658 Integers.ltu
R9669 Integers.repr
R9720 Integers.shru_rolm
R9720 Integers.shru_rolm
R9860 Constprop.make_mulimm
R9978 Coq.Init.Logic "x = y" type_scope
R9945 Op.eval_operation
R9971 Registers "a ## b"
R9980 Coq.Init.Datatypes.Some
R9931 Coq.Init.Logic "x = y" type_scope
R9881 Op.eval_operation
R9913 Coq.Lists.List "x :: y" list_scope
R9910 Registers "a # b"
R9923 Coq.Lists.List "x :: y" list_scope
R9916 Values.Vint
R9926 Coq.Lists.List.nil
R9902 Op.Omul
R9933 Coq.Init.Datatypes.Some
R10039 Integers.eq_spec
R10053 Integers.zero
R10070 Integers.eq
R10079 Integers.zero
R10039 Integers.eq_spec
R10053 Integers.zero
R10070 Integers.eq
R10079 Integers.zero
R10139 Integers.mul_zero
R10139 Integers.mul_zero
R10191 Integers.eq_spec
R10205 Integers.one
R10221 Integers.eq
R10230 Integers.one
R10191 Integers.eq_spec
R10205 Integers.one
R10221 Integers.eq
R10230 Integers.one
R10296 Integers.mul_one
R10296 Integers.mul_one
R10337 Integers.is_power2
R10337 Integers.is_power2
R10374 Op.eval_operation
R10408 Coq.Lists.List "x :: y" list_scope
R10404 Registers "a # b"
R10418 Coq.Lists.List "x :: y" list_scope
R10411 Values.Vint
R10421 Coq.Lists.List.nil
R10395 Op.Omul
R10438 Op.eval_operation
R10472 Coq.Lists.List "x :: y" list_scope
R10468 Registers "a # b"
R10482 Coq.Lists.List "x :: y" list_scope
R10475 Values.Vint
R10485 Coq.Lists.List.nil
R10459 Op.Oshl
R10374 Op.eval_operation
R10408 Coq.Lists.List "x :: y" list_scope
R10404 Registers "a # b"
R10418 Coq.Lists.List "x :: y" list_scope
R10411 Values.Vint
R10421 Coq.Lists.List.nil
R10395 Op.Omul
R10438 Op.eval_operation
R10472 Coq.Lists.List "x :: y" list_scope
R10468 Registers "a # b"
R10482 Coq.Lists.List "x :: y" list_scope
R10475 Values.Vint
R10485 Coq.Lists.List.nil
R10459 Op.Oshl
R10500 Constpropproof.make_shlimm_correct
R10500 Constpropproof.make_shlimm_correct
R10543 Integers.is_power2_range
R10543 Integers.is_power2_range
R10583 Coq.ZArith.BinInt.Z_of_nat
R10592 Integers.wordsize
R10583 Coq.ZArith.BinInt.Z_of_nat
R10592 Integers.wordsize
R10643 Registers "a # b"
R10643 Registers "a # b"
R10662 Integers.mul_pow2
R10662 Integers.mul_pow2
R10774 Constprop.make_andimm
R10892 Coq.Init.Logic "x = y" type_scope
R10859 Op.eval_operation
R10885 Registers "a ## b"
R10894 Coq.Init.Datatypes.Some
R10845 Coq.Init.Logic "x = y" type_scope
R10795 Op.eval_operation
R10827 Coq.Lists.List "x :: y" list_scope
R10824 Registers "a # b"
R10837 Coq.Lists.List "x :: y" list_scope
R10830 Values.Vint
R10840 Coq.Lists.List.nil
R10816 Op.Oand
R10847 Coq.Init.Datatypes.Some
R10953 Integers.eq_spec
R10967 Integers.zero
R10984 Integers.eq
R10993 Integers.zero
R10953 Integers.eq_spec
R10967 Integers.zero
R10984 Integers.eq
R10993 Integers.zero
R11052 Integers.and_zero
R11052 Integers.and_zero
R11097 Integers.eq_spec
R11111 Integers.mone
R11128 Integers.eq
R11137 Integers.mone
R11097 Integers.eq_spec
R11111 Integers.mone
R11128 Integers.eq
R11137 Integers.mone
R11196 Integers.and_mone
R11196 Integers.and_mone
R11308 Constprop.make_orimm
R11424 Coq.Init.Logic "x = y" type_scope
R11391 Op.eval_operation
R11417 Registers "a ## b"
R11426 Coq.Init.Datatypes.Some
R11377 Coq.Init.Logic "x = y" type_scope
R11328 Op.eval_operation
R11359 Coq.Lists.List "x :: y" list_scope
R11356 Registers "a # b"
R11369 Coq.Lists.List "x :: y" list_scope
R11362 Values.Vint
R11372 Coq.Lists.List.nil
R11349 Op.Oor
R11379 Coq.Init.Datatypes.Some
R11484 Integers.eq_spec
R11498 Integers.zero
R11515 Integers.eq
R11524 Integers.zero
R11484 Integers.eq_spec
R11498 Integers.zero
R11515 Integers.eq
R11524 Integers.zero
R11583 Integers.or_zero
R11583 Integers.or_zero
R11627 Integers.eq_spec
R11641 Integers.mone
R11658 Integers.eq
R11667 Integers.mone
R11627 Integers.eq_spec
R11641 Integers.mone
R11658 Integers.eq
R11667 Integers.mone
R11726 Integers.or_mone
R11726 Integers.or_mone
R11838 Constprop.make_xorimm
R11956 Coq.Init.Logic "x = y" type_scope
R11923 Op.eval_operation
R11949 Registers "a ## b"
R11958 Coq.Init.Datatypes.Some
R11909 Coq.Init.Logic "x = y" type_scope
R11859 Op.eval_operation
R11891 Coq.Lists.List "x :: y" list_scope
R11888 Registers "a # b"
R11901 Coq.Lists.List "x :: y" list_scope
R11894 Values.Vint
R11904 Coq.Lists.List.nil
R11880 Op.Oxor
R11911 Coq.Init.Datatypes.Some
R12017 Integers.eq_spec
R12031 Integers.zero
R12048 Integers.eq
R12057 Integers.zero
R12017 Integers.eq_spec
R12031 Integers.zero
R12048 Integers.eq
R12057 Integers.zero
R12116 Integers.xor_zero
R12116 Integers.xor_zero
R12244 Constprop.op_strength_reduction
R12368 Coq.Init.Logic "x = y" type_scope
R12333 Op.eval_operation
R12360 Registers "a ## b"
R12370 Coq.Init.Datatypes.Some
R12319 Coq.Init.Logic "x = y" type_scope
R12286 Op.eval_operation
R12312 Registers "a ## b"
R12321 Coq.Init.Datatypes.Some
R12433 Constprop.op_strength_reduction_match
R12485 Coq.Lists.List.map
R12433 Constprop.op_strength_reduction_match
R12485 Coq.Lists.List.map
R12485 Coq.Lists.List.map
R12485 Coq.Lists.List.map
R12485 Coq.Lists.List.map
R12485 Coq.Lists.List.map
R12485 Coq.Lists.List.map
R12485 Coq.Lists.List.map
R12485 Coq.Lists.List.map
R12485 Coq.Lists.List.map
R12485 Coq.Lists.List.map
R12485 Coq.Lists.List.map
R12485 Coq.Lists.List.map
R12485 Coq.Lists.List.map
R12518 Constprop.intval
R12518 Constprop.intval
R12556 Constpropproof.intval_correct
R12556 Constpropproof.intval_correct
R12591 Op.eval_operation
R12625 Coq.Lists.List "x :: y" list_scope
R12618 Values.Vint
R12636 Coq.Lists.List "x :: y" list_scope
R12631 Registers "a # b"
R12639 Coq.Lists.List.nil
R12612 Op.Oadd
R12656 Op.eval_operation
R12691 Coq.Lists.List "x :: y" list_scope
R12686 Registers "a # b"
R12701 Coq.Lists.List "x :: y" list_scope
R12694 Values.Vint
R12704 Coq.Lists.List.nil
R12677 Op.Oadd
R12591 Op.eval_operation
R12625 Coq.Lists.List "x :: y" list_scope
R12618 Values.Vint
R12636 Coq.Lists.List "x :: y" list_scope
R12631 Registers "a # b"
R12639 Coq.Lists.List.nil
R12612 Op.Oadd
R12656 Op.eval_operation
R12691 Coq.Lists.List "x :: y" list_scope
R12686 Registers "a # b"
R12701 Coq.Lists.List "x :: y" list_scope
R12694 Values.Vint
R12704 Coq.Lists.List.nil
R12677 Op.Oadd
R12719 Constpropproof.make_addimm_correct
R12719 Constpropproof.make_addimm_correct
R12761 Registers "a # b"
R12761 Registers "a # b"
R12780 Integers.add_commut
R12780 Integers.add_commut
R12812 Constprop.intval
R12812 Constprop.intval
R12850 Constpropproof.intval_correct
R12850 Constpropproof.intval_correct
R12880 Constpropproof.make_addimm_correct
R12880 Constpropproof.make_addimm_correct
R12938 Constprop.intval
R12938 Constprop.intval
R12976 Constpropproof.intval_correct
R12976 Constpropproof.intval_correct
R13028 Constprop.intval
R13028 Constprop.intval
R13066 Constpropproof.intval_correct
R13066 Constpropproof.intval_correct
R13102 Op.eval_operation
R13137 Coq.Lists.List "x :: y" list_scope
R13132 Registers "a # b"
R13147 Coq.Lists.List "x :: y" list_scope
R13140 Values.Vint
R13150 Coq.Lists.List.nil
R13123 Op.Osub
R13167 Op.eval_operation
R13202 Coq.Lists.List "x :: y" list_scope
R13197 Registers "a # b"
R13222 Coq.Lists.List "x :: y" list_scope
R13205 Values.Vint
R13211 Integers.neg
R13225 Coq.Lists.List.nil
R13188 Op.Oadd
R13102 Op.eval_operation
R13137 Coq.Lists.List "x :: y" list_scope
R13132 Registers "a # b"
R13147 Coq.Lists.List "x :: y" list_scope
R13140 Values.Vint
R13150 Coq.Lists.List.nil
R13123 Op.Osub
R13167 Op.eval_operation
R13202 Coq.Lists.List "x :: y" list_scope
R13197 Registers "a # b"
R13222 Coq.Lists.List "x :: y" list_scope
R13205 Values.Vint
R13211 Integers.neg
R13225 Coq.Lists.List.nil
R13188 Op.Oadd
R13240 Constpropproof.make_addimm_correct
R13240 Constpropproof.make_addimm_correct
R13281 Registers "a # b"
R13300 Integers.sub_add_opp
R13281 Registers "a # b"
R13300 Integers.sub_add_opp
R13300 Integers.sub_add_opp
R13361 Constprop.intval
R13361 Constprop.intval
R13399 Constpropproof.intval_correct
R13399 Constpropproof.intval_correct
R13434 Op.eval_operation
R13468 Coq.Lists.List "x :: y" list_scope
R13461 Values.Vint
R13479 Coq.Lists.List "x :: y" list_scope
R13474 Registers "a # b"
R13482 Coq.Lists.List.nil
R13455 Op.Omul
R13499 Op.eval_operation
R13534 Coq.Lists.List "x :: y" list_scope
R13529 Registers "a # b"
R13544 Coq.Lists.List "x :: y" list_scope
R13537 Values.Vint
R13547 Coq.Lists.List.nil
R13520 Op.Omul
R13434 Op.eval_operation
R13468 Coq.Lists.List "x :: y" list_scope
R13461 Values.Vint
R13479 Coq.Lists.List "x :: y" list_scope
R13474 Registers "a # b"
R13482 Coq.Lists.List.nil
R13455 Op.Omul
R13499 Op.eval_operation
R13534 Coq.Lists.List "x :: y" list_scope
R13529 Registers "a # b"
R13544 Coq.Lists.List "x :: y" list_scope
R13537 Values.Vint
R13547 Coq.Lists.List.nil
R13520 Op.Omul
R13562 Constpropproof.make_mulimm_correct
R13562 Constpropproof.make_mulimm_correct
R13604 Registers "a # b"
R13604 Registers "a # b"
R13623 Integers.mul_commut
R13623 Integers.mul_commut
R13655 Constprop.intval
R13655 Constprop.intval
R13693 Constpropproof.intval_correct
R13693 Constpropproof.intval_correct
R13723 Constpropproof.make_mulimm_correct
R13723 Constpropproof.make_mulimm_correct
R13781 Constprop.intval
R13781 Constprop.intval
R13818 Integers.is_power2
R13818 Integers.is_power2
R13855 Constpropproof.intval_correct
R13855 Constpropproof.intval_correct
R13920 Integers.eq
R13929 Integers.zero
R13920 Integers.eq
R13929 Integers.zero
R13970 Coq.ZArith.BinInt.Z_of_nat
R13979 Integers.wordsize
R13970 Coq.ZArith.BinInt.Z_of_nat
R13979 Integers.wordsize
R14002 Integers.is_power2_range
R14002 Integers.is_power2_range
R14043 Integers.divs_pow2
R14043 Integers.divs_pow2
R14133 Constprop.intval
R14133 Constprop.intval
R14170 Integers.is_power2
R14170 Integers.is_power2
R14207 Constpropproof.intval_correct
R14207 Constpropproof.intval_correct
R14241 Op.eval_operation
R14277 Coq.Lists.List "x :: y" list_scope
R14272 Registers "a # b"
R14287 Coq.Lists.List "x :: y" list_scope
R14280 Values.Vint
R14290 Coq.Lists.List.nil
R14262 Op.Odivu
R14307 Op.eval_operation
R14343 Coq.Lists.List "x :: y" list_scope
R14338 Registers "a # b"
R14354 Coq.Lists.List "x :: y" list_scope
R14346 Values.Vint
R14357 Coq.Lists.List.nil
R14328 Op.Oshru
R14241 Op.eval_operation
R14277 Coq.Lists.List "x :: y" list_scope
R14272 Registers "a # b"
R14287 Coq.Lists.List "x :: y" list_scope
R14280 Values.Vint
R14290 Coq.Lists.List.nil
R14262 Op.Odivu
R14307 Op.eval_operation
R14343 Coq.Lists.List "x :: y" list_scope
R14338 Registers "a # b"
R14354 Coq.Lists.List "x :: y" list_scope
R14346 Values.Vint
R14357 Coq.Lists.List.nil
R14328 Op.Oshru
R14372 Constpropproof.make_shruimm_correct
R14372 Constpropproof.make_shruimm_correct
R14415 Registers "a # b"
R14415 Registers "a # b"
R14445 Coq.ZArith.BinInt.Z_of_nat
R14454 Integers.wordsize
R14445 Coq.ZArith.BinInt.Z_of_nat
R14454 Integers.wordsize
R14477 Integers.is_power2_range
R14477 Integers.is_power2_range
R14521 Integers.eq_spec
R14535 Integers.zero
R14552 Integers.eq
R14561 Integers.zero
R14521 Integers.eq_spec
R14535 Integers.zero
R14552 Integers.eq
R14561 Integers.zero
R14617 Integers.divu_pow2
R14617 Integers.divu_pow2
R14700 Constprop.intval
R14700 Constprop.intval
R14738 Constpropproof.intval_correct
R14738 Constpropproof.intval_correct
R14773 Op.eval_operation
R14807 Coq.Lists.List "x :: y" list_scope
R14800 Values.Vint
R14818 Coq.Lists.List "x :: y" list_scope
R14813 Registers "a # b"
R14821 Coq.Lists.List.nil
R14794 Op.Oand
R14838 Op.eval_operation
R14873 Coq.Lists.List "x :: y" list_scope
R14868 Registers "a # b"
R14883 Coq.Lists.List "x :: y" list_scope
R14876 Values.Vint
R14886 Coq.Lists.List.nil
R14859 Op.Oand
R14773 Op.eval_operation
R14807 Coq.Lists.List "x :: y" list_scope
R14800 Values.Vint
R14818 Coq.Lists.List "x :: y" list_scope
R14813 Registers "a # b"
R14821 Coq.Lists.List.nil
R14794 Op.Oand
R14838 Op.eval_operation
R14873 Coq.Lists.List "x :: y" list_scope
R14868 Registers "a # b"
R14883 Coq.Lists.List "x :: y" list_scope
R14876 Values.Vint
R14886 Coq.Lists.List.nil
R14859 Op.Oand
R14901 Constpropproof.make_andimm_correct
R14901 Constpropproof.make_andimm_correct
R14943 Registers "a # b"
R14943 Registers "a # b"
R14962 Integers.and_commut
R14962 Integers.and_commut
R14994 Constprop.intval
R14994 Constprop.intval
R15032 Constpropproof.intval_correct
R15032 Constpropproof.intval_correct
R15062 Constpropproof.make_andimm_correct
R15062 Constpropproof.make_andimm_correct
R15119 Constprop.intval
R15119 Constprop.intval
R15157 Constpropproof.intval_correct
R15157 Constpropproof.intval_correct
R15192 Op.eval_operation
R15225 Coq.Lists.List "x :: y" list_scope
R15218 Values.Vint
R15236 Coq.Lists.List "x :: y" list_scope
R15231 Registers "a # b"
R15239 Coq.Lists.List.nil
R15213 Op.Oor
R15256 Op.eval_operation
R15290 Coq.Lists.List "x :: y" list_scope
R15285 Registers "a # b"
R15300 Coq.Lists.List "x :: y" list_scope
R15293 Values.Vint
R15303 Coq.Lists.List.nil
R15277 Op.Oor
R15192 Op.eval_operation
R15225 Coq.Lists.List "x :: y" list_scope
R15218 Values.Vint
R15236 Coq.Lists.List "x :: y" list_scope
R15231 Registers "a # b"
R15239 Coq.Lists.List.nil
R15213 Op.Oor
R15256 Op.eval_operation
R15290 Coq.Lists.List "x :: y" list_scope
R15285 Registers "a # b"
R15300 Coq.Lists.List "x :: y" list_scope
R15293 Values.Vint
R15303 Coq.Lists.List.nil
R15277 Op.Oor
R15318 Constpropproof.make_orimm_correct
R15318 Constpropproof.make_orimm_correct
R15359 Registers "a # b"
R15359 Registers "a # b"
R15378 Integers.or_commut
R15378 Integers.or_commut
R15409 Constprop.intval
R15409 Constprop.intval
R15447 Constpropproof.intval_correct
R15447 Constpropproof.intval_correct
R15477 Constpropproof.make_orimm_correct
R15477 Constpropproof.make_orimm_correct
R15534 Constprop.intval
R15534 Constprop.intval
R15572 Constpropproof.intval_correct
R15572 Constpropproof.intval_correct
R15607 Op.eval_operation
R15641 Coq.Lists.List "x :: y" list_scope
R15634 Values.Vint
R15652 Coq.Lists.List "x :: y" list_scope
R15647 Registers "a # b"
R15655 Coq.Lists.List.nil
R15628 Op.Oxor
R15672 Op.eval_operation
R15707 Coq.Lists.List "x :: y" list_scope
R15702 Registers "a # b"
R15717 Coq.Lists.List "x :: y" list_scope
R15710 Values.Vint
R15720 Coq.Lists.List.nil
R15693 Op.Oxor
R15607 Op.eval_operation
R15641 Coq.Lists.List "x :: y" list_scope
R15634 Values.Vint
R15652 Coq.Lists.List "x :: y" list_scope
R15647 Registers "a # b"
R15655 Coq.Lists.List.nil
R15628 Op.Oxor
R15672 Op.eval_operation
R15707 Coq.Lists.List "x :: y" list_scope
R15702 Registers "a # b"
R15717 Coq.Lists.List "x :: y" list_scope
R15710 Values.Vint
R15720 Coq.Lists.List.nil
R15693 Op.Oxor
R15735 Constpropproof.make_xorimm_correct
R15735 Constpropproof.make_xorimm_correct
R15777 Registers "a # b"
R15777 Registers "a # b"
R15796 Integers.xor_commut
R15796 Integers.xor_commut
R15828 Constprop.intval
R15828 Constprop.intval
R15866 Constpropproof.intval_correct
R15866 Constpropproof.intval_correct
R15896 Constpropproof.make_xorimm_correct
R15896 Constpropproof.make_xorimm_correct
R15954 Constprop.intval
R15954 Constprop.intval
R15991 Integers.ltu
R16002 Integers.repr
R15991 Integers.ltu
R16002 Integers.repr
R16036 Constpropproof.intval_correct
R16036 Constpropproof.intval_correct
R16065 Constpropproof.make_shlimm_correct
R16065 Constpropproof.make_shlimm_correct
R16137 Constprop.intval
R16137 Constprop.intval
R16174 Integers.ltu
R16185 Integers.repr
R16174 Integers.ltu
R16185 Integers.repr
R16219 Constpropproof.intval_correct
R16219 Constpropproof.intval_correct
R16248 Constpropproof.make_shrimm_correct
R16248 Constpropproof.make_shrimm_correct
R16321 Constprop.intval
R16321 Constprop.intval
R16358 Integers.ltu
R16369 Integers.repr
R16358 Integers.ltu
R16369 Integers.repr
R16403 Constpropproof.intval_correct
R16403 Constpropproof.intval_correct
R16432 Constpropproof.make_shruimm_correct
R16432 Constpropproof.make_shruimm_correct
R16509 Constpropproof.cond_strength_reduction_correct
R16509 Constpropproof.cond_strength_reduction_correct
R16560 Constprop.cond_strength_reduction
R16560 Constprop.cond_strength_reduction
R16717 Constpropproof.regs_match_approx
R16774 Coq.Init.Logic "x = y" type_scope
R16757 Constprop.get
R16962 Constprop.addr_strength_reduction
R17046 Coq.Init.Logic "x = y" type_scope
R17008 Op.eval_addressing
R17038 Registers "a ## b"
R17048 Op.eval_addressing
R17077 Registers "a ## b"
R17216 Coq.Init.Logic "x = y" type_scope
R17158 Op.eval_addressing
R17194 Registers "a ## b"
R17201 Coq.Lists.List "x :: y" list_scope
R17207 Coq.Lists.List "x :: y" list_scope
R17210 Coq.Lists.List.nil
R17180 Op.Aindexed2
R17222 Op.eval_addressing
R17258 Registers "a ## b"
R17265 Coq.Lists.List "x :: y" list_scope
R17271 Coq.Lists.List "x :: y" list_scope
R17274 Coq.Lists.List.nil
R17244 Op.Aindexed2
R17216 Coq.Init.Logic "x = y" type_scope
R17158 Op.eval_addressing
R17194 Registers "a ## b"
R17201 Coq.Lists.List "x :: y" list_scope
R17207 Coq.Lists.List "x :: y" list_scope
R17210 Coq.Lists.List.nil
R17180 Op.Aindexed2
R17222 Op.eval_addressing
R17258 Registers "a ## b"
R17265 Coq.Lists.List "x :: y" list_scope
R17271 Coq.Lists.List "x :: y" list_scope
R17274 Coq.Lists.List.nil
R17244 Op.Aindexed2
R17311 Registers "a # b"
R17329 Registers "a # b"
R17351 Integers.add_commut
R17311 Registers "a # b"
R17329 Registers "a # b"
R17329 Registers "a # b"
R17329 Registers "a # b"
R17329 Registers "a # b"
R17351 Integers.add_commut
R17351 Integers.add_commut
R17500 Coq.Init.Logic "x = y" type_scope
R17445 Op.eval_addressing
R17484 Registers "a ## b"
R17491 Coq.Lists.List "x :: y" list_scope
R17494 Coq.Lists.List.nil
R17468 Op.Aindexed
R17506 Op.eval_addressing
R17542 Registers "a ## b"
R17549 Coq.Lists.List "x :: y" list_scope
R17555 Coq.Lists.List "x :: y" list_scope
R17558 Coq.Lists.List.nil
R17528 Op.Aindexed2
R17408 Constpropproof.val_match_approx
R17433 Registers "a # b"
R17426 Constprop.I
R17500 Coq.Init.Logic "x = y" type_scope
R17445 Op.eval_addressing
R17484 Registers "a ## b"
R17491 Coq.Lists.List "x :: y" list_scope
R17494 Coq.Lists.List.nil
R17468 Op.Aindexed
R17506 Op.eval_addressing
R17542 Registers "a ## b"
R17549 Coq.Lists.List "x :: y" list_scope
R17555 Coq.Lists.List "x :: y" list_scope
R17558 Coq.Lists.List.nil
R17528 Op.Aindexed2
R17408 Constpropproof.val_match_approx
R17433 Registers "a # b"
R17426 Constprop.I
R17732 Coq.Init.Logic "x = y" type_scope
R17677 Op.eval_addressing
R17716 Registers "a ## b"
R17723 Coq.Lists.List "x :: y" list_scope
R17726 Coq.Lists.List.nil
R17700 Op.Aindexed
R17738 Op.eval_addressing
R17774 Registers "a ## b"
R17781 Coq.Lists.List "x :: y" list_scope
R17787 Coq.Lists.List "x :: y" list_scope
R17790 Coq.Lists.List.nil
R17760 Op.Aindexed2
R17640 Constpropproof.val_match_approx
R17665 Registers "a # b"
R17658 Constprop.I
R17732 Coq.Init.Logic "x = y" type_scope
R17677 Op.eval_addressing
R17716 Registers "a ## b"
R17723 Coq.Lists.List "x :: y" list_scope
R17726 Coq.Lists.List.nil
R17700 Op.Aindexed
R17738 Op.eval_addressing
R17774 Registers "a ## b"
R17781 Coq.Lists.List "x :: y" list_scope
R17787 Coq.Lists.List "x :: y" list_scope
R17790 Coq.Lists.List.nil
R17760 Op.Aindexed2
R17640 Constpropproof.val_match_approx
R17665 Registers "a # b"
R17658 Constprop.I
R17975 Coq.Init.Logic "x = y" type_scope
R17917 Op.eval_addressing
R17959 Registers "a ## b"
R17966 Coq.Lists.List "x :: y" list_scope
R17969 Coq.Lists.List.nil
R17940 Op.Abased
R17981 Op.eval_addressing
R18017 Registers "a ## b"
R18024 Coq.Lists.List "x :: y" list_scope
R18030 Coq.Lists.List "x :: y" list_scope
R18033 Coq.Lists.List.nil
R18003 Op.Aindexed2
R17876 Constpropproof.val_match_approx
R17906 Registers "a # b"
R17894 Constprop.S
R17975 Coq.Init.Logic "x = y" type_scope
R17917 Op.eval_addressing
R17959 Registers "a ## b"
R17966 Coq.Lists.List "x :: y" list_scope
R17969 Coq.Lists.List.nil
R17940 Op.Abased
R17981 Op.eval_addressing
R18017 Registers "a ## b"
R18024 Coq.Lists.List "x :: y" list_scope
R18030 Coq.Lists.List "x :: y" list_scope
R18033 Coq.Lists.List.nil
R18003 Op.Aindexed2
R17876 Constpropproof.val_match_approx
R17906 Registers "a # b"
R17894 Constprop.S
R18249 Coq.Init.Logic "x = y" type_scope
R18191 Op.eval_addressing
R18233 Registers "a ## b"
R18240 Coq.Lists.List "x :: y" list_scope
R18243 Coq.Lists.List.nil
R18214 Op.Abased
R18255 Op.eval_addressing
R18291 Registers "a ## b"
R18298 Coq.Lists.List "x :: y" list_scope
R18304 Coq.Lists.List "x :: y" list_scope
R18307 Coq.Lists.List.nil
R18277 Op.Aindexed2
R18150 Constpropproof.val_match_approx
R18180 Registers "a # b"
R18168 Constprop.S
R18249 Coq.Init.Logic "x = y" type_scope
R18191 Op.eval_addressing
R18233 Registers "a ## b"
R18240 Coq.Lists.List "x :: y" list_scope
R18243 Coq.Lists.List.nil
R18214 Op.Abased
R18255 Op.eval_addressing
R18291 Registers "a ## b"
R18298 Coq.Lists.List "x :: y" list_scope
R18304 Coq.Lists.List "x :: y" list_scope
R18307 Coq.Lists.List.nil
R18277 Op.Aindexed2
R18150 Constpropproof.val_match_approx
R18180 Registers "a # b"
R18168 Constprop.S
R18527 Coq.Init.Logic "x = y" type_scope
R18472 Op.eval_addressing
R18523 Coq.Lists.List.nil
R18495 Op.Aglobal
R18507 Integers.add
R18533 Op.eval_addressing
R18569 Registers "a ## b"
R18576 Coq.Lists.List "x :: y" list_scope
R18582 Coq.Lists.List "x :: y" list_scope
R18585 Coq.Lists.List.nil
R18555 Op.Aindexed2
R18436 Constpropproof.val_match_approx
R18461 Registers "a # b"
R18454 Constprop.I
R18395 Constpropproof.val_match_approx
R18425 Registers "a # b"
R18413 Constprop.S
R18527 Coq.Init.Logic "x = y" type_scope
R18472 Op.eval_addressing
R18523 Coq.Lists.List.nil
R18495 Op.Aglobal
R18507 Integers.add
R18533 Op.eval_addressing
R18569 Registers "a ## b"
R18576 Coq.Lists.List "x :: y" list_scope
R18582 Coq.Lists.List "x :: y" list_scope
R18585 Coq.Lists.List.nil
R18555 Op.Aindexed2
R18436 Constpropproof.val_match_approx
R18461 Registers "a # b"
R18454 Constprop.I
R18395 Constpropproof.val_match_approx
R18425 Registers "a # b"
R18413 Constprop.S
R18733 Constprop.addr_strength_reduction_match
R18733 Constprop.addr_strength_reduction_match
R18812 Constprop.get
R18848 Constprop.get
R18812 Constprop.get
R18848 Constprop.get
R18848 Constprop.get
R18848 Constprop.get
R18848 Constprop.get
R18848 Constprop.get
R18934 Integers.add_commut
R18934 Integers.add_commut
R18992 Constprop.intval
R18992 Constprop.intval
R19037 Constpropproof.intval_correct
R19037 Constpropproof.intval_correct
R19102 Constprop.get
R19102 Constprop.get
R19328 RTL.program
R19350 Constprop.transf_program
R19381 Globalenvs.globalenv
R19413 Globalenvs.globalenv
R19505 Coq.Init.Logic "x = y" type_scope
R19482 Globalenvs.find_symbol
R19507 Globalenvs.find_symbol
R19474 AST.ident
R19537 Globalenvs.find_symbol_transf
R19561 Constprop.transf_function
R19709 Coq.Init.Logic "x = y" type_scope
R19687 Globalenvs.find_funct
R19711 Coq.Init.Datatypes.Some
R19717 Constprop.transf_function
R19673 Coq.Init.Logic "x = y" type_scope
R19652 Globalenvs.find_funct
R19675 Coq.Init.Datatypes.Some
R19635 RTL.function
R19626 Values.val
R19745 Globalenvs.find_funct_transf
R19772 Constprop.transf_function
R19933 Coq.Init.Logic "x = y" type_scope
R19907 Globalenvs.find_funct_ptr
R19935 Coq.Init.Datatypes.Some
R19941 Constprop.transf_function
R19893 Coq.Init.Logic "x = y" type_scope
R19868 Globalenvs.find_funct_ptr
R19895 Coq.Init.Datatypes.Some
R19851 RTL.function
R19840 Values.block
R19969 Globalenvs.find_funct_ptr_transf
R20000 Constprop.transf_function
R20272 Coq.Init.Logic "A /\ B" type_scope
R20233 RTL.exec_instr
R20427 RTL.exec_instr
R20443 Constprop.transf_code
R20387 Constpropproof.regs_match_approx
R20415 Maps "a !! b"
R20354 Coq.Init.Logic "x = y" type_scope
R20344 Constprop.analyze
R20356 Coq.Init.Datatypes.Some
R20310 Coq.Init.Logic "x = y" type_scope
R20315 RTL.fn_code
R20216 Mem.mem
R20203 RTL.regset
R20191 RTL.node
R20172 Mem.mem
R20160 RTL.regset
R20149 RTL.node
R20131 Values.val
R20120 RTL.code
R20683 Coq.Init.Logic "A /\ B" type_scope
R20643 RTL.exec_instrs
R20838 RTL.exec_instrs
R20855 Constprop.transf_code
R20798 Constpropproof.regs_match_approx
R20826 Maps "a !! b"
R20765 Coq.Init.Logic "x = y" type_scope
R20755 Constprop.analyze
R20767 Coq.Init.Datatypes.Some
R20721 Coq.Init.Logic "x = y" type_scope
R20726 RTL.fn_code
R20626 Mem.mem
R20613 RTL.regset
R20601 RTL.node
R20582 Mem.mem
R20570 RTL.regset
R20559 RTL.node
R20541 Values.val
R20530 RTL.code
R21025 RTL.exec_function
R21044 Constprop.transf_function
R21008 Mem.mem
R20998 Values.val
R20979 Mem.mem
R20965 Coq.Lists.List.list
R20970 Values.val
R20944 RTL.function
R21143 Coq.Init.Logic "x = y" type_scope
R21126 Maps.get
R21145 Coq.Init.Datatypes.Some
R21179 Coq.Init.Logic "x = y" type_scope
R21168 Constprop.analyze
R21181 Coq.Init.Datatypes.Some
R21242 Coq.Init.Logic "x = y" type_scope
R21237 Maps "a ! b"
R21216 Constprop.transf_code
R21244 Coq.Init.Datatypes.Some
R21249 Constprop.transf_instr
R21269 Maps "a !! b"
R21333 Maps.gmap
R21501 Constpropproof.exec_function_prop
R21463 RTL.exec_function
R21553 RTL.exec_function_ind_3
R21619 Constpropproof.exec_function_prop
R21602 Constpropproof.exec_instrs_prop
R21586 Constpropproof.exec_instr_prop
R21553 RTL.exec_function_ind_3
R21619 Constpropproof.exec_function_prop
R21602 Constpropproof.exec_instrs_prop
R21586 Constpropproof.exec_instr_prop
R21715 RTL.exec_Inop
R21715 RTL.exec_Inop
R21748 RTL.exec_Inop
R21748 RTL.exec_Inop
R21824 RTL.exec_Iop
R21824 RTL.exec_Iop
R21865 Op.eval_operation_preserved
R21890 Constpropproof.symbols_preserved
R21865 Op.eval_operation_preserved
R21890 Constpropproof.symbols_preserved
R21926 Constprop.op_strength_reduction
R21955 Maps "a !! b"
R21926 Constprop.op_strength_reduction
R21955 Maps "a !! b"
R22040 Coq.Init.Logic "x = y" type_scope
R22004 Op.eval_operation
R22032 Registers "a ## b"
R22042 Coq.Init.Datatypes.Some
R22040 Coq.Init.Logic "x = y" type_scope
R22004 Op.eval_operation
R22032 Registers "a ## b"
R22042 Coq.Init.Datatypes.Some
R22064 Op.eval_operation_preserved
R22089 Constpropproof.symbols_preserved
R22064 Op.eval_operation_preserved
R22089 Constpropproof.symbols_preserved
R22126 Constpropproof.op_strength_reduction_correct
R22166 Maps "a !! b"
R22126 Constpropproof.op_strength_reduction_correct
R22166 Maps "a !! b"
R22257 Constpropproof.eval_static_operation_correct
R22369 Constpropproof.approx_regs_val_list
R22344 Registers "a ## b"
R22312 Constprop.approx_regs
R22336 Maps "a !! b"
R22257 Constpropproof.eval_static_operation_correct
R22369 Constpropproof.approx_regs_val_list
R22344 Registers "a ## b"
R22312 Constprop.approx_regs
R22336 Maps "a !! b"
R22421 Constprop.eval_static_operation
R22447 Constprop.approx_regs
R22471 Maps "a !! b"
R22511 RTL.exec_Iop
R22421 Constprop.eval_static_operation
R22447 Constprop.approx_regs
R22471 Maps "a !! b"
R22511 RTL.exec_Iop
R22511 RTL.exec_Iop
R22511 RTL.exec_Iop
R22511 RTL.exec_Iop
R22511 RTL.exec_Iop
R22624 Constpropproof.symbols_preserved
R22624 Constpropproof.symbols_preserved
R22736 RTL.exec_Iload
R22736 RTL.exec_Iload
R22767 Op.eval_addressing_preserved
R22793 Constpropproof.symbols_preserved
R22767 Op.eval_addressing_preserved
R22793 Constpropproof.symbols_preserved
R22829 Constprop.addr_strength_reduction
R22860 Maps "a !! b"
R22829 Constprop.addr_strength_reduction
R22860 Maps "a !! b"
R22952 Coq.Init.Logic "x = y" type_scope
R22913 Op.eval_addressing
R22944 Registers "a ## b"
R22954 Coq.Init.Datatypes.Some
R22952 Coq.Init.Logic "x = y" type_scope
R22913 Op.eval_addressing
R22944 Registers "a ## b"
R22954 Coq.Init.Datatypes.Some
R22976 Op.eval_addressing_preserved
R23002 Constpropproof.symbols_preserved
R22976 Op.eval_addressing_preserved
R23002 Constpropproof.symbols_preserved
R23039 Constpropproof.addr_strength_reduction_correct
R23081 Maps "a !! b"
R23039 Constpropproof.addr_strength_reduction_correct
R23081 Maps "a !! b"
R23181 RTL.exec_Iload
R23181 RTL.exec_Iload
R23264 RTL.exec_Istore
R23264 RTL.exec_Istore
R23295 Op.eval_addressing_preserved
R23321 Constpropproof.symbols_preserved
R23295 Op.eval_addressing_preserved
R23321 Constpropproof.symbols_preserved
R23357 Constprop.addr_strength_reduction
R23388 Maps "a !! b"
R23357 Constprop.addr_strength_reduction
R23388 Maps "a !! b"
R23480 Coq.Init.Logic "x = y" type_scope
R23441 Op.eval_addressing
R23472 Registers "a ## b"
R23482 Coq.Init.Datatypes.Some
R23480 Coq.Init.Logic "x = y" type_scope
R23441 Op.eval_addressing
R23472 Registers "a ## b"
R23482 Coq.Init.Datatypes.Some
R23504 Op.eval_addressing_preserved
R23530 Constpropproof.symbols_preserved
R23504 Op.eval_addressing_preserved
R23530 Constpropproof.symbols_preserved
R23567 Constpropproof.addr_strength_reduction_correct
R23609 Maps "a !! b"
R23567 Constpropproof.addr_strength_reduction_correct
R23609 Maps "a !! b"
R23708 RTL.exec_Istore
R23708 RTL.exec_Istore
R23778 Coq.Init.Logic "x = y" type_scope
R23753 RTL.find_function
R23780 Coq.Init.Datatypes.Some
R23786 Constprop.transf_function
R23778 Coq.Init.Logic "x = y" type_scope
R23753 RTL.find_function
R23780 Coq.Init.Datatypes.Some
R23786 Constprop.transf_function
R23868 Constpropproof.functions_translated
R23868 Constpropproof.functions_translated
R23901 Constpropproof.symbols_preserved
R23901 Constpropproof.symbols_preserved
R23930 Globalenvs.find_symbol
R23930 Globalenvs.find_symbol
R23962 Constpropproof.function_ptr_translated
R23962 Constpropproof.function_ptr_translated
R24013 Coq.Init.Logic "x = y" type_scope
R24015 RTL.fn_sig
R24023 Constprop.transf_function
R24013 Coq.Init.Logic "x = y" type_scope
R24015 RTL.fn_sig
R24023 Constprop.transf_function
R24092 Constprop.analyze
R24092 Constprop.analyze
R24165 RTL.exec_Icall
R24165 RTL.exec_Icall
R24226 Coq.Init.Datatypes.inl
R24250 Constprop.get
R24266 Maps "a !! b"
R24288 Constprop.Novalue
R24314 Constprop.Unknown
R24340 Constprop.I
R24362 Constprop.F
R24384 Constprop.S
R24401 Integers.eq
R24412 Integers.zero
R24426 Coq.Init.Datatypes.inr
R24430 Registers.reg
R24468 Coq.Init.Datatypes.inr
R24226 Coq.Init.Datatypes.inl
R24250 Constprop.get
R24266 Maps "a !! b"
R24288 Constprop.Novalue
R24314 Constprop.Unknown
R24340 Constprop.I
R24362 Constprop.F
R24384 Constprop.S
R24401 Integers.eq
R24412 Integers.zero
R24426 Coq.Init.Datatypes.inr
R24430 Registers.reg
R24468 Coq.Init.Datatypes.inr
R24509 RTL.exec_Icall
R24509 RTL.exec_Icall
R24574 Constprop.get
R24589 Maps "a !! b"
R24574 Constprop.get
R24589 Maps "a !! b"
R24624 Integers.eq_spec
R24639 Integers.zero
R24656 Integers.eq
R24666 Integers.zero
R24624 Integers.eq_spec
R24639 Integers.zero
R24656 Integers.eq
R24666 Integers.zero
R24758 Constpropproof.symbols_preserved
R24758 Constpropproof.symbols_preserved
R24850 Globalenvs.find_funct_find_funct_ptr
R24850 Globalenvs.find_funct_find_funct_ptr
R24957 RTL.exec_Icond_true
R24957 RTL.exec_Icond_true
R24991 Constprop.cond_strength_reduction
R25022 Maps "a !! b"
R24991 Constprop.cond_strength_reduction
R25022 Maps "a !! b"
R25106 Coq.Init.Logic "x = y" type_scope
R25075 Op.eval_condition
R25098 Registers "a ## b"
R25108 Coq.Init.Datatypes.Some
R25113 Coq.Init.Datatypes.true
R25106 Coq.Init.Logic "x = y" type_scope
R25075 Op.eval_condition
R25098 Registers "a ## b"
R25108 Coq.Init.Datatypes.Some
R25113 Coq.Init.Datatypes.true
R25136 Constpropproof.cond_strength_reduction_correct
R25196 Maps "a !! b"
R25136 Constpropproof.cond_strength_reduction_correct
R25196 Maps "a !! b"
R25269 Constprop.eval_static_condition
R25297 Constprop.approx_regs
R25321 Maps "a !! b"
R25269 Constprop.eval_static_condition
R25297 Constprop.approx_regs
R25321 Maps "a !! b"
R25360 Constpropproof.eval_static_condition_correct
R25420 Constpropproof.approx_regs_val_list
R25360 Constpropproof.eval_static_condition_correct
R25420 Constpropproof.approx_regs_val_list
R25489 Coq.Init.Datatypes.true
R25489 Coq.Init.Datatypes.true
R25509 RTL.exec_Inop
R25509 RTL.exec_Inop
R25556 RTL.exec_Icond_true
R25556 RTL.exec_Icond_true
R25651 RTL.exec_Icond_false
R25651 RTL.exec_Icond_false
R25686 Constprop.cond_strength_reduction
R25717 Maps "a !! b"
R25686 Constprop.cond_strength_reduction
R25717 Maps "a !! b"
R25801 Coq.Init.Logic "x = y" type_scope
R25770 Op.eval_condition
R25793 Registers "a ## b"
R25803 Coq.Init.Datatypes.Some
R25808 Coq.Init.Datatypes.false
R25801 Coq.Init.Logic "x = y" type_scope
R25770 Op.eval_condition
R25793 Registers "a ## b"
R25803 Coq.Init.Datatypes.Some
R25808 Coq.Init.Datatypes.false
R25832 Constpropproof.cond_strength_reduction_correct
R25892 Maps "a !! b"
R25832 Constpropproof.cond_strength_reduction_correct
R25892 Maps "a !! b"
R25965 Constprop.eval_static_condition
R25993 Constprop.approx_regs
R26017 Maps "a !! b"
R25965 Constprop.eval_static_condition
R25993 Constprop.approx_regs
R26017 Maps "a !! b"
R26056 Constpropproof.eval_static_condition_correct
R26116 Constpropproof.approx_regs_val_list
R26056 Constpropproof.eval_static_condition_correct
R26116 Constpropproof.approx_regs_val_list
R26185 Coq.Init.Datatypes.false
R26185 Coq.Init.Datatypes.false
R26206 RTL.exec_Inop
R26206 RTL.exec_Inop
R26253 RTL.exec_Icond_false
R26253 RTL.exec_Icond_false
R26308 RTL.exec_refl
R26308 RTL.exec_refl
R26333 RTL.exec_refl
R26333 RTL.exec_refl
R26390 RTL.exec_one
R26390 RTL.exec_one
R26422 RTL.exec_one
R26422 RTL.exec_one
R26517 RTL.exec_trans
R26517 RTL.exec_trans
R26567 RTL.exec_trans
R26567 RTL.exec_trans
R26642 Constpropproof.analyze_correct_2
R26642 Constpropproof.analyze_correct_2
R26741 Constprop.analyze
R26741 Constprop.analyze
R26785 RTL.exec_funct
R26785 RTL.exec_funct
R26853 Constpropproof.analyze_correct_3
R26853 Constpropproof.analyze_correct_3
R26916 RTL.exec_funct
R26916 RTL.exec_funct
R27017 RTL.exec_program
R26994 RTL.exec_program
R26986 Values.val
R27120 Constprop.transf_function
R27120 Constprop.transf_function
R27191 AST.prog_main
R27168 AST.prog_main
R27191 AST.prog_main
R27168 AST.prog_main
R27218 Constpropproof.symbols_preserved
R27218 Constpropproof.symbols_preserved
R27258 Constpropproof.function_ptr_translated
R27258 Constpropproof.function_ptr_translated
R27351 Constprop.analyze
R27351 Constprop.analyze
R27384 Constpropproof.transf_funct_correct
R27384 Constpropproof.transf_funct_correct
R27447 Globalenvs.init_mem_transf
R27447 Globalenvs.init_mem_transf
FCSE
R316 Coq.NArith.BinPos.positive
R371 Coq.Lists.List.list
R376 CSE.valnum
R358 Op.operation
R430 Coq.Lists.List.list
R435 CSE.valnum
R416 Op.addressing
R400 AST.memory_chunk
R495 Coq.Init.Specif "{ A } + { B }" type_scope
R497 Coq.Init.Logic "x = y" type_scope
R503 Coq.Init.Logic "x <> y" type_scope
R486 CSE.valnum
R486 CSE.valnum
R511 Coqlib.peq
R564 Coq.Init.Specif "{ A } + { B }" type_scope
R566 Coq.Init.Logic "x = y" type_scope
R572 Coq.Init.Logic "x <> y" type_scope
R549 Coq.Lists.List.list
R554 CSE.valnum
R549 Coq.Lists.List.list
R554 CSE.valnum
R688 CSE.eq_valnum
R688 CSE.eq_valnum
R835 Coq.Init.Specif "{ A } + { B }" type_scope
R837 Coq.Init.Logic "x = y" type_scope
R843 Coq.Init.Logic "x <> y" type_scope
R828 CSE.rhs
R828 CSE.rhs
R869 Integers.eq_dec
R869 Integers.eq_dec
R901 Floats.eq_dec
R901 Floats.eq_dec
R953 Coq.Init.Specif "{ A } + { B }" type_scope
R955 Coq.Init.Logic "x = y" type_scope
R961 Coq.Init.Logic "x <> y" type_scope
R945 AST.ident
R945 AST.ident
R953 Coq.Init.Specif "{ A } + { B }" type_scope
R955 Coq.Init.Logic "x = y" type_scope
R961 Coq.Init.Logic "x <> y" type_scope
R945 AST.ident
R945 AST.ident
R974 Coqlib.peq
R974 Coqlib.peq
R1015 Coq.Init.Specif "{ A } + { B }" type_scope
R1017 Coq.Init.Logic "x = y" type_scope
R1023 Coq.Init.Logic "x <> y" type_scope
R1002 AST.comparison
R1002 AST.comparison
R1015 Coq.Init.Specif "{ A } + { B }" type_scope
R1017 Coq.Init.Logic "x = y" type_scope
R1023 Coq.Init.Logic "x <> y" type_scope
R1002 AST.comparison
R1002 AST.comparison
R1082 Coq.Init.Specif "{ A } + { B }" type_scope
R1084 Coq.Init.Logic "x = y" type_scope
R1090 Coq.Init.Logic "x <> y" type_scope
R1070 Op.condition
R1070 Op.condition
R1082 Coq.Init.Specif "{ A } + { B }" type_scope
R1084 Coq.Init.Logic "x = y" type_scope
R1090 Coq.Init.Logic "x <> y" type_scope
R1070 Op.condition
R1070 Op.condition
R1149 Coq.Init.Specif "{ A } + { B }" type_scope
R1151 Coq.Init.Logic "x = y" type_scope
R1157 Coq.Init.Logic "x <> y" type_scope
R1137 Op.operation
R1137 Op.operation
R1149 Coq.Init.Specif "{ A } + { B }" type_scope
R1151 Coq.Init.Logic "x = y" type_scope
R1157 Coq.Init.Logic "x <> y" type_scope
R1137 Op.operation
R1137 Op.operation
R1219 Coq.Init.Specif "{ A } + { B }" type_scope
R1221 Coq.Init.Logic "x = y" type_scope
R1227 Coq.Init.Logic "x <> y" type_scope
R1204 AST.memory_chunk
R1204 AST.memory_chunk
R1219 Coq.Init.Specif "{ A } + { B }" type_scope
R1221 Coq.Init.Logic "x = y" type_scope
R1227 Coq.Init.Logic "x <> y" type_scope
R1204 AST.memory_chunk
R1204 AST.memory_chunk
R1287 Coq.Init.Specif "{ A } + { B }" type_scope
R1289 Coq.Init.Logic "x = y" type_scope
R1295 Coq.Init.Logic "x <> y" type_scope
R1274 Op.addressing
R1274 Op.addressing
R1287 Coq.Init.Specif "{ A } + { B }" type_scope
R1289 Coq.Init.Logic "x = y" type_scope
R1295 Coq.Init.Logic "x <> y" type_scope
R1274 Op.addressing
R1274 Op.addressing
R1332 CSE.eq_valnum
R1332 CSE.eq_valnum
R1363 CSE.eq_list_valnum
R1363 CSE.eq_list_valnum
R1463 CSE.valnum
R1482 Coq.Lists.List.list
R1495 Coq.Init.Datatypes "x * y" type_scope
R1488 CSE.valnum
R1497 CSE.rhs
R1514 Maps.t
R1522 CSE.valnum
R1565 CSE.mknumbering
R1593 Maps.empty
R1605 CSE.valnum
R1588 Coq.Lists.List.nil
R1673 Coq.Init.Datatypes "x * y" type_scope
R1663 CSE.numbering
R1675 CSE.valnum
R1693 Maps.get
R1708 CSE.num_reg
R1726 Coq.Init.Datatypes.Some
R1736 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R1747 Coq.Init.Datatypes.None
R1757 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R1758 CSE.mknumbering
R1858 Maps.set
R1886 CSE.num_reg
R1873 CSE.num_next
R1821 CSE.num_eqs
R1771 Coq.NArith.BinPos.Psucc
R1780 CSE.num_next
R1915 CSE.num_next
R1656 Registers.reg
R1641 CSE.numbering
R2030 Coq.Init.Datatypes "x * y" type_scope
R2020 CSE.numbering
R2032 Coq.Lists.List.list
R2037 CSE.valnum
R1975 Coq.Lists.List.list
R1980 Registers.reg
R1959 CSE.numbering
R2067 Coq.Lists.List.nil
R2080 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2084 Coq.Lists.List.nil
R2096 Coq.Lists.List "x :: y" list_scope
R2127 CSE.valnum_reg
R2195 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2203 Coq.Lists.List "x :: y" list_scope
R1975 Coq.Lists.List.list
R1980 Registers.reg
R1959 CSE.numbering
R2270 Coq.Lists.List.list
R2283 Coq.Init.Datatypes "x * y" type_scope
R2276 CSE.valnum
R2285 CSE.rhs
R2247 Coq.Lists.List.list
R2260 Coq.Init.Datatypes "x * y" type_scope
R2253 CSE.valnum
R2262 CSE.rhs
R2314 Coq.Lists.List.nil
R2321 Coq.Lists.List.nil
R2345 Coq.Lists.List "x :: y" list_scope
R2329 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2333 CSE.Load
R2382 Coq.Lists.List "x :: y" list_scope
R2397 Coq.Lists.List "x :: y" list_scope
R2247 Coq.Lists.List.list
R2260 Coq.Init.Datatypes "x * y" type_scope
R2253 CSE.valnum
R2262 CSE.rhs
R2527 Coq.Init.Datatypes.option
R2534 CSE.valnum
R2466 Coq.Lists.List.list
R2479 Coq.Init.Datatypes "x * y" type_scope
R2472 CSE.valnum
R2481 CSE.rhs
R2455 CSE.rhs
R2565 Coq.Lists.List.nil
R2572 Coq.Init.Datatypes.None
R2589 Coq.Lists.List "x :: y" list_scope
R2581 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2609 CSE.eq_rhs
R2626 Coq.Init.Datatypes.Some
R2466 Coq.Lists.List.list
R2479 Coq.Init.Datatypes "x * y" type_scope
R2472 CSE.valnum
R2481 CSE.rhs
R2455 CSE.rhs
R2725 CSE.numbering
R2746 CSE.find_valnum_rhs
R2768 CSE.num_eqs
R2786 Coq.Init.Datatypes.Some
R2805 CSE.mknumbering
R2861 Maps.set
R2882 CSE.num_reg
R2833 CSE.num_eqs
R2820 CSE.num_next
R2896 Coq.Init.Datatypes.None
R2910 CSE.mknumbering
R3016 Maps.set
R3045 CSE.num_reg
R3032 CSE.num_next
R2981 Coq.Lists.List "x :: y" list_scope
R2962 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2966 CSE.num_next
R2987 CSE.num_eqs
R2923 Coq.NArith.BinPos.Psucc
R2932 CSE.num_next
R2718 CSE.rhs
R2708 Registers.reg
R2692 CSE.numbering
R3158 CSE.valnum_regs
R3180 CSE.add_rhs
R3195 CSE.Op
R3127 Coq.Lists.List.list
R3132 Registers.reg
R3111 Op.operation
R3101 Registers.reg
R3085 CSE.numbering
R3370 CSE.valnum_regs
R3392 CSE.add_rhs
R3407 CSE.Load
R3339 Coq.Lists.List.list
R3344 Registers.reg
R3302 Op.addressing
R3281 AST.memory_chunk
R3247 Registers.reg
R3231 CSE.numbering
R3468 CSE.numbering
R3483 CSE.mknumbering
R3567 CSE.num_reg
R3523 CSE.kill_load_eqs
R3540 CSE.num_eqs
R3498 CSE.num_next
R3455 CSE.numbering
R3630 Coq.Init.Datatypes.option
R3637 Registers.reg
R3646 Maps.fold
R3765 Coq.Init.Datatypes.None
R3756 CSE.num_reg
R3718 Coqlib.peq
R3732 Coq.Init.Datatypes.Some
R3697 CSE.valnum
R3688 Registers.reg
R3672 Coq.Init.Datatypes.option
R3679 Registers.reg
R3620 CSE.valnum
R3604 CSE.numbering
R3819 Coq.Init.Datatypes.option
R3826 Registers.reg
R3841 CSE.find_valnum_rhs
R3863 CSE.num_eqs
R3881 Coq.Init.Datatypes.None
R3889 Coq.Init.Datatypes.None
R3898 Coq.Init.Datatypes.Some
R3911 CSE.reg_valnum
R3812 CSE.rhs
R3796 CSE.numbering
R4008 Coq.Init.Datatypes.option
R4015 Registers.reg
R4040 CSE.valnum_regs
R4062 CSE.find_rhs
R4075 CSE.Op
R3996 Coq.Lists.List.list
R4001 Registers.reg
R3980 Op.operation
R3964 CSE.numbering
R4185 Coq.Init.Datatypes.option
R4192 Registers.reg
R4217 CSE.valnum_regs
R4239 CSE.find_rhs
R4252 CSE.Load
R4173 Coq.Lists.List.list
R4178 Registers.reg
R4156 Op.addressing
R4135 AST.memory_chunk
R4116 CSE.numbering
R4539 CSE.Op
R4605 Coq.Init.Logic "x = y" type_scope
R4557 Op.eval_operation
R4582 Coq.Lists.List.map
R4613 Coq.Init.Datatypes.Some
R4639 CSE.Load
R4667 Coq.Init.Logic "'exists' x , p" type_scope
R4743 Coq.Init.Logic "A /\ B" type_scope
R4734 Coq.Init.Logic "x = y" type_scope
R4683 Op.eval_addressing
R4711 Coq.Lists.List.map
R4736 Coq.Init.Datatypes.Some
R4768 Coq.Init.Logic "x = y" type_scope
R4752 Mem.loadv
R4770 Coq.Init.Datatypes.Some
R4504 CSE.rhs
R4491 CSE.valnum
R4473 Mem.mem
R4464 Values.val
R4453 RTL.genv
R4438 Values.val
R4428 CSE.valnum
R5027 Coq.Init.Logic "A /\ B" type_scope
R4989 CSE.equation_holds
R4955 Coq.Lists.List.In
R4970 CSE.num_eqs
R4958 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5097 Coq.Init.Logic "x = y" type_scope
R5094 Registers "a # b"
R5079 Coq.Init.Logic "x = y" type_scope
R5055 Maps.get
R5070 CSE.num_reg
R5081 Coq.Init.Datatypes.Some
R4907 CSE.numbering
R4898 Mem.mem
R4886 RTL.regset
R4876 Values.val
R4865 RTL.genv
R4852 Values.val
R4842 CSE.valnum
R5221 Coq.Init.Logic "'exists' x , p" type_scope
R5239 CSE.numbering_holds
R5198 CSE.numbering
R5189 Mem.mem
R5177 RTL.regset
R5167 Values.val
R5156 RTL.genv
R5336 CSE.numbering_satisfiable
R5369 CSE.empty_numbering
R5439 Values.Vundef
R5428 CSE.valnum
R5439 Values.Vundef
R5428 CSE.valnum
R5490 Maps.gempty
R5490 Maps.gempty
R5567 CSE.numbering
R5694 CSE.numbering_satisfiable
R5651 CSE.numbering_satisfiable
R5602 CSE.numbering
R5602 CSE.numbering
R5751 CSE.empty_numbering
R5794 CSE.ge
R5797 CSE.top
R5856 CSE.empty_numbering_satisfiable
R5856 CSE.empty_numbering_satisfiable
R5919 CSE.ge
R6133 Maps "a ! b"
R6125 RTL.fn_code
R6146 Coq.Init.Datatypes.None
R6165 Coq.Init.Datatypes.Some
R6202 RTL.Inop
R6237 RTL.Iop
R6268 CSE.add_op
R6302 RTL.Iload
R6343 CSE.add_load
R6387 RTL.Istore
R6429 CSE.kill_loads
R6455 RTL.Icall
R6493 CSE.empty_numbering
R6517 RTL.Icond
R6572 RTL.Ireturn
R6100 CSE.numbering
R6085 RTL.node
R6070 RTL.function
R6663 Maps.t
R6670 CSE.numbering
R6691 CSE.fixpoint
R6777 RTL.fn_entrypoint
R6762 CSE.transfer
R6725 RTL.fn_nextpc
R6708 RTL.successors
R6801 Coq.Init.Datatypes.None
R6809 Maps.init
R6819 CSE.empty_numbering
R6839 Coq.Init.Datatypes.Some
R6648 RTL.function
R6932 Coq.Init.Datatypes.bool
R6960 Op.Omove
R6969 Coq.Init.Datatypes.true
R6978 Op.Ointconst
R6993 Coq.Init.Datatypes.true
R7002 Op.Oaddrsymbol
R7021 Coq.Init.Datatypes.true
R7030 Op.Oaddrstack
R7046 Coq.Init.Datatypes.true
R7055 Op.Oundef
R7065 Coq.Init.Datatypes.true
R7079 Coq.Init.Datatypes.false
R6919 Op.operation
R7179 RTL.Iop
R7209 CSE.is_trivial_op
R7256 CSE.find_op
R7289 Coq.Init.Datatypes.None
R7313 Coq.Init.Datatypes.Some
R7323 RTL.Iop
R7336 Coq.Lists.List "x :: y" list_scope
R7339 Coq.Lists.List.nil
R7327 Op.Omove
R7366 RTL.Iload
R7409 CSE.find_load
R7450 Coq.Init.Datatypes.None
R7472 Coq.Init.Datatypes.Some
R7482 RTL.Iop
R7495 Coq.Lists.List "x :: y" list_scope
R7498 Coq.Lists.List.nil
R7486 Op.Omove
R7140 RTL.instruction
R7121 CSE.numbering
R7616 RTL.code
R7626 Maps.map
R7653 CSE.transf_instr
R7673 Maps "a !! b"
R7608 RTL.code
R7581 Maps.t
R7588 CSE.numbering
R7841 Coq.Init.Logic "A \/ B" type_scope
R7814 Coqlib.Plt
R7824 RTL.fn_nextpc
R7881 Coq.Init.Logic "x = y" type_scope
R7876 Maps "a ! b"
R7845 CSE.transf_code
R7868 RTL.fn_code
R7883 Coq.Init.Datatypes.None
R7771 Coq.Init.Logic "A \/ B" type_scope
R7750 Coqlib.Plt
R7760 RTL.fn_nextpc
R7789 Coq.Init.Logic "x = y" type_scope
R7785 Maps "a ! b"
R7777 RTL.fn_code
R7791 Coq.Init.Datatypes.None
R7981 Maps.gmap
R7981 Maps.gmap
R8089 RTL.function
R8133 RTL.mkfunction
R8309 CSE.transf_code_wf
R8337 RTL.fn_code_wf
R8289 RTL.fn_nextpc
R8263 RTL.fn_entrypoint
R8219 CSE.transf_code
R8242 RTL.fn_code
R8196 RTL.fn_stacksize
R8174 RTL.fn_params
R8155 RTL.fn_sig
R8118 CSE.analyze
R8077 RTL.function
R8393 RTL.program
R8406 AST.transform_program
R8424 CSE.transf_function
R8382 RTL.program
FCSEproof
R453 CSE.Op
R486 Coqlib.Plt
R475 Coq.Lists.List.In
R501 CSE.Load
R544 Coqlib.Plt
R533 Coq.Lists.List.In
R418 CSE.rhs
R405 CSE.valnum
R648 Coq.Init.Logic "A /\ B" type_scope
R636 Coqlib.Plt
R651 CSEproof.wf_rhs
R619 CSE.rhs
R606 CSE.valnum
R593 CSE.valnum
R792 Coq.Init.Logic "A /\ B" type_scope
R763 CSEproof.wf_equation
R778 CSE.num_next
R737 Coq.Lists.List.In
R751 CSE.num_eqs
R740 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R852 Coqlib.Plt
R861 CSE.num_next
R840 Coq.Init.Logic "x = y" type_scope
R816 Maps.get
R831 CSE.num_reg
R842 Coq.Init.Datatypes.Some
R696 CSE.numbering
R902 CSEproof.wf_numbering
R915 CSE.empty_numbering
R1007 Maps.gempty
R1007 Maps.gempty
R1136 CSEproof.wf_rhs
R1117 CSEproof.wf_rhs
R1096 Coqlib.Ple
R1204 Coqlib.Plt_Ple_trans
R1204 Coqlib.Plt_Ple_trans
R1204 Coqlib.Plt_Ple_trans
R1350 CSEproof.wf_equation
R1323 CSEproof.wf_equation
R1302 Coqlib.Ple
R1425 Coqlib.Plt_Ple_trans
R1425 Coqlib.Plt_Ple_trans
R1465 CSEproof.wf_rhs_increasing
R1465 CSEproof.wf_rhs_increasing
R1615 Coq.Init.Logic "A /\ B" type_scope
R1599 CSEproof.wf_numbering
R1638 Coq.Init.Logic "A /\ B" type_scope
R1618 Coqlib.Plt
R1628 CSE.num_next
R1641 Coqlib.Ple
R1662 CSE.num_next
R1648 CSE.num_next
R1584 Coq.Init.Logic "x = y" type_scope
R1569 CSE.valnum_reg
R1586 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R1549 CSEproof.wf_numbering
R1787 Maps "a ! b"
R1778 CSE.num_reg
R1787 Maps "a ! b"
R1778 CSE.num_reg
R1876 Coqlib.Ple_refl
R1876 Coqlib.Ple_refl
R2001 CSE.num_next
R1972 CSEproof.wf_equation_increasing
R2001 CSE.num_next
R1972 CSEproof.wf_equation_increasing
R2020 Coqlib.Ple_succ
R2020 Coqlib.Ple_succ
R2047 Maps.gsspec
R2047 Maps.gsspec
R2077 Coqlib.peq
R2077 Coqlib.peq
R2108 CSE.num_next
R2108 CSE.num_next
R2127 Coqlib.Plt_succ
R2127 Coqlib.Plt_succ
R2157 Coqlib.Plt_trans_succ
R2157 Coqlib.Plt_trans_succ
R2196 Coqlib.Plt_succ
R2196 Coqlib.Plt_succ
R2212 Coqlib.Ple_succ
R2212 Coqlib.Ple_succ
R2342 Coq.Init.Logic "A /\ B" type_scope
R2326 CSEproof.wf_numbering
R2388 Coq.Init.Logic "A /\ B" type_scope
R2369 Coqlib.Plt
R2379 CSE.num_next
R2358 Coq.Lists.List.In
R2395 Coqlib.Ple
R2416 CSE.num_next
R2402 CSE.num_next
R2310 Coq.Init.Logic "x = y" type_scope
R2293 CSE.valnum_regs
R2312 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2273 CSEproof.wf_numbering
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R2555 CSE.valnum_reg
R2555 CSE.valnum_reg
R2600 CSE.valnum_regs
R2600 CSE.valnum_regs
R2742 CSEproof.wf_valnum_reg
R2742 CSEproof.wf_valnum_reg
R2923 Coqlib.Plt_Ple_trans
R2923 Coqlib.Plt_Ple_trans
R2964 Coqlib.Ple_trans
R2964 Coqlib.Ple_trans
R3077 Coq.Lists.List.In
R3080 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3064 Coq.Init.Logic "x = y" type_scope
R3041 CSE.find_valnum_rhs
R3066 Coq.Init.Datatypes.Some
R3168 CSE.eq_rhs
R3168 CSE.eq_rhs
R3331 CSEproof.wf_numbering
R3345 CSE.add_rhs
R3303 CSEproof.wf_rhs
R3313 CSE.num_next
R3283 CSEproof.wf_numbering
R3420 CSE.find_valnum_rhs
R3442 CSE.num_eqs
R3420 CSE.find_valnum_rhs
R3442 CSE.num_eqs
R3513 Maps.gsspec
R3513 Maps.gsspec
R3533 Coqlib.peq
R3533 Coqlib.peq
R3596 CSEproof.find_valnum_rhs_correct
R3596 CSEproof.find_valnum_rhs_correct
R3728 Coqlib.Plt_succ
R3728 Coqlib.Plt_succ
R3770 CSE.num_next
R3744 CSEproof.wf_rhs_increasing
R3770 CSE.num_next
R3744 CSEproof.wf_rhs_increasing
R3789 Coqlib.Ple_succ
R3789 Coqlib.Ple_succ
R3844 CSE.num_next
R3813 CSEproof.wf_equation_increasing
R3844 CSE.num_next
R3813 CSEproof.wf_equation_increasing
R3861 Coqlib.Ple_succ
R3861 Coqlib.Ple_succ
R3899 Maps.gsspec
R3899 Maps.gsspec
R3919 Coqlib.peq
R3919 Coqlib.peq
R3966 Coqlib.Plt_succ
R3966 Coqlib.Plt_succ
R3991 Coqlib.Plt_trans_succ
R3991 Coqlib.Plt_trans_succ
R4081 CSEproof.wf_numbering
R4095 CSE.add_op
R4061 CSEproof.wf_numbering
R4158 CSE.valnum_regs
R4158 CSE.valnum_regs
R4209 CSEproof.wf_valnum_regs
R4209 CSEproof.wf_valnum_regs
R4265 CSEproof.wf_add_rhs
R4265 CSEproof.wf_add_rhs
R4359 CSEproof.wf_numbering
R4373 CSE.add_load
R4339 CSEproof.wf_numbering
R4448 CSE.valnum_regs
R4448 CSE.valnum_regs
R4499 CSEproof.wf_valnum_regs
R4499 CSEproof.wf_valnum_regs
R4555 CSEproof.wf_add_rhs
R4555 CSEproof.wf_add_rhs
R4680 Coq.Lists.List.incl
R4695 Coq.Lists.List "x :: y" list_scope
R4687 Coq.Lists.List "x :: y" list_scope
R4666 Coq.Lists.List.incl
R4655 Coq.Lists.List.list
R4655 Coq.Lists.List.list
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R4797 Coq.Lists.List.incl
R4808 CSE.kill_load_eqs
R4879 Coq.Lists.List.incl_refl
R4879 Coq.Lists.List.incl_refl
R4922 CSEproof.incl_same_head
R4922 CSEproof.incl_same_head
R4960 Coq.Lists.List.incl_tl
R4960 Coq.Lists.List.incl_tl
R5032 CSEproof.wf_numbering
R5046 CSE.kill_loads
R5014 CSEproof.wf_numbering
R5150 CSEproof.kill_load_eqs_incl
R5150 CSEproof.kill_load_eqs_incl
R5245 CSEproof.wf_numbering
R5259 CSE.transfer
R5227 CSEproof.wf_numbering
R5335 Maps "a ! b"
R5327 RTL.fn_code
R5335 Maps "a ! b"
R5327 RTL.fn_code
R5375 CSEproof.wf_add_op
R5375 CSEproof.wf_add_op
R5400 CSEproof.wf_add_load
R5400 CSEproof.wf_add_load
R5427 CSEproof.wf_kill_loads
R5427 CSEproof.wf_kill_loads
R5456 CSEproof.wf_empty_numbering
R5456 CSEproof.wf_empty_numbering
R5517 CSEproof.wf_numbering
R5540 Maps "a !! b"
R5531 CSE.analyze
R5590 CSE.fixpoint
R5676 RTL.fn_entrypoint
R5663 CSE.transfer
R5622 RTL.fn_nextpc
R5607 RTL.successors
R5590 CSE.fixpoint
R5676 RTL.fn_entrypoint
R5663 CSE.transfer
R5622 RTL.fn_nextpc
R5607 RTL.successors
R5761 CSEproof.wf_numbering
R5724 CSE.fixpoint_invariant
R5761 CSEproof.wf_numbering
R5724 CSE.fixpoint_invariant
R5791 CSEproof.wf_empty_numbering
R5791 CSEproof.wf_empty_numbering
R5823 CSEproof.wf_transfer
R5823 CSEproof.wf_transfer
R5856 Maps.gi
R5856 Maps.gi
R5871 CSEproof.wf_empty_numbering
R5871 CSEproof.wf_empty_numbering
R5968 CSE.valnum
R5995 Coqlib.peq
R6085 RTL.genv
R6104 Values.val
R6121 Mem.mem
R6237 Coq.Init.Logic "x = y" type_scope
R6215 Coqlib.Plt
R6185 CSE.valnum
R6173 Values.val
R6163 CSE.valnum
R6173 Values.val
R6163 CSE.valnum
R6292 CSEproof.valu_agree
R6514 CSEproof.valu_agree
R6491 Coqlib.Ple
R6456 CSEproof.valu_agree
R6421 CSEproof.valu_agree
R6617 Coqlib.Plt_Ple_trans
R6617 Coqlib.Plt_Ple_trans
R6813 Coq.Init.Logic "x = y" type_scope
R6800 Coq.Lists.List.map
R6815 Coq.Lists.List.map
R6783 Coqlib.Plt
R6772 Coq.Lists.List.In
R6728 CSEproof.valu_agree
R6852 Coqlib.list_map_exten
R6852 Coqlib.list_map_exten
R7066 CSE.numbering_holds
R7026 CSE.numbering_holds
R7006 CSEproof.wf_numbering
R6965 CSEproof.valu_agree
R6991 CSE.num_next
R7297 CSEproof.valu_agree_list
R7328 CSE.num_next
R7297 CSEproof.valu_agree_list
R7328 CSE.num_next
R7415 CSEproof.valu_agree_list
R7446 CSE.num_next
R7415 CSEproof.valu_agree_list
R7446 CSE.num_next
R7677 Coq.Init.Logic "'exists' x , p" type_scope
R7731 Coq.Init.Logic "A /\ B" type_scope
R7695 CSE.numbering_holds
R7753 Coq.Init.Logic "A /\ B" type_scope
R7746 Coq.Init.Logic "x = y" type_scope
R7750 Registers "a # b"
R7760 CSEproof.valu_agree
R7786 CSE.num_next
R7662 Coq.Init.Logic "x = y" type_scope
R7647 CSE.valnum_reg
R7664 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7607 CSE.numbering_holds
R7587 CSEproof.wf_numbering
R7863 Maps "a ! b"
R7855 CSE.num_reg
R7863 Maps "a ! b"
R7855 CSE.num_reg
R8037 CSEproof.valu_agree_refl
R8037 CSEproof.valu_agree_refl
R8170 CSEproof.set
R8194 Registers "a # b"
R8182 CSE.num_next
R8170 CSEproof.set
R8194 Registers "a # b"
R8182 CSE.num_next
R8219 CSEproof.valu_agree
R8245 CSE.num_next
R8219 CSEproof.valu_agree
R8245 CSE.num_next
R8294 CSEproof.gso
R8294 CSEproof.gso
R8335 CSEproof.numbering_holds_exten
R8335 CSEproof.numbering_holds_exten
R8489 Maps.gsspec
R8489 Maps.gsspec
R8519 Coqlib.peq
R8519 Coqlib.peq
R8554 Coqlib.peq_true
R8554 Coqlib.peq_true
R8584 Coqlib.peq
R8592 CSE.num_next
R8584 Coqlib.peq
R8592 CSE.num_next
R8681 Coqlib.Plt_strict
R8681 Coqlib.Plt_strict
R8738 CSEproof.gss
R8738 CSEproof.gss
R8913 Coq.Init.Logic "'exists' x , p" type_scope
R8967 Coq.Init.Logic "A /\ B" type_scope
R8931 CSE.numbering_holds
R9001 Coq.Init.Logic "A /\ B" type_scope
R8992 Coq.Init.Logic "x = y" type_scope
R8974 Coq.Lists.List.map
R8996 Registers "a ## b"
R9008 CSEproof.valu_agree
R9034 CSE.num_next
R8897 Coq.Init.Logic "x = y" type_scope
R8880 CSE.valnum_regs
R8899 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8840 CSE.numbering_holds
R8820 CSEproof.wf_numbering
R9192 CSEproof.valu_agree_refl
R9192 CSEproof.valu_agree_refl
R9242 CSE.valnum_reg
R9242 CSE.valnum_reg
R9287 CSE.valnum_regs
R9287 CSE.valnum_regs
R9413 CSEproof.valnum_reg_holds
R9413 CSEproof.valnum_reg_holds
R9495 CSEproof.wf_valnum_reg
R9495 CSEproof.wf_valnum_reg
R9696 CSEproof.valu_agree_trans
R9696 CSEproof.valu_agree_trans
R9826 CSE.Op
R9888 Coq.Init.Logic "x = y" type_scope
R9845 Op.eval_operation
R9870 Coq.Lists.List.map
R9890 Coq.Init.Datatypes.Some
R9901 CSE.Load
R9929 Coq.Init.Logic "'exists' x , p" type_scope
R10000 Coq.Init.Logic "A /\ B" type_scope
R9991 Coq.Init.Logic "x = y" type_scope
R9945 Op.eval_addressing
R9973 Coq.Lists.List.map
R9993 Coq.Init.Datatypes.Some
R10025 Coq.Init.Logic "x = y" type_scope
R10009 Mem.loadv
R10027 Coq.Init.Datatypes.Some
R9791 Values.val
R9782 CSE.rhs
R9772 Values.val
R9762 CSE.valnum
R10181 Coq.Init.Logic "x = y" type_scope
R10130 CSE.equation_holds
R10102 CSEproof.rhs_evals_to
R10440 CSE.equation_holds
R10456 CSEproof.set
R10412 CSEproof.rhs_evals_to
R10392 CSEproof.wf_rhs
R10578 CSEproof.gss
R10578 CSEproof.gss
R10714 Coq.Init.Logic "x = y" type_scope
R10684 Coq.Lists.List.map
R10689 CSEproof.set
R10716 Coq.Lists.List.map
R10657 Coqlib.Plt
R10646 Coq.Lists.List.In
R10610 Coq.Lists.List.list
R10615 CSE.valnum
R10714 Coq.Init.Logic "x = y" type_scope
R10684 Coq.Lists.List.map
R10689 CSEproof.set
R10716 Coq.Lists.List.map
R10657 Coqlib.Plt
R10646 Coq.Lists.List.In
R10610 Coq.Lists.List.list
R10615 CSE.valnum
R10748 Coqlib.list_map_exten
R10748 Coqlib.list_map_exten
R10793 CSEproof.gso
R10793 CSEproof.gso
R10809 Coqlib.Plt_ne
R10809 Coqlib.Plt_ne
R11044 CSE.numbering_satisfiable
R11088 CSE.add_rhs
R11075 Registers "a # b <- c"
R11015 CSEproof.rhs_evals_to
R10975 CSE.numbering_holds
R10947 CSEproof.wf_rhs
R10957 CSE.num_next
R10927 CSEproof.wf_numbering
R11150 CSE.find_valnum_rhs
R11172 CSE.num_eqs
R11150 CSE.find_valnum_rhs
R11172 CSE.num_eqs
R11294 Registers.gsspec
R11294 Registers.gsspec
R11320 Maps.gsspec
R11320 Maps.gsspec
R11352 Coqlib.peq
R11352 Coqlib.peq
R11382 CSEproof.equation_evals_to_holds_1
R11382 CSEproof.equation_evals_to_holds_1
R11434 CSEproof.find_valnum_rhs_correct
R11434 CSEproof.find_valnum_rhs_correct
R11534 CSEproof.set
R11546 CSE.num_next
R11534 CSEproof.set
R11546 CSE.num_next
R11580 CSEproof.valu_agree
R11606 CSE.num_next
R11580 CSEproof.valu_agree
R11606 CSE.num_next
R11655 CSEproof.gso
R11655 CSEproof.gso
R11696 CSEproof.numbering_holds_exten
R11696 CSEproof.numbering_holds_exten
R11861 CSEproof.equation_evals_to_holds_2
R11861 CSEproof.equation_evals_to_holds_2
R11913 Registers.gsspec
R11913 Registers.gsspec
R11936 Maps.gsspec
R11936 Maps.gsspec
R11966 Coqlib.peq
R11966 Coqlib.peq
R12023 CSEproof.gss
R12023 CSEproof.gss
R12211 CSE.numbering_satisfiable
R12256 CSE.add_op
R12242 Registers "a # b <- c"
R12197 Coq.Init.Logic "x = y" type_scope
R12164 Op.eval_operation
R12190 Registers "a ## b"
R12199 Coq.Init.Datatypes.Some
R12124 CSE.numbering_satisfiable
R12104 CSEproof.wf_numbering
R12337 CSE.valnum_regs
R12337 CSE.valnum_regs
R12390 CSEproof.valnum_regs_holds
R12390 CSEproof.valnum_regs_holds
R12471 CSEproof.wf_valnum_regs
R12471 CSEproof.wf_valnum_regs
R12528 CSEproof.add_rhs_satisfiable
R12528 CSEproof.add_rhs_satisfiable
R12803 CSE.numbering_satisfiable
R12859 CSE.add_load
R12840 Registers "a # b <- c"
R12789 Coq.Init.Logic "x = y" type_scope
R12773 Mem.loadv
R12791 Coq.Init.Datatypes.Some
R12759 Coq.Init.Logic "x = y" type_scope
R12723 Op.eval_addressing
R12752 Registers "a ## b"
R12761 Coq.Init.Datatypes.Some
R12683 CSE.numbering_satisfiable
R12663 CSEproof.wf_numbering
R12952 CSE.valnum_regs
R12952 CSE.valnum_regs
R13005 CSEproof.valnum_regs_holds
R13005 CSEproof.valnum_regs_holds
R13086 CSEproof.wf_valnum_regs
R13086 CSEproof.wf_valnum_regs
R13143 CSEproof.add_rhs_satisfiable
R13143 CSEproof.add_rhs_satisfiable
R13325 CSE.Op
R13335 Coq.Init.Logic.True
R13342 CSE.Load
R13356 Coq.Init.Logic.False
R13273 Coq.Lists.List.In
R13286 CSE.kill_load_eqs
R13276 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13640 CSE.numbering_satisfiable
R13675 CSE.kill_loads
R13600 CSE.numbering_satisfiable
R13748 CSEproof.kill_load_eqs_incl
R13770 CSE.num_eqs
R13748 CSEproof.kill_load_eqs_incl
R13770 CSE.num_eqs
R13863 CSEproof.kill_load_eqs_ops
R13863 CSEproof.kill_load_eqs_ops
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R14040 Coq.Init.Logic "x = y" type_scope
R14037 Maps "a ! b"
R14029 CSE.num_reg
R14042 Coq.Init.Datatypes.Some
R14014 Coq.Init.Logic "x = y" type_scope
R13999 CSE.reg_valnum
R14016 Coq.Init.Datatypes.Some
R14102 Maps.fold_spec
R14102 Maps.fold_spec
R14306 Coq.Init.Logic "A \/ B" type_scope
R14294 Coq.Lists.List.In
R14297 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14314 Coq.Init.Logic "x = y" type_scope
R14316 Coq.Init.Datatypes.Some
R14277 Coq.Init.Logic "x = y" type_scope
R14147 Coq.Lists.List.fold_left
R14223 Coqlib.peq
R14228 Coq.Init.Datatypes.snd
R14242 Coq.Init.Datatypes.Some
R14248 Coq.Init.Datatypes.fst
R14198 Coq.Init.Datatypes "x * y" type_scope
R14194 Registers.reg
R14200 CSE.valnum
R14178 Coq.Init.Datatypes.option
R14185 Registers.reg
R14279 Coq.Init.Datatypes.Some
R14306 Coq.Init.Logic "A \/ B" type_scope
R14294 Coq.Lists.List.In
R14297 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14314 Coq.Init.Logic "x = y" type_scope
R14316 Coq.Init.Datatypes.Some
R14277 Coq.Init.Logic "x = y" type_scope
R14147 Coq.Lists.List.fold_left
R14223 Coqlib.peq
R14228 Coq.Init.Datatypes.snd
R14242 Coq.Init.Datatypes.Some
R14248 Coq.Init.Datatypes.fst
R14198 Coq.Init.Datatypes "x * y" type_scope
R14194 Registers.reg
R14200 CSE.valnum
R14178 Coq.Init.Datatypes.option
R14185 Registers.reg
R14279 Coq.Init.Datatypes.Some
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R14437 Coqlib.peq
R14437 Coqlib.peq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R14574 Maps.elements_complete
R14574 Maps.elements_complete
R14745 CSEproof.rhs_evals_to
R14768 Registers "a # b"
R14731 Coq.Init.Logic "x = y" type_scope
R14717 CSE.find_rhs
R14733 Coq.Init.Datatypes.Some
R14678 CSE.numbering_holds
R14840 CSE.find_valnum_rhs
R14862 CSE.num_eqs
R14840 CSE.find_valnum_rhs
R14862 CSE.num_eqs
R14895 CSEproof.find_valnum_rhs_correct
R14895 CSEproof.find_valnum_rhs_correct
R14950 CSEproof.reg_valnum_correct
R14950 CSEproof.reg_valnum_correct
R15277 Coq.Init.Logic "x = y" type_scope
R15244 Op.eval_operation
R15270 Registers "a ## b"
R15279 Coq.Init.Datatypes.Some
R15286 Registers "a # b"
R15230 Coq.Init.Logic "x = y" type_scope
R15212 CSE.find_op
R15232 Coq.Init.Datatypes.Some
R15172 CSE.numbering_satisfiable
R15152 CSEproof.wf_numbering
R15362 CSE.valnum_regs
R15362 CSE.valnum_regs
R15419 CSEproof.valnum_regs_holds
R15419 CSEproof.valnum_regs_holds
R15520 CSEproof.rhs_evals_to
R15552 Registers "a # b"
R15540 CSE.Op
R15520 CSEproof.rhs_evals_to
R15552 Registers "a # b"
R15540 CSE.Op
R15566 CSEproof.find_rhs_correct
R15566 CSEproof.find_rhs_correct
R15759 Coq.Init.Logic "'exists' x , p" type_scope
R15816 Coq.Init.Logic "A /\ B" type_scope
R15807 Coq.Init.Logic "x = y" type_scope
R15771 Op.eval_addressing
R15800 Registers "a ## b"
R15809 Coq.Init.Datatypes.Some
R15837 Coq.Init.Logic "x = y" type_scope
R15821 Mem.loadv
R15839 Coq.Init.Datatypes.Some
R15846 Registers "a # b"
R15745 Coq.Init.Logic "x = y" type_scope
R15717 CSE.find_load
R15747 Coq.Init.Datatypes.Some
R15677 CSE.numbering_satisfiable
R15657 CSEproof.wf_numbering
R15924 CSE.valnum_regs
R15924 CSE.valnum_regs
R15981 CSEproof.valnum_regs_holds
R15981 CSEproof.valnum_regs_holds
R16082 CSEproof.rhs_evals_to
R16124 Registers "a # b"
R16102 CSE.Load
R16082 CSEproof.rhs_evals_to
R16124 Registers "a # b"
R16102 CSE.Load
R16138 CSEproof.find_rhs_correct
R16138 CSEproof.find_rhs_correct
R16381 CSE.numbering_satisfiable
R16417 CSE.transfer
R16341 CSE.numbering_satisfiable
R16321 CSEproof.wf_numbering
R16302 Coq.Init.Logic "x = y" type_scope
R16307 RTL.fn_code
R16257 RTL.exec_instr
R16529 CSEproof.add_op_satisfiable
R16529 CSEproof.add_op_satisfiable
R16579 CSEproof.add_load_satisfiable
R16579 CSEproof.add_load_satisfiable
R16632 CSEproof.kill_load_satisfiable
R16632 CSEproof.kill_load_satisfiable
R16684 CSE.empty_numbering_satisfiable
R16684 CSE.empty_numbering_satisfiable
R16906 CSE.numbering_satisfiable
R16951 Maps "a !! b"
R16942 CSE.analyze
R16852 CSE.numbering_satisfiable
R16895 Maps "a !! b"
R16886 CSE.analyze
R16833 Coq.Init.Logic "x = y" type_scope
R16838 RTL.fn_code
R16788 RTL.exec_instr
R17016 CSEproof.wf_analyze
R17016 CSEproof.wf_analyze
R17062 CSE.fixpoint
R17148 RTL.fn_entrypoint
R17135 CSE.transfer
R17094 RTL.fn_nextpc
R17079 RTL.successors
R17062 CSE.fixpoint
R17148 RTL.fn_entrypoint
R17135 CSE.transfer
R17094 RTL.fn_nextpc
R17079 RTL.successors
R17206 CSE.numbering_satisfiable
R17242 CSE.transfer
R17259 Maps "a !! b"
R17206 CSE.numbering_satisfiable
R17242 CSE.transfer
R17259 Maps "a !! b"
R17278 CSEproof.transfer_correct
R17278 CSEproof.transfer_correct
R17313 CSE.ge
R17336 CSE.transfer
R17353 Maps "a !! b"
R17329 Maps "a !! b"
R17313 CSE.ge
R17336 CSE.transfer
R17353 Maps "a !! b"
R17329 Maps "a !! b"
R17372 CSE.fixpoint_solution
R17372 CSE.fixpoint_solution
R17415 RTL.fn_code_wf
R17415 RTL.fn_code_wf
R17483 RTL.exec_instr_present
R17483 RTL.exec_instr_present
R17563 RTL.successors_correct
R17563 RTL.successors_correct
R17626 Maps.gi
R17626 Maps.gi
R17641 CSE.empty_numbering_satisfiable
R17641 CSE.empty_numbering_satisfiable
R17864 CSE.numbering_satisfiable
R17909 Maps "a !! b"
R17900 CSE.analyze
R17810 CSE.numbering_satisfiable
R17853 Maps "a !! b"
R17844 CSE.analyze
R17791 Coq.Init.Logic "x = y" type_scope
R17796 RTL.fn_code
R17745 RTL.exec_instrs
R17970 CSEproof.analysis_correct_1
R17970 CSEproof.analysis_correct_1
R18069 CSE.numbering_satisfiable
R18112 Maps "a !! b"
R18119 RTL.fn_entrypoint
R18103 CSE.analyze
R18175 Maps "a !! b"
R18182 RTL.fn_entrypoint
R18166 CSE.analyze
R18214 CSE.empty_numbering
R18175 Maps "a !! b"
R18182 RTL.fn_entrypoint
R18166 CSE.analyze
R18214 CSE.empty_numbering
R18239 CSE.empty_numbering_satisfiable
R18239 CSE.empty_numbering_satisfiable
R18296 CSE.fixpoint
R18382 RTL.fn_entrypoint
R18369 CSE.transfer
R18328 RTL.fn_nextpc
R18313 RTL.successors
R18296 CSE.fixpoint
R18382 RTL.fn_entrypoint
R18369 CSE.transfer
R18328 RTL.fn_nextpc
R18313 RTL.successors
R18465 CSE.top
R18444 CSE.empty_numbering
R18465 CSE.top
R18444 CSE.empty_numbering
R18488 CSE.fixpoint_entry
R18488 CSE.fixpoint_entry
R18544 Maps.gi
R18544 Maps.gi
R18598 RTL.program
R18620 CSE.transf_program
R18651 Globalenvs.globalenv
R18683 Globalenvs.globalenv
R18775 Coq.Init.Logic "x = y" type_scope
R18752 Globalenvs.find_symbol
R18777 Globalenvs.find_symbol
R18744 AST.ident
R18807 Globalenvs.find_symbol_transf
R18831 CSE.transf_function
R18979 Coq.Init.Logic "x = y" type_scope
R18957 Globalenvs.find_funct
R18981 Coq.Init.Datatypes.Some
R18987 CSE.transf_function
R18943 Coq.Init.Logic "x = y" type_scope
R18922 Globalenvs.find_funct
R18945 Coq.Init.Datatypes.Some
R18905 RTL.function
R18896 Values.val
R19015 Globalenvs.find_funct_transf
R19042 CSE.transf_function
R19200 Coq.Init.Logic "x = y" type_scope
R19174 Globalenvs.find_funct_ptr
R19202 Coq.Init.Datatypes.Some
R19208 CSE.transf_function
R19160 Coq.Init.Logic "x = y" type_scope
R19135 Globalenvs.find_funct_ptr
R19162 Coq.Init.Datatypes.Some
R19118 RTL.function
R19107 Values.block
R19236 Globalenvs.find_funct_ptr_transf
R19267 CSE.transf_function
R19555 RTL.exec_instr
R19571 CSE.transf_code
R19584 CSE.analyze
R19502 CSE.numbering_satisfiable
R19545 Maps "a !! b"
R19536 CSE.analyze
R19468 Coq.Init.Logic "x = y" type_scope
R19473 RTL.fn_code
R19426 Mem.mem
R19413 RTL.regset
R19401 RTL.node
R19382 Mem.mem
R19370 RTL.regset
R19359 RTL.node
R19341 Values.val
R19330 RTL.code
R19887 RTL.exec_instrs
R19904 CSE.transf_code
R19917 CSE.analyze
R19834 CSE.numbering_satisfiable
R19877 Maps "a !! b"
R19868 CSE.analyze
R19800 Coq.Init.Logic "x = y" type_scope
R19805 RTL.fn_code
R19758 Mem.mem
R19745 RTL.regset
R19733 RTL.node
R19714 Mem.mem
R19702 RTL.regset
R19691 RTL.node
R19673 Values.val
R19662 RTL.code
R20078 RTL.exec_function
R20097 CSE.transf_function
R20061 Mem.mem
R20051 Values.val
R20032 Mem.mem
R20018 Coq.Lists.List.list
R20023 Values.val
R19997 RTL.function
R20196 Coq.Init.Logic "x = y" type_scope
R20179 Maps.get
R20198 Coq.Init.Datatypes.Some
R20215 RTL.function
R20274 Coq.Init.Logic "x = y" type_scope
R20269 Maps "a ! b"
R20244 CSE.transf_code
R20257 CSE.analyze
R20276 Coq.Init.Datatypes.Some
R20281 CSE.transf_instr
R20304 Maps "a !! b"
R20295 CSE.analyze
R20369 Maps.gmap
R20540 CSEproof.exec_function_prop
R20502 RTL.exec_function
R20592 RTL.exec_function_ind_3
R20658 CSEproof.exec_function_prop
R20641 CSEproof.exec_instrs_prop
R20625 CSEproof.exec_instr_prop
R20592 RTL.exec_function_ind_3
R20658 CSEproof.exec_function_prop
R20641 CSEproof.exec_instrs_prop
R20625 CSEproof.exec_instr_prop
R20747 RTL.exec_Inop
R20747 RTL.exec_Inop
R20820 Coq.Init.Logic "x = y" type_scope
R20786 Op.eval_operation
R20813 Registers "a ## b"
R20822 Coq.Init.Datatypes.Some
R20820 Coq.Init.Logic "x = y" type_scope
R20786 Op.eval_operation
R20813 Registers "a ## b"
R20822 Coq.Init.Datatypes.Some
R20856 Op.eval_operation_preserved
R20856 Op.eval_operation_preserved
R20888 CSEproof.symbols_preserved
R20888 CSEproof.symbols_preserved
R20915 CSE.is_trivial_op
R20915 CSE.is_trivial_op
R20950 RTL.exec_Iop'
R20950 RTL.exec_Iop'
R20979 CSE.find_op
R20997 Maps "a !! b"
R20988 CSE.analyze
R20979 CSE.find_op
R20997 Maps "a !! b"
R20988 CSE.analyze
R21042 RTL.exec_Iop'
R21042 RTL.exec_Iop'
R21111 Coq.Init.Logic "x = y" type_scope
R21078 Op.eval_operation
R21104 Registers "a ## b"
R21113 Coq.Init.Datatypes.Some
R21120 Registers "a # b"
R21111 Coq.Init.Logic "x = y" type_scope
R21078 Op.eval_operation
R21104 Registers "a ## b"
R21113 Coq.Init.Datatypes.Some
R21120 Registers "a # b"
R21136 CSEproof.find_op_correct
R21136 CSEproof.find_op_correct
R21171 CSEproof.wf_analyze
R21171 CSEproof.wf_analyze
R21221 RTL.exec_Iop'
R21221 RTL.exec_Iop'
R21301 Coq.Init.Logic "x = y" type_scope
R21264 Op.eval_addressing
R21294 Registers "a ## b"
R21303 Coq.Init.Datatypes.Some
R21301 Coq.Init.Logic "x = y" type_scope
R21264 Op.eval_addressing
R21294 Registers "a ## b"
R21303 Coq.Init.Datatypes.Some
R21337 Op.eval_addressing_preserved
R21337 Op.eval_addressing_preserved
R21370 CSEproof.symbols_preserved
R21370 CSEproof.symbols_preserved
R21399 CSE.find_load
R21419 Maps "a !! b"
R21410 CSE.analyze
R21399 CSE.find_load
R21419 Maps "a !! b"
R21410 CSE.analyze
R21472 RTL.exec_Iop'
R21472 RTL.exec_Iop'
R21508 Coq.Init.Logic "'exists' x , p" type_scope
R21580 Coq.Init.Logic "A /\ B" type_scope
R21554 Coq.Init.Logic "x = y" type_scope
R21518 Op.eval_addressing
R21547 Registers "a ## b"
R21556 Coq.Init.Datatypes.Some
R21599 Coq.Init.Logic "x = y" type_scope
R21583 Mem.loadv
R21601 Coq.Init.Datatypes.Some
R21608 Registers "a # b"
R21508 Coq.Init.Logic "'exists' x , p" type_scope
R21580 Coq.Init.Logic "A /\ B" type_scope
R21554 Coq.Init.Logic "x = y" type_scope
R21518 Op.eval_addressing
R21547 Registers "a ## b"
R21556 Coq.Init.Datatypes.Some
R21599 Coq.Init.Logic "x = y" type_scope
R21583 Mem.loadv
R21601 Coq.Init.Datatypes.Some
R21608 Registers "a # b"
R21624 CSEproof.find_load_correct
R21624 CSEproof.find_load_correct
R21661 CSEproof.wf_analyze
R21661 CSEproof.wf_analyze
R21739 RTL.exec_Iload'
R21739 RTL.exec_Iload'
R21822 Coq.Init.Logic "x = y" type_scope
R21785 Op.eval_addressing
R21815 Registers "a ## b"
R21824 Coq.Init.Datatypes.Some
R21822 Coq.Init.Logic "x = y" type_scope
R21785 Op.eval_addressing
R21815 Registers "a ## b"
R21824 Coq.Init.Datatypes.Some
R21858 Op.eval_addressing_preserved
R21858 Op.eval_addressing_preserved
R21891 CSEproof.symbols_preserved
R21891 CSEproof.symbols_preserved
R21926 RTL.exec_Istore
R21926 RTL.exec_Istore
R21996 Coq.Init.Logic "x = y" type_scope
R21971 RTL.find_function
R21998 Coq.Init.Datatypes.Some
R22004 CSE.transf_function
R21996 Coq.Init.Logic "x = y" type_scope
R21971 RTL.find_function
R21998 Coq.Init.Datatypes.Some
R22004 CSE.transf_function
R22073 CSEproof.functions_translated
R22073 CSEproof.functions_translated
R22113 CSEproof.symbols_preserved
R22113 CSEproof.symbols_preserved
R22142 Globalenvs.find_symbol
R22142 Globalenvs.find_symbol
R22176 CSEproof.funct_ptr_translated
R22176 CSEproof.funct_ptr_translated
R22256 CSE.transf_function
R22234 RTL.exec_Icall
R22256 CSE.transf_function
R22234 RTL.exec_Icall
R22319 RTL.exec_Icond_true
R22319 RTL.exec_Icond_true
R22380 RTL.exec_Icond_false
R22380 RTL.exec_Icond_false
R22427 RTL.exec_refl
R22427 RTL.exec_refl
R22458 RTL.exec_one
R22458 RTL.exec_one
R22497 RTL.exec_trans
R22497 RTL.exec_trans
R22542 CSEproof.analysis_correct_N
R22542 CSEproof.analysis_correct_N
R22626 RTL.exec_funct
R22626 RTL.exec_funct
R22680 CSEproof.analysis_correct_entry
R22680 CSEproof.analysis_correct_entry
R22793 RTL.exec_program
R22770 RTL.exec_program
R22762 Values.val
R22904 CSE.transf_function
R22904 CSE.transf_function
R22975 AST.prog_main
R22952 AST.prog_main
R22975 AST.prog_main
R22952 AST.prog_main
R23002 CSEproof.symbols_preserved
R23002 CSEproof.symbols_preserved
R23048 CSEproof.funct_ptr_translated
R23048 CSEproof.funct_ptr_translated
R23138 CSE.analyze
R23138 CSE.analyze
R23171 CSEproof.transf_function_correct
R23171 CSEproof.transf_function_correct
R23237 Globalenvs.init_mem_transf
R23237 Globalenvs.init_mem_transf
FLocations
R1102 Coq.Init.Specif "{ A } + { B }" type_scope
R1106 Coq.Init.Logic "x = y" type_scope
R1118 Coq.Init.Logic "x <> y" type_scope
R1095 Locations.mreg
R1095 Locations.mreg
R1188 AST.typ
R1214 Locations.R3
R1220 AST.Tint
R1228 Locations.R4
R1234 AST.Tint
R1242 Locations.R5
R1248 AST.Tint
R1256 Locations.R6
R1262 AST.Tint
R1271 Locations.R7
R1277 AST.Tint
R1285 Locations.R8
R1291 AST.Tint
R1299 Locations.R9
R1305 AST.Tint
R1313 Locations.R10
R1320 AST.Tint
R1329 Locations.R13
R1336 AST.Tint
R1343 Locations.R14
R1350 AST.Tint
R1357 Locations.R15
R1364 AST.Tint
R1371 Locations.R16
R1378 AST.Tint
R1387 Locations.R17
R1394 AST.Tint
R1401 Locations.R18
R1408 AST.Tint
R1415 Locations.R19
R1422 AST.Tint
R1429 Locations.R20
R1436 AST.Tint
R1445 Locations.R21
R1452 AST.Tint
R1459 Locations.R22
R1466 AST.Tint
R1473 Locations.R23
R1480 AST.Tint
R1487 Locations.R24
R1494 AST.Tint
R1503 Locations.R25
R1510 AST.Tint
R1517 Locations.R26
R1524 AST.Tint
R1531 Locations.R27
R1538 AST.Tint
R1545 Locations.R28
R1552 AST.Tint
R1561 Locations.R29
R1568 AST.Tint
R1575 Locations.R30
R1582 AST.Tint
R1589 Locations.R31
R1596 AST.Tint
R1605 Locations.F1
R1611 AST.Tfloat
R1621 Locations.F2
R1627 AST.Tfloat
R1637 Locations.F3
R1643 AST.Tfloat
R1653 Locations.F4
R1659 AST.Tfloat
R1670 Locations.F5
R1676 AST.Tfloat
R1686 Locations.F6
R1692 AST.Tfloat
R1702 Locations.F7
R1708 AST.Tfloat
R1718 Locations.F8
R1724 AST.Tfloat
R1735 Locations.F9
R1741 AST.Tfloat
R1751 Locations.F10
R1758 AST.Tfloat
R1767 Locations.F14
R1774 AST.Tfloat
R1783 Locations.F15
R1790 AST.Tfloat
R1801 Locations.F16
R1808 AST.Tfloat
R1817 Locations.F17
R1824 AST.Tfloat
R1833 Locations.F18
R1840 AST.Tfloat
R1849 Locations.F19
R1856 AST.Tfloat
R1867 Locations.F20
R1874 AST.Tfloat
R1883 Locations.F21
R1890 AST.Tfloat
R1899 Locations.F22
R1906 AST.Tfloat
R1915 Locations.F23
R1922 AST.Tfloat
R1933 Locations.F24
R1940 AST.Tfloat
R1949 Locations.F25
R1956 AST.Tfloat
R1965 Locations.F26
R1972 AST.Tfloat
R1981 Locations.F27
R1988 AST.Tfloat
R1999 Locations.F28
R2006 AST.Tfloat
R2015 Locations.F29
R2022 AST.Tfloat
R2031 Locations.F30
R2038 AST.Tfloat
R2047 Locations.F31
R2054 AST.Tfloat
R2065 Locations.IT1
R2072 AST.Tint
R2079 Locations.IT2
R2086 AST.Tint
R2093 Locations.IT3
R2100 AST.Tint
R2109 Locations.FT1
R2116 AST.Tfloat
R2125 Locations.FT2
R2132 AST.Tfloat
R2141 Locations.FT3
R2148 AST.Tfloat
R1181 Locations.mreg
R2224 Coq.NArith.BinPos.positive
R2255 Locations.R3
R2266 Locations.R4
R2277 Locations.R5
R2288 Locations.R6
R2300 Locations.R7
R2311 Locations.R8
R2322 Locations.R9
R2333 Locations.R10
R2346 Locations.R13
R2357 Locations.R14
R2369 Locations.R15
R2381 Locations.R16
R2395 Locations.R17
R2407 Locations.R18
R2419 Locations.R19
R2431 Locations.R20
R2445 Locations.R21
R2457 Locations.R22
R2469 Locations.R23
R2481 Locations.R24
R2495 Locations.R25
R2507 Locations.R26
R2519 Locations.R27
R2531 Locations.R28
R2545 Locations.R29
R2557 Locations.R30
R2569 Locations.R31
R2583 Locations.F1
R2595 Locations.F2
R2607 Locations.F3
R2619 Locations.F4
R2632 Locations.F5
R2644 Locations.F6
R2656 Locations.F7
R2668 Locations.F8
R2681 Locations.F9
R2693 Locations.F10
R2705 Locations.F14
R2717 Locations.F15
R2731 Locations.F16
R2743 Locations.F17
R2755 Locations.F18
R2767 Locations.F19
R2781 Locations.F20
R2793 Locations.F21
R2805 Locations.F22
R2817 Locations.F23
R2831 Locations.F24
R2843 Locations.F25
R2855 Locations.F26
R2867 Locations.F27
R2881 Locations.F28
R2893 Locations.F29
R2905 Locations.F30
R2917 Locations.F31
R2931 Locations.IT1
R2943 Locations.IT2
R2955 Locations.IT3
R2969 Locations.FT1
R2981 Locations.FT2
R2993 Locations.FT3
R2217 Locations.mreg
R3085 Coq.Init.Logic "x = y" type_scope
R3063 Coq.Init.Logic "x = y" type_scope
R3049 Locations.mreg_index
R3065 Locations.mreg_index
R3263 AST.typ
R3258 Coq.ZArith.BinInt.Z
R3294 AST.typ
R3289 Coq.ZArith.BinInt.Z
R3325 AST.typ
R3320 Coq.ZArith.BinInt.Z
R3371 AST.typ
R3397 Locations.Local
R3420 Locations.Incoming
R3446 Locations.Outgoing
R3364 Locations.slot
R3511 Coq.Init.Specif "{ A } + { B }" type_scope
R3514 Coq.Init.Logic "x = y" type_scope
R3524 Coq.Init.Logic "x <> y" type_scope
R3504 Locations.slot
R3504 Locations.slot
R3577 Coq.Init.Specif "{ A } + { B }" type_scope
R3581 Coq.Init.Logic "x = y" type_scope
R3593 Coq.Init.Logic "x <> y" type_scope
R3571 AST.typ
R3571 AST.typ
R3577 Coq.Init.Specif "{ A } + { B }" type_scope
R3581 Coq.Init.Logic "x = y" type_scope
R3593 Coq.Init.Logic "x <> y" type_scope
R3571 AST.typ
R3571 AST.typ
R3634 Coqlib.zeq
R3634 Coqlib.zeq
R3724 Coq.ZArith.BinInt.Z
R3745 AST.Tint
R3757 AST.Tfloat
R3717 AST.typ
R3827 Coq.ZArith.BinInt "x > y" Z_scope
R3815 Locations.typesize
R3809 AST.typ
R3922 Locations.mreg
R3941 Locations.slot
R3997 AST.typ
R4027 Locations.R
R4034 Locations.mreg_type
R4052 Locations.S
R4059 Locations.slot_type
R3990 Locations.loc
R4112 Coq.Init.Specif "{ A } + { B }" type_scope
R4115 Coq.Init.Logic "x = y" type_scope
R4125 Coq.Init.Logic "x <> y" type_scope
R4106 Locations.loc
R4106 Locations.loc
R4168 Locations.mreg_eq
R4168 Locations.mreg_eq
R4183 Locations.slot_eq
R4183 Locations.slot_eq
R4269 Locations.R
R4275 Locations.R
R4286 Coq.Init.Logic "x <> y" type_scope
R4298 Locations.S
R4301 Locations.Local
R4315 Locations.S
R4318 Locations.Local
R4351 Coq.Init.Logic "A \/ B" type_scope
R4345 Coq.Init.Logic "x <> y" type_scope
R4357 Coq.Init.Logic "x <> y" type_scope
R4369 Locations.S
R4372 Locations.Incoming
R4389 Locations.S
R4392 Locations.Incoming
R4442 Coq.Init.Logic "A \/ B" type_scope
R4436 Coq.ZArith.BinInt "x <= y" Z_scope
R4422 Coq.ZArith.BinInt "x + y" Z_scope
R4424 Locations.typesize
R4462 Coq.ZArith.BinInt "x <= y" Z_scope
R4448 Coq.ZArith.BinInt "x + y" Z_scope
R4450 Locations.typesize
R4474 Locations.S
R4477 Locations.Outgoing
R4494 Locations.S
R4497 Locations.Outgoing
R4547 Coq.Init.Logic "A \/ B" type_scope
R4541 Coq.ZArith.BinInt "x <= y" Z_scope
R4527 Coq.ZArith.BinInt "x + y" Z_scope
R4529 Locations.typesize
R4567 Coq.ZArith.BinInt "x <= y" Z_scope
R4553 Coq.ZArith.BinInt "x + y" Z_scope
R4555 Locations.typesize
R4595 Coq.Init.Logic.True
R4226 Locations.loc
R4226 Locations.loc
R4647 Coq.Init.Logic "~ x" type_scope
R4649 Locations.diff
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R4752 Locations.typesize_pos
R4752 Locations.typesize_pos
R4793 Locations.typesize_pos
R4793 Locations.typesize_pos
R4882 Coq.Init.Logic "x <> y" type_scope
R4865 Locations.diff
R4938 Locations.same_not_diff
R4938 Locations.same_not_diff
R5017 Locations.diff
R5003 Locations.diff
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R5210 Coq.Init.Datatypes.bool
R5225 Coqlib.zeq
R5274 AST.Tint
R5282 Coq.Init.Datatypes.false
R5294 AST.Tfloat
R5307 Coqlib.zeq
R5315 Coq.ZArith.BinInt "x + y" Z_scope
R5338 Coq.Init.Datatypes.false
R5328 Coq.Init.Datatypes.true
R5240 Coq.Init.Datatypes.true
R5205 Coq.ZArith.BinInt.Z
R5205 Coq.ZArith.BinInt.Z
R5192 AST.typ
R5394 Coq.Init.Datatypes.bool
R5430 Locations.S
R5433 Locations.Incoming
R5450 Locations.S
R5453 Locations.Incoming
R5501 Coq.Bool.Bool "x || y" bool_scope
R5480 Locations.overlap_aux
R5504 Locations.overlap_aux
R5531 Locations.S
R5534 Locations.Outgoing
R5551 Locations.S
R5554 Locations.Outgoing
R5602 Coq.Bool.Bool "x || y" bool_scope
R5581 Locations.overlap_aux
R5605 Locations.overlap_aux
R5640 Coq.Init.Datatypes.false
R5387 Locations.loc
R5387 Locations.loc
R5747 Coq.Init.Logic "~ x" type_scope
R5772 Coq.Init.Logic "A \/ B" type_scope
R5766 Coq.ZArith.BinInt "x <= y" Z_scope
R5752 Coq.ZArith.BinInt "x + y" Z_scope
R5754 Locations.typesize
R5792 Coq.ZArith.BinInt "x <= y" Z_scope
R5778 Coq.ZArith.BinInt "x + y" Z_scope
R5780 Locations.typesize
R5733 Coq.Init.Logic "x = y" type_scope
R5712 Locations.overlap_aux
R5735 Coq.Init.Datatypes.true
R5846 Locations.typesize_pos
R5846 Locations.typesize_pos
R5887 Locations.typesize_pos
R5887 Locations.typesize_pos
R5946 Coqlib.zeq
R5946 Coqlib.zeq
R6022 Coqlib.zeq
R6030 Coq.ZArith.BinInt "x + y" Z_scope
R6022 Coqlib.zeq
R6030 Coq.ZArith.BinInt "x + y" Z_scope
R6193 Coq.Init.Logic "~ x" type_scope
R6218 Coq.Init.Logic "A \/ B" type_scope
R6212 Coq.ZArith.BinInt "x <= y" Z_scope
R6198 Coq.ZArith.BinInt "x + y" Z_scope
R6200 Locations.typesize
R6238 Coq.ZArith.BinInt "x <= y" Z_scope
R6224 Coq.ZArith.BinInt "x + y" Z_scope
R6226 Locations.typesize
R6179 Coq.Init.Logic "x = y" type_scope
R6158 Locations.overlap_aux
R6181 Coq.Init.Datatypes.true
R6279 Locations.overlap_aux_true_1
R6279 Locations.overlap_aux_true_1
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R6401 Coq.Init.Logic "~ x" type_scope
R6403 Locations.diff
R6391 Coq.Init.Logic "x = y" type_scope
R6377 Locations.overlap
R6393 Coq.Init.Datatypes.true
R6590 Coq.Bool.Bool.orb_true_elim
R6590 Coq.Bool.Bool.orb_true_elim
R6629 Locations.overlap_aux_true_1
R6629 Locations.overlap_aux_true_1
R6665 Locations.overlap_aux_true_2
R6665 Locations.overlap_aux_true_2
R6701 Coq.Bool.Bool.orb_true_elim
R6701 Coq.Bool.Bool.orb_true_elim
R6740 Locations.overlap_aux_true_1
R6740 Locations.overlap_aux_true_1
R6776 Locations.overlap_aux_true_2
R6776 Locations.overlap_aux_true_2
R6950 Coq.Init.Logic "A \/ B" type_scope
R6944 Coq.ZArith.BinInt "x <= y" Z_scope
R6930 Coq.ZArith.BinInt "x + y" Z_scope
R6932 Locations.typesize
R6970 Coq.ZArith.BinInt "x <= y" Z_scope
R6956 Coq.ZArith.BinInt "x + y" Z_scope
R6958 Locations.typesize
R6912 Coq.Init.Logic "x = y" type_scope
R6888 Coq.Bool.Bool "x || y" bool_scope
R6867 Locations.overlap_aux
R6891 Locations.overlap_aux
R6914 Coq.Init.Datatypes.false
R7034 Coq.Bool.Bool.orb_false_elim
R7034 Coq.Bool.Bool.orb_false_elim
R7114 Coqlib.zeq
R7114 Coqlib.zeq
R7169 Coqlib.zeq
R7169 Coqlib.zeq
R7272 Coqlib.zeq
R7280 Coq.ZArith.BinInt "x + y" Z_scope
R7272 Coqlib.zeq
R7280 Coq.ZArith.BinInt "x + y" Z_scope
R7329 Coqlib.zeq
R7337 Coq.ZArith.BinInt "x + y" Z_scope
R7329 Coqlib.zeq
R7337 Coq.ZArith.BinInt "x + y" Z_scope
R7386 Coqlib.zeq
R7394 Coq.ZArith.BinInt "x + y" Z_scope
R7386 Coqlib.zeq
R7394 Coq.ZArith.BinInt "x + y" Z_scope
R7443 Coqlib.zeq
R7451 Coq.ZArith.BinInt "x + y" Z_scope
R7443 Coqlib.zeq
R7451 Coq.ZArith.BinInt "x + y" Z_scope
R7579 Locations.diff
R7568 Coq.Init.Logic "x = y" type_scope
R7554 Locations.overlap
R7570 Coq.Init.Datatypes.false
R7545 Coq.Init.Logic "x <> y" type_scope
R7746 Coqlib.zeq
R7746 Coqlib.zeq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R7829 Locations.overlap_aux_false_1
R7829 Locations.overlap_aux_false_1
R7870 Locations.overlap_aux_false_1
R7870 Locations.overlap_aux_false_1
R7940 Coq.Lists.List.list
R7945 Locations.loc
R7930 Locations.loc
R7996 Coq.Lists.List.nil
R8003 Coq.Init.Logic.True
R8017 Coq.Lists.List "x :: y" list_scope
R8036 Coq.Init.Logic "A /\ B" type_scope
R8026 Locations.diff
R7940 Coq.Lists.List.list
R7945 Locations.loc
R7930 Locations.loc
R8113 Coq.Init.Logic "~ x" type_scope
R8115 Coq.Lists.List.In
R8099 Locations.notin
R8246 Locations.same_not_diff
R8246 Locations.same_not_diff
R8377 Locations.diff
R8365 Coq.Lists.List.In
R8353 Coq.Lists.List.In
R8315 Coq.Lists.List.list
R8320 Locations.loc
R8315 Coq.Lists.List.list
R8320 Locations.loc
R8467 Locations.disjoint
R8442 Locations.disjoint
R8454 Coq.Lists.List "x :: y" list_scope
R8628 Locations.disjoint
R8603 Locations.disjoint
R8618 Coq.Lists.List "x :: y" list_scope
R8770 Locations.disjoint
R8752 Locations.disjoint
R8830 Locations.diff_sym
R8830 Locations.diff_sym
R8925 Locations.diff
R8913 Coq.Lists.List.In
R8898 Locations.notin
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R9138 Locations.disjoint
R9123 Locations.notin
R9112 Coq.Lists.List.In
R9261 Locations.in_notin_diff
R9261 Locations.in_notin_diff
R9449 Locations.notin
R9438 Coq.Lists.List.In
R9420 Locations.disjoint
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R9645 Coq.Lists.List.list
R9650 Locations.loc
R9696 Coq.Lists.List.nil
R9779 Coq.Lists.List "x :: y" list_scope
R9738 Locations.notin
R9886 Coq.Init.Logic "A \/ B" type_scope
R9882 Coq.Init.Logic "x = y" type_scope
R9889 Locations.diff
R9868 Coq.Lists.List.In
R9847 Coq.Lists.List.In
R9821 Coq.Lists.List.list
R9826 Locations.loc
R9821 Coq.Lists.List.list
R9826 Locations.loc
R9980 Values.val
R9973 Locations.loc
R10015 Locations.t
R10028 Locations.loc
R10008 Values.val
R10075 Values.val
R10070 Locations.t
R10061 Locations.loc
R10132 Locations.t
R10166 Locations.eq
R10192 Locations.overlap
R10213 Values.Vundef
R10149 Locations.loc
R10127 Locations.t
R10118 Values.val
R10109 Locations.loc
R10272 Coq.Init.Logic "x = y" type_scope
R10259 Locations.set
R10316 Locations.eq
R10316 Locations.eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R10403 Coq.Init.Logic "x = y" type_scope
R10390 Locations.set
R10373 Locations.diff
R10449 Locations.eq
R10449 Locations.eq
R10488 Locations.same_not_diff
R10488 Locations.same_not_diff
R10525 Locations.overlap
R10525 Locations.overlap
R10560 Locations.overlap_not_diff
R10560 Locations.overlap_not_diff
FConventions
R144 Coq.Lists.List "x :: y" list_scope
R141 Locations.R3
R150 Coq.Lists.List "x :: y" list_scope
R147 Locations.R4
R156 Coq.Lists.List "x :: y" list_scope
R153 Locations.R5
R162 Coq.Lists.List "x :: y" list_scope
R159 Locations.R6
R168 Coq.Lists.List "x :: y" list_scope
R165 Locations.R7
R174 Coq.Lists.List "x :: y" list_scope
R171 Locations.R8
R180 Coq.Lists.List "x :: y" list_scope
R177 Locations.R9
R187 Coq.Lists.List "x :: y" list_scope
R183 Locations.R10
R195 Coq.Lists.List "x :: y" list_scope
R192 Locations.F1
R201 Coq.Lists.List "x :: y" list_scope
R198 Locations.F2
R207 Coq.Lists.List "x :: y" list_scope
R204 Locations.F3
R213 Coq.Lists.List "x :: y" list_scope
R210 Locations.F4
R219 Coq.Lists.List "x :: y" list_scope
R216 Locations.F5
R225 Coq.Lists.List "x :: y" list_scope
R222 Locations.F6
R231 Coq.Lists.List "x :: y" list_scope
R228 Locations.F7
R237 Coq.Lists.List "x :: y" list_scope
R234 Locations.F8
R243 Coq.Lists.List "x :: y" list_scope
R240 Locations.F9
R250 Coq.Lists.List "x :: y" list_scope
R246 Locations.F10
R253 Coq.Lists.List.nil
R293 Coq.Lists.List.map
R304 Conventions.destroyed_at_call_regs
R302 Locations.R
R370 Coq.Lists.List "x :: y" list_scope
R366 Locations.R13
R377 Coq.Lists.List "x :: y" list_scope
R373 Locations.R14
R384 Coq.Lists.List "x :: y" list_scope
R380 Locations.R15
R391 Coq.Lists.List "x :: y" list_scope
R387 Locations.R16
R398 Coq.Lists.List "x :: y" list_scope
R394 Locations.R17
R405 Coq.Lists.List "x :: y" list_scope
R401 Locations.R18
R412 Coq.Lists.List "x :: y" list_scope
R408 Locations.R19
R419 Coq.Lists.List "x :: y" list_scope
R415 Locations.R20
R426 Coq.Lists.List "x :: y" list_scope
R422 Locations.R21
R433 Coq.Lists.List "x :: y" list_scope
R429 Locations.R22
R443 Coq.Lists.List "x :: y" list_scope
R439 Locations.R23
R450 Coq.Lists.List "x :: y" list_scope
R446 Locations.R24
R457 Coq.Lists.List "x :: y" list_scope
R453 Locations.R25
R464 Coq.Lists.List "x :: y" list_scope
R460 Locations.R26
R471 Coq.Lists.List "x :: y" list_scope
R467 Locations.R27
R478 Coq.Lists.List "x :: y" list_scope
R474 Locations.R28
R485 Coq.Lists.List "x :: y" list_scope
R481 Locations.R29
R492 Coq.Lists.List "x :: y" list_scope
R488 Locations.R30
R499 Coq.Lists.List "x :: y" list_scope
R495 Locations.R31
R502 Coq.Lists.List.nil
R551 Coq.Lists.List "x :: y" list_scope
R547 Locations.F14
R558 Coq.Lists.List "x :: y" list_scope
R554 Locations.F15
R565 Coq.Lists.List "x :: y" list_scope
R561 Locations.F16
R572 Coq.Lists.List "x :: y" list_scope
R568 Locations.F17
R579 Coq.Lists.List "x :: y" list_scope
R575 Locations.F18
R586 Coq.Lists.List "x :: y" list_scope
R582 Locations.F19
R593 Coq.Lists.List "x :: y" list_scope
R589 Locations.F20
R600 Coq.Lists.List "x :: y" list_scope
R596 Locations.F21
R607 Coq.Lists.List "x :: y" list_scope
R603 Locations.F22
R617 Coq.Lists.List "x :: y" list_scope
R613 Locations.F23
R624 Coq.Lists.List "x :: y" list_scope
R620 Locations.F24
R631 Coq.Lists.List "x :: y" list_scope
R627 Locations.F25
R638 Coq.Lists.List "x :: y" list_scope
R634 Locations.F26
R645 Coq.Lists.List "x :: y" list_scope
R641 Locations.F27
R652 Coq.Lists.List "x :: y" list_scope
R648 Locations.F28
R659 Coq.Lists.List "x :: y" list_scope
R655 Locations.F29
R666 Coq.Lists.List "x :: y" list_scope
R662 Locations.F30
R673 Coq.Lists.List "x :: y" list_scope
R669 Locations.F31
R676 Coq.Lists.List.nil
R747 Locations.R13
R759 Locations.R14
R771 Locations.R15
R783 Locations.R16
R796 Locations.R17
R808 Locations.R18
R820 Locations.R19
R832 Locations.R20
R845 Locations.R21
R857 Locations.R22
R869 Locations.R23
R881 Locations.R24
R895 Locations.R25
R907 Locations.R26
R919 Locations.R27
R931 Locations.R28
R945 Locations.R29
R957 Locations.R30
R969 Locations.R31
R719 Locations.mreg
R1064 Locations.F14
R1076 Locations.F15
R1088 Locations.F16
R1100 Locations.F17
R1113 Locations.F18
R1125 Locations.F19
R1137 Locations.F20
R1149 Locations.F21
R1162 Locations.F22
R1174 Locations.F23
R1186 Locations.F24
R1198 Locations.F25
R1212 Locations.F26
R1224 Locations.F27
R1236 Locations.F28
R1248 Locations.F29
R1262 Locations.F30
R1274 Locations.F31
R1036 Locations.mreg
R1353 Coq.Init.Logic "A \/ B" type_scope
R1349 Coq.Init.Logic "x = y" type_scope
R1488 Coq.Init.Logic.False
R1606 Coq.Init.Logic "A \/ B" type_scope
R1602 Coq.Init.Logic "x = y" type_scope
R1649 Coq.Init.Logic "A \/ B" type_scope
R1645 Coq.Init.Logic "x = y" type_scope
R1678 Coq.Init.Logic.False
R1759 Coq.Init.Logic.False
R1749 Coq.Init.Logic "A \/ B" type_scope
R1745 Coq.Init.Logic "x = y" type_scope
R1877 Coq.Init.Logic.False
R1868 Coq.Init.Logic.False
R2013 Coq.ZArith.BinInt "x >= y" Z_scope
R1989 Conventions.index_int_callee_save
R1960 Coq.Lists.List.In
R1965 Conventions.int_callee_save_regs
R2200 Coq.ZArith.BinInt "x >= y" Z_scope
R2174 Conventions.index_float_callee_save
R2143 Coq.Lists.List.In
R2148 Conventions.float_callee_save_regs
R2363 Coq.Lists.List.In
R2368 Conventions.int_callee_save_regs
R2355 Coq.ZArith.BinInt "x >= y" Z_scope
R2331 Conventions.index_int_callee_save
R2540 Coq.Lists.List.In
R2545 Conventions.float_callee_save_regs
R2532 Coq.ZArith.BinInt "x >= y" Z_scope
R2506 Conventions.index_float_callee_save
R2793 Coq.Init.Logic "x <> y" type_scope
R2768 Conventions.index_int_callee_save
R2796 Conventions.index_int_callee_save
R2757 Coq.Init.Logic "x <> y" type_scope
R2722 Coq.Lists.List.In
R2728 Conventions.int_callee_save_regs
R2690 Coq.Lists.List.In
R2696 Conventions.int_callee_save_regs
R3096 Coq.Init.Logic "x <> y" type_scope
R3069 Conventions.index_float_callee_save
R3099 Conventions.index_float_callee_save
R3058 Coq.Init.Logic "x <> y" type_scope
R3021 Coq.Lists.List.In
R3027 Conventions.float_callee_save_regs
R2987 Coq.Lists.List.In
R2993 Conventions.float_callee_save_regs
R3280 Coqlib.list_disjoint
R3315 Conventions.float_callee_save_regs
R3294 Conventions.int_callee_save_regs
R3449 Coq.Lists.List "x :: y" list_scope
R3443 Locations.R
R3445 Locations.IT1
R3458 Coq.Lists.List "x :: y" list_scope
R3452 Locations.R
R3454 Locations.IT2
R3467 Coq.Lists.List "x :: y" list_scope
R3461 Locations.R
R3463 Locations.IT3
R3476 Coq.Lists.List "x :: y" list_scope
R3470 Locations.R
R3472 Locations.FT1
R3485 Coq.Lists.List "x :: y" list_scope
R3479 Locations.R
R3481 Locations.FT2
R3494 Coq.Lists.List "x :: y" list_scope
R3488 Locations.R
R3490 Locations.FT3
R3497 Coq.Lists.List.nil
R3600 Coq.Init.Logic "A \/ B" type_scope
R3571 Coq.Init.Logic "A \/ B" type_scope
R3550 Coq.Lists.List.In
R3559 Conventions.temporaries
R3554 Locations.R
R3574 Coq.Lists.List.In
R3583 Conventions.destroyed_at_call
R3578 Locations.R
R3634 Coq.Init.Logic "A \/ B" type_scope
R3608 Coq.Lists.List.In
R3613 Conventions.int_callee_save_regs
R3637 Coq.Lists.List.In
R3642 Conventions.float_callee_save_regs
R3943 Coq.Init.Logic "~ x" type_scope
R3945 Coq.Lists.List.In
R3950 Conventions.int_callee_save_regs
R3906 Coq.Init.Logic "A \/ B" type_scope
R3885 Coq.Lists.List.In
R3894 Conventions.temporaries
R3889 Locations.R
R3909 Coq.Lists.List.In
R3918 Conventions.destroyed_at_call
R3913 Locations.R
R4217 Coq.Init.Logic "~ x" type_scope
R4219 Coq.Lists.List.In
R4224 Conventions.float_callee_save_regs
R4180 Coq.Init.Logic "A \/ B" type_scope
R4159 Coq.Lists.List.In
R4168 Conventions.temporaries
R4163 Locations.R
R4183 Coq.Lists.List.In
R4192 Conventions.destroyed_at_call
R4187 Locations.R
R4460 Coq.Init.Logic "x = y" type_scope
R4448 Locations.mreg_type
R4462 AST.Tint
R4419 Coq.Lists.List.In
R4424 Conventions.int_callee_save_regs
R4605 Coq.Init.Logic "x = y" type_scope
R4593 Locations.mreg_type
R4607 AST.Tfloat
R4562 Coq.Lists.List.In
R4567 Conventions.float_callee_save_regs
R4708 Coqlib.list_norepet
R4721 Coq.Lists.List.nil
R4764 Coqlib.list_norepet
R4781 Coq.Lists.List "x :: y" list_scope
R4803 Coqlib.list_norepet_cons
R4740 Coqlib.list_norepet_nil
R4905 Coqlib.list_norepet
R4918 Conventions.int_callee_save_regs
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R5028 Coqlib.list_norepet
R5041 Conventions.float_callee_save_regs
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R5184 Locations.R
R5191 Coq.Init.Logic "~ x" type_scope
R5193 Coq.Lists.List.In
R5198 Conventions.temporaries
R5215 Locations.S
R5218 Locations.Local
R5239 Coq.ZArith.BinInt "x >= y" Z_scope
R5248 Locations.S
R5251 Locations.Incoming
R5268 Coq.Init.Logic.False
R5278 Locations.S
R5281 Locations.Outgoing
R5298 Coq.Init.Logic.False
R5150 Locations.loc
R5387 Conventions.loc_acceptable
R5376 Coq.Lists.List.In
R5344 Coq.Lists.List.list
R5349 Locations.loc
R5472 Locations.notin
R5484 Conventions.temporaries
R5452 Conventions.loc_acceptable
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R5647 Conventions.temporaries_not_acceptable
R5757 Locations.disjoint
R5773 Conventions.temporaries
R5735 Conventions.locs_acceptable
R5809 Locations.notin_disjoint
R5809 Locations.notin_disjoint
R5845 Conventions.temporaries_not_acceptable
R5845 Conventions.temporaries_not_acceptable
R5925 Locations.mreg
R5944 AST.sig_res
R5962 Coq.Init.Datatypes.None
R5970 Locations.R3
R5977 Coq.Init.Datatypes.Some
R5982 AST.Tint
R5990 Locations.R3
R5997 Coq.Init.Datatypes.Some
R6002 AST.Tfloat
R6012 Locations.F1
R5912 AST.signature
R6089 Coq.Init.Logic "x = y" type_scope
R6062 Locations.mreg_type
R6073 Conventions.loc_result
R6104 AST.sig_res
R6118 Coq.Init.Datatypes.None
R6126 AST.Tint
R6133 Coq.Init.Datatypes.Some
R6200 AST.sig_res
R6200 AST.sig_res
R6317 Coq.Lists.List.In
R6339 Conventions.destroyed_at_call
R6321 Locations.R
R6324 Conventions.loc_result
R6305 AST.signature
R6406 AST.sig_res
R6406 AST.sig_res
R6517 Coq.Lists.List.nil
R6524 Coq.Lists.List.nil
R6533 Coq.Lists.List "x :: y" list_scope
R6488 Coq.Lists.List.list
R6493 Locations.mreg
R6600 Coq.Lists.List.nil
R6607 Coq.Lists.List.nil
R6616 Coq.Lists.List "x :: y" list_scope
R6619 Coq.Lists.List.nil
R6626 Coq.Lists.List.nil
R6636 Coq.Lists.List "x :: y" list_scope
R6643 Coq.Lists.List "x :: y" list_scope
R6571 Coq.Lists.List.list
R6576 Locations.mreg
R6774 Coq.Lists.List.list
R6779 Locations.loc
R6756 Coq.ZArith.BinInt.Z
R6735 Coq.Lists.List.list
R6740 Locations.mreg
R6716 Coq.Lists.List.list
R6721 Locations.mreg
R6698 Coq.Lists.List.list
R6703 AST.typ
R6807 Coq.Lists.List.nil
R6814 Coq.Lists.List.nil
R6827 Coq.Lists.List "x :: y" list_scope
R6822 AST.Tint
R6935 Coq.Lists.List "x :: y" list_scope
R6868 Coq.Lists.List.nil
R6875 Locations.S
R6878 Locations.Outgoing
R6891 AST.Tint
R6910 Coq.Lists.List "x :: y" list_scope
R6918 Locations.R
R6991 Coq.ZArith.BinInt "x + y" Z_scope
R6967 Conventions.drop1
R7007 Coq.Lists.List "x :: y" list_scope
R7000 AST.Tfloat
R7117 Coq.Lists.List "x :: y" list_scope
R7048 Coq.Lists.List.nil
R7055 Locations.S
R7058 Locations.Outgoing
R7071 AST.Tfloat
R7092 Coq.Lists.List "x :: y" list_scope
R7100 Locations.R
R7181 Coq.ZArith.BinInt "x + y" Z_scope
R7163 Conventions.drop1
R7149 Conventions.drop2
R6756 Coq.ZArith.BinInt.Z
R6735 Coq.Lists.List.list
R6740 Locations.mreg
R6716 Coq.Lists.List.list
R6721 Locations.mreg
R6698 Coq.Lists.List.list
R6703 AST.typ
R7228 Coq.Lists.List "x :: y" list_scope
R7225 Locations.R3
R7234 Coq.Lists.List "x :: y" list_scope
R7231 Locations.R4
R7240 Coq.Lists.List "x :: y" list_scope
R7237 Locations.R5
R7246 Coq.Lists.List "x :: y" list_scope
R7243 Locations.R6
R7252 Coq.Lists.List "x :: y" list_scope
R7249 Locations.R7
R7258 Coq.Lists.List "x :: y" list_scope
R7255 Locations.R8
R7264 Coq.Lists.List "x :: y" list_scope
R7261 Locations.R9
R7271 Coq.Lists.List "x :: y" list_scope
R7267 Locations.R10
R7274 Coq.Lists.List.nil
R7315 Coq.Lists.List "x :: y" list_scope
R7312 Locations.F1
R7321 Coq.Lists.List "x :: y" list_scope
R7318 Locations.F2
R7327 Coq.Lists.List "x :: y" list_scope
R7324 Locations.F3
R7333 Coq.Lists.List "x :: y" list_scope
R7330 Locations.F4
R7339 Coq.Lists.List "x :: y" list_scope
R7336 Locations.F5
R7345 Coq.Lists.List "x :: y" list_scope
R7342 Locations.F6
R7351 Coq.Lists.List "x :: y" list_scope
R7348 Locations.F7
R7357 Coq.Lists.List "x :: y" list_scope
R7354 Locations.F8
R7363 Coq.Lists.List "x :: y" list_scope
R7360 Locations.F9
R7370 Coq.Lists.List "x :: y" list_scope
R7366 Locations.F10
R7373 Coq.Lists.List.nil
R7421 Coq.Lists.List.list
R7426 Locations.loc
R7435 Conventions.loc_arguments_rec
R7481 Conventions.float_param_regs
R7466 Conventions.int_param_regs
R7456 AST.sig_args
R7408 AST.signature
R7548 Coq.ZArith.BinInt.Z
R7536 Coq.Lists.List.list
R7541 AST.typ
R7574 Coq.Lists.List.nil
R7592 Coq.Lists.List "x :: y" list_scope
R7587 AST.Tint
R7604 Coq.ZArith.BinInt "x + y" Z_scope
R7640 Coq.Lists.List "x :: y" list_scope
R7633 AST.Tfloat
R7652 Coq.ZArith.BinInt "x + y" Z_scope
R7536 Coq.Lists.List.list
R7541 AST.typ
R7728 Coq.ZArith.BinInt.Z
R7735 Conventions.size_arguments_rec
R7757 AST.sig_args
R7715 AST.signature
R7842 Locations.R
R7849 Coq.Init.Logic "~ x" type_scope
R7851 Coq.Lists.List.In
R7856 Conventions.temporaries
R7873 Locations.S
R7876 Locations.Outgoing
R7900 Coq.ZArith.BinInt "x >= y" Z_scope
R7914 Coq.Init.Logic.False
R7808 Locations.loc
R7979 Coq.Lists.List.In
R7961 Coq.Lists.List.In
R7967 Conventions.drop1
R8110 Coq.Lists.List.In
R8092 Coq.Lists.List.In
R8098 Conventions.drop2
R8348 Locations.R
R8366 Coq.Init.Logic "A \/ B" type_scope
R8355 Coq.Lists.List.In
R8369 Coq.Lists.List.In
R8384 Locations.S
R8387 Locations.Outgoing
R8413 Coq.ZArith.BinInt "x >= y" Z_scope
R8424 Locations.S
R8431 Coq.Init.Logic.False
R8281 Coq.Lists.List.In
R8287 Conventions.loc_arguments_rec
R8474 Conventions.loc_arguments_rec
R8474 Conventions.loc_arguments_rec
R8474 Conventions.loc_arguments_rec
R8673 Conventions.drop1_incl
R8673 Conventions.drop1_incl
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R8871 Conventions.drop2_incl
R8871 Conventions.drop2_incl
R8905 Conventions.drop1_incl
R8905 Conventions.drop1_incl
R9063 Conventions.loc_argument_acceptable
R9037 Coq.Lists.List.In
R9043 Conventions.loc_arguments
R9029 Locations.loc
R9014 AST.signature
R9143 Conventions.loc_arguments_rec_charact
R9143 Conventions.loc_arguments_rec_charact
R9364 Conventions.loc_arguments_acceptable
R9449 Coqlib.list_norepet
R9463 Conventions.drop1
R9431 Coqlib.list_norepet
R9598 Coqlib.list_norepet
R9612 Conventions.drop2
R9580 Coqlib.list_norepet
R9850 Locations.notin
R9867 Conventions.loc_arguments_rec
R9861 Locations.R
R9831 Coq.Init.Logic "~ x" type_scope
R9833 Coq.Lists.List.In
R9814 Coq.Init.Logic "~ x" type_scope
R9816 Coq.Lists.List.In
R10096 Conventions.drop1_incl
R10096 Conventions.drop1_incl
R10235 Conventions.drop2_incl
R10235 Conventions.drop2_incl
R10283 Conventions.drop1_incl
R10283 Conventions.drop1_incl
R10386 Locations.notin
R10418 Conventions.loc_arguments_rec
R10397 Locations.S
R10400 Locations.Local
R10745 Locations.notin
R10780 Conventions.loc_arguments_rec
R10756 Locations.S
R10759 Locations.Outgoing
R10733 Coq.ZArith.BinInt "x <= y" Z_scope
R10718 Coq.ZArith.BinInt "x + y" Z_scope
R10720 Locations.typesize
R11061 Locations.norepet
R11074 Conventions.loc_arguments
R11049 AST.signature
R11226 Locations.norepet
R11239 Conventions.loc_arguments_rec
R11193 Coqlib.list_disjoint
R11167 Coqlib.list_norepet
R11141 Coqlib.list_norepet
R11226 Locations.norepet
R11239 Conventions.loc_arguments_rec
R11193 Coqlib.list_disjoint
R11167 Coqlib.list_norepet
R11141 Coqlib.list_norepet
R11382 Conventions.loc_arguments_rec_notin_outgoing
R11382 Conventions.loc_arguments_rec_notin_outgoing
R11438 Conventions.loc_arguments_rec_notin_reg
R11438 Conventions.loc_arguments_rec_notin_reg
R11529 Coq.Lists.List "x :: y" list_scope
R11501 Coqlib.list_disjoint_notin
R11529 Coq.Lists.List "x :: y" list_scope
R11501 Coqlib.list_disjoint_notin
R11579 Conventions.drop1_norepet
R11579 Conventions.drop1_norepet
R11638 Conventions.drop1_incl
R11638 Conventions.drop1_incl
R11689 Conventions.loc_arguments_rec_notin_outgoing
R11689 Conventions.loc_arguments_rec_notin_outgoing
R11745 Conventions.loc_arguments_rec_notin_reg
R11745 Conventions.loc_arguments_rec_notin_reg
R11818 Conventions.drop2_incl
R11818 Conventions.drop2_incl
R11913 Conventions.drop2_norepet
R11913 Conventions.drop2_norepet
R11940 Conventions.drop1_norepet
R11940 Conventions.drop1_norepet
R11992 Conventions.drop2_incl
R11992 Conventions.drop2_incl
R12016 Conventions.drop1_incl
R12016 Conventions.drop1_incl
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R12352 Coq.ZArith.BinInt "x <= y" Z_scope
R12338 Coq.ZArith.BinInt "x + y" Z_scope
R12340 Locations.typesize
R12355 Conventions.size_arguments
R12286 Coq.Lists.List.In
R12312 Conventions.loc_arguments
R12290 Locations.S
R12293 Locations.Outgoing
R12278 AST.typ
R12270 Coq.ZArith.BinInt.Z
R12253 AST.signature
R12435 Coq.ZArith.BinInt "x >= y" Z_scope
R12412 Conventions.size_arguments_rec
R12435 Coq.ZArith.BinInt "x >= y" Z_scope
R12412 Conventions.size_arguments_rec
R12493 Conventions.size_arguments_rec
R12493 Conventions.size_arguments_rec
R12493 Conventions.size_arguments_rec
R12689 Coq.ZArith.BinInt "x <= y" Z_scope
R12675 Coq.ZArith.BinInt "x + y" Z_scope
R12677 Locations.typesize
R12722 Coq.ZArith.BinInt "x - y" Z_scope
R12715 Coq.ZArith.BinInt "x + y" Z_scope
R12692 Conventions.size_arguments_rec
R12598 Coq.Lists.List.In
R12624 Conventions.loc_arguments_rec
R12602 Locations.S
R12605 Locations.Outgoing
R12689 Coq.ZArith.BinInt "x <= y" Z_scope
R12675 Coq.ZArith.BinInt "x + y" Z_scope
R12677 Locations.typesize
R12722 Coq.ZArith.BinInt "x - y" Z_scope
R12715 Coq.ZArith.BinInt "x + y" Z_scope
R12692 Conventions.size_arguments_rec
R12598 Coq.Lists.List.In
R12624 Conventions.loc_arguments_rec
R12602 Locations.S
R12605 Locations.Outgoing
R12751 Conventions.loc_arguments_rec
R12751 Conventions.loc_arguments_rec
R12751 Conventions.loc_arguments_rec
R12823 Conventions.size_arguments_rec
R12823 Conventions.size_arguments_rec
R12967 Locations.typesize
R12967 Locations.typesize
R13132 Locations.typesize
R13132 Locations.typesize
R13199 Conventions.size_arguments
R13244 Coq.ZArith.BinInt "x - y" Z_scope
R13240 Coq.ZArith.BinInt "x + y" Z_scope
R13223 Conventions.size_arguments
R13199 Conventions.size_arguments
R13244 Coq.ZArith.BinInt "x - y" Z_scope
R13240 Coq.ZArith.BinInt "x + y" Z_scope
R13223 Conventions.size_arguments
R13386 Locations.disjoint
R13419 Conventions.temporaries
R13400 Conventions.loc_arguments
R13484 Conventions.loc_arguments_rec_charact
R13484 Conventions.loc_arguments_rec_charact
R13685 Conventions.loc_arguments_not_temporaries
R14027 Locations.notin
R14040 Conventions.loc_arguments
R14005 Conventions.loc_acceptable
R13972 Locations.notin
R13984 Conventions.destroyed_at_call
R14119 Conventions.loc_arguments_rec_notin_reg
R14119 Conventions.loc_arguments_rec_notin_reg
R14163 Locations.notin_not_in
R14163 Locations.notin_not_in
R14272 Locations.notin_not_in
R14272 Locations.notin_not_in
R14421 Conventions.loc_arguments_rec_notin_local
R14421 Conventions.loc_arguments_rec_notin_local
R14470 Conventions.arguments_not_preserved
R14578 Coq.Init.Logic "x = y" type_scope
R14546 Coq.Lists.List.length
R14559 Conventions.loc_arguments
R14580 Coq.Lists.List.length
R14597 AST.sig_args
R14709 Coq.Init.Logic "x = y" type_scope
R14657 Coq.Lists.List.length
R14670 Conventions.loc_arguments_rec
R14711 Coq.Lists.List.length
R14709 Coq.Init.Logic "x = y" type_scope
R14657 Coq.Lists.List.length
R14670 Conventions.loc_arguments_rec
R14711 Coq.Lists.List.length
R14925 Coq.Init.Logic "x = y" type_scope
R14887 Coq.Lists.List.map
R14906 Conventions.loc_arguments
R14896 Locations.type
R14932 AST.sig_args
R15156 Coq.Init.Logic "x = y" type_scope
R15098 Coq.Lists.List.map
R15117 Conventions.loc_arguments_rec
R15107 Locations.type
R15081 Coq.Init.Logic "x = y" type_scope
R15069 Locations.mreg_type
R15083 AST.Tfloat
R15055 Coq.Lists.List.In
R15029 Coq.Init.Logic "x = y" type_scope
R15017 Locations.mreg_type
R15031 AST.Tint
R15003 Coq.Lists.List.In
R15156 Coq.Init.Logic "x = y" type_scope
R15098 Coq.Lists.List.map
R15117 Conventions.loc_arguments_rec
R15107 Locations.type
R15081 Coq.Init.Logic "x = y" type_scope
R15069 Locations.mreg_type
R15083 AST.Tfloat
R15055 Coq.Lists.List.In
R15029 Coq.Init.Logic "x = y" type_scope
R15017 Locations.mreg_type
R15031 AST.Tint
R15003 Coq.Lists.List.In
R15232 Coq.Init.Logic.f_equal2
R15243 Coq.Lists.List.cons
R15248 AST.typ
R15232 Coq.Init.Logic.f_equal2
R15243 Coq.Lists.List.cons
R15248 AST.typ
R15232 Coq.Init.Logic.f_equal2
R15243 Coq.Lists.List.cons
R15248 AST.typ
R15361 Conventions.drop1_incl
R15361 Conventions.drop1_incl
R15492 Conventions.drop2_incl
R15492 Conventions.drop2_incl
R15537 Conventions.drop1_incl
R15537 Conventions.drop1_incl
R15756 Locations.no_overlap
R15777 Conventions.loc_arguments
R15730 Conventions.locs_acceptable
R15873 Conventions.loc_arguments_acceptable
R15873 Conventions.loc_arguments_acceptable
R15956 Locations.mreg_eq
R15956 Locations.mreg_eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R16156 Locations.loc
R16182 Locations.S
R16185 Locations.Outgoing
R16203 Locations.S
R16206 Locations.Incoming
R16149 Locations.loc
R16286 Coq.Lists.List.map
R16318 Conventions.loc_arguments
R16295 Conventions.parameter_of_argument
R16270 AST.signature
R16417 Coq.Init.Logic "x = y" type_scope
R16378 Coq.Lists.List.map
R16397 Conventions.loc_parameters
R16387 Locations.type
R16424 AST.sig_args
R16485 Coqlib.list_map_compose
R16485 Coqlib.list_map_compose
R16517 Conventions.loc_arguments_type
R16517 Conventions.loc_arguments_type
R16545 Coqlib.list_map_exten
R16545 Coqlib.list_map_exten
R16682 Locations.disjoint
R16716 Conventions.temporaries
R16696 Conventions.loc_parameters
R16797 Coqlib.list_in_map_inv
R16797 Coqlib.list_in_map_inv
R16855 Conventions.loc_arguments_not_temporaries
R16855 Conventions.loc_arguments_not_temporaries
R17107 Locations.no_overlap
R17123 Conventions.loc_parameters
R17079 Conventions.locs_acceptable
R17230 Coqlib.list_in_map_inv
R17230 Coqlib.list_in_map_inv
R17304 Conventions.loc_arguments_acceptable
R17304 Conventions.loc_arguments_acceptable
R17410 Locations.mreg_eq
R17410 Locations.mreg_eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
FLTL
R401 Coq.NArith.BinPos.positive
R459 Locations.mreg
R451 Locations.slot
R505 Locations.slot
R497 Locations.mreg
R563 Locations.mreg
R550 Coq.Lists.List.list
R555 Locations.mreg
R537 Op.operation
R640 Locations.mreg
R627 Coq.Lists.List.list
R632 Locations.mreg
R613 Op.addressing
R597 AST.memory_chunk
R718 Locations.mreg
R705 Coq.Lists.List.list
R710 Locations.mreg
R691 Op.addressing
R675 AST.memory_chunk
R770 Coq.Init.Datatypes "x + y" type_scope
R765 Locations.mreg
R772 AST.ident
R752 AST.signature
R807 LTL.node
R866 LTL.node
R858 LTL.node
R845 Coq.Lists.List.list
R850 Locations.mreg
R832 Op.condition
R925 Maps.t
R933 LTL.block
R988 AST.signature
R1015 Coq.ZArith.BinInt.Z
R1029 LTL.code
R1052 LTL.node
R1124 Coq.Init.Logic "A \/ B" type_scope
R1095 Coqlib.Plt
R1103 Coq.NArith.BinPos.Psucc
R1138 Coq.Init.Logic "x = y" type_scope
R1134 Maps "a ! b"
R1140 Coq.Init.Datatypes.None
R1088 LTL.node
R1171 AST.program
R1183 LTL.function
R1213 Globalenvs.t
R1220 LTL.function
R1251 Locations.t
R1319 LTL.locset
R1370 Locations.R
R1385 Locations.R
R1396 Locations.S
R1399 Locations.Local
R1416 Values.Vundef
R1429 Locations.S
R1432 Locations.Incoming
R1460 Locations.S
R1463 Locations.Outgoing
R1487 Locations.S
R1490 Locations.Outgoing
R1510 Values.Vundef
R1339 Locations.loc
R1309 LTL.locset
R1576 LTL.locset
R1627 Locations.R
R1645 Coq.Lists.List.In_dec
R1665 Conventions.temporaries
R1660 Locations.R
R1652 Locations.eq
R1733 Coq.Lists.List.In_dec
R1753 Conventions.destroyed_at_call
R1748 Locations.R
R1740 Locations.eq
R1842 Locations.R
R1806 Locations.R
R1712 Locations.R
R1853 Locations.S
R1868 Locations.S
R1596 Locations.loc
R1566 LTL.locset
R1566 LTL.locset
R1896 LTL.genv
R1963 Coq.Init.Datatypes.option
R1970 LTL.function
R2003 Coq.Init.Datatypes.inl
R2012 Globalenvs.find_funct
R2036 Locations.R
R2046 Coq.Init.Datatypes.inr
R2070 Globalenvs.find_symbol
R2108 Coq.Init.Datatypes.None
R2116 Coq.Init.Datatypes.None
R2129 Coq.Init.Datatypes.Some
R2139 Globalenvs.find_funct_ptr
R1953 LTL.locset
R1939 Coq.Init.Datatypes "x + y" type_scope
R1934 Locations.mreg
R1941 AST.ident
R2232 Coq.Lists.List.list
R2237 Values.val
R2246 Coq.Lists.List.map
R2269 Locations.R
R2222 LTL.locset
R2206 Coq.Lists.List.list
R2211 Locations.mreg
R2316 LTL.node
R2472 Mem.mem
R2462 LTL.locset
R2453 LTL.block
R2424 Mem.mem
R2414 LTL.locset
R2405 LTL.block
R2376 Values.val
R3879 Mem.mem
R3869 LTL.locset
R3860 LTL.block
R3835 Mem.mem
R3825 LTL.locset
R3816 LTL.block
R3791 Values.val
R4401 Mem.mem
R4391 LTL.locset
R4380 LTL.outcome
R4356 Mem.mem
R4346 LTL.locset
R4337 LTL.block
R4313 Values.val
R5303 Mem.mem
R5293 LTL.locset
R5282 LTL.outcome
R5257 Mem.mem
R5247 LTL.locset
R5239 LTL.node
R5214 Values.val
R5206 LTL.code
R5895 Mem.mem
R5885 LTL.locset
R5846 Mem.mem
R5836 LTL.locset
R5824 LTL.function
R2603 Locations.set
R2625 Locations.S
R2615 Locations.R
R2557 LTL.Bgetstack
R2754 Locations.set
R2777 Locations.R
R2766 Locations.S
R2708 LTL.Bsetstack
R2969 Locations.set
R2981 Locations.R
R2922 LTL.Bop
R2889 Coq.Init.Logic "x = y" type_scope
R2847 Op.eval_operation
R2872 LTL.reglist
R2891 Coq.Init.Datatypes.Some
R3235 Locations.set
R3247 Locations.R
R3178 LTL.Bload
R3145 Coq.Init.Logic "x = y" type_scope
R3129 Mem.loadv
R3147 Coq.Init.Datatypes.Some
R3111 Coq.Init.Logic "x = y" type_scope
R3066 Op.eval_addressing
R3094 LTL.reglist
R3113 Coq.Init.Datatypes.Some
R3461 LTL.Bstore
R3427 Coq.Init.Logic "x = y" type_scope
R3397 Mem.storev
R3419 Locations.R
R3429 Coq.Init.Datatypes.Some
R3379 Coq.Init.Logic "x = y" type_scope
R3334 Op.eval_addressing
R3362 LTL.reglist
R3381 Coq.Init.Datatypes.Some
R3749 LTL.return_regs
R3704 LTL.Bcall
R3630 Coq.Init.Logic "x = y" type_scope
R3635 LTL.fn_sig
R3608 Coq.Init.Logic "x = y" type_scope
R3587 LTL.find_function
R3610 Coq.Init.Datatypes.Some
R4541 LTL.Cont
R4494 LTL.Bgoto
R4784 LTL.Cont
R4741 Coq.Init.Logic "x = y" type_scope
R4702 Op.eval_condition
R4723 LTL.reglist
R4743 Coq.Init.Datatypes.Some
R4748 Coq.Init.Datatypes.true
R4658 LTL.Bcond
R5032 LTL.Cont
R4988 Coq.Init.Logic "x = y" type_scope
R4949 Op.eval_condition
R4970 LTL.reglist
R4990 Coq.Init.Datatypes.Some
R4995 Coq.Init.Datatypes.false
R4905 LTL.Bcond
R5173 LTL.Return
R5128 LTL.Breturn
R5399 LTL.Cont
R5485 Coq.Init.Logic "x = y" type_scope
R5481 Maps "a ! b"
R5487 Coq.Init.Datatypes.Some
R5690 LTL.Cont
R6162 Mem.free
R6113 LTL.Return
R6096 LTL.call_regs
R6080 LTL.fn_entrypoint
R6040 Values.Vptr
R6049 Integers.zero
R6030 LTL.fn_code
R5994 Coq.Init.Logic "x = y" type_scope
R5967 Mem.alloc
R5980 LTL.fn_stacksize
R5996 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R6311 Coq.Init.Logic "'exists' x , p" type_scope
R6321 Coq.Init.Logic "'exists' x , p" type_scope
R6331 Coq.Init.Logic "'exists' x , p" type_scope
R6342 Coq.Init.Logic "'exists' x , p" type_scope
R6397 Coq.Init.Logic "A /\ B" type_scope
R6388 Coq.Init.Logic "x = y" type_scope
R6354 Globalenvs.find_symbol
R6377 AST.prog_main
R6390 Coq.Init.Datatypes.Some
R6437 Coq.Init.Logic "A /\ B" type_scope
R6428 Coq.Init.Logic "x = y" type_scope
R6402 Globalenvs.find_funct_ptr
R6430 Coq.Init.Datatypes.Some
R6483 Coq.Init.Logic "A /\ B" type_scope
R6453 Coq.Init.Logic "x = y" type_scope
R6445 LTL.fn_sig
R6455 AST.mksignature
R6472 Coq.Init.Datatypes.Some
R6477 AST.Tint
R6467 Coq.Lists.List.nil
R6536 Coq.Init.Logic "A /\ B" type_scope
R6488 LTL.exec_function
R6508 Locations.init
R6520 Values.Vundef
R6584 Coq.Init.Logic "x = y" type_scope
R6545 Locations.R
R6548 Conventions.loc_result
R6574 LTL.fn_sig
R6290 Globalenvs.init_mem
R6258 Globalenvs.globalenv
R6231 Values.val
R6218 LTL.program
R6633 LTL.genv
R6655 LTL.code
R6702 Coq.Init.Logic "A \/ B" type_scope
R6694 Coq.Init.Logic "x = y" type_scope
R6690 Maps "a ! b"
R6698 Maps "a ! b"
R6711 Coq.Init.Logic "x = y" type_scope
R6707 Maps "a ! b"
R6713 Coq.Init.Datatypes.None
R6832 LTL.exec_blocks
R6784 LTL.exec_blocks
R6907 LTL.exec_blocks_refl
R6907 LTL.exec_blocks_refl
R6933 LTL.exec_blocks_one
R6933 LTL.exec_blocks_one
R7017 LTL.exec_blocks_trans
R7017 LTL.exec_blocks_trans
R7154 Coq.Lists.List.list
R7159 LTL.node
R7145 LTL.block
R7186 LTL.Bgetstack
R7226 LTL.Bsetstack
R7266 LTL.Bop
R7308 LTL.Bload
R7360 LTL.Bstore
R7413 LTL.Bcall
R7453 LTL.Bgoto
R7466 Coq.Lists.List "x :: y" list_scope
R7469 Coq.Lists.List.nil
R7477 LTL.Bcond
R7512 Coq.Lists.List "x :: y" list_scope
R7521 Coq.Lists.List "x :: y" list_scope
R7524 Coq.Lists.List.nil
R7532 LTL.Breturn
R7543 Coq.Lists.List.nil
R7145 LTL.block
R7604 Coq.Lists.List.list
R7609 LTL.node
R7636 Maps "a ! b"
R7628 LTL.fn_code
R7649 Coq.Init.Datatypes.None
R7657 Coq.Lists.List.nil
R7665 Coq.Init.Datatypes.Some
R7675 LTL.successors_aux
R7596 LTL.node
R7581 LTL.function
R7824 Coq.Init.Logic "x = y" type_scope
R7807 LTL.successors_aux
R7826 LTL.successors_aux
R7767 LTL.exec_instrs
R7941 LTL.successors_aux
R7941 LTL.successors_aux
R8116 Coq.Lists.List.In
R8124 LTL.successors
R8069 LTL.exec_block
R8094 LTL.Cont
R8055 Coq.Init.Logic "x = y" type_scope
R8051 Maps "a ! b"
R8043 LTL.fn_code
R8057 Coq.Init.Datatypes.Some
R8214 LTL.successors_aux_invariant
R8214 LTL.successors_aux_invariant
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R8287 LTL.successors_aux_invariant
R8287 LTL.successors_aux_invariant
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R8360 LTL.successors_aux_invariant
R8360 LTL.successors_aux_invariant
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
FLTLtyping
R213 LTL.function
R280 Locations.Local
R298 Coq.ZArith.BinInt "x <= y" Z_scope
R309 Locations.Outgoing
R330 Coq.ZArith.BinInt "x <= y" Z_scope
R341 Locations.Incoming
R369 Coq.Init.Logic "A /\ B" type_scope
R362 Coq.ZArith.BinInt "x <= y" Z_scope
R390 Coq.ZArith.BinInt "x <= y" Z_scope
R376 Coq.ZArith.BinInt "x + y" Z_scope
R378 Locations.typesize
R393 Conventions.size_arguments
R415 LTL.fn_sig
R252 Locations.slot
R452 LTL.block
R602 LTL.Bgetstack
R548 LTLtyping.slot_bounded
R525 Coq.Init.Logic "x = y" type_scope
R513 Locations.slot_type
R527 Locations.mreg_type
R812 LTL.Bsetstack
R758 LTLtyping.slot_bounded
R735 Coq.Init.Logic "x = y" type_scope
R723 Locations.slot_type
R737 Locations.mreg_type
R676 Locations.Incoming
R692 Coq.Init.Logic.False
R705 Coq.Init.Logic.True
R938 LTL.Bop
R952 Coq.Lists.List "x :: y" list_scope
R955 Coq.Lists.List.nil
R942 Op.Omove
R885 Coq.Init.Logic "x = y" type_scope
R872 Locations.mreg_type
R887 Locations.mreg_type
R1036 LTL.Bop
R1047 Coq.Lists.List.nil
R1040 Op.Oundef
R1242 LTL.Bop
R1180 Coq.Init.Logic "x = y" type_scope
R1139 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R1140 Coq.Lists.List.map
R1149 Locations.mreg_type
R1165 Locations.mreg_type
R1182 Op.type_of_operation
R1120 Coq.Init.Logic "x <> y" type_scope
R1123 Op.Oundef
R1105 Coq.Init.Logic "x <> y" type_scope
R1108 Op.Omove
R1451 LTL.Bload
R1390 Coq.Init.Logic "x = y" type_scope
R1376 Locations.mreg_type
R1392 Op.type_of_chunk
R1341 Coq.Init.Logic "x = y" type_scope
R1317 Coq.Lists.List.map
R1326 Locations.mreg_type
R1343 Op.type_of_addressing
R1671 LTL.Bstore
R1610 Coq.Init.Logic "x = y" type_scope
R1596 Locations.mreg_type
R1612 Op.type_of_chunk
R1561 Coq.Init.Logic "x = y" type_scope
R1537 Coq.Lists.List.map
R1546 Locations.mreg_type
R1563 Op.type_of_addressing
R1843 LTL.Bcall
R1760 Coq.Init.Datatypes.inl
R1781 Coq.Init.Logic "x = y" type_scope
R1769 Locations.mreg_type
R1783 AST.Tint
R1795 Coq.Init.Logic.True
R1908 LTL.Bgoto
R2042 LTL.Bcond
R1998 Coq.Init.Logic "x = y" type_scope
R1974 Coq.Lists.List.map
R1983 Locations.mreg_type
R2000 Op.type_of_condition
R2103 LTL.Breturn
R2218 LTLtyping.wt_block
R2206 Coq.Init.Logic "x = y" type_scope
R2202 Maps "a ! b"
R2194 LTL.fn_code
R2208 Coq.Init.Datatypes.Some
R2156 LTL.function
R2320 LTLtyping.wt_function
R2292 Coq.Lists.List.In
R2303 AST.prog_funct
R2295 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2259 LTL.program
FInterfGraph
R213 Registers.reg
R246 Coq.Init.Logic "x = y" type_scope
R238 InterfGraph.t
R238 InterfGraph.t
R268 Coqlib.Plt
R304 InterfGraph.eq
R301 InterfGraph.t
R320 Coq.Init.Logic.refl_equal
R331 InterfGraph.t
R377 InterfGraph.eq
R367 InterfGraph.eq
R364 InterfGraph.t
R364 InterfGraph.t
R393 Coq.Init.Logic.sym_equal
R403 InterfGraph.t
R462 InterfGraph.eq
R452 InterfGraph.eq
R442 InterfGraph.eq
R439 InterfGraph.t
R439 InterfGraph.t
R439 InterfGraph.t
R478 Coq.Init.Logic.trans_equal
R490 InterfGraph.t
R549 InterfGraph.lt
R539 InterfGraph.lt
R529 InterfGraph.lt
R526 InterfGraph.t
R526 InterfGraph.t
R526 InterfGraph.t
R563 Coqlib.Plt_trans
R618 Coq.Init.Logic "~ x" type_scope
R620 InterfGraph.eq
R608 InterfGraph.lt
R605 InterfGraph.t
R605 InterfGraph.t
R634 Coqlib.Plt_ne
R674 FSetInterface.Compare
R685 InterfGraph.eq
R682 InterfGraph.lt
R671 InterfGraph.t
R671 InterfGraph.t
R716 Coqlib.plt
R716 Coqlib.plt
R741 FSetInterface.Lt
R741 FSetInterface.Lt
R759 Coqlib.peq
R759 Coqlib.peq
R784 FSetInterface.Eq
R784 FSetInterface.Eq
R802 FSetInterface.Gt
R802 FSetInterface.Gt
R846 Coq.Init.Logic "x <> y" type_scope
R839 Coq.ZArith.BinInt.Zpos
R849 Coq.ZArith.BinInt.Zpos
R846 Coq.Init.Logic "x <> y" type_scope
R839 Coq.ZArith.BinInt.Zpos
R849 Coq.ZArith.BinInt.Zpos
R1005 Coq.Init.Logic "x = y" type_scope
R997 InterfGraph.t
R997 InterfGraph.t
R1036 Coqlib.Plt
R1030 InterfGraph.t
R1030 InterfGraph.t
R1096 InterfGraph.eq
R1093 InterfGraph.t
R1112 Coq.Init.Logic.refl_equal
R1123 InterfGraph.t
R1169 InterfGraph.eq
R1159 InterfGraph.eq
R1156 InterfGraph.t
R1156 InterfGraph.t
R1185 Coq.Init.Logic.sym_equal
R1195 InterfGraph.t
R1254 InterfGraph.eq
R1244 InterfGraph.eq
R1234 InterfGraph.eq
R1231 InterfGraph.t
R1231 InterfGraph.t
R1231 InterfGraph.t
R1270 Coq.Init.Logic.trans_equal
R1282 InterfGraph.t
R1342 InterfGraph.lt
R1332 InterfGraph.lt
R1322 InterfGraph.lt
R1319 InterfGraph.t
R1319 InterfGraph.t
R1319 InterfGraph.t
R1385 Coqlib.Plt_trans
R1385 Coqlib.Plt_trans
R1453 Coq.Init.Logic "~ x" type_scope
R1455 InterfGraph.eq
R1443 InterfGraph.lt
R1440 InterfGraph.t
R1440 InterfGraph.t
R1531 Coqlib.Plt_strict
R1531 Coqlib.Plt_strict
R1604 FSetInterface.Compare
R1615 InterfGraph.eq
R1612 InterfGraph.lt
R1601 InterfGraph.t
R1601 InterfGraph.t
R1646 InterfGraph.compare
R1646 InterfGraph.compare
R1706 FSetInterface.Lt
R1706 FSetInterface.Lt
R1728 FSetInterface.Eq
R1728 FSetInterface.Eq
R1780 FSetInterface.Gt
R1780 FSetInterface.Gt
R1896 Coq.Init.Datatypes "x * y" type_scope
R1959 Coq.Init.Logic "A /\ B" type_scope
R1952 Coq.Init.Datatypes.fst
R1944 Coq.Init.Datatypes.fst
R1976 Coq.Init.Datatypes.snd
R1968 Coq.Init.Datatypes.snd
R1930 InterfGraph.t
R1930 InterfGraph.t
R2015 InterfGraph.eq
R2012 InterfGraph.t
R2100 InterfGraph.eq
R2090 InterfGraph.eq
R2087 InterfGraph.t
R2087 InterfGraph.t
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R2213 InterfGraph.eq
R2203 InterfGraph.eq
R2193 InterfGraph.eq
R2190 InterfGraph.t
R2190 InterfGraph.t
R2190 InterfGraph.t
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R2321 Coq.Init.Logic "A \/ B" type_scope
R2314 Coq.Init.Datatypes.fst
R2306 Coq.Init.Datatypes.fst
R2348 Coq.Init.Logic "A /\ B" type_scope
R2341 Coq.Init.Datatypes.fst
R2333 Coq.Init.Datatypes.fst
R2365 Coq.Init.Datatypes.snd
R2357 Coq.Init.Datatypes.snd
R2292 InterfGraph.t
R2292 InterfGraph.t
R2430 InterfGraph.lt
R2420 InterfGraph.lt
R2410 InterfGraph.lt
R2407 InterfGraph.t
R2407 InterfGraph.t
R2407 InterfGraph.t
R2525 Coq.Init.Datatypes.fst
R2525 Coq.Init.Datatypes.fst
R2593 Coq.Init.Datatypes.fst
R2585 Coq.Init.Datatypes.fst
R2593 Coq.Init.Datatypes.fst
R2585 Coq.Init.Datatypes.fst
R2695 Coq.Init.Datatypes.fst
R2695 Coq.Init.Datatypes.fst
R2751 Coq.Init.Datatypes.fst
R2743 Coq.Init.Datatypes.fst
R2751 Coq.Init.Datatypes.fst
R2743 Coq.Init.Datatypes.fst
R2801 Coq.Init.Datatypes.fst
R2801 Coq.Init.Datatypes.fst
R2892 Coq.Init.Datatypes.fst
R2884 Coq.Init.Datatypes.fst
R2892 Coq.Init.Datatypes.fst
R2884 Coq.Init.Datatypes.fst
R2994 Coq.Init.Datatypes.fst
R2994 Coq.Init.Datatypes.fst
R3069 Coq.Init.Datatypes.fst
R3061 Coq.Init.Datatypes.fst
R3069 Coq.Init.Datatypes.fst
R3061 Coq.Init.Datatypes.fst
R3119 Coq.Init.Datatypes.fst
R3119 Coq.Init.Datatypes.fst
R3225 Coq.Init.Datatypes.fst
R3225 Coq.Init.Datatypes.fst
R3264 Coq.Init.Datatypes.snd
R3264 Coq.Init.Datatypes.snd
R3328 Coq.Init.Logic "~ x" type_scope
R3330 InterfGraph.eq
R3318 InterfGraph.lt
R3315 InterfGraph.t
R3315 InterfGraph.t
R3538 FSetInterface.Compare
R3549 InterfGraph.eq
R3546 InterfGraph.lt
R3535 InterfGraph.t
R3535 InterfGraph.t
R3601 Coq.Init.Datatypes.fst
R3593 Coq.Init.Datatypes.fst
R3601 Coq.Init.Datatypes.fst
R3593 Coq.Init.Datatypes.fst
R3625 FSetInterface.Lt
R3625 FSetInterface.Lt
R3673 Coq.Init.Datatypes.snd
R3665 Coq.Init.Datatypes.snd
R3673 Coq.Init.Datatypes.snd
R3665 Coq.Init.Datatypes.snd
R3697 FSetInterface.Lt
R3697 FSetInterface.Lt
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R3728 FSetInterface.Eq
R3728 FSetInterface.Eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R3752 FSetInterface.Gt
R3752 FSetInterface.Gt
R3811 FSetInterface.Gt
R3811 FSetInterface.Gt
R3993 Locations.mreg
R4021 Locations.mreg_index
R4059 Locations.mreg_index_inj
R4094 Locations.mreg_eq
R4487 InterfGraph.t
R4519 InterfGraph.t
R4549 InterfGraph.t
R4579 InterfGraph.t
R4639 Coqlib.plt
R4664 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4652 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4626 Registers.reg
R4626 Registers.reg
R4701 InterfGraph.mkgraph
R4768 InterfGraph.empty
R4752 InterfGraph.empty
R4725 InterfGraph.empty
R4709 InterfGraph.empty
R4836 InterfGraph.mkgraph
R4968 InterfGraph.pref_reg_mreg
R4941 InterfGraph.pref_reg_reg
R4911 InterfGraph.interf_reg_mreg
R4845 InterfGraph.add
R4881 InterfGraph.interf_reg_reg
R4860 InterfGraph.ordered_pair
R4824 InterfGraph.graph
R4815 Registers.reg
R4815 Registers.reg
R5048 InterfGraph.mkgraph
R5169 InterfGraph.pref_reg_mreg
R5142 InterfGraph.pref_reg_reg
R5086 InterfGraph.add
R5111 InterfGraph.interf_reg_mreg
R5101 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5059 InterfGraph.interf_reg_reg
R5036 InterfGraph.graph
R5026 Locations.mreg
R5017 Registers.reg
R5233 InterfGraph.mkgraph
R5365 InterfGraph.pref_reg_mreg
R5301 InterfGraph.add
R5337 InterfGraph.pref_reg_reg
R5316 InterfGraph.ordered_pair
R5273 InterfGraph.interf_reg_mreg
R5244 InterfGraph.interf_reg_reg
R5221 InterfGraph.graph
R5212 Registers.reg
R5212 Registers.reg
R5443 InterfGraph.mkgraph
R5538 InterfGraph.add
R5563 InterfGraph.pref_reg_mreg
R5553 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5513 InterfGraph.pref_reg_reg
R5483 InterfGraph.interf_reg_mreg
R5454 InterfGraph.interf_reg_reg
R5431 InterfGraph.graph
R5421 Locations.mreg
R5412 Registers.reg
R5636 InterfGraph.In
R5671 InterfGraph.interf_reg_reg
R5650 InterfGraph.ordered_pair
R5617 InterfGraph.graph
R5608 Registers.reg
R5608 Registers.reg
R5757 InterfGraph.In
R5781 InterfGraph.interf_reg_mreg
R5771 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5738 InterfGraph.graph
R5728 Locations.mreg
R5719 Registers.reg
R5870 Coq.Init.Logic "A \/ B" type_scope
R5861 Coq.Init.Logic "x = y" type_scope
R5844 InterfGraph.ordered_pair
R5863 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5890 Coq.Init.Logic "x = y" type_scope
R5873 InterfGraph.ordered_pair
R5892 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5946 Coqlib.plt
R5946 Coqlib.plt
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R6031 Coq.Init.Logic "x = y" type_scope
R6014 InterfGraph.ordered_pair
R6033 InterfGraph.ordered_pair
R6097 Coqlib.plt
R6097 Coqlib.plt
R6122 Coqlib.plt
R6122 Coqlib.plt
R6194 Coqlib.plt
R6194 Coqlib.plt
R6236 Coq.Init.Logic "x = y" type_scope
R6229 Coq.ZArith.BinInt.Zpos
R6238 Coq.ZArith.BinInt.Zpos
R6236 Coq.Init.Logic "x = y" type_scope
R6229 Coq.ZArith.BinInt.Zpos
R6238 Coq.ZArith.BinInt.Zpos
R6348 InterfGraph.interfere
R6329 InterfGraph.interfere
R6410 InterfGraph.ordered_pair_sym
R6410 InterfGraph.ordered_pair_sym
R6538 Coq.Init.Logic "A /\ B" type_scope
R6522 InterfGraph.interfere
R6502 InterfGraph.interfere
R6583 InterfGraph.interfere_mreg
R6558 InterfGraph.interfere_mreg
R6470 InterfGraph.graph
R6470 InterfGraph.graph
R6691 InterfGraph.graph_incl
R6671 InterfGraph.graph_incl
R6651 InterfGraph.graph_incl
R6839 InterfGraph.interfere
R6854 InterfGraph.add_interf
R6935 InterfGraph.add_1
R6935 InterfGraph.add_1
R6963 InterfGraph.eq_refl
R6963 InterfGraph.eq_refl
R7032 InterfGraph.graph_incl
R7046 InterfGraph.add_interf
R7144 InterfGraph.add_2
R7144 InterfGraph.add_2
R7236 InterfGraph.interfere_mreg
R7256 InterfGraph.add_interf_mreg
R7352 InterfGraph.add_1
R7352 InterfGraph.add_1
R7381 InterfGraph.eq_refl
R7381 InterfGraph.eq_refl
R7456 InterfGraph.graph_incl
R7470 InterfGraph.add_interf_mreg
R7594 InterfGraph.add_2
R7594 InterfGraph.add_2
R7665 InterfGraph.graph_incl
R7679 InterfGraph.add_pref
R7799 InterfGraph.graph_incl
R7813 InterfGraph.add_pref_mreg
R7935 Registers.t
R7949 InterfGraph.fold
R8060 InterfGraph.fold
R8154 Registers.empty
R8131 InterfGraph.interf_reg_mreg
R8097 Registers.add
R8109 Coq.Init.Datatypes.fst
R8039 InterfGraph.interf_reg_reg
R7983 Registers.add
R8006 Registers.add
R8018 Coq.Init.Datatypes.snd
R7995 Coq.Init.Datatypes.fst
R7926 InterfGraph.graph
R8265 Coq.Init.Logic "x = y" type_scope
R8234 Registers.mem
R8248 Registers.add
R8267 Coq.Init.Datatypes.true
R8224 Coq.Init.Logic "x = y" type_scope
R8209 Registers.mem
R8226 Coq.Init.Datatypes.true
R8296 Registers.eq
R8296 Registers.eq
R8335 Registers.mem_add_same
R8335 Registers.mem_add_same
R8366 Registers.mem_add_other
R8366 Registers.mem_add_other
R8597 Coq.Init.Logic "x = y" type_scope
R8482 Registers.mem
R8500 Coq.Lists.List.fold_right
R8537 Registers.add
R8560 Registers.add
R8572 Coq.Init.Datatypes.snd
R8549 Coq.Init.Datatypes.fst
R8599 Coq.Init.Datatypes.true
R8470 Coq.Init.Logic "x = y" type_scope
R8455 Registers.mem
R8472 Coq.Init.Datatypes.true
R8658 InterfGraph.mem_add_tail
R8658 InterfGraph.mem_add_tail
R8678 InterfGraph.mem_add_tail
R8678 InterfGraph.mem_add_tail
R8942 Coq.Init.Logic "A /\ B" type_scope
R8935 Coq.Init.Logic "x = y" type_scope
R8918 Registers.mem
R8937 Coq.Init.Datatypes.true
R8962 Coq.Init.Logic "x = y" type_scope
R8945 Registers.mem
R8964 Coq.Init.Datatypes.true
R8817 Coq.Lists.List.fold_right
R8854 Registers.add
R8877 Registers.add
R8889 Coq.Init.Datatypes.snd
R8866 Coq.Init.Datatypes.fst
R8763 FSetInterface.InList
R8787 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8770 InterfGraph.eq
R9121 Registers.mem_add_same
R9121 Registers.mem_add_same
R9151 InterfGraph.mem_add_tail
R9151 InterfGraph.mem_add_tail
R9171 Registers.mem_add_same
R9171 Registers.mem_add_same
R9261 InterfGraph.mem_add_tail
R9261 InterfGraph.mem_add_tail
R9261 InterfGraph.mem_add_tail
R9261 InterfGraph.mem_add_tail
R9261 InterfGraph.mem_add_tail
R9261 InterfGraph.mem_add_tail
R9261 InterfGraph.mem_add_tail
R9261 InterfGraph.mem_add_tail
R9261 InterfGraph.mem_add_tail
R9261 InterfGraph.mem_add_tail
R9261 InterfGraph.mem_add_tail
R9495 Coq.Init.Logic "x = y" type_scope
R9478 Registers.mem
R9497 Coq.Init.Datatypes.true
R9401 Coq.Lists.List.fold_right
R9438 Registers.add
R9450 Coq.Init.Datatypes.fst
R9346 FSetInterface.InList
R9371 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9353 InterfGraph.eq
R9637 Registers.mem_add_same
R9637 Registers.mem_add_same
R9667 InterfGraph.mem_add_tail
R9667 InterfGraph.mem_add_tail
R9852 Coq.Init.Logic "A /\ B" type_scope
R9845 Coq.Init.Logic "x = y" type_scope
R9811 Registers.mem
R9826 InterfGraph.all_interf_regs
R9847 Coq.Init.Datatypes.true
R9891 Coq.Init.Logic "x = y" type_scope
R9857 Registers.mem
R9872 InterfGraph.all_interf_regs
R9893 Coq.Init.Datatypes.true
R9765 InterfGraph.In
R9790 InterfGraph.interf_reg_reg
R9778 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9955 InterfGraph.fold_1
R10201 Registers.add
R10224 Registers.add
R10236 Coq.Init.Datatypes.snd
R10213 Coq.Init.Datatypes.fst
R10182 Registers.t
R10159 InterfGraph.elt
R10000 InterfGraph.fold
R10128 Registers.empty
R10109 InterfGraph.interf_reg_mreg
R10083 Registers.add
R10095 Coq.Init.Datatypes.fst
R10061 Registers.t
R10037 InterfGraph.elt
R9979 InterfGraph.interf_reg_reg
R9955 InterfGraph.fold_1
R10201 Registers.add
R10224 Registers.add
R10236 Coq.Init.Datatypes.snd
R10213 Coq.Init.Datatypes.fst
R10182 Registers.t
R10159 InterfGraph.elt
R10000 InterfGraph.fold
R10128 Registers.empty
R10109 InterfGraph.interf_reg_mreg
R10083 Registers.add
R10095 Coq.Init.Datatypes.fst
R10061 Registers.t
R10037 InterfGraph.elt
R9979 InterfGraph.interf_reg_reg
R10301 InterfGraph.all_interf_regs_correct_aux_2
R10301 InterfGraph.all_interf_regs_correct_aux_2
R10345 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10345 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10513 Coq.Init.Logic "x = y" type_scope
R10479 Registers.mem
R10494 InterfGraph.all_interf_regs
R10515 Coq.Init.Datatypes.true
R10430 InterfGraph.In
R10457 InterfGraph.interf_reg_mreg
R10444 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10576 InterfGraph.fold_1
R10822 Registers.add
R10845 Registers.add
R10857 Coq.Init.Datatypes.snd
R10834 Coq.Init.Datatypes.fst
R10803 Registers.t
R10780 InterfGraph.elt
R10621 InterfGraph.fold
R10749 Registers.empty
R10730 InterfGraph.interf_reg_mreg
R10704 Registers.add
R10716 Coq.Init.Datatypes.fst
R10682 Registers.t
R10658 InterfGraph.elt
R10600 InterfGraph.interf_reg_reg
R10576 InterfGraph.fold_1
R10822 Registers.add
R10845 Registers.add
R10857 Coq.Init.Datatypes.snd
R10834 Coq.Init.Datatypes.fst
R10803 Registers.t
R10780 InterfGraph.elt
R10621 InterfGraph.fold
R10749 Registers.empty
R10730 InterfGraph.interf_reg_mreg
R10704 Registers.add
R10716 Coq.Init.Datatypes.fst
R10682 Registers.t
R10658 InterfGraph.elt
R10600 InterfGraph.interf_reg_reg
R10922 InterfGraph.all_interf_regs_correct_aux_1
R10922 InterfGraph.all_interf_regs_correct_aux_1
R10967 InterfGraph.fold_1
R11086 Registers.add
R11098 Coq.Init.Datatypes.fst
R11067 Registers.t
R11043 InterfGraph.elt
R11013 Registers.empty
R10992 InterfGraph.interf_reg_mreg
R10967 InterfGraph.fold_1
R11086 Registers.add
R11098 Coq.Init.Datatypes.fst
R11067 Registers.t
R11043 InterfGraph.elt
R11013 Registers.empty
R10992 InterfGraph.interf_reg_mreg
R11142 Registers.t
R11123 Maps.t
R11131 Coq.Init.Datatypes.unit
R11142 Registers.t
R11123 Maps.t
R11131 Coq.Init.Datatypes.unit
R11206 InterfGraph.all_interf_regs_correct_aux_3
R11206 InterfGraph.all_interf_regs_correct_aux_3
R11260 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R11260 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
FColoring
R423 InterfGraph.graph
R434 Registers.fold
R479 InterfGraph.add_interf
R415 InterfGraph.graph
R401 Registers.t
R389 Registers.reg
R377 Coq.Init.Datatypes.bool
R370 Registers.reg
R584 InterfGraph.graph
R595 Coloring.add_interf_live
R628 Registers.eq
R657 Coq.Init.Datatypes.true
R646 Coq.Init.Datatypes.false
R576 InterfGraph.graph
R562 Registers.t
R550 Registers.reg
R755 InterfGraph.graph
R766 Coloring.add_interf_live
R806 Registers.eq
R845 Registers.eq
R874 Coq.Init.Datatypes.true
R863 Coq.Init.Datatypes.false
R824 Coq.Init.Datatypes.false
R747 InterfGraph.graph
R733 Registers.t
R721 Registers.reg
R721 Registers.reg
R980 InterfGraph.graph
R991 Coq.Lists.List.fold_left
R1023 Registers.fold
R1047 InterfGraph.add_interf_mreg
R972 InterfGraph.graph
R957 Coq.Lists.List.list
R962 Locations.mreg
R935 Registers.t
R1186 InterfGraph.graph
R1163 InterfGraph.graph
R1149 Coq.Lists.List.list
R1154 Locations.loc
R1132 Coq.Lists.List.list
R1137 Registers.reg
R1226 Coq.Lists.List "x :: y" list_scope
R1236 Coq.Lists.List "x :: y" list_scope
R1295 Locations.R
R1303 InterfGraph.add_pref_mreg
R1163 InterfGraph.graph
R1149 Coq.Lists.List.list
R1154 Locations.loc
R1132 Coq.Lists.List.list
R1137 Registers.reg
R1441 InterfGraph.graph
R1452 Coq.Lists.List.fold_left
R1479 Coloring.add_interf_op
R1433 InterfGraph.graph
R1419 Registers.t
R1402 Coq.Lists.List.list
R1407 Registers.reg
R1592 InterfGraph.graph
R1568 InterfGraph.graph
R1554 Coq.Lists.List.list
R1559 Registers.reg
R1625 Coq.Lists.List.nil
R1641 Coq.Lists.List "x :: y" list_scope
R1686 Coq.Lists.List.fold_left
R1726 Registers.eq
R1750 InterfGraph.add_interf
R1568 InterfGraph.graph
R1554 Coq.Lists.List.list
R1559 Registers.reg
R1888 InterfGraph.graph
R1916 RTL.Iop
R1946 Registers.mem
R1985 Op.is_move_operation
R2026 Coq.Init.Datatypes.Some
R2050 InterfGraph.add_pref
R2068 Coloring.add_interf_move
R2110 Coq.Init.Datatypes.None
R2130 Coloring.add_interf_op
R2184 RTL.Iload
R2224 Registers.mem
R2255 Coloring.add_interf_op
R2297 RTL.Icall
R2331 Coloring.add_prefs_call
R2380 InterfGraph.add_pref_mreg
R2426 Coloring.add_interf_op
R2462 Coloring.add_interf_call
R2517 Conventions.destroyed_at_call_regs
R2493 Registers.remove
R2399 Conventions.loc_result
R2352 Conventions.loc_arguments
R2549 RTL.Ireturn
R2558 Coq.Init.Datatypes.Some
R2575 InterfGraph.add_pref_mreg
R2592 Conventions.loc_result
R1879 InterfGraph.graph
R1865 Registers.t
R1845 RTL.instruction
R1830 AST.signature
R2697 InterfGraph.graph
R2708 Maps.fold
R2799 InterfGraph.empty_graph
R2786 RTL.fn_code
R2738 Coloring.add_edges_instr
R2771 Maps "a !! b"
R2757 RTL.fn_sig
R2678 Maps.t
R2685 Registers.t
R2661 RTL.function
R2898 Coloring.add_prefs_call
R2960 Coloring.add_interf_params
R2999 Coloring.add_interf_entry
R3045 Coloring.add_edges_instrs
R3019 RTL.fn_params
R2981 RTL.fn_params
R2928 Conventions.loc_parameters
R2946 RTL.fn_sig
R2916 RTL.fn_params
R2883 Registers.t
R2858 Maps.t
R2865 Registers.t
R2841 RTL.function
R3189 Locations.loc
R3182 Registers.reg
R3169 Registers.t
R3159 RTLtyping.regenv
R3150 InterfGraph.graph
R3138 RTL.function
R3324 InterfGraph.for_all
R3449 InterfGraph.interf_reg_reg
R3369 Locations.eq
R3409 Coq.Init.Datatypes.snd
R3387 Coq.Init.Datatypes.fst
R3436 Coq.Init.Datatypes.true
R3425 Coq.Init.Datatypes.false
R3314 Locations.loc
R3307 Registers.reg
R3289 InterfGraph.graph
R3534 InterfGraph.for_all
R3656 InterfGraph.interf_reg_mreg
R3581 Locations.eq
R3612 Locations.R
R3615 Coq.Init.Datatypes.snd
R3599 Coq.Init.Datatypes.fst
R3643 Coq.Init.Datatypes.true
R3632 Coq.Init.Datatypes.false
R3524 Locations.loc
R3517 Registers.reg
R3499 InterfGraph.graph
R3735 AST.Tint
R3741 AST.Tint
R3749 Coq.Init.Datatypes.true
R3758 AST.Tfloat
R3766 AST.Tfloat
R3776 Coq.Init.Datatypes.true
R3793 Coq.Init.Datatypes.false
R3703 AST.typ
R3703 AST.typ
R3867 Locations.R
R3883 Coq.Lists.List.In_dec
R3899 Conventions.temporaries
R3890 Locations.eq
R3927 Coq.Init.Datatypes.true
R3916 Coq.Init.Datatypes.false
R3936 Locations.S
R3939 Locations.Local
R3964 Coqlib.zlt
R3990 Coq.Init.Datatypes.true
R3979 Coq.Init.Datatypes.false
R4009 Coq.Init.Datatypes.false
R3840 Locations.loc
R4108 Registers.for_all
R4172 Coq.Bool.Bool.andb
R4200 Coloring.same_typ
R4218 Locations.type
R4178 Coloring.loc_is_acceptable
R4098 Locations.loc
R4091 Registers.reg
R4072 RTLtyping.regenv
R4056 Registers.t
R4342 Coq.Bool.Bool.andb
R4385 Coq.Bool.Bool.andb
R4434 Coloring.check_coloring_3
R4391 Coloring.check_coloring_2
R4348 Coloring.check_coloring_1
R4332 Locations.loc
R4325 Registers.reg
R4304 Registers.t
R4291 RTLtyping.regenv
R4278 InterfGraph.graph
R4647 Registers.mem
R4709 AST.Tint
R4717 Locations.R
R4719 Locations.R3
R4724 AST.Tfloat
R4734 Locations.R
R4736 Locations.F1
R4616 Registers.t
R4603 RTLtyping.regenv
R4592 Locations.loc
R4585 Registers.reg
R5007 Coloring.check_coloring
R5095 Coq.Init.Datatypes.None
R5047 Coq.Init.Datatypes.Some
R5053 Coloring.alloc_of_coloring
R4973 Coloring.graph_coloring
R4934 InterfGraph.all_interf_regs
R4893 Coloring.interf_graph
R4871 RTLtyping.regenv
R4855 Registers.t
R4830 Maps.t
R4837 Registers.t
R4813 RTL.function
FColoringproof
R298 InterfGraph.graph_incl
R427 InterfGraph.graph_incl
R445 Coq.Lists.List.fold_left
R495 InterfGraph.add_interf
R407 Coq.Init.Datatypes.bool
R400 Registers.reg
R585 Coloringproof.graph_incl_refl
R585 Coloringproof.graph_incl_refl
R650 InterfGraph.add_interf
R610 InterfGraph.graph_incl_trans
R650 InterfGraph.add_interf
R610 InterfGraph.graph_incl_trans
R705 InterfGraph.add_interf_incl
R705 InterfGraph.add_interf_incl
R730 Coloringproof.graph_incl_refl
R730 Coloringproof.graph_incl_refl
R843 InterfGraph.graph_incl
R857 Coloring.add_interf_live
R823 Coq.Init.Datatypes.bool
R816 Registers.reg
R942 Registers.fold_spec
R942 Registers.fold_spec
R968 Coloringproof.add_interf_live_incl_aux
R968 Coloringproof.add_interf_live_incl_aux
R1102 InterfGraph.interfere
R1123 Coq.Lists.List.fold_left
R1173 InterfGraph.add_interf
R1090 Coq.Init.Logic "x = y" type_scope
R1092 Coq.Init.Datatypes.true
R1067 Coq.Lists.List.In
R1328 Coloringproof.add_interf_live_incl_aux
R1370 InterfGraph.add_interf
R1328 Coloringproof.add_interf_live_incl_aux
R1370 InterfGraph.add_interf
R1425 InterfGraph.add_interf_correct
R1425 InterfGraph.add_interf_correct
R1587 InterfGraph.interfere
R1604 Coloring.add_interf_live
R1575 Coq.Init.Logic "x = y" type_scope
R1577 Coq.Init.Datatypes.true
R1554 Coq.Init.Logic "x = y" type_scope
R1536 Registers.mem
R1556 Coq.Init.Datatypes.true
R1690 Registers.fold_spec
R1690 Registers.fold_spec
R1716 Coloringproof.add_interf_live_correct_aux
R1716 Coloringproof.add_interf_live_correct_aux
R1759 Registers.elements_correct
R1759 Registers.elements_correct
R1846 InterfGraph.graph_incl
R1860 Coloring.add_interf_op
R1932 Coloringproof.add_interf_live_incl
R1932 Coloringproof.add_interf_live_incl
R2058 InterfGraph.interfere
R2075 Coloring.add_interf_op
R2046 Coq.Init.Logic "x <> y" type_scope
R2032 Coq.Init.Logic "x = y" type_scope
R2014 Registers.mem
R2034 Coq.Init.Datatypes.true
R2150 Coloringproof.add_interf_live_correct
R2150 Coloringproof.add_interf_live_correct
R2192 Registers.eq
R2192 Registers.eq
R2299 InterfGraph.graph_incl
R2313 Coloring.add_interf_move
R2393 Coloringproof.add_interf_live_incl
R2393 Coloringproof.add_interf_live_incl
R2537 InterfGraph.interfere
R2554 Coloring.add_interf_move
R2525 Coq.Init.Logic "x <> y" type_scope
R2513 Coq.Init.Logic "x <> y" type_scope
R2499 Coq.Init.Logic "x = y" type_scope
R2481 Registers.mem
R2501 Coq.Init.Datatypes.true
R2637 Coloringproof.add_interf_live_correct
R2637 Coloringproof.add_interf_live_correct
R2679 Registers.eq
R2679 Registers.eq
R2727 Registers.eq
R2727 Registers.eq
R2837 InterfGraph.graph_incl
R2855 Coq.Lists.List.fold_left
R2882 InterfGraph.add_interf_mreg
R2963 Coloringproof.graph_incl_refl
R2963 Coloringproof.graph_incl_refl
R3011 InterfGraph.add_interf_mreg
R2988 InterfGraph.graph_incl_trans
R3011 InterfGraph.add_interf_mreg
R2988 InterfGraph.graph_incl_trans
R3044 InterfGraph.add_interf_mreg_incl
R3044 InterfGraph.add_interf_mreg_incl
R3136 InterfGraph.graph_incl
R3154 Registers.fold
R3178 InterfGraph.add_interf_mreg
R3236 Registers.fold_spec
R3236 Registers.fold_spec
R3260 Coloringproof.add_interf_call_incl_aux_1
R3260 Coloringproof.add_interf_call_incl_aux_1
R3351 InterfGraph.graph_incl
R3365 Coloring.add_interf_call
R3453 Coloringproof.graph_incl_refl
R3453 Coloringproof.graph_incl_refl
R3479 InterfGraph.graph_incl_trans
R3479 InterfGraph.graph_incl_trans
R3532 Coloringproof.add_interf_call_incl_aux_2
R3532 Coloringproof.add_interf_call_incl_aux_2
R3658 InterfGraph.interfere
R3634 InterfGraph.interfere
R3612 InterfGraph.graph_incl
R3836 InterfGraph.interfere_mreg
R3807 InterfGraph.interfere_mreg
R3785 InterfGraph.graph_incl
R3993 InterfGraph.interfere_mreg
R4018 Coq.Lists.List.fold_left
R4045 InterfGraph.add_interf_mreg
R3978 Coq.Lists.List.In
R4164 Coloringproof.interfere_mreg_incl
R4164 Coloringproof.interfere_mreg_incl
R4194 Coloringproof.add_interf_call_incl_aux_1
R4194 Coloringproof.add_interf_call_incl_aux_1
R4230 InterfGraph.add_interf_mreg_correct
R4230 InterfGraph.add_interf_mreg_correct
R4374 InterfGraph.interfere_mreg
R4399 Registers.fold
R4423 InterfGraph.add_interf_mreg
R4362 Coq.Init.Logic "x = y" type_scope
R4344 Registers.mem
R4364 Coq.Init.Datatypes.true
R4481 Registers.fold_spec
R4481 Registers.fold_spec
R4505 Coloringproof.add_interf_call_correct_aux_1
R4505 Coloringproof.add_interf_call_correct_aux_1
R4544 Registers.elements_correct
R4544 Registers.elements_correct
R4697 InterfGraph.interfere_mreg
R4718 Coloring.add_interf_call
R4676 Coq.Lists.List.In
R4664 Coq.Init.Logic "x = y" type_scope
R4646 Registers.mem
R4666 Coq.Init.Datatypes.true
R4847 Coloringproof.interfere_mreg_incl
R4847 Coloringproof.interfere_mreg_incl
R4876 Coloringproof.add_interf_call_incl
R4876 Coloringproof.add_interf_call_incl
R4906 Coloringproof.add_interf_call_correct_aux_2
R4906 Coloringproof.add_interf_call_correct_aux_2
R5027 InterfGraph.graph_incl
R5041 Coloring.add_prefs_call
R5137 Coloringproof.graph_incl_refl
R5137 Coloringproof.graph_incl_refl
R5137 Coloringproof.graph_incl_refl
R5137 Coloringproof.graph_incl_refl
R5137 Coloringproof.graph_incl_refl
R5178 InterfGraph.graph_incl_trans
R5178 InterfGraph.graph_incl_trans
R5220 InterfGraph.add_pref_mreg_incl
R5220 InterfGraph.add_pref_mreg_incl
R5309 InterfGraph.graph_incl
R5323 Coloring.add_interf_entry
R5431 Coloringproof.graph_incl_refl
R5431 Coloringproof.graph_incl_refl
R5457 InterfGraph.graph_incl_trans
R5457 InterfGraph.graph_incl_trans
R5498 Coloringproof.add_interf_op_incl
R5498 Coloringproof.add_interf_op_incl
R5651 InterfGraph.interfere
R5668 Coloring.add_interf_entry
R5640 Coq.Init.Logic "x <> y" type_scope
R5625 Coq.Init.Logic "x = y" type_scope
R5606 Registers.mem
R5627 Coq.Init.Datatypes.true
R5588 Coq.Lists.List.In
R5833 Coloring.add_interf_op
R5812 Coloringproof.interfere_incl
R5833 Coloring.add_interf_op
R5812 Coloringproof.interfere_incl
R5868 Coloringproof.add_interf_entry_incl
R5868 Coloringproof.add_interf_entry_incl
R5906 InterfGraph.interfere_sym
R5906 InterfGraph.interfere_sym
R5927 Coloringproof.add_interf_op_correct
R5927 Coloringproof.add_interf_op_correct
R6024 InterfGraph.graph_incl
R6041 Coq.Lists.List.fold_left
R6077 Registers.eq
R6101 InterfGraph.add_interf
R6179 Coloringproof.graph_incl_refl
R6179 Coloringproof.graph_incl_refl
R6205 InterfGraph.graph_incl_trans
R6205 InterfGraph.graph_incl_trans
R6246 Registers.eq
R6246 Registers.eq
R6275 Coloringproof.graph_incl_refl
R6275 Coloringproof.graph_incl_refl
R6298 InterfGraph.add_interf_incl
R6298 InterfGraph.add_interf_incl
R6368 InterfGraph.graph_incl
R6382 Coloring.add_interf_params
R6453 Coloringproof.graph_incl_refl
R6453 Coloringproof.graph_incl_refl
R6479 InterfGraph.graph_incl_trans
R6479 InterfGraph.graph_incl_trans
R6520 Coloringproof.add_interf_params_incl_aux
R6520 Coloringproof.add_interf_params_incl_aux
R6642 InterfGraph.interfere
R6662 Coq.Lists.List.fold_left
R6698 Registers.eq
R6722 InterfGraph.add_interf
R6631 Coq.Init.Logic "x <> y" type_scope
R6614 Coq.Lists.List.In
R6845 InterfGraph.interfere_sym
R6845 InterfGraph.interfere_sym
R6867 Coloringproof.interfere_incl
R6867 Coloringproof.interfere_incl
R6891 Coloringproof.add_interf_params_incl_aux
R6891 Coloringproof.add_interf_params_incl_aux
R6928 Registers.eq
R6928 Registers.eq
R6970 InterfGraph.add_interf_correct
R6970 InterfGraph.add_interf_correct
R7098 InterfGraph.interfere
R7115 Coloring.add_interf_params
R7087 Coq.Init.Logic "x <> y" type_scope
R7072 Coq.Lists.List.In
R7060 Coq.Lists.List.In
R7272 Coloringproof.interfere_incl
R7272 Coloringproof.interfere_incl
R7294 Coloringproof.add_interf_params_incl
R7294 Coloringproof.add_interf_params_incl
R7326 Coloringproof.add_interf_params_correct_aux
R7326 Coloringproof.add_interf_params_correct_aux
R7380 InterfGraph.interfere_sym
R7380 InterfGraph.interfere_sym
R7404 Coloringproof.interfere_incl
R7404 Coloringproof.interfere_incl
R7426 Coloringproof.add_interf_params_incl
R7426 Coloringproof.add_interf_params_incl
R7458 Coloringproof.add_interf_params_correct_aux
R7458 Coloringproof.add_interf_params_correct_aux
R7566 InterfGraph.graph_incl
R7580 Coloring.add_edges_instr
R7684 Coloringproof.graph_incl_refl
R7684 Coloringproof.graph_incl_refl
R7684 Coloringproof.graph_incl_refl
R7684 Coloringproof.graph_incl_refl
R7684 Coloringproof.graph_incl_refl
R7684 Coloringproof.graph_incl_refl
R7684 Coloringproof.graph_incl_refl
R7684 Coloringproof.graph_incl_refl
R7709 Registers.mem
R7709 Registers.mem
R7741 Op.is_move_operation
R7741 Op.is_move_operation
R7774 InterfGraph.graph_incl_trans
R7805 InterfGraph.add_pref_incl
R7774 InterfGraph.graph_incl_trans
R7805 InterfGraph.add_pref_incl
R7829 Coloringproof.add_interf_move_incl
R7829 Coloringproof.add_interf_move_incl
R7859 Coloringproof.add_interf_op_incl
R7859 Coloringproof.add_interf_op_incl
R7887 Coloringproof.graph_incl_refl
R7887 Coloringproof.graph_incl_refl
R7912 Registers.mem
R7912 Registers.mem
R7940 Coloringproof.add_interf_op_incl
R7940 Coloringproof.add_interf_op_incl
R7968 Coloringproof.graph_incl_refl
R7968 Coloringproof.graph_incl_refl
R7994 InterfGraph.graph_incl_trans
R8025 Coloringproof.add_prefs_call_incl
R7994 InterfGraph.graph_incl_trans
R8025 Coloringproof.add_prefs_call_incl
R8056 InterfGraph.graph_incl_trans
R8087 InterfGraph.add_pref_mreg_incl
R8056 InterfGraph.graph_incl_trans
R8087 InterfGraph.add_pref_mreg_incl
R8117 InterfGraph.graph_incl_trans
R8148 Coloringproof.add_interf_op_incl
R8117 InterfGraph.graph_incl_trans
R8148 Coloringproof.add_interf_op_incl
R8177 Coloringproof.add_interf_call_incl
R8177 Coloringproof.add_interf_call_incl
R8221 InterfGraph.add_pref_mreg_incl
R8221 InterfGraph.add_pref_mreg_incl
R8249 Coloringproof.graph_incl_refl
R8249 Coloringproof.graph_incl_refl
R8390 RTL.Iop
R8423 Op.is_move_operation
R8462 Coq.Init.Datatypes.Some
R8606 InterfGraph.interfere
R8596 Coq.Init.Logic "x <> y" type_scope
R8584 Coq.Init.Logic "x <> y" type_scope
R8562 Coq.Init.Logic "x = y" type_scope
R8544 Registers.mem
R8564 Coq.Init.Datatypes.true
R8524 Coq.Init.Logic "x = y" type_scope
R8504 Registers.mem
R8526 Coq.Init.Datatypes.true
R8632 Coq.Init.Datatypes.None
R8760 InterfGraph.interfere
R8750 Coq.Init.Logic "x <> y" type_scope
R8728 Coq.Init.Logic "x = y" type_scope
R8710 Registers.mem
R8730 Coq.Init.Datatypes.true
R8690 Coq.Init.Logic "x = y" type_scope
R8670 Registers.mem
R8692 Coq.Init.Datatypes.true
R8792 RTL.Iload
R8927 InterfGraph.interfere
R8917 Coq.Init.Logic "x <> y" type_scope
R8899 Coq.Init.Logic "x = y" type_scope
R8881 Registers.mem
R8901 Coq.Init.Datatypes.true
R8865 Coq.Init.Logic "x = y" type_scope
R8845 Registers.mem
R8867 Coq.Init.Datatypes.true
R8949 RTL.Icall
R9122 Coq.Init.Logic "A /\ B" type_scope
R9101 InterfGraph.interfere_mreg
R9083 Coq.Init.Logic "x <> y" type_scope
R9041 Coq.Lists.List.In
R9047 Conventions.destroyed_at_call_regs
R9023 Coq.Init.Logic "x = y" type_scope
R9005 Registers.mem
R9025 Coq.Init.Datatypes.true
R9197 InterfGraph.interfere
R9187 Coq.Init.Logic "x <> y" type_scope
R9167 Coq.Init.Logic "x = y" type_scope
R9149 Registers.mem
R9169 Coq.Init.Datatypes.true
R9231 Coq.Init.Logic.True
R8350 InterfGraph.graph
R8333 RTL.instruction
R8315 Registers.t
R9368 Coloringproof.correct_interf_instr
R9328 Coloringproof.correct_interf_instr
R9306 InterfGraph.graph_incl
R9503 Op.is_move_operation
R9503 Op.is_move_operation
R9544 Coloringproof.interfere_incl
R9544 Coloringproof.interfere_incl
R9584 Coloringproof.interfere_incl
R9584 Coloringproof.interfere_incl
R9624 Coloringproof.interfere_incl
R9624 Coloringproof.interfere_incl
R9687 Coloringproof.interfere_mreg_incl
R9687 Coloringproof.interfere_mreg_incl
R9732 Coloringproof.interfere_incl
R9732 Coloringproof.interfere_incl
R9821 Coloringproof.correct_interf_instr
R9854 Coloring.add_edges_instr
R9995 Op.is_move_operation
R9995 Op.is_move_operation
R10047 Coloringproof.interfere_incl
R10047 Coloringproof.interfere_incl
R10072 InterfGraph.add_pref_incl
R10072 InterfGraph.add_pref_incl
R10093 Coloringproof.add_interf_move_correct
R10093 Coloringproof.add_interf_move_correct
R10143 Coloringproof.add_interf_op_correct
R10143 Coloringproof.add_interf_op_correct
R10201 Coloringproof.add_interf_op_correct
R10201 Coloringproof.add_interf_op_correct
R10286 Coloring.add_interf_call
R10325 Conventions.destroyed_at_call_regs
R10303 Registers.remove
R10256 Coloringproof.interfere_mreg_incl
R10286 Coloring.add_interf_call
R10325 Conventions.destroyed_at_call_regs
R10303 Registers.remove
R10256 Coloringproof.interfere_mreg_incl
R10361 InterfGraph.graph_incl_trans
R10392 Coloringproof.add_prefs_call_incl
R10361 InterfGraph.graph_incl_trans
R10392 Coloringproof.add_prefs_call_incl
R10423 InterfGraph.graph_incl_trans
R10454 InterfGraph.add_pref_mreg_incl
R10423 InterfGraph.graph_incl_trans
R10454 InterfGraph.add_pref_mreg_incl
R10483 Coloringproof.add_interf_op_incl
R10483 Coloringproof.add_interf_op_incl
R10511 Coloringproof.add_interf_call_correct
R10511 Coloringproof.add_interf_call_correct
R10552 Registers.mem_remove_other
R10552 Registers.mem_remove_other
R10593 Coloringproof.interfere_incl
R10593 Coloringproof.interfere_incl
R10618 InterfGraph.graph_incl_trans
R10649 Coloringproof.add_prefs_call_incl
R10618 InterfGraph.graph_incl_trans
R10649 Coloringproof.add_prefs_call_incl
R10679 InterfGraph.add_pref_mreg_incl
R10679 InterfGraph.add_pref_mreg_incl
R10707 Coloringproof.add_interf_op_correct
R10707 Coloringproof.add_interf_op_correct
R10805 InterfGraph.graph_incl
R10823 Coq.Lists.List.fold_left
R10899 Coloring.add_edges_instr
R10932 Maps "a !! b"
R10936 Coq.Init.Datatypes.fst
R10920 Coq.Init.Datatypes.snd
R10871 Coq.Init.Datatypes "x * y" type_scope
R10862 Coq.NArith.BinPos.positive
R10873 RTL.instruction
R10850 InterfGraph.graph
R11014 Coloringproof.graph_incl_refl
R11014 Coloringproof.graph_incl_refl
R11040 InterfGraph.graph_incl_trans
R11040 InterfGraph.graph_incl_trans
R11081 Coloringproof.add_edges_instr_incl
R11081 Coloringproof.add_edges_instr_incl
R11203 Coloringproof.correct_interf_instr
R11240 Coq.Lists.List.fold_left
R11316 Coloring.add_edges_instr
R11349 Maps "a !! b"
R11353 Coq.Init.Datatypes.fst
R11337 Coq.Init.Datatypes.snd
R11288 Coq.Init.Datatypes "x * y" type_scope
R11279 Coq.NArith.BinPos.positive
R11290 RTL.instruction
R11267 InterfGraph.graph
R11228 Maps "a !! b"
R11180 Coq.Lists.List.In
R11183 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R11475 Coloringproof.correct_interf_instr_incl
R11475 Coloringproof.correct_interf_instr_incl
R11510 Coloringproof.add_edges_instrs_incl_aux
R11510 Coloringproof.add_edges_instrs_incl_aux
R11545 Coloringproof.add_edges_instr_correct
R11545 Coloringproof.add_edges_instr_correct
R11669 Coloringproof.correct_interf_instr
R11702 Coloring.add_edges_instrs
R11694 Maps "a !! b"
R11655 Coq.Init.Logic "x = y" type_scope
R11651 Maps "a ! b"
R11643 RTL.fn_code
R11657 Coq.Init.Datatypes.Some
R11782 Maps.fold_spec
R11782 Maps.fold_spec
R11807 Coloringproof.add_edges_instrs_correct_aux
R11807 Coloringproof.add_edges_instrs_correct_aux
R11845 Maps.elements_correct
R11845 Maps.elements_correct
R11970 Coloringproof.correct_interf_instr
R12003 Coloring.interf_graph
R11995 Maps "a !! b"
R11956 Coq.Init.Logic "x = y" type_scope
R11952 Maps "a ! b"
R11944 RTL.fn_code
R11958 Coq.Init.Datatypes.Some
R12109 Coloring.add_edges_instrs
R12077 Coloringproof.correct_interf_instr_incl
R12109 Coloring.add_edges_instrs
R12077 Coloringproof.correct_interf_instr_incl
R12144 InterfGraph.graph_incl_trans
R12175 Coloringproof.add_prefs_call_incl
R12144 InterfGraph.graph_incl_trans
R12175 Coloringproof.add_prefs_call_incl
R12206 InterfGraph.graph_incl_trans
R12237 Coloringproof.add_interf_params_incl
R12206 InterfGraph.graph_incl_trans
R12237 Coloringproof.add_interf_params_incl
R12270 Coloringproof.add_interf_entry_incl
R12270 Coloringproof.add_interf_entry_incl
R12301 Coloringproof.add_edges_instrs_correct
R12301 Coloringproof.add_edges_instrs_correct
R12464 InterfGraph.interfere
R12481 Coloring.interf_graph
R12453 Coq.Init.Logic "x <> y" type_scope
R12425 Coq.Lists.List.In
R12434 RTL.fn_params
R12400 Coq.Lists.List.In
R12409 RTL.fn_params
R12557 Coloringproof.interfere_incl
R12557 Coloringproof.interfere_incl
R12581 Coloringproof.add_prefs_call_incl
R12581 Coloringproof.add_prefs_call_incl
R12610 Coloringproof.add_interf_params_correct
R12610 Coloringproof.add_interf_params_correct
R12781 InterfGraph.interfere
R12798 Coloring.interf_graph
R12770 Coq.Init.Logic "x <> y" type_scope
R12755 Coq.Init.Logic "x = y" type_scope
R12735 Registers.mem
R12757 Coq.Init.Datatypes.true
R12710 Coq.Lists.List.In
R12719 RTL.fn_params
R12873 Coloringproof.interfere_incl
R12873 Coloringproof.interfere_incl
R12898 InterfGraph.graph_incl_trans
R12929 Coloringproof.add_prefs_call_incl
R12898 InterfGraph.graph_incl_trans
R12929 Coloringproof.add_prefs_call_incl
R12959 Coloringproof.add_interf_params_incl
R12959 Coloringproof.add_interf_params_incl
R12991 Coloringproof.add_interf_entry_correct
R12991 Coloringproof.add_interf_entry_correct
R13128 InterfGraph.graph
R13149 RTLtyping.regenv
R13175 Registers.t
R13211 Locations.loc
R13204 Registers.reg
R13365 Coq.Init.Logic "x <> y" type_scope
R13307 InterfGraph.In
R13332 InterfGraph.interf_reg_reg
R13320 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13295 Coq.Init.Logic "x = y" type_scope
R13267 Coloring.check_coloring_1
R13297 Coq.Init.Datatypes.true
R13434 FSetInterface.compat_bool
R13498 Locations.eq
R13538 Coq.Init.Datatypes.snd
R13516 Coq.Init.Datatypes.fst
R13583 Coq.Init.Datatypes.true
R13572 Coq.Init.Datatypes.false
R13460 InterfGraph.eq
R13434 FSetInterface.compat_bool
R13498 Locations.eq
R13538 Coq.Init.Datatypes.snd
R13516 Coq.Init.Datatypes.fst
R13583 Coq.Init.Datatypes.true
R13572 Coq.Init.Datatypes.false
R13460 InterfGraph.eq
R13715 InterfGraph.for_all_2
R13715 InterfGraph.for_all_2
R13761 Locations.eq
R13761 Locations.eq
R13992 Coq.Init.Logic "x <> y" type_scope
R13995 Locations.R
R13931 InterfGraph.In
R13958 InterfGraph.interf_reg_mreg
R13945 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13919 Coq.Init.Logic "x = y" type_scope
R13891 Coloring.check_coloring_2
R13921 Coq.Init.Datatypes.true
R14055 FSetInterface.compat_bool
R14120 Locations.eq
R14150 Locations.R
R14153 Coq.Init.Datatypes.snd
R14138 Coq.Init.Datatypes.fst
R14198 Coq.Init.Datatypes.true
R14187 Coq.Init.Datatypes.false
R14081 InterfGraph.eq
R14055 FSetInterface.compat_bool
R14120 Locations.eq
R14150 Locations.R
R14153 Coq.Init.Datatypes.snd
R14138 Coq.Init.Datatypes.fst
R14198 Coq.Init.Datatypes.true
R14187 Coq.Init.Datatypes.false
R14081 InterfGraph.eq
R14331 InterfGraph.for_all_2
R14331 InterfGraph.for_all_2
R14378 Locations.eq
R14400 Locations.R
R14378 Locations.eq
R14400 Locations.R
R14519 Coq.Init.Logic "x = y" type_scope
R14506 Coq.Init.Logic "x = y" type_scope
R14491 Coloring.same_typ
R14508 Coq.Init.Datatypes.true
R14660 Conventions.loc_acceptable
R14650 Coq.Init.Logic "x = y" type_scope
R14630 Coloring.loc_is_acceptable
R14652 Coq.Init.Datatypes.true
R14749 Coq.Lists.List.In_dec
R14769 Conventions.temporaries
R14764 Locations.R
R14756 Locations.eq
R14749 Coq.Lists.List.In_dec
R14769 Conventions.temporaries
R14764 Locations.R
R14756 Locations.eq
R14841 Coqlib.zlt
R14841 Coqlib.zlt
R15094 Coq.Init.Logic "A /\ B" type_scope
R15066 Conventions.loc_acceptable
R15103 Coq.Init.Logic "x = y" type_scope
R15105 Locations.type
R15054 Coq.Init.Logic "x = y" type_scope
R15033 Registers.mem
R15056 Coq.Init.Datatypes.true
R15021 Coq.Init.Logic "x = y" type_scope
R14983 Coloring.check_coloring_3
R15023 Coq.Init.Datatypes.true
R15184 Registers.for_all_spec
R15184 Registers.for_all_spec
R15228 Coq.Bool.Bool.andb_prop
R15228 Coq.Bool.Bool.andb_prop
R15270 Coloringproof.loc_is_acceptable_correct
R15270 Coloringproof.loc_is_acceptable_correct
R15311 Coloringproof.same_typ_correct
R15311 Coloringproof.same_typ_correct
R15404 InterfGraph.graph
R15425 RTLtyping.regenv
R15448 InterfGraph.all_interf_regs
R15493 Locations.loc
R15486 Registers.reg
R15511 Coloring.alloc_of_coloring
R15710 Coq.Init.Logic "x <> y" type_scope
R15655 InterfGraph.In
R15680 InterfGraph.interf_reg_reg
R15668 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15643 Coq.Init.Logic "x = y" type_scope
R15605 Coloring.check_coloring
R15645 Coq.Init.Datatypes.true
R15797 Coq.Bool.Bool.andb_prop
R15797 Coq.Bool.Bool.andb_prop
R15837 InterfGraph.all_interf_regs_correct_1
R15837 InterfGraph.all_interf_regs_correct_1
R15939 Coloringproof.check_coloring_1_correct
R15939 Coloringproof.check_coloring_1_correct
R16140 Coq.Init.Logic "x <> y" type_scope
R16143 Locations.R
R16082 InterfGraph.In
R16109 InterfGraph.interf_reg_mreg
R16096 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16070 Coq.Init.Logic "x = y" type_scope
R16032 Coloring.check_coloring
R16072 Coq.Init.Datatypes.true
R16224 Coq.Bool.Bool.andb_prop
R16224 Coq.Bool.Bool.andb_prop
R16258 Coq.Bool.Bool.andb_prop
R16258 Coq.Bool.Bool.andb_prop
R16299 InterfGraph.all_interf_regs_correct_2
R16299 InterfGraph.all_interf_regs_correct_2
R16384 Coloringproof.check_coloring_2_correct
R16384 Coloringproof.check_coloring_2_correct
R16522 Conventions.loc_acceptable
R16510 Coq.Init.Logic "x = y" type_scope
R16472 Coloring.check_coloring
R16512 Coq.Init.Datatypes.true
R16622 Coq.Bool.Bool.andb_prop
R16622 Coq.Bool.Bool.andb_prop
R16656 Coq.Bool.Bool.andb_prop
R16656 Coq.Bool.Bool.andb_prop
R16693 Registers.mem
R16693 Registers.mem
R16737 Coloringproof.check_coloring_3_correct
R16737 Coloringproof.check_coloring_3_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R16942 Coq.Init.Logic "x = y" type_scope
R16944 Locations.type
R16924 Coq.Init.Logic "x = y" type_scope
R16886 Coloring.check_coloring
R16926 Coq.Init.Datatypes.true
R17038 Coq.Bool.Bool.andb_prop
R17038 Coq.Bool.Bool.andb_prop
R17072 Coq.Bool.Bool.andb_prop
R17072 Coq.Bool.Bool.andb_prop
R17109 Registers.mem
R17109 Registers.mem
R17153 Coloringproof.check_coloring_3_correct
R17153 Coloringproof.check_coloring_3_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R17409 RTL.Iop
R17442 Op.is_move_operation
R17481 Coq.Init.Datatypes.Some
R17641 Coq.Init.Logic "x <> y" type_scope
R17623 Coq.Init.Logic "x <> y" type_scope
R17611 Coq.Init.Logic "x <> y" type_scope
R17589 Coq.Init.Logic "x = y" type_scope
R17567 Registers.mem
R17584 Maps "a !! b"
R17591 Coq.Init.Datatypes.true
R17547 Coq.Init.Logic "x = y" type_scope
R17523 Registers.mem
R17542 Maps "a !! b"
R17549 Coq.Init.Datatypes.true
R17662 Coq.Init.Datatypes.None
R17806 Coq.Init.Logic "x <> y" type_scope
R17788 Coq.Init.Logic "x <> y" type_scope
R17766 Coq.Init.Logic "x = y" type_scope
R17744 Registers.mem
R17761 Maps "a !! b"
R17768 Coq.Init.Datatypes.true
R17724 Coq.Init.Logic "x = y" type_scope
R17700 Registers.mem
R17719 Maps "a !! b"
R17726 Coq.Init.Datatypes.true
R17833 RTL.Iload
R17984 Coq.Init.Logic "x <> y" type_scope
R17966 Coq.Init.Logic "x <> y" type_scope
R17948 Coq.Init.Logic "x = y" type_scope
R17926 Registers.mem
R17943 Maps "a !! b"
R17950 Coq.Init.Datatypes.true
R17910 Coq.Init.Logic "x = y" type_scope
R17886 Registers.mem
R17905 Maps "a !! b"
R17912 Coq.Init.Datatypes.true
R18001 RTL.Icall
R18159 Coq.Init.Logic "A /\ B" type_scope
R18114 Coq.Init.Logic "~ x" type_scope
R18116 Coq.Lists.List.In
R18129 Conventions.destroyed_at_call
R18096 Coq.Init.Logic "x <> y" type_scope
R18076 Coq.Init.Logic "x = y" type_scope
R18054 Registers.mem
R18071 Maps "a !! b"
R18078 Coq.Init.Datatypes.true
R18246 Coq.Init.Logic "x <> y" type_scope
R18228 Coq.Init.Logic "x <> y" type_scope
R18208 Coq.Init.Logic "x = y" type_scope
R18186 Registers.mem
R18203 Maps "a !! b"
R18210 Coq.Init.Datatypes.true
R18275 Coq.Init.Logic.True
R17363 RTL.instruction
R17349 RTL.node
R17334 Locations.loc
R17327 Registers.reg
R17302 Maps.t
R17309 Registers.t
R18330 RTL.function
R18354 RTLtyping.regenv
R18377 Maps.t
R18384 Registers.t
R18410 Registers.t
R18443 Locations.loc
R18436 Registers.reg
R18458 Coloring.interf_graph
R18500 InterfGraph.all_interf_regs
R18535 Coloring.graph_coloring
R18678 Coq.Init.Logic "A /\ B" type_scope
R18671 Coq.Init.Logic "x = y" type_scope
R18633 Coloring.check_coloring
R18673 Coq.Init.Datatypes.true
R18689 Coq.Init.Logic "x = y" type_scope
R18691 Coloring.alloc_of_coloring
R18615 Coq.Init.Logic "x = y" type_scope
R18589 Coloring.regalloc
R18617 Coq.Init.Datatypes.Some
R18787 Coloring.check_coloring
R18803 Coloring.interf_graph
R18787 Coloring.check_coloring
R18803 Coloring.interf_graph
R19014 Conventions.loc_acceptable
R18996 Coq.Init.Logic "x = y" type_scope
R18970 Coloring.regalloc
R18998 Coq.Init.Datatypes.Some
R19063 Coloringproof.regalloc_ok
R19063 Coloringproof.regalloc_ok
R19123 Coloringproof.alloc_of_coloring_correct_3
R19123 Coloringproof.alloc_of_coloring_correct_3
R19257 Conventions.locs_acceptable
R19274 Coq.Lists.List.map
R19239 Coq.Init.Logic "x = y" type_scope
R19213 Coloring.regalloc
R19241 Coq.Init.Datatypes.Some
R19332 Coqlib.list_in_map_inv
R19332 Coqlib.list_in_map_inv
R19394 Coloringproof.regalloc_acceptable
R19394 Coloringproof.regalloc_acceptable
R19537 Coq.Init.Logic "x = y" type_scope
R19518 Locations.type
R19500 Coq.Init.Logic "x = y" type_scope
R19474 Coloring.regalloc
R19502 Coq.Init.Datatypes.Some
R19569 Coloringproof.regalloc_ok
R19569 Coloringproof.regalloc_ok
R19641 Coloringproof.alloc_of_coloring_correct_4
R19641 Coloringproof.alloc_of_coloring_correct_4
R19916 Coloringproof.correct_alloc_instr
R19873 Coloringproof.correct_interf_instr
R19898 Maps "a !! b"
R19858 Coq.Init.Logic "x <> y" type_scope
R19861 Locations.R
R19822 InterfGraph.interfere_mreg
R19788 Coq.Init.Logic "x <> y" type_scope
R19758 InterfGraph.interfere
R20081 Op.is_move_operation
R20081 Op.is_move_operation
R20207 Coqlib.list_in_map_inv
R20223 Locations.R
R20207 Coqlib.list_in_map_inv
R20223 Locations.R
R20481 Coloringproof.correct_alloc_instr
R20463 Coq.Init.Logic "x = y" type_scope
R20459 Maps "a ! b"
R20451 RTL.fn_code
R20465 Coq.Init.Datatypes.Some
R20430 Coq.Init.Logic "x = y" type_scope
R20404 Coloring.regalloc
R20432 Coq.Init.Datatypes.Some
R20545 Coloringproof.regalloc_ok
R20545 Coloringproof.regalloc_ok
R20577 Coloringproof.correct_interf_alloc_instr
R20577 Coloringproof.correct_interf_alloc_instr
R20663 InterfGraph.ordered_pair_charact
R20663 InterfGraph.ordered_pair_charact
R20707 Coloringproof.alloc_of_coloring_correct_1
R20707 Coloringproof.alloc_of_coloring_correct_1
R20774 Coq.Init.Logic.sym_not_equal
R20774 Coq.Init.Logic.sym_not_equal
R20797 Coloringproof.alloc_of_coloring_correct_1
R20797 Coloringproof.alloc_of_coloring_correct_1
R20902 Coloringproof.alloc_of_coloring_correct_2
R20902 Coloringproof.alloc_of_coloring_correct_2
R20965 Coloringproof.interf_graph_correct_1
R20965 Coloringproof.interf_graph_correct_1
R21106 Coqlib.list_norepet
R21120 Coq.Lists.List.map
R21138 RTL.fn_params
R21074 Coqlib.list_norepet
R21090 RTL.fn_params
R21056 Coq.Init.Logic "x = y" type_scope
R21030 Coloring.regalloc
R21058 Coq.Init.Datatypes.Some
R21174 Coloringproof.regalloc_ok
R21174 Coloringproof.regalloc_ok
R21206 Coqlib.list_map_norepet
R21206 Coqlib.list_map_norepet
R21277 InterfGraph.ordered_pair_charact
R21277 InterfGraph.ordered_pair_charact
R21319 Coloringproof.alloc_of_coloring_correct_1
R21319 Coloringproof.alloc_of_coloring_correct_1
R21403 InterfGraph.interfere
R21403 InterfGraph.interfere
R21440 Coloringproof.interf_graph_correct_2
R21440 Coloringproof.interf_graph_correct_2
R21478 Coq.Init.Logic.sym_not_equal
R21478 Coq.Init.Logic.sym_not_equal
R21501 Coloringproof.alloc_of_coloring_correct_1
R21501 Coloringproof.alloc_of_coloring_correct_1
R21585 InterfGraph.interfere
R21585 InterfGraph.interfere
R21622 Coloringproof.interf_graph_correct_2
R21622 Coloringproof.interf_graph_correct_2
R21826 Coq.Init.Logic "x <> y" type_scope
R21806 Coq.Init.Logic "x <> y" type_scope
R21791 Coq.Init.Logic "x = y" type_scope
R21771 Registers.mem
R21793 Coq.Init.Datatypes.true
R21746 Coq.Lists.List.In
R21755 RTL.fn_params
R21728 Coq.Init.Logic "x = y" type_scope
R21702 Coloring.regalloc
R21730 Coq.Init.Datatypes.Some
R21862 Coloringproof.regalloc_ok
R21862 Coloringproof.regalloc_ok
R21924 InterfGraph.ordered_pair_charact
R21924 InterfGraph.ordered_pair_charact
R21968 Coloringproof.alloc_of_coloring_correct_1
R21968 Coloringproof.alloc_of_coloring_correct_1
R22052 InterfGraph.interfere
R22052 InterfGraph.interfere
R22090 Coloringproof.interf_graph_correct_3
R22090 Coloringproof.interf_graph_correct_3
R22128 Coq.Init.Logic.sym_not_equal
R22128 Coq.Init.Logic.sym_not_equal
R22151 Coloringproof.alloc_of_coloring_correct_1
R22151 Coloringproof.alloc_of_coloring_correct_1
R22235 InterfGraph.interfere
R22235 InterfGraph.interfere
R22273 Coloringproof.interf_graph_correct_3
R22273 Coloringproof.interf_graph_correct_3
FParallelmove
R393 Coq.Init.Logic.refl_equal
R455 Coq.Arith.EqNat.beq_nat_eq
R531 Coq.Init.Logic "x = y" type_scope
R519 Coq.Arith.EqNat.beq_nat
R533 Coq.Init.Datatypes.false
R510 Coq.Init.Logic "x <> y" type_scope
R502 Coq.Init.Datatypes.nat
R502 Coq.Init.Datatypes.nat
R575 Coq.Arith.EqNat.beq_nat
R575 Coq.Arith.EqNat.beq_nat
R634 Parallelmove.neq_is_neq
R705 Coq.Init.Logic "x = y" type_scope
R698 Coq.Lists.List "x ++ y" list_scope
R701 Coq.Lists.List.nil
R686 Coq.Lists.List.list
R876 Coq.Init.Logic "x = y" type_scope
R868 Coq.Lists.List "x ++ y" list_scope
R863 Coq.Lists.List "x :: y" list_scope
R880 Coq.Lists.List "x :: y" list_scope
R887 Coq.Lists.List "x ++ y" list_scope
R842 Coq.Lists.List.list
R842 Coq.Lists.List.list
R987 Coq.Init.Logic "x = y" type_scope
R973 Coq.Lists.List "x ++ y" list_scope
R980 Coq.Lists.List "x ++ y" list_scope
R998 Coq.Lists.List "x ++ y" list_scope
R993 Coq.Lists.List "x ++ y" list_scope
R960 Coq.Lists.List.list
R960 Coq.Lists.List.list
R960 Coq.Lists.List.list
R1172 Coq.Init.Logic "'exists' x : t , p" type_scope
R1187 Coq.Init.Logic "'exists' x : t , p" type_scope
R1223 Coq.Init.Logic "x = y" type_scope
R1209 Coq.Lists.List "x ++ y" list_scope
R1215 Coq.Lists.List "x :: y" list_scope
R1218 Coq.Lists.List.nil
R1227 Coq.Lists.List "x :: y" list_scope
R1198 Coq.Lists.List.list
R1152 Coq.Lists.List.list
R1304 Coq.Lists.List.nil
R1304 Coq.Lists.List.nil
R1373 Coq.Lists.List "x ++ y" list_scope
R1379 Coq.Lists.List "x :: y" list_scope
R1382 Coq.Lists.List.nil
R1373 Coq.Lists.List "x ++ y" list_scope
R1379 Coq.Lists.List "x :: y" list_scope
R1382 Coq.Lists.List.nil
R1468 Coq.Init.Logic "'exists' x : t , p" type_scope
R1483 Coq.Init.Logic "'exists' x : t , p" type_scope
R1518 Coq.Init.Logic "x = y" type_scope
R1505 Coq.Lists.List "x ++ y" list_scope
R1511 Coq.Lists.List "x :: y" list_scope
R1522 Coq.Lists.List "x :: y" list_scope
R1494 Coq.Lists.List.list
R1448 Coq.Lists.List.list
R1448 Coq.Lists.List.list
R1661 Coq.Lists.List "x ++ y" list_scope
R1667 Coq.Lists.List "x :: y" list_scope
R1661 Coq.Lists.List "x ++ y" list_scope
R1667 Coq.Lists.List "x :: y" list_scope
R1752 Coq.Init.Logic "'exists' x : t , p" type_scope
R1767 Coq.Init.Logic "'exists' x : t , p" type_scope
R1794 Coq.Init.Logic "x = y" type_scope
R1789 Coq.Lists.List "x :: y" list_scope
R1798 Coq.Lists.List "x ++ y" list_scope
R1804 Coq.Lists.List "x :: y" list_scope
R1807 Coq.Lists.List.nil
R1778 Coq.Lists.List.list
R1732 Coq.Lists.List.list
R1884 Coq.Lists.List.nil
R1884 Coq.Lists.List.nil
R2007 Coq.Lists.List "x :: y" list_scope
R2010 Coq.Lists.List.nil
R2007 Coq.Lists.List "x :: y" list_scope
R2010 Coq.Lists.List.nil
R2051 Coq.Lists.List "x :: y" list_scope
R2057 Coq.Lists.List "x :: y" list_scope
R2051 Coq.Lists.List "x :: y" list_scope
R2057 Coq.Lists.List "x :: y" list_scope
R2097 Parallelmove.app_rewriter
R2132 Locations.loc
R2187 Locations.type
R2203 AST.Tint
R2211 Locations.R
R2213 Locations.IT2
R2219 AST.Tfloat
R2229 Locations.R
R2231 Locations.FT2
R2167 Locations.loc
R2296 Locations.diff
R2308 Parallelmove.T
R2277 Locations.loc
R2340 Coq.Init.Datatypes "x * y" type_scope
R2336 Parallelmove.Reg
R2342 Parallelmove.Reg
R2375 Coq.Lists.List.list
R2380 Parallelmove.Move
R2423 Coq.Init.Datatypes "x * y" type_scope
R2416 Coq.Init.Datatypes "x * y" type_scope
R2410 Parallelmove.Moves
R2418 Parallelmove.Moves
R2427 Parallelmove.Moves
R2479 Parallelmove.Moves
R2504 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2505 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2470 Parallelmove.State
R2564 Parallelmove.Moves
R2589 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2590 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2555 Parallelmove.State
R2648 Parallelmove.Moves
R2673 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2674 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2639 Parallelmove.State
R2730 Parallelmove.Reg
R2718 Parallelmove.Moves
R2773 Coq.Lists.List.nil
R2780 Coq.Init.Logic.True
R2796 Coq.Lists.List "x :: y" list_scope
R2789 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2817 Coq.Init.Logic "A /\ B" type_scope
R2804 Locations.diff
R2730 Parallelmove.Reg
R2718 Parallelmove.Moves
R2924 Parallelmove.noRead
R2935 Coq.Lists.List "x ++ y" list_scope
R2908 Parallelmove.noRead
R2893 Parallelmove.noRead
R2886 Parallelmove.Reg
R2874 Parallelmove.Moves
R2874 Parallelmove.Moves
R3079 Parallelmove.State
R3070 Parallelmove.State
R3190 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3194 Coq.Lists.List "x ++ y" list_scope
R3201 Coq.Lists.List.nil
R3159 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3163 Coq.Lists.List "x ++ y" list_scope
R3174 Coq.Lists.List "x :: y" list_scope
R3167 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3182 Coq.Lists.List.nil
R3141 Parallelmove.Moves
R3141 Parallelmove.Moves
R3141 Parallelmove.Moves
R3125 Parallelmove.Reg
R3303 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3307 Coq.Lists.List "x ++ y" list_scope
R3316 Coq.Lists.List "x :: y" list_scope
R3319 Coq.Lists.List.nil
R3277 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3281 Coq.Lists.List "x ++ y" list_scope
R3287 Coq.Lists.List "x :: y" list_scope
R3295 Coq.Lists.List.nil
R3259 Parallelmove.Move
R3247 Parallelmove.Moves
R3247 Parallelmove.Moves
R3247 Parallelmove.Moves
R3452 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3456 Coq.Lists.List "x ++ y" list_scope
R3470 Coq.Lists.List "x :: y" list_scope
R3463 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3481 Coq.Lists.List "x :: y" list_scope
R3474 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3406 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3410 Coq.Lists.List "x ++ y" list_scope
R3421 Coq.Lists.List "x :: y" list_scope
R3414 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3436 Coq.Lists.List "x :: y" list_scope
R3429 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3382 Parallelmove.Reg
R3382 Parallelmove.Reg
R3382 Parallelmove.Reg
R3366 Parallelmove.Moves
R3366 Parallelmove.Moves
R3366 Parallelmove.Moves
R3366 Parallelmove.Moves
R3630 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3647 Coq.Lists.List "x :: y" list_scope
R3634 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3653 Coq.Lists.List "x ++ y" list_scope
R3667 Coq.Lists.List "x :: y" list_scope
R3657 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3658 Parallelmove.T
R3670 Coq.Lists.List.nil
R3688 Coq.Lists.List "x :: y" list_scope
R3677 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3682 Parallelmove.T
R3575 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3592 Coq.Lists.List "x :: y" list_scope
R3579 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3598 Coq.Lists.List "x ++ y" list_scope
R3610 Coq.Lists.List "x :: y" list_scope
R3602 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3613 Coq.Lists.List.nil
R3551 Parallelmove.Reg
R3551 Parallelmove.Reg
R3551 Parallelmove.Reg
R3551 Parallelmove.Reg
R3526 Parallelmove.Moves
R3526 Parallelmove.Moves
R3526 Parallelmove.Moves
R3869 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3875 Coq.Lists.List "x ++ y" list_scope
R3888 Coq.Lists.List "x :: y" list_scope
R3879 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3891 Coq.Lists.List.nil
R3906 Coq.Lists.List "x :: y" list_scope
R3897 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3817 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3830 Coq.Lists.List "x :: y" list_scope
R3821 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3836 Coq.Lists.List "x ++ y" list_scope
R3849 Coq.Lists.List "x :: y" list_scope
R3840 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3852 Coq.Lists.List.nil
R3781 Locations.diff
R3761 Parallelmove.noRead
R3750 Parallelmove.Reg
R3750 Parallelmove.Reg
R3750 Parallelmove.Reg
R3750 Parallelmove.Reg
R3728 Parallelmove.Moves
R3728 Parallelmove.Moves
R3728 Parallelmove.Moves
R4012 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4016 Coq.Lists.List.nil
R4028 Coq.Lists.List "x :: y" list_scope
R4021 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3990 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4001 Coq.Lists.List "x :: y" list_scope
R3994 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4004 Coq.Lists.List.nil
R3970 Parallelmove.noRead
R3959 Parallelmove.Reg
R3959 Parallelmove.Reg
R3945 Parallelmove.Moves
R3945 Parallelmove.Moves
R4049 Parallelmove.step_nop
R4058 Parallelmove.step_start
R4069 Parallelmove.step_push
R4079 Parallelmove.step_loop
R4089 Parallelmove.step_pop
R4098 Parallelmove.step_last
R4131 Parallelmove.Moves
R4165 Coq.Lists.List.nil
R4172 Coq.Init.Logic.True
R4188 Coq.Lists.List "x :: y" list_scope
R4181 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4223 Coq.Lists.List.nil
R4230 Coq.Init.Logic.True
R4253 Coq.Lists.List "x :: y" list_scope
R4244 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4269 Coq.Init.Logic "A /\ B" type_scope
R4264 Coq.Init.Logic "x = y" type_scope
R4131 Parallelmove.Moves
R4362 Parallelmove.path
R4344 Parallelmove.path
R4352 Coq.Lists.List "x :: y" list_scope
R4336 Parallelmove.Moves
R4325 Parallelmove.Move
R4525 Parallelmove.Reg
R4513 Parallelmove.Moves
R4568 Coq.Lists.List.nil
R4575 Coq.Init.Logic.True
R4591 Coq.Lists.List "x :: y" list_scope
R4584 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4612 Coq.Init.Logic "A /\ B" type_scope
R4599 Locations.diff
R4525 Parallelmove.Reg
R4513 Parallelmove.Moves
R4733 Parallelmove.noWrite
R4745 Coq.Lists.List "x ++ y" list_scope
R4701 Parallelmove.noWrite
R4713 Coq.Lists.List "x ++ y" list_scope
R4719 Coq.Lists.List "x :: y" list_scope
R4694 Parallelmove.Reg
R4683 Parallelmove.Move
R4671 Parallelmove.Moves
R4671 Parallelmove.Moves
R4881 Parallelmove.app_cons
R4899 Parallelmove.app_cons
R4881 Parallelmove.app_cons
R4899 Parallelmove.app_cons
R5067 Locations.diff
R5027 Parallelmove.noWrite
R5039 Coq.Lists.List "x ++ y" list_scope
R5052 Coq.Lists.List "x :: y" list_scope
R5043 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5020 Parallelmove.Reg
R5020 Parallelmove.Reg
R5020 Parallelmove.Reg
R5001 Parallelmove.Moves
R5001 Parallelmove.Moves
R5198 Locations.diff_sym
R5198 Locations.diff_sym
R5240 Parallelmove.app_cons
R5240 Parallelmove.app_cons
R5413 Parallelmove.noWrite
R5425 Coq.Lists.List "x :: y" list_scope
R5432 Coq.Lists.List "x :: y" list_scope
R5381 Parallelmove.noWrite
R5393 Coq.Lists.List "x :: y" list_scope
R5400 Coq.Lists.List "x :: y" list_scope
R5374 Parallelmove.Reg
R5363 Parallelmove.Move
R5363 Parallelmove.Move
R5347 Parallelmove.Moves
R5652 Parallelmove.noWrite
R5663 Coq.Lists.List "x :: y" list_scope
R5670 Coq.Lists.List "x ++ y" list_scope
R5619 Parallelmove.noWrite
R5631 Coq.Lists.List "x ++ y" list_scope
R5637 Coq.Lists.List "x :: y" list_scope
R5612 Parallelmove.Reg
R5600 Parallelmove.Move
R5588 Parallelmove.Moves
R5588 Parallelmove.Moves
R5776 Parallelmove.app_cons
R5794 Parallelmove.app_cons
R5776 Parallelmove.app_cons
R5794 Parallelmove.app_cons
R5818 Parallelmove.noWrite_swap
R5843 Parallelmove.app_cons
R5818 Parallelmove.noWrite_swap
R5843 Parallelmove.app_cons
R5902 Parallelmove.noWrite
R5902 Parallelmove.noWrite
R6027 Parallelmove.noWrite
R6039 Coq.Lists.List "x ++ y" list_scope
R6045 Coq.Lists.List "x :: y" list_scope
R5994 Parallelmove.noWrite
R6005 Coq.Lists.List "x :: y" list_scope
R6012 Coq.Lists.List "x ++ y" list_scope
R5987 Parallelmove.Reg
R5975 Parallelmove.Move
R5963 Parallelmove.Moves
R5963 Parallelmove.Moves
R6342 Parallelmove.noWrite
R6353 Coq.Lists.List "x ++ y" list_scope
R6364 Coq.Lists.List "x :: y" list_scope
R6357 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R6367 Coq.Lists.List.nil
R6335 Parallelmove.Reg
R6286 Parallelmove.noWrite
R6297 Coq.Lists.List "x ++ y" list_scope
R6308 Coq.Lists.List "x :: y" list_scope
R6301 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R6311 Coq.Lists.List.nil
R6279 Parallelmove.Reg
R6279 Parallelmove.Reg
R6279 Parallelmove.Reg
R6263 Parallelmove.Moves
R6529 Parallelmove.Moves
R6563 Coq.Lists.List.nil
R6570 Coq.Init.Logic.True
R6586 Coq.Lists.List "x :: y" list_scope
R6579 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R6606 Coq.Init.Logic "A /\ B" type_scope
R6594 Parallelmove.noWrite
R6529 Parallelmove.Moves
R6722 Parallelmove.simpleDest
R6737 Coq.Lists.List "x ++ y" list_scope
R6689 Parallelmove.simpleDest
R6704 Coq.Lists.List "x ++ y" list_scope
R6710 Coq.Lists.List "x :: y" list_scope
R6680 Parallelmove.Moves
R6680 Parallelmove.Moves
R6665 Parallelmove.Move
R6871 Parallelmove.app_cons
R6889 Parallelmove.app_cons
R6871 Parallelmove.app_cons
R6889 Parallelmove.app_cons
R6956 Parallelmove.noWrite_pop
R6956 Parallelmove.noWrite_pop
R7069 Parallelmove.simpleDest
R7045 Parallelmove.simpleDest
R7059 Coq.Lists.List "x :: y" list_scope
R7037 Parallelmove.Moves
R7026 Parallelmove.Move
R7223 Parallelmove.simpleDest
R7197 Parallelmove.simpleDest
R7212 Coq.Lists.List "x ++ y" list_scope
R7189 Parallelmove.Moves
R7189 Parallelmove.Moves
R7313 Parallelmove.app_cons
R7313 Parallelmove.app_cons
R7352 Parallelmove.simpleDest_pop
R7352 Parallelmove.simpleDest_pop
R7477 Parallelmove.simpleDest
R7492 Coq.Lists.List "x :: y" list_scope
R7499 Coq.Lists.List "x :: y" list_scope
R7444 Parallelmove.simpleDest
R7459 Coq.Lists.List "x :: y" list_scope
R7466 Coq.Lists.List "x :: y" list_scope
R7435 Parallelmove.Moves
R7424 Parallelmove.Move
R7424 Parallelmove.Move
R7621 Locations.diff_sym
R7621 Locations.diff_sym
R7741 Parallelmove.simpleDest
R7756 Coq.Lists.List "x :: y" list_scope
R7708 Parallelmove.simpleDest
R7723 Coq.Lists.List "x :: y" list_scope
R7730 Coq.Lists.List "x :: y" list_scope
R7699 Parallelmove.Moves
R7688 Parallelmove.Move
R7688 Parallelmove.Move
R7785 Parallelmove.simpleDest_pop
R7811 Parallelmove.simpleDest_swap
R7785 Parallelmove.simpleDest_pop
R7811 Parallelmove.simpleDest_swap
R7938 Parallelmove.simpleDest
R7952 Coq.Lists.List "x :: y" list_scope
R7959 Coq.Lists.List "x ++ y" list_scope
R7905 Parallelmove.simpleDest
R7920 Coq.Lists.List "x ++ y" list_scope
R7926 Coq.Lists.List "x :: y" list_scope
R7897 Parallelmove.Move
R7885 Parallelmove.Moves
R7885 Parallelmove.Moves
R8044 Parallelmove.app_cons
R8062 Parallelmove.app_cons
R8044 Parallelmove.app_cons
R8062 Parallelmove.app_cons
R8122 Parallelmove.simpleDest_swap
R8122 Parallelmove.simpleDest_swap
R8169 Parallelmove.noWrite
R8187 Coq.Lists.List "x :: y" list_scope
R8178 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8194 Coq.Lists.List "x ++ y" list_scope
R8169 Parallelmove.noWrite
R8187 Coq.Lists.List "x :: y" list_scope
R8178 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8194 Coq.Lists.List "x ++ y" list_scope
R8212 Parallelmove.simpleDest
R8233 Coq.Lists.List "x :: y" list_scope
R8224 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8240 Coq.Lists.List "x ++ y" list_scope
R8212 Parallelmove.simpleDest
R8233 Coq.Lists.List "x :: y" list_scope
R8224 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8240 Coq.Lists.List "x ++ y" list_scope
R8331 Parallelmove.noWrite_movFront
R8331 Parallelmove.noWrite_movFront
R8457 Parallelmove.simpleDest
R8472 Coq.Lists.List "x ++ y" list_scope
R8478 Coq.Lists.List "x :: y" list_scope
R8424 Parallelmove.simpleDest
R8438 Coq.Lists.List "x :: y" list_scope
R8445 Coq.Lists.List "x ++ y" list_scope
R8416 Parallelmove.Move
R8404 Parallelmove.Moves
R8404 Parallelmove.Moves
R8563 Parallelmove.app_cons
R8563 Parallelmove.app_cons
R8651 Parallelmove.noWrite_insert
R8651 Parallelmove.noWrite_insert
R8725 Locations.diff_sym
R8725 Locations.diff_sym
R8786 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8765 Parallelmove.simpleDest_pop2
R8786 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8765 Parallelmove.simpleDest_pop2
R8905 Parallelmove.simpleDest
R8926 Coq.Lists.List "x ++ y" list_scope
R8921 Coq.Lists.List "x ++ y" list_scope
R8934 Coq.Lists.List "x :: y" list_scope
R8937 Coq.Lists.List.nil
R8872 Parallelmove.simpleDest
R8887 Coq.Lists.List "x ++ y" list_scope
R8893 Coq.Lists.List "x :: y" list_scope
R8864 Parallelmove.Move
R8852 Parallelmove.Moves
R8852 Parallelmove.Moves
R8966 Parallelmove.simpleDest_insert
R8995 Coq.Lists.List.nil
R8988 Coq.Lists.List "x ++ y" list_scope
R8966 Parallelmove.simpleDest_insert
R8995 Coq.Lists.List.nil
R8988 Coq.Lists.List "x ++ y" list_scope
R9011 Parallelmove.app_nil
R9026 Parallelmove.simpleDest_movFront
R9011 Parallelmove.app_nil
R9026 Parallelmove.simpleDest_movFront
R9168 Parallelmove.simpleDest
R9189 Coq.Lists.List "x ++ y" list_scope
R9184 Coq.Lists.List "x ++ y" list_scope
R9197 Coq.Lists.List "x :: y" list_scope
R9127 Parallelmove.simpleDest
R9142 Coq.Lists.List "x ++ y" list_scope
R9148 Coq.Lists.List "x :: y" list_scope
R9155 Coq.Lists.List "x ++ y" list_scope
R9119 Parallelmove.Move
R9107 Parallelmove.Moves
R9107 Parallelmove.Moves
R9107 Parallelmove.Moves
R9228 Parallelmove.simpleDest_insert
R9250 Coq.Lists.List "x ++ y" list_scope
R9228 Parallelmove.simpleDest_insert
R9250 Coq.Lists.List "x ++ y" list_scope
R9275 Parallelmove.app_app
R9275 Parallelmove.app_app
R9290 Parallelmove.simpleDest_movFront
R9290 Parallelmove.simpleDest_movFront
R9441 Parallelmove.simpleDest
R9455 Coq.Lists.List "x ++ y" list_scope
R9466 Coq.Lists.List "x :: y" list_scope
R9459 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9469 Coq.Lists.List.nil
R9434 Parallelmove.Reg
R9384 Parallelmove.simpleDest
R9398 Coq.Lists.List "x ++ y" list_scope
R9409 Coq.Lists.List "x :: y" list_scope
R9402 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9412 Coq.Lists.List.nil
R9377 Parallelmove.Reg
R9377 Parallelmove.Reg
R9363 Parallelmove.Moves
R9595 Parallelmove.noWrite_tmpLast
R9595 Parallelmove.noWrite_tmpLast
R9653 Parallelmove.Moves
R9687 Coq.Lists.List.nil
R9694 Coq.Init.Logic.True
R9710 Coq.Lists.List "x :: y" list_scope
R9703 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9752 Coq.Init.Logic "A /\ B" type_scope
R9736 Locations.diff
R9748 Parallelmove.T
R9792 Coq.Init.Logic "A /\ B" type_scope
R9776 Locations.diff
R9788 Parallelmove.T
R9653 Parallelmove.Moves
R9838 Parallelmove.Moves
R9872 Coq.Lists.List.nil
R9879 Coq.Init.Logic.True
R9895 Coq.Lists.List "x :: y" list_scope
R9888 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9898 Coq.Lists.List.nil
R9916 Locations.diff
R9928 Parallelmove.T
R9944 Coq.Lists.List "x :: y" list_scope
R9937 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9986 Coq.Init.Logic "A /\ B" type_scope
R9970 Locations.diff
R9982 Parallelmove.T
R10026 Coq.Init.Logic "A /\ B" type_scope
R10010 Locations.diff
R10022 Parallelmove.T
R9838 Parallelmove.Moves
R10142 Parallelmove.noTmpLast
R10156 Coq.Lists.List "x ++ y" list_scope
R10162 Coq.Lists.List "x :: y" list_scope
R10118 Parallelmove.noTmpLast
R10131 Coq.Lists.List "x :: y" list_scope
R10106 Parallelmove.noTmp
R10098 Parallelmove.Move
R10086 Parallelmove.Moves
R10086 Parallelmove.Moves
R10249 Coq.Lists.List "x ++ y" list_scope
R10255 Coq.Lists.List "x :: y" list_scope
R10249 Coq.Lists.List "x ++ y" list_scope
R10255 Coq.Lists.List "x :: y" list_scope
R10563 Parallelmove.noTmp
R10531 Parallelmove.noTmpLast
R10544 Coq.Lists.List "x ++ y" list_scope
R10550 Coq.Lists.List "x :: y" list_scope
R10553 Coq.Lists.List.nil
R10524 Parallelmove.Move
R10512 Parallelmove.Moves
R10660 Parallelmove.app_cons
R10660 Parallelmove.app_cons
R10721 Coq.Lists.List "x ++ y" list_scope
R10727 Coq.Lists.List "x :: y" list_scope
R10730 Coq.Lists.List.nil
R10721 Coq.Lists.List "x ++ y" list_scope
R10727 Coq.Lists.List "x :: y" list_scope
R10730 Coq.Lists.List.nil
R10898 Coq.Lists.List.list
R10903 Parallelmove.Reg
R10889 Parallelmove.Moves
R10927 Coq.Lists.List.nil
R10934 Coq.Lists.List.nil
R10949 Coq.Lists.List "x :: y" list_scope
R10942 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10959 Coq.Lists.List "x :: y" list_scope
R10889 Parallelmove.Moves
R11009 Coq.Lists.List.list
R11014 Parallelmove.Reg
R11000 Parallelmove.Moves
R11038 Coq.Lists.List.nil
R11045 Coq.Lists.List.nil
R11060 Coq.Lists.List "x :: y" list_scope
R11053 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R11070 Coq.Lists.List "x :: y" list_scope
R11000 Parallelmove.Moves
R11128 Coq.Lists.List.list
R11133 Parallelmove.Reg
R11118 Parallelmove.Reg
R11176 Coq.Lists.List.nil
R11183 Coq.Init.Logic.True
R11194 Coq.Lists.List "x :: y" list_scope
R11224 Coq.Init.Logic "A /\ B" type_scope
R11209 Coq.Init.Logic "A \/ B" type_scope
R11205 Coq.Init.Logic "x = y" type_scope
R11212 Locations.diff
R11128 Coq.Lists.List.list
R11133 Parallelmove.Reg
R11118 Parallelmove.Reg
R11331 Parallelmove.noOverlap_aux
R11348 Parallelmove.getdst
R11311 Coq.Lists.List.In
R11317 Parallelmove.getsrc
R11281 Parallelmove.Moves
R11425 Coq.Init.Logic "A /\ B" type_scope
R11405 Parallelmove.path
R11411 Parallelmove.StateBeing
R11475 Coq.Init.Logic "A /\ B" type_scope
R11432 Parallelmove.simpleDest
R11458 Coq.Lists.List "x ++ y" list_scope
R11444 Parallelmove.StateToMove
R11461 Parallelmove.StateBeing
R11525 Coq.Init.Logic "A /\ B" type_scope
R11483 Parallelmove.noOverlap
R11508 Coq.Lists.List "x ++ y" list_scope
R11494 Parallelmove.StateToMove
R11511 Parallelmove.StateBeing
R11556 Coq.Init.Logic "A /\ B" type_scope
R11534 Parallelmove.noTmp
R11541 Parallelmove.StateToMove
R11559 Parallelmove.noTmpLast
R11570 Parallelmove.StateBeing
R11385 Parallelmove.State
R11610 Values.val
R11635 LTL.locset
R11683 Locations.get
R11675 Parallelmove.Reg
R11665 Parallelmove.Env
R11753 Parallelmove.Env
R11760 Locations.set
R11744 Parallelmove.Value
R11734 Parallelmove.Reg
R11724 Parallelmove.Env
R11830 Parallelmove.Env
R11812 Parallelmove.Env
R11800 Parallelmove.Moves
R11854 Coq.Lists.List.nil
R11874 Coq.Lists.List "x :: y" list_scope
R11867 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R11926 Parallelmove.update
R11939 Parallelmove.get
R11812 Parallelmove.Env
R11800 Parallelmove.Moves
R12007 Parallelmove.Env
R11989 Parallelmove.Env
R11977 Parallelmove.Moves
R12031 Coq.Lists.List.nil
R12051 Coq.Lists.List "x :: y" list_scope
R12044 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12059 Parallelmove.update
R12081 Parallelmove.get
R11989 Parallelmove.Env
R11977 Parallelmove.Moves
R12186 Coq.Init.Logic "x = y" type_scope
R12163 Parallelmove.get
R12168 Parallelmove.update
R12194 Locations.eq
R12222 Locations.overlap
R12257 Parallelmove.get
R12245 Values.Vundef
R12153 Parallelmove.Value
R12143 Parallelmove.Reg
R12143 Parallelmove.Reg
R12129 Parallelmove.Env
R12430 Coq.Init.Logic "x = y" type_scope
R12407 Parallelmove.get
R12412 Parallelmove.update
R12398 Parallelmove.Value
R12388 Parallelmove.Reg
R12377 Parallelmove.Env
R12466 Parallelmove.get_update
R12466 Parallelmove.get_update
R12499 Locations.eq
R12499 Locations.eq
R12665 Coq.Init.Logic "x = y" type_scope
R12642 Parallelmove.get
R12647 Parallelmove.update
R12667 Parallelmove.get
R12623 Locations.diff
R12614 Parallelmove.Value
R12604 Parallelmove.Reg
R12604 Parallelmove.Reg
R12590 Parallelmove.Env
R12742 Locations.eq
R12742 Locations.eq
R12775 Coq.Init.Logic "x = y" type_scope
R12789 Locations.diff_not_eq
R12775 Coq.Init.Logic "x = y" type_scope
R12789 Locations.diff_not_eq
R12834 Locations.overlap
R12834 Locations.overlap
R12878 Locations.diff
R12902 Locations.overlap_not_diff
R12878 Locations.diff
R12902 Locations.overlap_not_diff
R13087 Coq.Init.Logic "x = y" type_scope
R13064 Parallelmove.get
R13069 Parallelmove.update
R13089 Values.Vundef
R13039 Coq.Init.Logic.not
R13044 Locations.diff
R13030 Coq.Init.Logic "x <> y" type_scope
R13018 Parallelmove.Value
R13008 Parallelmove.Reg
R13008 Parallelmove.Reg
R12994 Parallelmove.Env
R13162 Locations.eq
R13162 Locations.eq
R13195 Coq.Init.Logic "x = y" type_scope
R13195 Coq.Init.Logic "x = y" type_scope
R13222 Locations.overlap
R13222 Locations.overlap
R13266 Locations.diff
R13266 Locations.diff
R13307 Locations.non_overlap_diff
R13307 Locations.non_overlap_diff
R13500 Coq.Init.Logic "x = y" type_scope
R13466 Parallelmove.get
R13471 Parallelmove.pexec
R13481 Coq.Lists.List "x :: y" list_scope
R13488 Coq.Lists.List "x :: y" list_scope
R13502 Parallelmove.get
R13507 Parallelmove.pexec
R13517 Coq.Lists.List "x :: y" list_scope
R13524 Coq.Lists.List "x :: y" list_scope
R13458 Parallelmove.Reg
R13448 Parallelmove.Env
R13403 Parallelmove.simpleDest
R13418 Coq.Lists.List "x :: y" list_scope
R13425 Coq.Lists.List "x :: y" list_scope
R13394 Parallelmove.Moves
R13383 Parallelmove.Move
R13383 Parallelmove.Move
R13669 Locations.eq
R13690 Locations.eq
R13669 Locations.eq
R13690 Locations.eq
R13690 Locations.eq
R13725 Coq.Init.Logic "x = y" type_scope
R13741 Locations.diff_not_eq
R13764 Locations.diff_sym
R13725 Coq.Init.Logic "x = y" type_scope
R13741 Locations.diff_not_eq
R13764 Locations.diff_sym
R13835 Locations.overlap
R13835 Locations.overlap
R13870 Locations.diff
R13896 Locations.overlap_not_diff
R13870 Locations.diff
R13896 Locations.overlap_not_diff
R13977 Parallelmove.get_update_id
R14000 Parallelmove.get_update_diff
R14031 Parallelmove.get_update_id
R13977 Parallelmove.get_update_id
R14000 Parallelmove.get_update_diff
R14031 Parallelmove.get_update_id
R14031 Parallelmove.get_update_id
R14061 Locations.overlap
R14061 Locations.overlap
R14096 Locations.diff
R14123 Locations.overlap_not_diff
R14164 Locations.diff_sym
R14096 Locations.diff
R14123 Locations.overlap_not_diff
R14164 Locations.diff_sym
R14218 Parallelmove.get_update_id
R14242 Parallelmove.get_update_diff
R14269 Parallelmove.get_update_id
R14300 Locations.diff_sym
R14218 Parallelmove.get_update_id
R14218 Parallelmove.get_update_id
R14242 Parallelmove.get_update_diff
R14269 Parallelmove.get_update_id
R14300 Locations.diff_sym
R14332 Locations.overlap
R14360 Locations.overlap
R14332 Locations.overlap
R14360 Locations.overlap
R14360 Locations.overlap
R14404 Parallelmove.get_update_ndiff
R14436 Locations.overlap_not_diff
R14404 Parallelmove.get_update_ndiff
R14404 Parallelmove.get_update_ndiff
R14404 Parallelmove.get_update_ndiff
R14404 Parallelmove.get_update_ndiff
R14404 Parallelmove.get_update_ndiff
R14404 Parallelmove.get_update_ndiff
R14404 Parallelmove.get_update_ndiff
R14436 Locations.overlap_not_diff
R14436 Locations.overlap_not_diff
R14436 Locations.overlap_not_diff
R14436 Locations.overlap_not_diff
R14436 Locations.overlap_not_diff
R14489 Coq.Init.Logic "~ x" type_scope
R14491 Locations.diff
R14516 Locations.overlap_not_diff
R14569 Parallelmove.get_update_ndiff
R14489 Coq.Init.Logic "~ x" type_scope
R14491 Locations.diff
R14516 Locations.overlap_not_diff
R14569 Parallelmove.get_update_ndiff
R14602 Parallelmove.get_update_diff
R14629 Parallelmove.get_update_ndiff
R14660 Locations.non_overlap_diff
R14602 Parallelmove.get_update_diff
R14629 Parallelmove.get_update_ndiff
R14660 Locations.non_overlap_diff
R14694 Coq.Init.Logic "~ x" type_scope
R14696 Locations.diff
R14728 Locations.overlap_not_diff
R14694 Coq.Init.Logic "~ x" type_scope
R14696 Locations.diff
R14728 Locations.overlap_not_diff
R14762 Locations.diff
R14794 Locations.non_overlap_diff
R14762 Locations.diff
R14794 Locations.non_overlap_diff
R14839 Parallelmove.get_update_diff
R14839 Parallelmove.get_update_diff
R14878 Parallelmove.get_update_ndiff
R14878 Parallelmove.get_update_ndiff
R14878 Parallelmove.get_update_ndiff
R14878 Parallelmove.get_update_ndiff
R14878 Parallelmove.get_update_ndiff
R14878 Parallelmove.get_update_ndiff
R14878 Parallelmove.get_update_ndiff
R14878 Parallelmove.get_update_ndiff
R14908 Locations.diff
R14940 Locations.non_overlap_diff
R14908 Locations.diff
R14940 Locations.non_overlap_diff
R14974 Locations.diff
R15006 Locations.non_overlap_diff
R14974 Locations.diff
R15006 Locations.non_overlap_diff
R15059 Parallelmove.get_update_diff
R15059 Parallelmove.get_update_diff
R15059 Parallelmove.get_update_diff
R15059 Parallelmove.get_update_diff
R15059 Parallelmove.get_update_diff
R15059 Parallelmove.get_update_diff
R15059 Parallelmove.get_update_diff
R15059 Parallelmove.get_update_diff
R15059 Parallelmove.get_update_diff
R15059 Parallelmove.get_update_diff
R15243 Coq.Init.Logic "x = y" type_scope
R15217 Parallelmove.get
R15222 Parallelmove.pexec
R15231 Coq.Lists.List "x :: y" list_scope
R15245 Parallelmove.get
R15250 Parallelmove.pexec
R15259 Coq.Lists.List "x :: y" list_scope
R15209 Parallelmove.Move
R15172 Coq.Init.Logic "x = y" type_scope
R15153 Parallelmove.get
R15158 Parallelmove.pexec
R15174 Parallelmove.get
R15179 Parallelmove.pexec
R15146 Parallelmove.Env
R15136 Parallelmove.Reg
R15124 Parallelmove.Moves
R15124 Parallelmove.Moves
R15366 Locations.eq
R15386 Locations.overlap
R15366 Locations.eq
R15386 Locations.overlap
R15386 Locations.overlap
R15573 Coq.Init.Logic "x = y" type_scope
R15539 Parallelmove.get
R15544 Parallelmove.pexec
R15553 Coq.Lists.List "x :: y" list_scope
R15560 Coq.Lists.List "x ++ y" list_scope
R15575 Parallelmove.get
R15580 Parallelmove.pexec
R15590 Coq.Lists.List "x ++ y" list_scope
R15596 Coq.Lists.List "x :: y" list_scope
R15531 Parallelmove.Reg
R15521 Parallelmove.Env
R15476 Parallelmove.simpleDest
R15490 Coq.Lists.List "x :: y" list_scope
R15497 Coq.Lists.List "x ++ y" list_scope
R15468 Parallelmove.Move
R15456 Parallelmove.Moves
R15456 Parallelmove.Moves
R15686 Parallelmove.app_cons
R15686 Parallelmove.app_cons
R15712 Parallelmove.pexec_swap
R15738 Parallelmove.app_cons
R15712 Parallelmove.pexec_swap
R15738 Parallelmove.app_cons
R15760 Parallelmove.pexec_add
R15760 Parallelmove.pexec_add
R15792 Parallelmove.simpleDest_pop2
R15792 Parallelmove.simpleDest_pop2
R15983 Coq.Init.Logic "x = y" type_scope
R15949 Parallelmove.get
R15954 Parallelmove.pexec
R15964 Coq.Lists.List "x ++ y" list_scope
R15970 Coq.Lists.List "x :: y" list_scope
R15985 Parallelmove.get
R15990 Parallelmove.pexec
R15999 Coq.Lists.List "x :: y" list_scope
R16006 Coq.Lists.List "x ++ y" list_scope
R15941 Parallelmove.Reg
R15931 Parallelmove.Env
R15886 Parallelmove.simpleDest
R15901 Coq.Lists.List "x ++ y" list_scope
R15907 Coq.Lists.List "x :: y" list_scope
R15878 Parallelmove.Move
R15866 Parallelmove.Moves
R15866 Parallelmove.Moves
R16046 Parallelmove.pexec_movBack
R16046 Parallelmove.pexec_movBack
R16074 Parallelmove.simpleDest_movFront
R16074 Parallelmove.simpleDest_movFront
R16278 Coq.Init.Logic "x = y" type_scope
R16236 Parallelmove.get
R16241 Parallelmove.pexec
R16264 Coq.Lists.List "x ++ y" list_scope
R16252 Coq.Lists.List "x ++ y" list_scope
R16258 Coq.Lists.List "x :: y" list_scope
R16282 Parallelmove.get
R16287 Parallelmove.pexec
R16303 Coq.Lists.List "x ++ y" list_scope
R16298 Coq.Lists.List "x ++ y" list_scope
R16311 Coq.Lists.List "x :: y" list_scope
R16228 Parallelmove.Reg
R16218 Parallelmove.Env
R16165 Parallelmove.simpleDest
R16193 Coq.Lists.List "x ++ y" list_scope
R16181 Coq.Lists.List "x ++ y" list_scope
R16187 Coq.Lists.List "x :: y" list_scope
R16157 Parallelmove.Move
R16145 Parallelmove.Moves
R16145 Parallelmove.Moves
R16145 Parallelmove.Moves
R16362 Parallelmove.app_app
R16362 Parallelmove.app_app
R16379 Parallelmove.app_cons
R16379 Parallelmove.app_cons
R16405 Parallelmove.pexec_movFront
R16405 Parallelmove.pexec_movFront
R16432 Parallelmove.simpleDest
R16446 Coq.Lists.List "x :: y" list_scope
R16453 Coq.Lists.List "x ++ y" list_scope
R16460 Coq.Lists.List "x ++ y" list_scope
R16432 Parallelmove.simpleDest
R16446 Coq.Lists.List "x :: y" list_scope
R16453 Coq.Lists.List "x ++ y" list_scope
R16460 Coq.Lists.List "x ++ y" list_scope
R16479 Parallelmove.app_app
R16479 Parallelmove.app_app
R16499 Parallelmove.pexec_movFront
R16499 Parallelmove.pexec_movFront
R16527 Parallelmove.simpleDest_swap_app
R16527 Parallelmove.simpleDest_swap_app
R16560 Parallelmove.simpleDest_movFront
R16560 Parallelmove.simpleDest_movFront
R16637 Coq.Init.Specif "{ A } + { B }" type_scope
R16640 Locations.diff
R16661 Coq.Init.Logic.not
R16666 Locations.diff
R16630 Parallelmove.Reg
R16630 Parallelmove.Reg
R16698 Locations.eq
R16698 Locations.eq
R16752 Coq.Init.Logic "x = y" type_scope
R16752 Coq.Init.Logic "x = y" type_scope
R16770 Locations.diff_not_eq
R16770 Locations.diff_not_eq
R16808 Locations.overlap
R16808 Locations.overlap
R16846 Locations.overlap_not_diff
R16846 Locations.overlap_not_diff
R16893 Locations.non_overlap_diff
R16893 Locations.non_overlap_diff
R17041 Coq.Init.Logic "x = y" type_scope
R17043 Parallelmove.get
R17048 Parallelmove.pexec
R17057 Parallelmove.update
R17030 Parallelmove.Value
R17020 Parallelmove.Env
R16992 Parallelmove.noWrite
R16985 Parallelmove.Reg
R16973 Parallelmove.Moves
R17134 Parallelmove.get_update_id
R17134 Parallelmove.get_update_id
R17223 Parallelmove.get_update_diff
R17223 Parallelmove.get_update_diff
R17369 Coq.Init.Logic "x = y" type_scope
R17339 Parallelmove.get
R17344 Parallelmove.pexec
R17358 Coq.Lists.List "x :: y" list_scope
R17351 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17371 Parallelmove.get
R17376 Parallelmove.pexec
R17322 Locations.diff
R17315 Parallelmove.Reg
R17305 Parallelmove.Env
R17295 Parallelmove.Reg
R17283 Parallelmove.Moves
R17420 Parallelmove.get_update_diff
R17420 Parallelmove.get_update_diff
R17506 Parallelmove.noWrite
R17477 Parallelmove.simpleDest
R17496 Coq.Lists.List "x :: y" list_scope
R17489 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17910 Coq.Init.Logic "x = y" type_scope
R17892 Parallelmove.get
R17897 Parallelmove.pexec
R17912 Parallelmove.get
R17885 Parallelmove.Env
R17845 Parallelmove.simpleDest
R17864 Coq.Lists.List "x :: y" list_scope
R17857 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17838 Parallelmove.Reg
R17838 Parallelmove.Reg
R17824 Parallelmove.Moves
R18063 Locations.eq
R18063 Locations.eq
R18095 Coq.Init.Logic "x = y" type_scope
R18108 Locations.diff_not_eq
R18095 Coq.Init.Logic "x = y" type_scope
R18108 Locations.diff_not_eq
R18156 Parallelmove.get_update_diff
R18156 Parallelmove.get_update_diff
R18260 Parallelmove.noOverlap
R18270 Coq.Lists.List.nil
R18441 Coq.Lists.List.In
R18447 Parallelmove.getsrc
R18458 Coq.Lists.List "x ++ y" list_scope
R18464 Coq.Lists.List "x :: y" list_scope
R18412 Coq.Lists.List.In
R18418 Parallelmove.getsrc
R18429 Coq.Lists.List "x ++ y" list_scope
R18405 Parallelmove.Reg
R18393 Parallelmove.Moves
R18393 Parallelmove.Moves
R18378 Parallelmove.Move
R18704 Coq.Init.Logic "x = y" type_scope
R18672 Parallelmove.getdst
R18683 Coq.Lists.List "x ++ y" list_scope
R18696 Coq.Lists.List "x :: y" list_scope
R18687 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18716 Coq.Lists.List "x ++ y" list_scope
R18706 Parallelmove.getdst
R18723 Coq.Lists.List "x :: y" list_scope
R18726 Parallelmove.getdst
R18662 Parallelmove.Moves
R18662 Parallelmove.Moves
R18648 Parallelmove.Reg
R18648 Parallelmove.Reg
R18900 Coq.Init.Logic "x = y" type_scope
R18882 Parallelmove.getdst
R18893 Coq.Lists.List "x ++ y" list_scope
R18912 Coq.Lists.List "x ++ y" list_scope
R18902 Parallelmove.getdst
R18915 Parallelmove.getdst
R18873 Parallelmove.Moves
R18873 Parallelmove.Moves
R19104 Parallelmove.noOverlap_aux
R19075 Parallelmove.noOverlap_aux
R19094 Coq.Lists.List "x :: y" list_scope
R19063 Coq.Lists.List.list
R19068 Parallelmove.Reg
R19053 Parallelmove.Reg
R19053 Parallelmove.Reg
R19300 Parallelmove.noOverlap_aux
R19320 Coq.Lists.List "x ++ y" list_scope
R19262 Parallelmove.noOverlap_aux
R19282 Coq.Lists.List "x ++ y" list_scope
R19288 Coq.Lists.List "x :: y" list_scope
R19250 Coq.Lists.List.list
R19255 Parallelmove.Reg
R19250 Coq.Lists.List.list
R19255 Parallelmove.Reg
R19236 Parallelmove.Reg
R19236 Parallelmove.Reg
R19409 Coq.Lists.List.app
R19409 Coq.Lists.List.app
R19409 Coq.Lists.List.app
R19428 Parallelmove.noOverlap_auxpop
R19428 Parallelmove.noOverlap_auxpop
R19473 Parallelmove.app_cons
R19473 Parallelmove.app_cons
R19603 Parallelmove.noOverlap
R19580 Parallelmove.noOverlap
R19593 Coq.Lists.List "x :: y" list_scope
R19572 Parallelmove.Moves
R19561 Parallelmove.Move
R19649 Parallelmove.noOverlap_nil
R19649 Parallelmove.noOverlap_nil
R19919 Parallelmove.noOverlap
R19933 Coq.Lists.List "x ++ y" list_scope
R19887 Parallelmove.noOverlap
R19901 Coq.Lists.List "x ++ y" list_scope
R19907 Coq.Lists.List "x :: y" list_scope
R19878 Parallelmove.Moves
R19878 Parallelmove.Moves
R19863 Parallelmove.Move
R20016 Parallelmove.noOverlap_pop
R20016 Parallelmove.noOverlap_pop
R20047 Parallelmove.app_cons
R20047 Parallelmove.app_cons
R20211 Parallelmove.getsrc_add
R20211 Parallelmove.getsrc_add
R20311 Parallelmove.getdst_app
R20329 Parallelmove.noOverlap_auxPop
R20311 Parallelmove.getdst_app
R20329 Parallelmove.noOverlap_auxPop
R20372 Parallelmove.getdst_add
R20372 Parallelmove.getdst_add
R20727 Parallelmove.noOverlap
R20702 Parallelmove.noOverlap
R20716 Coq.Lists.List "x ++ y" list_scope
R20694 Parallelmove.Moves
R20694 Parallelmove.Moves
R20816 Parallelmove.app_cons
R20816 Parallelmove.app_cons
R20855 Parallelmove.noOverlap_pop
R20855 Parallelmove.noOverlap_pop
R20989 Coq.Init.Logic "x = y" type_scope
R20958 Parallelmove.get
R20963 Parallelmove.pexec
R20972 Parallelmove.update
R20991 Parallelmove.get
R20996 Parallelmove.pexec
R20943 Parallelmove.noRead
R20926 Locations.diff
R21053 Parallelmove.get_update_diff
R21053 Parallelmove.get_update_diff
R21113 Locations.eq
R21113 Locations.eq
R21160 Parallelmove.get_update_id
R21160 Parallelmove.get_update_id
R21160 Parallelmove.get_update_id
R21160 Parallelmove.get_update_id
R21184 Parallelmove.get_update_diff
R21213 Locations.diff_sym
R21184 Parallelmove.get_update_diff
R21213 Locations.diff_sym
R21248 Parallelmove.diff_dec
R21248 Parallelmove.diff_dec
R21287 Parallelmove.get_update_diff
R21287 Parallelmove.get_update_diff
R21287 Parallelmove.get_update_diff
R21287 Parallelmove.get_update_diff
R21287 Parallelmove.get_update_diff
R21287 Parallelmove.get_update_diff
R21359 Parallelmove.get_update_ndiff
R21359 Parallelmove.get_update_ndiff
R21359 Parallelmove.get_update_ndiff
R21359 Parallelmove.get_update_ndiff
R21359 Parallelmove.get_update_ndiff
R21359 Parallelmove.get_update_ndiff
R21359 Parallelmove.get_update_ndiff
R21359 Parallelmove.get_update_ndiff
R21585 Coq.Init.Logic "x = y" type_scope
R21545 Parallelmove.get
R21550 Parallelmove.pexec
R21571 Parallelmove.sexec
R21564 Coq.Lists.List "x :: y" list_scope
R21557 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21589 Parallelmove.get
R21594 Parallelmove.pexec
R21603 Parallelmove.sexec
R21617 Coq.Lists.List "x :: y" list_scope
R21610 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21524 Coq.Init.Logic "A \/ B" type_scope
R21520 Coq.Init.Logic "x = y" type_scope
R21527 Locations.diff
R21511 Parallelmove.Reg
R21501 Parallelmove.Env
R21460 Parallelmove.simpleDest
R21479 Coq.Lists.List "x :: y" list_scope
R21472 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21445 Parallelmove.noRead
R21438 Parallelmove.Reg
R21438 Parallelmove.Reg
R21424 Parallelmove.Moves
R21424 Parallelmove.Moves
R21692 Parallelmove.get_update_id
R21692 Parallelmove.get_update_id
R21722 Parallelmove.sD_pexec
R21753 Parallelmove.get_update_id
R21722 Parallelmove.sD_pexec
R21753 Parallelmove.get_update_id
R21782 Parallelmove.pexec_update
R21782 Parallelmove.pexec_update
R21810 Parallelmove.get_update_diff
R21810 Parallelmove.get_update_diff
R21884 Parallelmove.pexec
R21923 Parallelmove.sexec
R21930 Parallelmove.StateDone
R21905 Coq.Lists.List "x ++ y" list_scope
R21891 Parallelmove.StateToMove
R21908 Parallelmove.StateBeing
R21873 Parallelmove.Env
R21861 Parallelmove.State
R22033 Coq.Init.Logic "x = y" type_scope
R22024 Parallelmove.get
R22035 Parallelmove.get
R22006 Parallelmove.notemporary
R22000 Parallelmove.Reg
R21977 Parallelmove.Env
R21977 Parallelmove.Env
R22096 Parallelmove.noOverlap
R22114 Coq.Lists.List "x :: y" list_scope
R22107 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22132 Coq.Lists.List "x ++ y" list_scope
R22118 Parallelmove.StateToMove
R22135 Parallelmove.StateBeing
R22083 Parallelmove.State
R22073 Parallelmove.Reg
R22258 Parallelmove.noOverlap_aux
R22277 Coq.Lists.List "x :: y" list_scope
R22284 Coq.Lists.List "x ++ y" list_scope
R22220 Parallelmove.noOverlap_aux
R22240 Coq.Lists.List "x ++ y" list_scope
R22246 Coq.Lists.List "x :: y" list_scope
R22213 Parallelmove.Reg
R22213 Parallelmove.Reg
R22196 Coq.Lists.List.list
R22201 Parallelmove.Reg
R22196 Coq.Lists.List.list
R22201 Parallelmove.Reg
R22338 Parallelmove.noOverlap_aux
R22338 Parallelmove.noOverlap_aux
R22338 Parallelmove.noOverlap_aux
R22493 Parallelmove.noOverlap_auxpop
R22493 Parallelmove.noOverlap_auxpop
R22596 Parallelmove.noRead
R22606 Parallelmove.T
R22574 Parallelmove.noTmp
R22916 Parallelmove.noRead
R22897 Locations.diff
R22864 Parallelmove.path
R22872 Coq.Lists.List "x ++ y" list_scope
R22885 Coq.Lists.List "x :: y" list_scope
R22876 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22888 Coq.Lists.List.nil
R22810 Parallelmove.simpleDest
R22831 Coq.Lists.List "x :: y" list_scope
R22822 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22837 Coq.Lists.List "x ++ y" list_scope
R22850 Coq.Lists.List "x :: y" list_scope
R22841 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22853 Coq.Lists.List.nil
R22803 Parallelmove.Reg
R22803 Parallelmove.Reg
R22803 Parallelmove.Reg
R22803 Parallelmove.Reg
R22781 Parallelmove.Moves
R22781 Parallelmove.Moves
R23034 Parallelmove.app_cons
R23034 Parallelmove.app_cons
R23085 Coq.Lists.List "x ++ y" list_scope
R23098 Coq.Lists.List "x :: y" list_scope
R23089 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23101 Coq.Lists.List.nil
R23085 Coq.Lists.List "x ++ y" list_scope
R23098 Coq.Lists.List "x :: y" list_scope
R23089 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23101 Coq.Lists.List.nil
R23370 Parallelmove.simpleDest_pop
R23385 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23402 Parallelmove.simpleDest_swap
R23370 Parallelmove.simpleDest_pop
R23385 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23402 Parallelmove.simpleDest_swap
R23432 Parallelmove.path_pop
R23441 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23432 Parallelmove.path_pop
R23441 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23556 Parallelmove.noOverlap
R23570 Coq.Lists.List "x :: y" list_scope
R23577 Coq.Lists.List "x :: y" list_scope
R23524 Parallelmove.noOverlap
R23538 Coq.Lists.List "x :: y" list_scope
R23545 Coq.Lists.List "x :: y" list_scope
R23515 Parallelmove.Moves
R23504 Parallelmove.Move
R23504 Parallelmove.Move
R23717 Coq.Init.Logic "A \/ B" type_scope
R23712 Coq.Init.Logic "x = y" type_scope
R23730 Coq.Init.Logic "A \/ B" type_scope
R23725 Coq.Init.Logic "x = y" type_scope
R23733 Coq.Lists.List.In
R23740 Parallelmove.getsrc
R23717 Coq.Init.Logic "A \/ B" type_scope
R23712 Coq.Init.Logic "x = y" type_scope
R23730 Coq.Init.Logic "A \/ B" type_scope
R23725 Coq.Init.Logic "x = y" type_scope
R23733 Coq.Lists.List.In
R23740 Parallelmove.getsrc
R24065 Coq.Init.Logic "x = y" type_scope
R24033 Parallelmove.getsrc
R24044 Coq.Lists.List "x ++ y" list_scope
R24057 Coq.Lists.List "x :: y" list_scope
R24048 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R24077 Coq.Lists.List "x ++ y" list_scope
R24067 Parallelmove.getsrc
R24084 Coq.Lists.List "x :: y" list_scope
R24087 Parallelmove.getsrc
R24023 Parallelmove.Moves
R24023 Parallelmove.Moves
R24009 Parallelmove.Reg
R24009 Parallelmove.Reg
R24261 Coq.Init.Logic "x = y" type_scope
R24243 Parallelmove.getsrc
R24254 Coq.Lists.List "x ++ y" list_scope
R24273 Coq.Lists.List "x ++ y" list_scope
R24263 Parallelmove.getsrc
R24276 Parallelmove.getsrc
R24234 Parallelmove.Moves
R24234 Parallelmove.Moves
R24479 Coq.Lists.List.In
R24485 Parallelmove.getsrc
R24496 Coq.Lists.List "x ++ y" list_scope
R24502 Coq.Lists.List "x :: y" list_scope
R24443 Coq.Lists.List.In
R24449 Parallelmove.getsrc
R24459 Coq.Lists.List "x :: y" list_scope
R24466 Coq.Lists.List "x ++ y" list_scope
R24436 Parallelmove.Reg
R24424 Parallelmove.Moves
R24424 Parallelmove.Moves
R24409 Parallelmove.Move
R24623 Parallelmove.getsrc_add1
R24623 Parallelmove.getsrc_add1
R24649 Coq.Lists.List.in_or_app
R24674 Coq.Lists.List "x :: y" list_scope
R24677 Parallelmove.getsrc
R24660 Parallelmove.getsrc
R24649 Coq.Lists.List.in_or_app
R24674 Coq.Lists.List "x :: y" list_scope
R24677 Parallelmove.getsrc
R24660 Parallelmove.getsrc
R24709 Coq.Lists.List.in_eq
R24709 Coq.Lists.List.in_eq
R24728 Parallelmove.getsrc_add
R24728 Parallelmove.getsrc_add
R24848 Parallelmove.noOverlap
R24861 Coq.Lists.List "x :: y" list_scope
R24868 Coq.Lists.List "x ++ y" list_scope
R24816 Parallelmove.noOverlap
R24830 Coq.Lists.List "x ++ y" list_scope
R24836 Coq.Lists.List "x :: y" list_scope
R24808 Parallelmove.Move
R24796 Parallelmove.Moves
R24796 Parallelmove.Moves
R24938 Parallelmove.getdst_add
R24956 Parallelmove.getdst
R24972 Parallelmove.getdst_app
R24938 Parallelmove.getdst_add
R24956 Parallelmove.getdst
R24972 Parallelmove.getdst_app
R24998 Parallelmove.noOverlapaux_swap2
R24998 Parallelmove.noOverlapaux_swap2
R25037 Parallelmove.Ingetsrc_swap
R25037 Parallelmove.Ingetsrc_swap
R25299 Coq.Init.Logic "x = y" type_scope
R25250 Parallelmove.get
R25255 Parallelmove.pexec
R25285 Parallelmove.sexec
R25264 Coq.Lists.List "x ++ y" list_scope
R25275 Coq.Lists.List "x :: y" list_scope
R25268 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R25278 Coq.Lists.List.nil
R25303 Parallelmove.get
R25308 Parallelmove.pexec
R25340 Parallelmove.sexec
R25356 Coq.Lists.List "x :: y" list_scope
R25347 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R25351 Parallelmove.T
R25317 Coq.Lists.List "x ++ y" list_scope
R25330 Coq.Lists.List "x :: y" list_scope
R25321 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R25322 Parallelmove.T
R25333 Coq.Lists.List.nil
R25229 Coq.Init.Logic "A \/ B" type_scope
R25225 Coq.Init.Logic "x = y" type_scope
R25232 Locations.diff
R25205 Parallelmove.notemporary
R25198 Parallelmove.Reg
R25188 Parallelmove.Env
R25164 Parallelmove.noTmp
R25126 Parallelmove.simpleDest
R25140 Coq.Lists.List "x ++ y" list_scope
R25151 Coq.Lists.List "x :: y" list_scope
R25144 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R25154 Coq.Lists.List.nil
R25119 Parallelmove.Reg
R25119 Parallelmove.Reg
R25105 Parallelmove.Moves
R25105 Parallelmove.Moves
R25400 Parallelmove.pexec_movFront
R25400 Parallelmove.pexec_movFront
R25400 Parallelmove.pexec_movFront
R25400 Parallelmove.pexec_movFront
R25400 Parallelmove.pexec_movFront
R25400 Parallelmove.pexec_movFront
R25439 Parallelmove.app_nil
R25439 Parallelmove.app_nil
R25439 Parallelmove.app_nil
R25439 Parallelmove.app_nil
R25501 Parallelmove.get_update_id
R25501 Parallelmove.get_update_id
R25501 Parallelmove.get_update_id
R25501 Parallelmove.get_update_id
R25501 Parallelmove.get_update_id
R25539 Parallelmove.get_update_diff
R25539 Parallelmove.get_update_diff
R25539 Parallelmove.get_update_diff
R25539 Parallelmove.get_update_diff
R25539 Parallelmove.get_update_diff
R25539 Parallelmove.get_update_diff
R25571 Parallelmove.pexec_update
R25571 Parallelmove.pexec_update
R25597 Locations.diff_sym
R25597 Locations.diff_sym
R25652 Parallelmove.noTmp_noReadTmp
R25652 Parallelmove.noTmp_noReadTmp
R25682 Parallelmove.simpleDest_tmpLast
R25682 Parallelmove.simpleDest_tmpLast
R25975 Coq.Init.Logic "x = y" type_scope
R25926 Parallelmove.get
R25931 Parallelmove.pexec
R25961 Parallelmove.sexec
R25940 Coq.Lists.List "x ++ y" list_scope
R25951 Coq.Lists.List "x :: y" list_scope
R25944 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R25954 Coq.Lists.List.nil
R25979 Parallelmove.get
R25984 Parallelmove.pexec
R26016 Parallelmove.sexec
R26032 Coq.Lists.List "x :: y" list_scope
R26023 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R26027 Parallelmove.T
R25993 Coq.Lists.List "x ++ y" list_scope
R26006 Coq.Lists.List "x :: y" list_scope
R25997 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R25998 Parallelmove.T
R26009 Coq.Lists.List.nil
R25905 Coq.Init.Logic "A \/ B" type_scope
R25901 Coq.Init.Logic "x = y" type_scope
R25908 Locations.diff
R25881 Parallelmove.notemporary
R25874 Parallelmove.Reg
R25864 Parallelmove.Env
R25815 Parallelmove.noTmpLast
R25828 Coq.Lists.List "x ++ y" list_scope
R25839 Coq.Lists.List "x :: y" list_scope
R25832 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R25842 Coq.Lists.List.nil
R25777 Parallelmove.simpleDest
R25791 Coq.Lists.List "x ++ y" list_scope
R25802 Coq.Lists.List "x :: y" list_scope
R25795 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R25805 Coq.Lists.List.nil
R25770 Parallelmove.Reg
R25770 Parallelmove.Reg
R25756 Parallelmove.Moves
R25756 Parallelmove.Moves
R26066 Parallelmove.step_inv_loop_aux
R26066 Parallelmove.step_inv_loop_aux
R26098 Parallelmove.noTmpLast_popBack
R26118 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R26098 Parallelmove.noTmpLast_popBack
R26118 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R26431 Coq.Init.Logic "x = y" type_scope
R26413 Parallelmove.get
R26418 Parallelmove.exec
R26433 Parallelmove.get
R26438 Parallelmove.exec
R26385 Coq.Init.Logic "A \/ B" type_scope
R26381 Coq.Init.Logic "x = y" type_scope
R26388 Locations.diff
R26368 Coq.Lists.List.In
R26333 Parallelmove.notemporary
R26230 Parallelmove.getdst
R26277 Coq.Lists.List "x ++ y" list_scope
R26261 Coq.Lists.List "x ++ y" list_scope
R26246 Parallelmove.StateToMove
R26264 Parallelmove.StateBeing
R26298 Coq.Lists.List "x ++ y" list_scope
R26283 Parallelmove.StateToMove
R26301 Parallelmove.StateBeing
R26204 Parallelmove.Reg
R26194 Parallelmove.Env
R26169 Parallelmove.State
R26169 Parallelmove.State
R26548 Coq.Init.Logic "x = y" type_scope
R26540 Parallelmove.get
R26550 Parallelmove.get
R26555 Parallelmove.pexec
R26533 Parallelmove.Env
R26506 Parallelmove.noWrite
R26499 Parallelmove.Reg
R26487 Parallelmove.Moves
R26736 Locations.eq
R26736 Locations.eq
R26774 Coq.Init.Logic "x = y" type_scope
R26792 Locations.diff_not_eq
R26774 Coq.Init.Logic "x = y" type_scope
R26792 Locations.diff_not_eq
R26835 Locations.overlap
R26835 Locations.overlap
R26869 Locations.diff
R26897 Locations.overlap_not_diff
R26869 Locations.diff
R26897 Locations.overlap_not_diff
R27062 Parallelmove.sameExec
R27047 Parallelmove.stepInv
R27033 Parallelmove.step
R27025 Parallelmove.State
R27025 Parallelmove.State
R27217 Parallelmove.app_nil
R27217 Parallelmove.app_nil
R27217 Parallelmove.app_nil
R27217 Parallelmove.app_nil
R27217 Parallelmove.app_nil
R27217 Parallelmove.app_nil
R27217 Parallelmove.app_nil
R27217 Parallelmove.app_nil
R27217 Parallelmove.app_nil
R27217 Parallelmove.app_nil
R27217 Parallelmove.app_nil
R27273 Parallelmove.pexec_movFront
R27273 Parallelmove.pexec_movFront
R27308 Locations.eq
R27308 Locations.eq
R27351 Parallelmove.get_update_id
R27372 Parallelmove.get_noWrite
R27391 Parallelmove.sD_nW
R27412 Parallelmove.simpleDest_movFront
R27351 Parallelmove.get_update_id
R27372 Parallelmove.get_noWrite
R27391 Parallelmove.sD_nW
R27412 Parallelmove.simpleDest_movFront
R27487 Coq.Init.Logic "x = y" type_scope
R27522 Parallelmove.get_update_diff
R27551 Locations.diff_sym
R27487 Coq.Init.Logic "x = y" type_scope
R27522 Parallelmove.get_update_diff
R27551 Locations.diff_sym
R27597 Parallelmove.getdst_app
R27624 Coq.Lists.List.in_or_app
R27647 Coq.Lists.List.in_or_app
R27597 Parallelmove.getdst_app
R27597 Parallelmove.getdst_app
R27597 Parallelmove.getdst_app
R27597 Parallelmove.getdst_app
R27624 Coq.Lists.List.in_or_app
R27647 Coq.Lists.List.in_or_app
R27695 Parallelmove.pexec_movFront
R27695 Parallelmove.pexec_movFront
R27695 Parallelmove.pexec_movFront
R27695 Parallelmove.pexec_movFront
R27695 Parallelmove.pexec_movFront
R27695 Parallelmove.pexec_movFront
R27726 Parallelmove.app_nil
R27726 Parallelmove.app_nil
R27747 Parallelmove.simpleDest_movBack
R27747 Parallelmove.simpleDest_movBack
R27779 Parallelmove.pexec_mov
R27779 Parallelmove.pexec_mov
R27815 Parallelmove.app_cons
R27833 Parallelmove.app_app
R27815 Parallelmove.app_cons
R27833 Parallelmove.app_app
R27815 Parallelmove.app_cons
R27833 Parallelmove.app_app
R27815 Parallelmove.app_cons
R27849 Parallelmove.step_inv_loop
R27849 Parallelmove.step_inv_loop
R27889 Parallelmove.app_app
R27906 Parallelmove.app_cons
R27889 Parallelmove.app_app
R27906 Parallelmove.app_cons
R27942 Parallelmove.app_app
R27959 Parallelmove.app_cons
R27942 Parallelmove.app_app
R27959 Parallelmove.app_cons
R27942 Parallelmove.app_app
R27982 Parallelmove.noTmp_app
R27982 Parallelmove.noTmp_app
R28074 Locations.diff_sym
R28074 Locations.diff_sym
R28128 Parallelmove.getdst_app
R28128 Parallelmove.getdst_app
R28128 Parallelmove.getdst_app
R28128 Parallelmove.getdst_app
R28128 Parallelmove.getdst_app
R28128 Parallelmove.getdst_app
R28128 Parallelmove.getdst_app
R28154 Coq.Lists.List.in_or_app
R28177 Coq.Lists.List.in_or_app
R28215 Coq.Lists.List.in_or_app
R28154 Coq.Lists.List.in_or_app
R28177 Coq.Lists.List.in_or_app
R28215 Coq.Lists.List.in_or_app
R28264 Parallelmove.pexec_movFront
R28292 Parallelmove.pexec_push
R28264 Parallelmove.pexec_movFront
R28292 Parallelmove.pexec_push
R28316 Parallelmove.noRead_app
R28316 Parallelmove.noRead_app
R28340 Parallelmove.noRead_app
R28340 Parallelmove.noRead_app
R28359 Parallelmove.noRead_by_path
R28359 Parallelmove.noRead_by_path
R28405 Parallelmove.simpleDest_right
R28405 Parallelmove.simpleDest_right
R28439 Parallelmove.path_pop
R28448 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R28439 Parallelmove.path_pop
R28448 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R28486 Locations.diff_sym
R28486 Locations.diff_sym
R28521 Parallelmove.simpleDest_movFront
R28521 Parallelmove.simpleDest_movFront
R28651 Locations.diff_sym
R28651 Locations.diff_sym
R28699 Parallelmove.getdst_app
R28699 Parallelmove.getdst_app
R28699 Parallelmove.getdst_app
R28699 Parallelmove.getdst_app
R28699 Parallelmove.getdst_app
R28699 Parallelmove.getdst_app
R28699 Parallelmove.getdst_app
R28725 Coq.Lists.List.in_or_app
R28748 Coq.Lists.List.in_or_app
R28725 Coq.Lists.List.in_or_app
R28748 Coq.Lists.List.in_or_app
R28796 Parallelmove.pexec_movFront
R28796 Parallelmove.pexec_movFront
R28826 Parallelmove.app_nil
R28826 Parallelmove.app_nil
R28847 Parallelmove.pexec_push
R28847 Parallelmove.pexec_push
R28877 Parallelmove.app_nil
R28877 Parallelmove.app_nil
R28897 Parallelmove.simpleDest_movFront
R28897 Parallelmove.simpleDest_movFront
R28991 Locations.diff_sym
R28991 Locations.diff_sym
R29039 Parallelmove.getdst_app
R29065 Coq.Lists.List.in_or_app
R29088 Coq.Lists.List.in_or_app
R29039 Parallelmove.getdst_app
R29039 Parallelmove.getdst_app
R29039 Parallelmove.getdst_app
R29065 Coq.Lists.List.in_or_app
R29088 Coq.Lists.List.in_or_app
R29222 Parallelmove.path
R29230 Coq.Lists.List "x ++ y" list_scope
R29243 Coq.Lists.List "x :: y" list_scope
R29234 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R29235 Parallelmove.T
R29246 Coq.Lists.List.nil
R29190 Parallelmove.path
R29198 Coq.Lists.List "x ++ y" list_scope
R29209 Coq.Lists.List "x :: y" list_scope
R29202 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R29212 Coq.Lists.List.nil
R29181 Parallelmove.Moves
R29171 Parallelmove.Reg
R29171 Parallelmove.Reg
R29340 Parallelmove.app_cons
R29340 Parallelmove.app_cons
R29340 Parallelmove.app_cons
R29340 Parallelmove.app_cons
R29528 Parallelmove.path
R29534 Parallelmove.StateBeing
R29513 Parallelmove.stepInv
R29499 Parallelmove.step
R29491 Parallelmove.State
R29491 Parallelmove.State
R29791 Parallelmove.app_cons
R29812 Parallelmove.app_cons
R29791 Parallelmove.app_cons
R29812 Parallelmove.app_cons
R29829 Parallelmove.path_tmpLast
R29829 Parallelmove.path_tmpLast
R29867 Parallelmove.path_pop
R29867 Parallelmove.path_pop
R29966 Parallelmove.simpleDest
R29993 Coq.Lists.List "x ++ y" list_scope
R29978 Parallelmove.StateToMove
R29996 Parallelmove.StateBeing
R29951 Parallelmove.stepInv
R29937 Parallelmove.step
R29928 Parallelmove.State
R29928 Parallelmove.State
R30171 Parallelmove.app_nil
R30171 Parallelmove.app_nil
R30171 Parallelmove.app_nil
R30171 Parallelmove.app_nil
R30171 Parallelmove.app_nil
R30171 Parallelmove.app_nil
R30171 Parallelmove.app_nil
R30171 Parallelmove.app_nil
R30171 Parallelmove.app_nil
R30171 Parallelmove.app_nil
R30171 Parallelmove.app_nil
R30213 Parallelmove.simpleDest_Pop
R30228 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R30213 Parallelmove.simpleDest_Pop
R30228 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R30255 Parallelmove.simpleDest_movBack
R30255 Parallelmove.simpleDest_movBack
R30293 Parallelmove.simpleDest_insert
R30323 Parallelmove.app_app
R30338 Parallelmove.simpleDest_movFront
R30293 Parallelmove.simpleDest_insert
R30323 Parallelmove.app_app
R30338 Parallelmove.simpleDest_movFront
R30370 Parallelmove.app_cons
R30388 Parallelmove.app_app
R30370 Parallelmove.app_cons
R30388 Parallelmove.app_app
R30437 Parallelmove.app_cons
R30464 Parallelmove.app_app
R30437 Parallelmove.app_cons
R30437 Parallelmove.app_cons
R30437 Parallelmove.app_cons
R30464 Parallelmove.app_app
R30464 Parallelmove.app_app
R30464 Parallelmove.app_app
R30486 Parallelmove.simpleDest_tmpLast
R30508 Coq.Lists.List "x ++ y" list_scope
R30525 Coq.Lists.List "x :: y" list_scope
R30512 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R30486 Parallelmove.simpleDest_tmpLast
R30508 Coq.Lists.List "x ++ y" list_scope
R30525 Coq.Lists.List "x :: y" list_scope
R30512 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R30566 Parallelmove.simpleDest_Pop
R30566 Parallelmove.simpleDest_Pop
R30594 Parallelmove.app_nil
R30629 Parallelmove.simpleDest_Pop
R30594 Parallelmove.app_nil
R30629 Parallelmove.simpleDest_Pop
R30733 Parallelmove.noTmp
R30743 Coq.Lists.List "x ++ y" list_scope
R30705 Parallelmove.noTmp
R30715 Coq.Lists.List "x ++ y" list_scope
R30721 Coq.Lists.List "x :: y" list_scope
R30697 Parallelmove.Moves
R30697 Parallelmove.Moves
R30682 Parallelmove.Move
R30877 Parallelmove.app_cons
R30895 Parallelmove.app_cons
R30877 Parallelmove.app_cons
R30895 Parallelmove.app_cons
R31045 Parallelmove.noTmp
R31052 Parallelmove.StateToMove
R31030 Parallelmove.stepInv
R31016 Parallelmove.step
R31008 Parallelmove.State
R31008 Parallelmove.State
R31268 Parallelmove.noTmp_pop
R31268 Parallelmove.noTmp_pop
R31268 Parallelmove.noTmp_pop
R31268 Parallelmove.noTmp_pop
R31268 Parallelmove.noTmp_pop
R31268 Parallelmove.noTmp_pop
R31268 Parallelmove.noTmp_pop
R31348 Parallelmove.noTmpLast
R31336 Parallelmove.noTmp
R31328 Parallelmove.Moves
R31615 Parallelmove.noTmpLast
R31592 Parallelmove.noTmpLast
R31605 Coq.Lists.List "x :: y" list_scope
R31584 Parallelmove.Moves
R31573 Parallelmove.Move
R31821 Parallelmove.noTmpLast
R31835 Coq.Lists.List "x ++ y" list_scope
R31789 Parallelmove.noTmpLast
R31803 Coq.Lists.List "x ++ y" list_scope
R31809 Coq.Lists.List "x :: y" list_scope
R31780 Parallelmove.Moves
R31780 Parallelmove.Moves
R31765 Parallelmove.Move
R32031 Parallelmove.app_cons
R32031 Parallelmove.app_cons
R32031 Parallelmove.app_cons
R32031 Parallelmove.app_cons
R32179 Parallelmove.app_cons
R32197 Parallelmove.app_cons
R32179 Parallelmove.app_cons
R32197 Parallelmove.app_cons
R32362 Parallelmove.noTmpLast
R32375 Coq.Lists.List "x :: y" list_scope
R32345 Parallelmove.noTmpLast
R32318 Parallelmove.noTmp
R32328 Coq.Lists.List "x ++ y" list_scope
R32334 Coq.Lists.List "x :: y" list_scope
R32309 Parallelmove.Moves
R32309 Parallelmove.Moves
R32309 Parallelmove.Moves
R32291 Parallelmove.Move
R32523 Parallelmove.app_cons
R32523 Parallelmove.app_cons
R32738 Parallelmove.noTmpLast
R32751 Coq.Lists.List "x ++ y" list_scope
R32764 Coq.Lists.List "x :: y" list_scope
R32755 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R32756 Parallelmove.T
R32767 Coq.Lists.List.nil
R32701 Parallelmove.noTmpLast
R32714 Coq.Lists.List "x ++ y" list_scope
R32725 Coq.Lists.List "x :: y" list_scope
R32718 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R32728 Coq.Lists.List.nil
R32692 Parallelmove.Moves
R32682 Parallelmove.Reg
R32682 Parallelmove.Reg
R32853 Parallelmove.app_cons
R32871 Parallelmove.app_cons
R32853 Parallelmove.app_cons
R32871 Parallelmove.app_cons
R32981 Parallelmove.app_cons
R32999 Parallelmove.app_cons
R32981 Parallelmove.app_cons
R32999 Parallelmove.app_cons
R33153 Parallelmove.noTmpLast
R33164 Parallelmove.StateBeing
R33138 Parallelmove.stepInv
R33124 Parallelmove.step
R33116 Parallelmove.State
R33116 Parallelmove.State
R33366 Parallelmove.noTmpLast_push
R33366 Parallelmove.noTmpLast_push
R33404 Parallelmove.noTmpLast_push
R33419 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R33404 Parallelmove.noTmpLast_push
R33419 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R33466 Parallelmove.app_cons
R33487 Parallelmove.app_cons
R33503 Parallelmove.noTmpLast_tmpLast
R33466 Parallelmove.app_cons
R33487 Parallelmove.app_cons
R33503 Parallelmove.noTmpLast_tmpLast
R33529 Parallelmove.noTmpLast_pop
R33543 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R33529 Parallelmove.noTmpLast_pop
R33543 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R33673 Parallelmove.noOverlap_aux
R33693 Coq.Lists.List "x ++ y" list_scope
R33699 Coq.Lists.List "x :: y" list_scope
R33635 Parallelmove.noOverlap_aux
R33654 Coq.Lists.List "x :: y" list_scope
R33661 Coq.Lists.List "x ++ y" list_scope
R33628 Parallelmove.Reg
R33628 Parallelmove.Reg
R33611 Coq.Lists.List.list
R33616 Parallelmove.Reg
R33611 Coq.Lists.List.list
R33616 Parallelmove.Reg
R34004 Parallelmove.app_cons
R34004 Parallelmove.app_cons
R34025 Parallelmove.noOverlap_auxpop
R34025 Parallelmove.noOverlap_auxpop
R34211 Coq.Lists.List.In
R34217 Parallelmove.getsrc
R34227 Coq.Lists.List "x :: y" list_scope
R34234 Coq.Lists.List "x ++ y" list_scope
R34175 Coq.Lists.List.In
R34181 Parallelmove.getsrc
R34192 Coq.Lists.List "x ++ y" list_scope
R34198 Coq.Lists.List "x :: y" list_scope
R34168 Parallelmove.Reg
R34156 Parallelmove.Moves
R34156 Parallelmove.Moves
R34141 Parallelmove.Move
R34576 Parallelmove.noOverlap
R34590 Coq.Lists.List "x ++ y" list_scope
R34596 Coq.Lists.List "x :: y" list_scope
R34544 Parallelmove.noOverlap
R34557 Coq.Lists.List "x :: y" list_scope
R34564 Coq.Lists.List "x ++ y" list_scope
R34536 Parallelmove.Move
R34524 Parallelmove.Moves
R34524 Parallelmove.Moves
R34650 Parallelmove.getdst_add
R34668 Parallelmove.getdst
R34685 Parallelmove.getdst_app
R34650 Parallelmove.getdst_add
R34668 Parallelmove.getdst
R34685 Parallelmove.getdst_app
R34711 Parallelmove.noOverlapaux_insert
R34711 Parallelmove.noOverlapaux_insert
R34832 Parallelmove.getsrc
R34832 Parallelmove.getsrc
R34852 Parallelmove.Ingetsrc_swap2
R34867 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R34852 Parallelmove.Ingetsrc_swap2
R34867 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R35001 Parallelmove.noOverlap
R35021 Coq.Lists.List "x ++ y" list_scope
R35016 Coq.Lists.List "x ++ y" list_scope
R35029 Coq.Lists.List "x :: y" list_scope
R35032 Coq.Lists.List.nil
R34969 Parallelmove.noOverlap
R34983 Coq.Lists.List "x ++ y" list_scope
R34989 Coq.Lists.List "x :: y" list_scope
R34961 Parallelmove.Move
R34949 Parallelmove.Moves
R34949 Parallelmove.Moves
R35061 Parallelmove.noOverlap_insert
R35089 Coq.Lists.List.nil
R35082 Coq.Lists.List "x ++ y" list_scope
R35061 Parallelmove.noOverlap_insert
R35089 Coq.Lists.List.nil
R35082 Coq.Lists.List "x ++ y" list_scope
R35105 Parallelmove.app_nil
R35120 Parallelmove.noOverlap_movFront
R35105 Parallelmove.app_nil
R35120 Parallelmove.noOverlap_movFront
R35241 Parallelmove.noOverlap
R35254 Coq.Lists.List "x ++ y" list_scope
R35265 Coq.Lists.List "x :: y" list_scope
R35258 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R35268 Coq.Lists.List.nil
R35213 Parallelmove.noOverlap
R35231 Coq.Lists.List "x :: y" list_scope
R35224 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R35206 Parallelmove.Reg
R35206 Parallelmove.Reg
R35192 Parallelmove.Moves
R35322 Parallelmove.noOverlap_insert
R35322 Parallelmove.noOverlap_insert
R35348 Parallelmove.app_nil
R35348 Parallelmove.app_nil
R35465 Parallelmove.noOverlap
R35483 Coq.Lists.List "x :: y" list_scope
R35476 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R35428 Parallelmove.noOverlap
R35441 Coq.Lists.List "x ++ y" list_scope
R35452 Coq.Lists.List "x :: y" list_scope
R35445 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R35455 Coq.Lists.List.nil
R35421 Parallelmove.Reg
R35421 Parallelmove.Reg
R35407 Parallelmove.Moves
R35548 Coq.Init.Logic "x = y" type_scope
R35543 Coq.Lists.List "x :: y" list_scope
R35536 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R35557 Coq.Lists.List "x :: y" list_scope
R35550 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R35563 Coq.Lists.List "x ++ y" list_scope
R35566 Coq.Lists.List.nil
R35548 Coq.Init.Logic "x = y" type_scope
R35543 Coq.Lists.List "x :: y" list_scope
R35536 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R35557 Coq.Lists.List "x :: y" list_scope
R35550 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R35563 Coq.Lists.List "x ++ y" list_scope
R35566 Coq.Lists.List.nil
R35600 Parallelmove.noOverlap_movFront
R35600 Parallelmove.noOverlap_movFront
R35634 Parallelmove.app_nil
R35634 Parallelmove.app_nil
R35746 Parallelmove.notemporary
R35709 Parallelmove.noTmpLast
R35722 Coq.Lists.List "x ++ y" list_scope
R35733 Coq.Lists.List "x :: y" list_scope
R35726 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R35736 Coq.Lists.List.nil
R35702 Parallelmove.Reg
R35702 Parallelmove.Reg
R35688 Parallelmove.Moves
R35858 Parallelmove.app_cons
R35858 Parallelmove.app_cons
R35894 Parallelmove.noTmpLast_pop
R35894 Parallelmove.noTmpLast_pop
R36021 Parallelmove.noOverlap_aux
R36041 Coq.Lists.List "x ++ y" list_scope
R35998 Parallelmove.noOverlap_aux
R35976 Parallelmove.noOverlap_aux
R35969 Parallelmove.Reg
R36293 Parallelmove.noOverlap_aux
R36314 Parallelmove.getdst
R36308 Parallelmove.T
R36281 Parallelmove.noTmp
R36275 Parallelmove.Reg
R36611 Parallelmove.noTmp
R36621 Coq.Lists.List "x ++ y" list_scope
R36598 Parallelmove.noTmp
R36586 Parallelmove.noTmp
R36812 Parallelmove.noOverlap
R36838 Coq.Lists.List "x ++ y" list_scope
R36823 Parallelmove.StateToMove
R36841 Parallelmove.StateBeing
R36797 Parallelmove.stepInv
R36783 Parallelmove.step
R36774 Parallelmove.State
R36774 Parallelmove.State
R37016 Parallelmove.app_nil
R37084 Parallelmove.noOverlap_Pop
R37016 Parallelmove.app_nil
R37016 Parallelmove.app_nil
R37016 Parallelmove.app_nil
R37016 Parallelmove.app_nil
R37016 Parallelmove.app_nil
R37016 Parallelmove.app_nil
R37016 Parallelmove.app_nil
R37016 Parallelmove.app_nil
R37016 Parallelmove.app_nil
R37016 Parallelmove.app_nil
R37084 Parallelmove.noOverlap_Pop
R37084 Parallelmove.noOverlap_Pop
R37084 Parallelmove.noOverlap_Pop
R37084 Parallelmove.noOverlap_Pop
R37084 Parallelmove.noOverlap_Pop
R37084 Parallelmove.noOverlap_Pop
R37119 Parallelmove.noOverlap_movBack
R37119 Parallelmove.noOverlap_movBack
R37150 Parallelmove.noOverlap_insert
R37179 Parallelmove.app_app
R37194 Parallelmove.noOverlap_movFront
R37226 Parallelmove.app_cons
R37244 Parallelmove.app_app
R37150 Parallelmove.noOverlap_insert
R37179 Parallelmove.app_app
R37194 Parallelmove.noOverlap_movFront
R37226 Parallelmove.app_cons
R37244 Parallelmove.app_app
R37293 Parallelmove.app_cons
R37320 Parallelmove.app_app
R37360 Parallelmove.noOverlap_movBack0
R37293 Parallelmove.app_cons
R37293 Parallelmove.app_cons
R37293 Parallelmove.app_cons
R37320 Parallelmove.app_app
R37320 Parallelmove.app_app
R37320 Parallelmove.app_app
R37360 Parallelmove.noOverlap_movBack0
R37388 Parallelmove.noOverlap
R37407 Coq.Lists.List "x :: y" list_scope
R37399 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37413 Coq.Lists.List "x ++ y" list_scope
R37430 Coq.Lists.List "x :: y" list_scope
R37417 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37448 Parallelmove.noOverlap_Front0
R37388 Parallelmove.noOverlap
R37407 Coq.Lists.List "x :: y" list_scope
R37399 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37413 Coq.Lists.List "x ++ y" list_scope
R37430 Coq.Lists.List "x :: y" list_scope
R37417 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37448 Parallelmove.noOverlap_Front0
R37679 Coq.Lists.List "x ++ y" list_scope
R37691 Coq.Lists.List "x :: y" list_scope
R37683 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37694 Coq.Lists.List.nil
R37679 Coq.Lists.List "x ++ y" list_scope
R37691 Coq.Lists.List "x :: y" list_scope
R37683 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37694 Coq.Lists.List.nil
R37714 Coq.Lists.List.app_eq_nil
R37736 Coq.Lists.List "x :: y" list_scope
R37728 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37739 Coq.Lists.List.nil
R37714 Coq.Lists.List.app_eq_nil
R37736 Coq.Lists.List "x :: y" list_scope
R37728 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R37739 Coq.Lists.List.nil
R37897 Parallelmove.noTmpL_diff
R37897 Parallelmove.noTmpL_diff
R37982 Parallelmove.noTmP_noOverlap_aux
R38009 Parallelmove.noTmp_append
R38041 Parallelmove.app_cons
R38086 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R38063 Parallelmove.noTmpLast_popBack
R37982 Parallelmove.noTmP_noOverlap_aux
R38009 Parallelmove.noTmp_append
R38041 Parallelmove.app_cons
R38086 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R38063 Parallelmove.noTmpLast_popBack
R38113 Parallelmove.app_nil
R38134 Parallelmove.noOverlap_Pop
R38148 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R38113 Parallelmove.app_nil
R38134 Parallelmove.noOverlap_Pop
R38148 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R38245 Parallelmove.stepInv
R38230 Parallelmove.stepInv
R38216 Parallelmove.step
R38208 Parallelmove.State
R38208 Parallelmove.State
R38311 Parallelmove.step_inv_path
R38311 Parallelmove.step_inv_path
R38346 Parallelmove.step_inv_simpleDest
R38346 Parallelmove.step_inv_simpleDest
R38387 Parallelmove.step_inv_noOverlap
R38387 Parallelmove.step_inv_noOverlap
R38427 Parallelmove.step_inv_noTmp
R38427 Parallelmove.step_inv_noTmp
R38463 Parallelmove.step_inv_noTmpLast
R38463 Parallelmove.step_inv_noTmpLast
R38544 Coq.Init.Logic "~ x" type_scope
R38547 Coq.Init.Logic "'exists' x : t , p" type_scope
R38566 Parallelmove.step
R38558 Parallelmove.State
R38527 Parallelmove.State
R38607 Parallelmove.State
R38598 Parallelmove.State
R38651 Parallelmove.State
R38718 Parallelmove.step
R38710 Parallelmove.State
R38710 Parallelmove.State
R38710 Parallelmove.State
R38775 Parallelmove.stepp_refl
R38786 Parallelmove.stepp_trans
R38885 Parallelmove.stepp
R38869 Parallelmove.stepp
R38854 Parallelmove.stepp
R38846 Parallelmove.State
R38846 Parallelmove.State
R38846 Parallelmove.State
R39024 Parallelmove.stepp
R39009 Parallelmove.step
R39001 Parallelmove.State
R39001 Parallelmove.State
R39130 Parallelmove.stepInv
R39115 Parallelmove.stepInv
R39100 Parallelmove.stepp
R39092 Parallelmove.State
R39092 Parallelmove.State
R39229 Parallelmove.step_inv
R39229 Parallelmove.step_inv
R39338 Parallelmove.notemporary
R39301 Parallelmove.noTmpLast
R39314 Coq.Lists.List "x ++ y" list_scope
R39325 Coq.Lists.List "x :: y" list_scope
R39318 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R39328 Coq.Lists.List.nil
R39453 Parallelmove.noTmpLast
R39473 Coq.Lists.List "x :: y" list_scope
R39464 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R39479 Coq.Lists.List "x ++ y" list_scope
R39490 Coq.Lists.List "x :: y" list_scope
R39483 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R39493 Coq.Lists.List.nil
R39453 Parallelmove.noTmpLast
R39473 Coq.Lists.List "x :: y" list_scope
R39464 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R39479 Coq.Lists.List "x ++ y" list_scope
R39490 Coq.Lists.List "x :: y" list_scope
R39483 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R39493 Coq.Lists.List.nil
R39553 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R39534 Parallelmove.noTmpLast_pop
R39553 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R39534 Parallelmove.noTmpLast_pop
R39694 Parallelmove.NoOverlap
R39675 Parallelmove.NoOverlap
R39661 Parallelmove.stepInv
R39644 Parallelmove.notemporary
R39630 Parallelmove.step
R39619 Parallelmove.State
R39619 Parallelmove.State
R39941 Parallelmove.app_nil
R39977 Parallelmove.app_cons
R40028 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40002 Parallelmove.noOverlap_Pop
R39941 Parallelmove.app_nil
R39941 Parallelmove.app_nil
R39941 Parallelmove.app_nil
R39977 Parallelmove.app_cons
R39977 Parallelmove.app_cons
R39977 Parallelmove.app_cons
R40028 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40002 Parallelmove.noOverlap_Pop
R40062 Parallelmove.app_nil
R40087 Coq.Lists.List.app_ass
R40115 Parallelmove.app_cons
R40142 Coq.Lists.List.ass_app
R40157 Parallelmove.noOverlap_movBack
R40062 Parallelmove.app_nil
R40062 Parallelmove.app_nil
R40087 Coq.Lists.List.app_ass
R40115 Parallelmove.app_cons
R40115 Parallelmove.app_cons
R40115 Parallelmove.app_cons
R40142 Coq.Lists.List.ass_app
R40157 Parallelmove.noOverlap_movBack
R40206 Coq.Lists.List.app_ass
R40243 Parallelmove.app_cons
R40206 Coq.Lists.List.app_ass
R40206 Coq.Lists.List.app_ass
R40206 Coq.Lists.List.app_ass
R40243 Parallelmove.app_cons
R40243 Parallelmove.app_cons
R40243 Parallelmove.app_cons
R40243 Parallelmove.app_cons
R40269 Coq.Lists.List.ass_app
R40284 Parallelmove.noOverlap_insert
R40310 Coq.Lists.List.app_ass
R40326 Parallelmove.noOverlap_movFront
R40269 Coq.Lists.List.ass_app
R40284 Parallelmove.noOverlap_insert
R40310 Coq.Lists.List.app_ass
R40326 Parallelmove.noOverlap_movFront
R40378 Parallelmove.app_cons
R40404 Coq.Lists.List.ass_app
R40420 Parallelmove.noOverlap_movBack0
R40378 Parallelmove.app_cons
R40378 Parallelmove.app_cons
R40378 Parallelmove.app_cons
R40378 Parallelmove.app_cons
R40378 Parallelmove.app_cons
R40404 Coq.Lists.List.ass_app
R40420 Parallelmove.noOverlap_movBack0
R40477 Coq.Lists.List.app_ass
R40477 Coq.Lists.List.app_ass
R40510 Parallelmove.noOverlap
R40529 Coq.Lists.List "x :: y" list_scope
R40521 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40545 Coq.Lists.List "x ++ y" list_scope
R40541 Coq.Lists.List "x :: y" list_scope
R40534 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40564 Coq.Lists.List "x :: y" list_scope
R40551 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40582 Parallelmove.noOverlap_Front0
R40510 Parallelmove.noOverlap
R40529 Coq.Lists.List "x :: y" list_scope
R40521 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40545 Coq.Lists.List "x ++ y" list_scope
R40541 Coq.Lists.List "x :: y" list_scope
R40534 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40564 Coq.Lists.List "x :: y" list_scope
R40551 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40582 Parallelmove.noOverlap_Front0
R40647 Coq.Lists.List.app_ass
R40647 Coq.Lists.List.app_ass
R40647 Coq.Lists.List.app_ass
R40771 Parallelmove.notemporary
R40771 Parallelmove.notemporary
R40795 Parallelmove.noTmpLast
R40824 Coq.Lists.List "x ++ y" list_scope
R40820 Coq.Lists.List "x :: y" list_scope
R40807 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40838 Coq.Lists.List "x :: y" list_scope
R40830 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40841 Coq.Lists.List.nil
R40866 Parallelmove.noTmpLast_lastnoTmp
R40900 Coq.Lists.List "x :: y" list_scope
R40887 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40795 Parallelmove.noTmpLast
R40824 Coq.Lists.List "x ++ y" list_scope
R40820 Coq.Lists.List "x :: y" list_scope
R40807 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40838 Coq.Lists.List "x :: y" list_scope
R40830 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R40841 Coq.Lists.List.nil
R40866 Parallelmove.noTmpLast_lastnoTmp
R40900 Coq.Lists.List "x :: y" list_scope
R40887 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41070 Parallelmove.noTmP_noOverlap_aux
R41070 Parallelmove.noTmP_noOverlap_aux
R41103 Parallelmove.noTmp_append
R41103 Parallelmove.noTmp_append
R41131 Parallelmove.noTmpLast
R41160 Coq.Lists.List "x ++ y" list_scope
R41156 Coq.Lists.List "x :: y" list_scope
R41143 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41174 Coq.Lists.List "x :: y" list_scope
R41166 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41177 Coq.Lists.List.nil
R41231 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41201 Parallelmove.noTmpLast_popBack
R41131 Parallelmove.noTmpLast
R41160 Coq.Lists.List "x ++ y" list_scope
R41156 Coq.Lists.List "x :: y" list_scope
R41143 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41174 Coq.Lists.List "x :: y" list_scope
R41166 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41177 Coq.Lists.List.nil
R41231 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41201 Parallelmove.noTmpLast_popBack
R41334 Parallelmove.noOverlap
R41357 Coq.Lists.List "x ++ y" list_scope
R41353 Coq.Lists.List "x :: y" list_scope
R41346 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41372 Coq.Lists.List "x :: y" list_scope
R41363 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41378 Coq.Lists.List "x ++ y" list_scope
R41391 Coq.Lists.List "x :: y" list_scope
R41382 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41394 Coq.Lists.List.nil
R41334 Parallelmove.noOverlap
R41357 Coq.Lists.List "x ++ y" list_scope
R41353 Coq.Lists.List "x :: y" list_scope
R41346 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41372 Coq.Lists.List "x :: y" list_scope
R41363 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41378 Coq.Lists.List "x ++ y" list_scope
R41391 Coq.Lists.List "x :: y" list_scope
R41382 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41394 Coq.Lists.List.nil
R41422 Parallelmove.noOverlap
R41445 Coq.Lists.List "x ++ y" list_scope
R41441 Coq.Lists.List "x :: y" list_scope
R41434 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41453 Coq.Lists.List "x ++ y" list_scope
R41466 Coq.Lists.List "x :: y" list_scope
R41457 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41469 Coq.Lists.List.nil
R41486 Parallelmove.noOverlap_Pop
R41500 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41422 Parallelmove.noOverlap
R41445 Coq.Lists.List "x ++ y" list_scope
R41441 Coq.Lists.List "x :: y" list_scope
R41434 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41453 Coq.Lists.List "x ++ y" list_scope
R41466 Coq.Lists.List "x :: y" list_scope
R41457 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41469 Coq.Lists.List.nil
R41486 Parallelmove.noOverlap_Pop
R41500 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R41536 Parallelmove.app_cons
R41553 Parallelmove.noOverlap_Pop
R41536 Parallelmove.app_cons
R41536 Parallelmove.app_cons
R41536 Parallelmove.app_cons
R41553 Parallelmove.noOverlap_Pop
R41694 Coq.Lists.List.In
R41700 Parallelmove.getdst
R41723 Coq.Lists.List "x ++ y" list_scope
R41708 Parallelmove.StateToMove
R41726 Parallelmove.StateBeing
R41641 Coq.Lists.List.In
R41647 Parallelmove.getdst
R41670 Coq.Lists.List "x ++ y" list_scope
R41655 Parallelmove.StateToMove
R41673 Parallelmove.StateBeing
R41626 Parallelmove.step
R41615 Parallelmove.State
R41615 Parallelmove.State
R41853 Parallelmove.getdst_app
R41889 Parallelmove.app_nil
R41913 Coq.Lists.List.in_or_app
R41853 Parallelmove.getdst_app
R41853 Parallelmove.getdst_app
R41853 Parallelmove.getdst_app
R41853 Parallelmove.getdst_app
R41853 Parallelmove.getdst_app
R41889 Parallelmove.app_nil
R41889 Parallelmove.app_nil
R41889 Parallelmove.app_nil
R41913 Coq.Lists.List.in_or_app
R41930 Coq.Lists.List.in_app_or
R41953 Parallelmove.getdst
R41941 Parallelmove.getdst
R41930 Coq.Lists.List.in_app_or
R41953 Parallelmove.getdst
R41941 Parallelmove.getdst
R42030 Parallelmove.getdst_app
R42090 Parallelmove.app_nil
R42113 Coq.Lists.List.in_or_app
R42030 Parallelmove.getdst_app
R42030 Parallelmove.getdst_app
R42030 Parallelmove.getdst_app
R42030 Parallelmove.getdst_app
R42030 Parallelmove.getdst_app
R42090 Parallelmove.app_nil
R42090 Parallelmove.app_nil
R42113 Coq.Lists.List.in_or_app
R42130 Coq.Lists.List.in_app_or
R42169 Coq.Lists.List "x :: y" list_scope
R42172 Coq.Lists.List.nil
R42151 Coq.Lists.List "x ++ y" list_scope
R42141 Parallelmove.getdst
R42154 Parallelmove.getdst
R42130 Coq.Lists.List.in_app_or
R42169 Coq.Lists.List "x :: y" list_scope
R42172 Coq.Lists.List.nil
R42151 Coq.Lists.List "x ++ y" list_scope
R42141 Parallelmove.getdst
R42154 Parallelmove.getdst
R42200 Coq.Lists.List.in_app_or
R42223 Parallelmove.getdst
R42211 Parallelmove.getdst
R42200 Coq.Lists.List.in_app_or
R42223 Parallelmove.getdst
R42211 Parallelmove.getdst
R42375 Parallelmove.getdst_app
R42411 Parallelmove.app_nil
R42435 Coq.Lists.List.in_or_app
R42375 Parallelmove.getdst_app
R42375 Parallelmove.getdst_app
R42375 Parallelmove.getdst_app
R42375 Parallelmove.getdst_app
R42375 Parallelmove.getdst_app
R42411 Parallelmove.app_nil
R42435 Coq.Lists.List.in_or_app
R42452 Coq.Lists.List.in_app_or
R42491 Coq.Lists.List "x :: y" list_scope
R42497 Coq.Lists.List "x :: y" list_scope
R42500 Parallelmove.getdst
R42473 Coq.Lists.List "x ++ y" list_scope
R42463 Parallelmove.getdst
R42476 Parallelmove.getdst
R42452 Coq.Lists.List.in_app_or
R42491 Coq.Lists.List "x :: y" list_scope
R42497 Coq.Lists.List "x :: y" list_scope
R42500 Parallelmove.getdst
R42473 Coq.Lists.List "x ++ y" list_scope
R42463 Parallelmove.getdst
R42476 Parallelmove.getdst
R42535 Coq.Lists.List.in_app_or
R42558 Parallelmove.getdst
R42546 Parallelmove.getdst
R42535 Coq.Lists.List.in_app_or
R42558 Parallelmove.getdst
R42546 Parallelmove.getdst
R42598 Coq.Lists.List.in_or_app
R42598 Coq.Lists.List.in_or_app
R42639 Coq.Lists.List.in_or_app
R42639 Coq.Lists.List.in_or_app
R42711 Coq.Lists.List.in_or_app
R42711 Coq.Lists.List.in_or_app
R42848 Parallelmove.getdst_app
R42848 Parallelmove.getdst_app
R42848 Parallelmove.getdst_app
R42848 Parallelmove.getdst_app
R42848 Parallelmove.getdst_app
R42848 Parallelmove.getdst_app
R42895 Parallelmove.getdst_app
R42895 Parallelmove.getdst_app
R42895 Parallelmove.getdst_app
R42895 Parallelmove.getdst_app
R42895 Parallelmove.getdst_app
R42895 Parallelmove.getdst_app
R42929 Coq.Lists.List.in_app_or
R42960 Coq.Lists.List "x ++ y" list_scope
R42951 Parallelmove.getdst
R42967 Coq.Lists.List "x :: y" list_scope
R42970 Coq.Lists.List.nil
R42940 Parallelmove.getdst
R43000 Coq.Lists.List.in_or_app
R42929 Coq.Lists.List.in_app_or
R42960 Coq.Lists.List "x ++ y" list_scope
R42951 Parallelmove.getdst
R42967 Coq.Lists.List "x :: y" list_scope
R42970 Coq.Lists.List.nil
R42940 Parallelmove.getdst
R43000 Coq.Lists.List.in_or_app
R43000 Coq.Lists.List.in_or_app
R43023 Coq.Lists.List.in_app_or
R43048 Coq.Lists.List "x :: y" list_scope
R43051 Coq.Lists.List.nil
R43034 Parallelmove.getdst
R43023 Coq.Lists.List.in_app_or
R43048 Coq.Lists.List "x :: y" list_scope
R43051 Coq.Lists.List.nil
R43034 Parallelmove.getdst
R43100 Coq.Lists.List.in_or_app
R43100 Coq.Lists.List.in_or_app
R43160 Coq.Lists.List.in_or_app
R43160 Coq.Lists.List.in_or_app
R43213 Parallelmove.app_nil
R43239 Parallelmove.getdst_app
R43213 Parallelmove.app_nil
R43239 Parallelmove.getdst_app
R43239 Parallelmove.getdst_app
R43273 Coq.Lists.List.in_or_app
R43273 Coq.Lists.List.in_or_app
R43386 Parallelmove.sameExec
R43371 Parallelmove.stepInv
R43356 Parallelmove.stepp
R43348 Parallelmove.State
R43348 Parallelmove.State
R43493 Parallelmove.sameExec
R43526 Parallelmove.step_sameExec
R43493 Parallelmove.sameExec
R43526 Parallelmove.step_sameExec
R43652 Parallelmove.step_inv
R43652 Parallelmove.step_inv
R43726 Parallelmove.getdst_app
R43753 Coq.Lists.List.in_or_app
R43726 Parallelmove.getdst_app
R43726 Parallelmove.getdst_app
R43726 Parallelmove.getdst_app
R43726 Parallelmove.getdst_app
R43726 Parallelmove.getdst_app
R43726 Parallelmove.getdst_app
R43726 Parallelmove.getdst_app
R43753 Coq.Lists.List.in_or_app
R43771 Coq.Lists.List.in_app_or
R43864 Coq.Lists.List "x ++ y" list_scope
R43840 Parallelmove.getdst
R43848 Parallelmove.StateToMove
R43867 Parallelmove.getdst
R43875 Parallelmove.StateBeing
R43809 Coq.Lists.List "x ++ y" list_scope
R43785 Parallelmove.getdst
R43793 Parallelmove.StateToMove
R43812 Parallelmove.getdst
R43820 Parallelmove.StateBeing
R43771 Coq.Lists.List.in_app_or
R43864 Coq.Lists.List "x ++ y" list_scope
R43840 Parallelmove.getdst
R43848 Parallelmove.StateToMove
R43867 Parallelmove.getdst
R43875 Parallelmove.StateBeing
R43809 Coq.Lists.List "x ++ y" list_scope
R43785 Parallelmove.getdst
R43793 Parallelmove.StateToMove
R43812 Parallelmove.getdst
R43820 Parallelmove.StateBeing
R43920 Parallelmove.step_inv_getdst
R43962 Parallelmove.getdst_app
R43920 Parallelmove.step_inv_getdst
R43962 Parallelmove.getdst_app
R43962 Parallelmove.getdst_app
R43962 Parallelmove.getdst_app
R44058 Parallelmove.getdst_app
R44085 Coq.Lists.List.in_or_app
R44058 Parallelmove.getdst_app
R44058 Parallelmove.getdst_app
R44058 Parallelmove.getdst_app
R44058 Parallelmove.getdst_app
R44058 Parallelmove.getdst_app
R44058 Parallelmove.getdst_app
R44058 Parallelmove.getdst_app
R44085 Coq.Lists.List.in_or_app
R44103 Coq.Lists.List.in_app_or
R44196 Coq.Lists.List "x ++ y" list_scope
R44172 Parallelmove.getdst
R44180 Parallelmove.StateToMove
R44199 Parallelmove.getdst
R44207 Parallelmove.StateBeing
R44141 Coq.Lists.List "x ++ y" list_scope
R44117 Parallelmove.getdst
R44125 Parallelmove.StateToMove
R44144 Parallelmove.getdst
R44152 Parallelmove.StateBeing
R44103 Coq.Lists.List.in_app_or
R44196 Coq.Lists.List "x ++ y" list_scope
R44172 Parallelmove.getdst
R44180 Parallelmove.StateToMove
R44199 Parallelmove.getdst
R44207 Parallelmove.StateBeing
R44141 Coq.Lists.List "x ++ y" list_scope
R44117 Parallelmove.getdst
R44125 Parallelmove.StateToMove
R44144 Parallelmove.getdst
R44152 Parallelmove.StateBeing
R44252 Parallelmove.step_inv_getdst
R44294 Parallelmove.getdst_app
R44252 Parallelmove.step_inv_getdst
R44294 Parallelmove.getdst_app
R44294 Parallelmove.getdst_app
R44294 Parallelmove.getdst_app
R44370 Parallelmove.State
R44361 Parallelmove.State
R44466 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44470 Coq.Lists.List.nil
R44444 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44452 Coq.Lists.List "x :: y" list_scope
R44445 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44458 Coq.Lists.List.nil
R44429 Parallelmove.Moves
R44429 Parallelmove.Moves
R44417 Parallelmove.Reg
R44577 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44588 Coq.Lists.List "x :: y" list_scope
R44581 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44591 Coq.Lists.List.nil
R44555 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44563 Coq.Lists.List "x :: y" list_scope
R44556 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44569 Coq.Lists.List.nil
R44540 Coq.Init.Logic "x <> y" type_scope
R44527 Parallelmove.Reg
R44527 Parallelmove.Reg
R44513 Parallelmove.Moves
R44513 Parallelmove.Moves
R44746 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44750 Coq.Lists.List "x ++ y" list_scope
R44764 Coq.Lists.List "x :: y" list_scope
R44757 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44775 Coq.Lists.List "x :: y" list_scope
R44768 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44700 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44704 Coq.Lists.List "x ++ y" list_scope
R44715 Coq.Lists.List "x :: y" list_scope
R44708 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44730 Coq.Lists.List "x :: y" list_scope
R44723 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44666 Parallelmove.noRead
R44655 Parallelmove.Reg
R44655 Parallelmove.Reg
R44655 Parallelmove.Reg
R44639 Parallelmove.Moves
R44639 Parallelmove.Moves
R44639 Parallelmove.Moves
R44639 Parallelmove.Moves
R44937 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44943 Coq.Lists.List "x ++ y" list_scope
R44957 Coq.Lists.List "x :: y" list_scope
R44947 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44948 Parallelmove.T
R44960 Coq.Lists.List.nil
R44974 Coq.Lists.List "x :: y" list_scope
R44966 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44989 Coq.Lists.List "x :: y" list_scope
R44978 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44983 Parallelmove.T
R44887 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44899 Coq.Lists.List "x :: y" list_scope
R44891 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44905 Coq.Lists.List "x ++ y" list_scope
R44917 Coq.Lists.List "x :: y" list_scope
R44909 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R44920 Coq.Lists.List.nil
R44853 Parallelmove.noRead
R44842 Parallelmove.Reg
R44842 Parallelmove.Reg
R44842 Parallelmove.Reg
R44825 Parallelmove.Moves
R44825 Parallelmove.Moves
R44825 Parallelmove.Moves
R45173 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45179 Coq.Lists.List "x ++ y" list_scope
R45192 Coq.Lists.List "x :: y" list_scope
R45183 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45195 Coq.Lists.List.nil
R45210 Coq.Lists.List "x :: y" list_scope
R45201 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45121 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45134 Coq.Lists.List "x :: y" list_scope
R45125 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45140 Coq.Lists.List "x ++ y" list_scope
R45153 Coq.Lists.List "x :: y" list_scope
R45144 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45156 Coq.Lists.List.nil
R45084 Locations.diff
R45064 Parallelmove.noRead
R45053 Parallelmove.Reg
R45053 Parallelmove.Reg
R45053 Parallelmove.Reg
R45053 Parallelmove.Reg
R45031 Parallelmove.Moves
R45031 Parallelmove.Moves
R45031 Parallelmove.Moves
R45318 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45322 Coq.Lists.List.nil
R45334 Coq.Lists.List "x :: y" list_scope
R45327 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45296 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45307 Coq.Lists.List "x :: y" list_scope
R45300 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45310 Coq.Lists.List.nil
R45275 Parallelmove.noRead
R45264 Parallelmove.Reg
R45264 Parallelmove.Reg
R45250 Parallelmove.Moves
R45250 Parallelmove.Moves
R45355 Parallelmove.dstep_nop
R45365 Parallelmove.dstep_start
R45377 Parallelmove.dstep_push
R45403 Parallelmove.dstep_pop_loop
R45418 Parallelmove.dstep_pop
R45428 Parallelmove.dstep_last
R45516 Parallelmove.stepp
R45501 Parallelmove.stepInv
R45486 Parallelmove.dstep
R45478 Parallelmove.State
R45478 Parallelmove.State
R45599 Parallelmove.stepp
R45636 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45640 Coq.Lists.List.nil
R45605 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45610 Coq.Lists.List "x ++ y" list_scope
R45606 Coq.Lists.List.nil
R45621 Coq.Lists.List "x :: y" list_scope
R45614 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45628 Coq.Lists.List.nil
R45656 Parallelmove.step_stepp
R45676 Parallelmove.step_nop
R45687 Coq.Lists.List.nil
R45599 Parallelmove.stepp
R45636 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45640 Coq.Lists.List.nil
R45605 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45610 Coq.Lists.List "x ++ y" list_scope
R45606 Coq.Lists.List.nil
R45621 Coq.Lists.List "x :: y" list_scope
R45614 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45628 Coq.Lists.List.nil
R45656 Parallelmove.step_stepp
R45676 Parallelmove.step_nop
R45687 Coq.Lists.List.nil
R45703 Parallelmove.stepp
R45740 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45751 Coq.Lists.List "x :: y" list_scope
R45744 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45754 Coq.Lists.List.nil
R45709 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45714 Coq.Lists.List "x ++ y" list_scope
R45710 Coq.Lists.List.nil
R45725 Coq.Lists.List "x :: y" list_scope
R45718 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45732 Coq.Lists.List.nil
R45771 Parallelmove.step_stepp
R45790 Parallelmove.step_start
R45801 Coq.Lists.List.nil
R45703 Parallelmove.stepp
R45740 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45751 Coq.Lists.List "x :: y" list_scope
R45744 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45754 Coq.Lists.List.nil
R45709 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45714 Coq.Lists.List "x ++ y" list_scope
R45710 Coq.Lists.List.nil
R45725 Coq.Lists.List "x :: y" list_scope
R45718 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45732 Coq.Lists.List.nil
R45771 Parallelmove.step_stepp
R45790 Parallelmove.step_start
R45801 Coq.Lists.List.nil
R45819 Parallelmove.stepp_trans
R45942 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45948 Coq.Lists.List "x ++ y" list_scope
R45962 Coq.Lists.List "x :: y" list_scope
R45952 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45953 Parallelmove.T
R45965 Coq.Lists.List.nil
R45979 Coq.Lists.List "x :: y" list_scope
R45971 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45994 Coq.Lists.List "x :: y" list_scope
R45983 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45988 Parallelmove.T
R45880 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45892 Coq.Lists.List "x :: y" list_scope
R45884 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45898 Coq.Lists.List "x ++ y" list_scope
R45912 Coq.Lists.List "x :: y" list_scope
R45902 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45903 Parallelmove.T
R45915 Coq.Lists.List.nil
R45933 Coq.Lists.List "x :: y" list_scope
R45922 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45927 Parallelmove.T
R45834 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45846 Coq.Lists.List "x :: y" list_scope
R45838 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45852 Coq.Lists.List "x ++ y" list_scope
R45864 Coq.Lists.List "x :: y" list_scope
R45856 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45867 Coq.Lists.List.nil
R45819 Parallelmove.stepp_trans
R45942 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45948 Coq.Lists.List "x ++ y" list_scope
R45962 Coq.Lists.List "x :: y" list_scope
R45952 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45953 Parallelmove.T
R45965 Coq.Lists.List.nil
R45979 Coq.Lists.List "x :: y" list_scope
R45971 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45994 Coq.Lists.List "x :: y" list_scope
R45983 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45988 Parallelmove.T
R45880 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45892 Coq.Lists.List "x :: y" list_scope
R45884 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45898 Coq.Lists.List "x ++ y" list_scope
R45912 Coq.Lists.List "x :: y" list_scope
R45902 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45903 Parallelmove.T
R45915 Coq.Lists.List.nil
R45933 Coq.Lists.List "x :: y" list_scope
R45922 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45927 Parallelmove.T
R45834 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45846 Coq.Lists.List "x :: y" list_scope
R45838 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45852 Coq.Lists.List "x ++ y" list_scope
R45864 Coq.Lists.List "x :: y" list_scope
R45856 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R45867 Coq.Lists.List.nil
R46015 Parallelmove.step_stepp
R46033 Parallelmove.step_pop
R46015 Parallelmove.step_stepp
R46033 Parallelmove.step_pop
R46167 Coq.Lists.List "x ++ y" list_scope
R46179 Coq.Lists.List "x :: y" list_scope
R46171 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R46182 Coq.Lists.List.nil
R46167 Coq.Lists.List "x ++ y" list_scope
R46179 Coq.Lists.List "x :: y" list_scope
R46171 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R46182 Coq.Lists.List.nil
R46306 Parallelmove.stepInv
R46291 Parallelmove.stepInv
R46276 Parallelmove.dstep
R46268 Parallelmove.State
R46268 Parallelmove.State
R46340 Parallelmove.stepp_inv
R46340 Parallelmove.stepp_inv
R46370 Parallelmove.dstep_step
R46370 Parallelmove.dstep_step
R46423 Parallelmove.State
R46414 Parallelmove.State
R46468 Parallelmove.State
R46537 Parallelmove.dstep
R46529 Parallelmove.State
R46529 Parallelmove.State
R46529 Parallelmove.State
R46597 Parallelmove.dstepp_refl
R46609 Parallelmove.dstepp_trans
R46702 Parallelmove.stepp
R46685 Parallelmove.dstepp
R46671 Parallelmove.stepInv
R46663 Parallelmove.State
R46663 Parallelmove.State
R46786 Parallelmove.stepp_transitive
R46786 Parallelmove.stepp_transitive
R46826 Parallelmove.dstep_step
R46826 Parallelmove.dstep_step
R46871 Parallelmove.dstep_inv
R46871 Parallelmove.dstep_inv
R46981 Parallelmove.sameExec
R46966 Parallelmove.stepInv
R46950 Parallelmove.dstepp
R46942 Parallelmove.State
R46942 Parallelmove.State
R47018 Parallelmove.stepp_sameExec
R47018 Parallelmove.stepp_sameExec
R47046 Parallelmove.dstepp_stepp
R47046 Parallelmove.dstepp_stepp
R47141 Coq.Init.Datatypes.option
R47161 Coq.Init.Datatypes "x * y" type_scope
R47156 Coq.Init.Datatypes "x * y" type_scope
R47150 Parallelmove.Moves
R47158 Parallelmove.Reg
R47165 Parallelmove.Moves
R47122 Parallelmove.Reg
R47110 Parallelmove.Moves
R47199 Coq.Lists.List "x :: y" list_scope
R47192 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R47221 Parallelmove.diff_dec
R47246 Coq.Init.Specif.right
R47257 Coq.Init.Datatypes.Some
R47262 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R47263 Coq.Lists.List.nil
R47285 Coq.Init.Specif.left
R47347 Coq.Init.Datatypes.Some
R47353 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R47370 Coq.Init.Datatypes.Some
R47375 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R47383 Coq.Lists.List "x :: y" list_scope
R47376 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R47411 Coq.Init.Datatypes.None
R47419 Coq.Init.Datatypes.None
R47451 Coq.Lists.List.nil
R47458 Coq.Init.Datatypes.None
R47122 Parallelmove.Reg
R47110 Parallelmove.Moves
R47527 Coq.Init.Datatypes.option
R47547 Coq.Init.Datatypes "x * y" type_scope
R47542 Coq.Init.Datatypes "x * y" type_scope
R47536 Parallelmove.Moves
R47544 Parallelmove.Reg
R47551 Parallelmove.Moves
R47508 Parallelmove.Reg
R47496 Parallelmove.Moves
R47585 Coq.Lists.List "x :: y" list_scope
R47578 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R47607 Locations.eq
R47630 Coq.Init.Specif.left
R47640 Coq.Init.Datatypes.Some
R47645 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R47646 Coq.Lists.List.nil
R47668 Coq.Init.Specif.right
R47730 Coq.Init.Datatypes.Some
R47736 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R47753 Coq.Init.Datatypes.Some
R47758 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R47766 Coq.Lists.List "x :: y" list_scope
R47759 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R47794 Coq.Init.Datatypes.None
R47802 Coq.Init.Datatypes.None
R47834 Coq.Lists.List.nil
R47841 Coq.Init.Datatypes.None
R47508 Parallelmove.Reg
R47496 Parallelmove.Moves
R47870 Parallelmove.Move
R47878 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R47879 Locations.R
R47881 Locations.IT1
R47886 Locations.R
R47888 Locations.IT1
R47924 Parallelmove.Move
R47915 Parallelmove.Moves
R47948 Coq.Lists.List.nil
R47955 Parallelmove.def
R47978 Coq.Lists.List "x :: y" list_scope
R47981 Coq.Lists.List.nil
R48009 Coq.Lists.List "x :: y" list_scope
R47915 Parallelmove.Moves
R48074 Parallelmove.Moves
R48065 Parallelmove.Moves
R48100 Coq.Lists.List.nil
R48107 Coq.Lists.List.nil
R48118 Coq.Lists.List "x :: y" list_scope
R48121 Coq.Lists.List.nil
R48128 Coq.Lists.List.nil
R48139 Coq.Lists.List "x :: y" list_scope
R48153 Coq.Lists.List "x :: y" list_scope
R48065 Parallelmove.Moves
R48221 Parallelmove.Moves
R48212 Parallelmove.Moves
R48247 Coq.Lists.List.nil
R48254 Coq.Lists.List.nil
R48264 Coq.Lists.List "x :: y" list_scope
R48267 Coq.Lists.List.nil
R48295 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48314 Coq.Lists.List "x :: y" list_scope
R48305 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48306 Parallelmove.T
R48317 Coq.Lists.List.nil
R48331 Coq.Lists.List "x :: y" list_scope
R48344 Coq.Lists.List "x :: y" list_scope
R48212 Parallelmove.Moves
R48407 Coq.Init.Logic.refl_equal
R48491 Parallelmove.State
R48522 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48523 Coq.Lists.List.nil
R48528 Coq.Lists.List.nil
R48548 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48556 Coq.Lists.List "x :: y" list_scope
R48549 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48563 Coq.Lists.List.nil
R48588 Parallelmove.diff_dec
R48616 Coq.Init.Specif.right
R48627 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48632 Coq.Lists.List.nil
R48651 Coq.Init.Specif.left
R48661 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48673 Coq.Lists.List "x :: y" list_scope
R48666 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48676 Coq.Lists.List.nil
R48702 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48713 Coq.Lists.List "x :: y" list_scope
R48706 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48739 Parallelmove.split_move
R48769 Coq.Init.Datatypes.Some
R48775 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48803 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48807 Coq.Lists.List "x ++ y" list_scope
R48821 Coq.Lists.List "x :: y" list_scope
R48814 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48832 Coq.Lists.List "x :: y" list_scope
R48825 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48853 Coq.Init.Datatypes.None
R48902 Coq.Lists.List.nil
R48909 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48913 Coq.Lists.List.nil
R48925 Coq.Lists.List "x :: y" list_scope
R48918 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48976 Parallelmove.diff_dec
R48988 Coq.Init.Datatypes.fst
R48993 Parallelmove.last
R49027 Coq.Init.Specif.right
R49060 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49064 Parallelmove.replace_last_s
R49089 Coq.Lists.List "x :: y" list_scope
R49082 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49102 Coq.Lists.List "x :: y" list_scope
R49093 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49097 Parallelmove.T
R49130 Coq.Init.Specif.left
R49140 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49154 Coq.Lists.List "x :: y" list_scope
R49147 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R48482 Parallelmove.State
R49253 Parallelmove.State
R49284 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49285 Coq.Lists.List.nil
R49290 Coq.Lists.List.nil
R49310 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49318 Coq.Lists.List "x :: y" list_scope
R49311 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49325 Coq.Lists.List.nil
R49350 Locations.eq
R49376 Coq.Init.Specif.left
R49386 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49391 Coq.Lists.List.nil
R49410 Coq.Init.Specif.right
R49421 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49433 Coq.Lists.List "x :: y" list_scope
R49426 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49436 Coq.Lists.List.nil
R49462 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49473 Coq.Lists.List "x :: y" list_scope
R49466 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49499 Parallelmove.split_move
R49529 Coq.Init.Datatypes.Some
R49535 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49563 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49567 Coq.Lists.List "x ++ y" list_scope
R49581 Coq.Lists.List "x :: y" list_scope
R49574 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49592 Coq.Lists.List "x :: y" list_scope
R49585 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49613 Coq.Init.Datatypes.None
R49662 Coq.Lists.List.nil
R49669 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49673 Coq.Lists.List.nil
R49685 Coq.Lists.List "x :: y" list_scope
R49678 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49736 Locations.eq
R49746 Coq.Init.Datatypes.fst
R49751 Parallelmove.last
R49785 Coq.Init.Specif.left
R49817 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49821 Parallelmove.replace_last_s
R49846 Coq.Lists.List "x :: y" list_scope
R49839 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49859 Coq.Lists.List "x :: y" list_scope
R49850 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49854 Parallelmove.T
R49887 Coq.Init.Specif.right
R49898 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49912 Coq.Lists.List "x :: y" list_scope
R49905 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R49244 Parallelmove.State
R50037 Coq.Init.Logic "x = y" type_scope
R50032 Coq.Lists.List "x :: y" list_scope
R50062 Coq.Lists.List "x ++ y" list_scope
R50039 Parallelmove.head_but_last
R50056 Coq.Lists.List "x :: y" list_scope
R50080 Coq.Lists.List "x :: y" list_scope
R50066 Parallelmove.last
R50074 Coq.Lists.List "x :: y" list_scope
R50083 Coq.Lists.List.nil
R50021 Parallelmove.Move
R50009 Parallelmove.Moves
R50296 Parallelmove.noRead
R50273 Coq.Init.Logic "x = y" type_scope
R50258 Parallelmove.split_move
R50275 Coq.Init.Datatypes.Some
R50280 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R50221 Parallelmove.noOverlap
R50234 Coq.Lists.List "x ++ y" list_scope
R50245 Coq.Lists.List "x :: y" list_scope
R50238 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R50248 Coq.Lists.List.nil
R50214 Parallelmove.Reg
R50214 Parallelmove.Reg
R50214 Parallelmove.Reg
R50198 Parallelmove.Moves
R50198 Parallelmove.Moves
R50198 Parallelmove.Moves
R50411 Locations.eq
R50411 Locations.eq
R50473 Parallelmove.split_move
R50473 Parallelmove.split_move
R50567 Parallelmove.noOverlap
R50592 Coq.Lists.List "x ++ y" list_scope
R50588 Coq.Lists.List "x :: y" list_scope
R50579 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R50605 Coq.Lists.List "x :: y" list_scope
R50598 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R50608 Coq.Lists.List.nil
R50567 Parallelmove.noOverlap
R50592 Coq.Lists.List "x ++ y" list_scope
R50588 Coq.Lists.List "x :: y" list_scope
R50579 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R50605 Coq.Lists.List "x :: y" list_scope
R50598 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R50608 Coq.Lists.List.nil
R50634 Parallelmove.noOverlap
R50652 Coq.Lists.List "x :: y" list_scope
R50645 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R50665 Coq.Lists.List "x :: y" list_scope
R50656 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R50634 Parallelmove.noOverlap
R50652 Coq.Lists.List "x :: y" list_scope
R50645 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R50665 Coq.Lists.List "x :: y" list_scope
R50656 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R50680 Parallelmove.noOverlap_Front0
R50680 Parallelmove.noOverlap_Front0
R50924 Coq.Init.Logic "x = y" type_scope
R50924 Coq.Init.Logic "x = y" type_scope
R50942 Locations.diff_sym
R50942 Locations.diff_sym
R51022 Parallelmove.noOverlap_pop
R51036 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51022 Parallelmove.noOverlap_pop
R51036 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51221 Coq.Init.Logic "x = y" type_scope
R51226 Coq.Lists.List "x ++ y" list_scope
R51237 Coq.Lists.List "x :: y" list_scope
R51230 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51196 Coq.Init.Logic "x = y" type_scope
R51181 Parallelmove.split_move
R51198 Coq.Init.Datatypes.Some
R51203 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51144 Parallelmove.noOverlap
R51157 Coq.Lists.List "x ++ y" list_scope
R51168 Coq.Lists.List "x :: y" list_scope
R51161 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51171 Coq.Lists.List.nil
R51137 Parallelmove.Reg
R51137 Parallelmove.Reg
R51137 Parallelmove.Reg
R51121 Parallelmove.Moves
R51121 Parallelmove.Moves
R51121 Parallelmove.Moves
R51355 Parallelmove.diff_dec
R51355 Parallelmove.diff_dec
R51385 Locations.eq
R51385 Locations.eq
R51414 Locations.diff
R51414 Locations.diff
R51453 Locations.same_not_diff
R51453 Locations.same_not_diff
R51480 Parallelmove.split_move
R51480 Parallelmove.split_move
R51568 Parallelmove.app_cons
R51568 Parallelmove.app_cons
R51637 Parallelmove.noOverlap_pop
R51651 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51637 Parallelmove.noOverlap_pop
R51651 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51674 Locations.eq
R51674 Locations.eq
R51742 Parallelmove.noOverlap_aux
R51760 Parallelmove.getdst
R51775 Coq.Lists.List "x :: y" list_scope
R51768 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51778 Coq.Lists.List.nil
R51742 Parallelmove.noOverlap_aux
R51760 Parallelmove.getdst
R51775 Coq.Lists.List "x :: y" list_scope
R51768 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51778 Coq.Lists.List.nil
R51841 Coq.Init.Logic "x = y" type_scope
R51841 Coq.Init.Logic "x = y" type_scope
R51862 Locations.diff
R51890 Locations.diff_sym
R51862 Locations.diff
R51890 Locations.diff_sym
R51935 Parallelmove.app_cons
R51935 Parallelmove.app_cons
R51960 Parallelmove.noOverlap
R51973 Coq.Lists.List "x ++ y" list_scope
R51986 Coq.Lists.List "x :: y" list_scope
R51977 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51997 Coq.Lists.List "x :: y" list_scope
R51990 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52000 Coq.Lists.List.nil
R52022 Parallelmove.noOverlap_insert
R51960 Parallelmove.noOverlap
R51973 Coq.Lists.List "x ++ y" list_scope
R51986 Coq.Lists.List "x :: y" list_scope
R51977 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R51997 Coq.Lists.List "x :: y" list_scope
R51990 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52000 Coq.Lists.List.nil
R52022 Parallelmove.noOverlap_insert
R52022 Parallelmove.noOverlap_insert
R52062 Parallelmove.noOverlap
R52082 Coq.Lists.List "x :: y" list_scope
R52073 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52093 Coq.Lists.List "x :: y" list_scope
R52086 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52096 Coq.Lists.List.nil
R52062 Parallelmove.noOverlap
R52082 Coq.Lists.List "x :: y" list_scope
R52073 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52093 Coq.Lists.List "x :: y" list_scope
R52086 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52096 Coq.Lists.List.nil
R52111 Parallelmove.noOverlap_right
R52111 Parallelmove.noOverlap_right
R52261 Coq.Init.Logic "x = y" type_scope
R52261 Coq.Init.Logic "x = y" type_scope
R52412 Coq.Init.Logic "x = y" type_scope
R52388 Parallelmove.replace_last_s
R52406 Coq.Lists.List "x :: y" list_scope
R52416 Coq.Lists.List "x :: y" list_scope
R52419 Parallelmove.replace_last_s
R52377 Coq.Init.Logic "x <> y" type_scope
R52380 Coq.Lists.List.nil
R52366 Parallelmove.Moves
R52355 Parallelmove.Move
R52613 Coq.Init.Logic "x = y" type_scope
R52575 Parallelmove.replace_last_s
R52593 Coq.Lists.List "x ++ y" list_scope
R52604 Coq.Lists.List "x :: y" list_scope
R52597 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52607 Coq.Lists.List.nil
R52617 Coq.Lists.List "x ++ y" list_scope
R52630 Coq.Lists.List "x :: y" list_scope
R52621 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52622 Parallelmove.T
R52633 Coq.Lists.List.nil
R52567 Parallelmove.Reg
R52567 Parallelmove.Reg
R52553 Parallelmove.Moves
R52713 Coq.Lists.List.app_comm_cons
R52713 Coq.Lists.List.app_comm_cons
R52713 Coq.Lists.List.app_comm_cons
R52713 Coq.Lists.List.app_comm_cons
R52737 Parallelmove.cons_replace
R52737 Parallelmove.cons_replace
R52788 Coq.Lists.List.app_eq_nil
R52809 Coq.Lists.List "x :: y" list_scope
R52802 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52812 Coq.Lists.List.nil
R52788 Coq.Lists.List.app_eq_nil
R52809 Coq.Lists.List "x :: y" list_scope
R52802 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R52812 Coq.Lists.List.nil
R52925 Coq.Init.Logic "x = y" type_scope
R52902 Parallelmove.last
R52910 Coq.Lists.List "x ++ y" list_scope
R52916 Coq.Lists.List "x :: y" list_scope
R52919 Coq.Lists.List.nil
R52894 Parallelmove.Move
R52882 Parallelmove.Moves
R52983 Coq.Lists.List "x ++ y" list_scope
R52989 Coq.Lists.List "x :: y" list_scope
R52992 Coq.Lists.List.nil
R52983 Coq.Lists.List "x ++ y" list_scope
R52989 Coq.Lists.List "x :: y" list_scope
R52992 Coq.Lists.List.nil
R53012 Coq.Lists.List.app_eq_nil
R53028 Coq.Lists.List "x :: y" list_scope
R53031 Coq.Lists.List.nil
R53012 Coq.Lists.List.app_eq_nil
R53028 Coq.Lists.List "x :: y" list_scope
R53031 Coq.Lists.List.nil
R53191 Coq.Init.Logic "x = y" type_scope
R53169 Parallelmove.last
R53178 Coq.Lists.List "x :: y" list_scope
R53184 Coq.Lists.List "x :: y" list_scope
R53193 Parallelmove.last
R53201 Coq.Lists.List "x :: y" list_scope
R53161 Parallelmove.Move
R53161 Parallelmove.Move
R53146 Parallelmove.Moves
R53380 Coq.Init.Logic "x = y" type_scope
R53332 Parallelmove.stepf
R53338 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53349 Coq.Lists.List "x :: y" list_scope
R53342 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53355 Coq.Lists.List "x ++ y" list_scope
R53367 Coq.Lists.List "x :: y" list_scope
R53359 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53370 Coq.Lists.List.nil
R53384 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53390 Coq.Lists.List "x ++ y" list_scope
R53404 Coq.Lists.List "x :: y" list_scope
R53394 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53395 Parallelmove.T
R53407 Coq.Lists.List.nil
R53420 Coq.Lists.List "x :: y" list_scope
R53413 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53433 Coq.Lists.List "x :: y" list_scope
R53424 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53428 Parallelmove.T
R53320 Coq.Init.Logic "x = y" type_scope
R53305 Parallelmove.split_move
R53322 Coq.Init.Datatypes.None
R53298 Parallelmove.Reg
R53298 Parallelmove.Reg
R53298 Parallelmove.Reg
R53281 Parallelmove.Moves
R53281 Parallelmove.Moves
R53281 Parallelmove.Moves
R53484 Coq.Lists.List "x ++ y" list_scope
R53496 Coq.Lists.List "x :: y" list_scope
R53488 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53499 Coq.Lists.List.nil
R53484 Coq.Lists.List "x ++ y" list_scope
R53496 Coq.Lists.List "x :: y" list_scope
R53488 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53499 Coq.Lists.List.nil
R53563 Parallelmove.last_app
R53588 Parallelmove.last_replace
R53563 Parallelmove.last_app
R53588 Parallelmove.last_replace
R53608 Locations.eq
R53608 Locations.eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R53836 Coq.Init.Logic "x = y" type_scope
R53788 Parallelmove.stepf
R53794 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53805 Coq.Lists.List "x :: y" list_scope
R53798 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53811 Coq.Lists.List "x ++ y" list_scope
R53823 Coq.Lists.List "x :: y" list_scope
R53815 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53826 Coq.Lists.List.nil
R53840 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53846 Coq.Lists.List "x ++ y" list_scope
R53858 Coq.Lists.List "x :: y" list_scope
R53850 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53861 Coq.Lists.List.nil
R53874 Coq.Lists.List "x :: y" list_scope
R53867 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53778 Coq.Init.Logic "x <> y" type_scope
R53765 Coq.Init.Logic "x = y" type_scope
R53750 Parallelmove.split_move
R53767 Coq.Init.Datatypes.None
R53743 Parallelmove.Reg
R53743 Parallelmove.Reg
R53743 Parallelmove.Reg
R53743 Parallelmove.Reg
R53724 Parallelmove.Moves
R53724 Parallelmove.Moves
R53724 Parallelmove.Moves
R53924 Coq.Lists.List "x ++ y" list_scope
R53936 Coq.Lists.List "x :: y" list_scope
R53928 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53939 Coq.Lists.List.nil
R53924 Coq.Lists.List "x ++ y" list_scope
R53936 Coq.Lists.List "x :: y" list_scope
R53928 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53939 Coq.Lists.List.nil
R54003 Parallelmove.last_app
R54003 Parallelmove.last_app
R54026 Locations.eq
R54026 Locations.eq
R54056 Coq.Init.Logic "x = y" type_scope
R54056 Coq.Init.Logic "x = y" type_scope
R54190 Parallelmove.noOverlap
R54204 Coq.Lists.List "x ++ y" list_scope
R54210 Coq.Lists.List "x :: y" list_scope
R54213 Coq.Lists.List.nil
R54158 Parallelmove.noOverlap
R54172 Coq.Lists.List "x ++ y" list_scope
R54178 Coq.Lists.List "x :: y" list_scope
R54302 Coq.Init.Logic "x = y" type_scope
R54282 Coq.Lists.List "x ++ y" list_scope
R54288 Coq.Lists.List "x :: y" list_scope
R54294 Coq.Lists.List "x :: y" list_scope
R54321 Coq.Lists.List "x ++ y" list_scope
R54308 Coq.Lists.List "x ++ y" list_scope
R54314 Coq.Lists.List "x :: y" list_scope
R54317 Coq.Lists.List.nil
R54329 Coq.Lists.List "x :: y" list_scope
R54356 Coq.Lists.List.app_ass
R54302 Coq.Init.Logic "x = y" type_scope
R54282 Coq.Lists.List "x ++ y" list_scope
R54288 Coq.Lists.List "x :: y" list_scope
R54294 Coq.Lists.List "x :: y" list_scope
R54321 Coq.Lists.List "x ++ y" list_scope
R54308 Coq.Lists.List "x ++ y" list_scope
R54314 Coq.Lists.List "x :: y" list_scope
R54317 Coq.Lists.List.nil
R54329 Coq.Lists.List "x :: y" list_scope
R54356 Coq.Lists.List.app_ass
R54419 Coq.Init.Logic "x = y" type_scope
R54406 Coq.Lists.List "x ++ y" list_scope
R54412 Coq.Lists.List "x :: y" list_scope
R54438 Coq.Lists.List "x ++ y" list_scope
R54425 Coq.Lists.List "x ++ y" list_scope
R54431 Coq.Lists.List "x :: y" list_scope
R54434 Coq.Lists.List.nil
R54466 Coq.Lists.List.app_ass
R54419 Coq.Init.Logic "x = y" type_scope
R54406 Coq.Lists.List "x ++ y" list_scope
R54412 Coq.Lists.List "x :: y" list_scope
R54438 Coq.Lists.List "x ++ y" list_scope
R54425 Coq.Lists.List "x ++ y" list_scope
R54431 Coq.Lists.List "x :: y" list_scope
R54434 Coq.Lists.List.nil
R54466 Coq.Lists.List.app_ass
R54517 Parallelmove.noOverlap_Pop
R54517 Parallelmove.noOverlap_Pop
R54665 Parallelmove.noRead
R54628 Parallelmove.noOverlap
R54641 Coq.Lists.List "x ++ y" list_scope
R54652 Coq.Lists.List "x :: y" list_scope
R54645 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R54655 Coq.Lists.List.nil
R54618 Coq.Init.Logic "x = y" type_scope
R54603 Parallelmove.split_move
R54620 Coq.Init.Datatypes.None
R54596 Parallelmove.Reg
R54596 Parallelmove.Reg
R54582 Parallelmove.Moves
R54751 Locations.eq
R54751 Locations.eq
R54809 Parallelmove.split_move
R54809 Parallelmove.split_move
R54902 Parallelmove.noOverlap
R54927 Coq.Lists.List "x ++ y" list_scope
R54923 Coq.Lists.List "x :: y" list_scope
R54914 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R54940 Coq.Lists.List "x :: y" list_scope
R54933 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R54943 Coq.Lists.List.nil
R54902 Parallelmove.noOverlap
R54927 Coq.Lists.List "x ++ y" list_scope
R54923 Coq.Lists.List "x :: y" list_scope
R54914 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R54940 Coq.Lists.List "x :: y" list_scope
R54933 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R54943 Coq.Lists.List.nil
R54968 Parallelmove.noOverlap
R54986 Coq.Lists.List "x :: y" list_scope
R54979 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R54999 Coq.Lists.List "x :: y" list_scope
R54990 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R54968 Parallelmove.noOverlap
R54986 Coq.Lists.List "x :: y" list_scope
R54979 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R54999 Coq.Lists.List "x :: y" list_scope
R54990 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55014 Parallelmove.noOverlap_Front0
R55014 Parallelmove.noOverlap_Front0
R55046 Parallelmove.noOverlap
R55066 Coq.Lists.List "x :: y" list_scope
R55057 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55077 Coq.Lists.List "x :: y" list_scope
R55070 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55046 Parallelmove.noOverlap
R55066 Coq.Lists.List "x :: y" list_scope
R55057 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55077 Coq.Lists.List "x :: y" list_scope
R55070 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55092 Parallelmove.noOverlap_swap
R55092 Parallelmove.noOverlap_swap
R55369 Coq.Init.Logic "x = y" type_scope
R55369 Coq.Init.Logic "x = y" type_scope
R55387 Locations.diff_sym
R55387 Locations.diff_sym
R55471 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55452 Parallelmove.noOverlap_pop
R55471 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55452 Parallelmove.noOverlap_pop
R55601 Coq.Init.Logic "A \/ B" type_scope
R55597 Coq.Init.Logic "x = y" type_scope
R55604 Locations.diff
R55535 Parallelmove.noOverlap
R55549 Coq.Lists.List "x ++ y" list_scope
R55560 Coq.Lists.List "x :: y" list_scope
R55553 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55567 Coq.Lists.List "x ++ y" list_scope
R55579 Coq.Lists.List "x :: y" list_scope
R55571 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55582 Coq.Lists.List.nil
R55641 Parallelmove.noOverlap
R55659 Coq.Lists.List "x :: y" list_scope
R55652 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55666 Coq.Lists.List "x ++ y" list_scope
R55678 Coq.Lists.List "x :: y" list_scope
R55670 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55681 Coq.Lists.List.nil
R55641 Parallelmove.noOverlap
R55659 Coq.Lists.List "x :: y" list_scope
R55652 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55666 Coq.Lists.List "x ++ y" list_scope
R55678 Coq.Lists.List "x :: y" list_scope
R55670 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55681 Coq.Lists.List.nil
R55703 Parallelmove.noOverlap_right
R55703 Parallelmove.noOverlap_right
R55738 Parallelmove.noOverlap
R55772 Coq.Lists.List "x ++ y" list_scope
R55753 Coq.Lists.List "x ++ y" list_scope
R55765 Coq.Lists.List "x :: y" list_scope
R55757 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55768 Coq.Lists.List.nil
R55785 Coq.Lists.List "x :: y" list_scope
R55778 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55788 Coq.Lists.List.nil
R55738 Parallelmove.noOverlap
R55772 Coq.Lists.List "x ++ y" list_scope
R55753 Coq.Lists.List "x ++ y" list_scope
R55765 Coq.Lists.List "x :: y" list_scope
R55757 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55768 Coq.Lists.List.nil
R55785 Coq.Lists.List "x :: y" list_scope
R55778 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55788 Coq.Lists.List.nil
R55809 Parallelmove.noOverlap_movBack0
R55832 Coq.Lists.List "x ++ y" list_scope
R55844 Coq.Lists.List "x :: y" list_scope
R55836 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55847 Coq.Lists.List.nil
R55809 Parallelmove.noOverlap_movBack0
R55832 Coq.Lists.List "x ++ y" list_scope
R55844 Coq.Lists.List "x :: y" list_scope
R55836 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55847 Coq.Lists.List.nil
R55914 Coq.Init.Logic "x = y" type_scope
R55893 Coq.Lists.List "x ++ y" list_scope
R55874 Coq.Lists.List "x ++ y" list_scope
R55886 Coq.Lists.List "x :: y" list_scope
R55878 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55889 Coq.Lists.List.nil
R55906 Coq.Lists.List "x :: y" list_scope
R55899 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55909 Coq.Lists.List.nil
R55921 Coq.Lists.List "x ++ y" list_scope
R55940 Coq.Lists.List "x ++ y" list_scope
R55934 Coq.Lists.List "x :: y" list_scope
R55926 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55937 Coq.Lists.List.nil
R55953 Coq.Lists.List "x :: y" list_scope
R55946 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55956 Coq.Lists.List.nil
R55914 Coq.Init.Logic "x = y" type_scope
R55893 Coq.Lists.List "x ++ y" list_scope
R55874 Coq.Lists.List "x ++ y" list_scope
R55886 Coq.Lists.List "x :: y" list_scope
R55878 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55889 Coq.Lists.List.nil
R55906 Coq.Lists.List "x :: y" list_scope
R55899 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55909 Coq.Lists.List.nil
R55921 Coq.Lists.List "x ++ y" list_scope
R55940 Coq.Lists.List "x ++ y" list_scope
R55934 Coq.Lists.List "x :: y" list_scope
R55926 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55937 Coq.Lists.List.nil
R55953 Coq.Lists.List "x :: y" list_scope
R55946 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R55956 Coq.Lists.List.nil
R55978 Coq.Lists.List.app_ass
R55978 Coq.Lists.List.app_ass
R56035 Parallelmove.noOverlap
R56054 Coq.Lists.List "x :: y" list_scope
R56046 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R56065 Coq.Lists.List "x :: y" list_scope
R56058 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R56068 Coq.Lists.List.nil
R56035 Parallelmove.noOverlap
R56054 Coq.Lists.List "x :: y" list_scope
R56046 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R56065 Coq.Lists.List "x :: y" list_scope
R56058 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R56068 Coq.Lists.List.nil
R56089 Parallelmove.noOverlap_right
R56089 Parallelmove.noOverlap_right
R56433 Parallelmove.dstep
R56424 Coq.Init.Logic "x = y" type_scope
R56415 Parallelmove.stepf
R56368 Parallelmove.noOverlap
R56394 Coq.Lists.List "x ++ y" list_scope
R56379 Parallelmove.StateToMove
R56397 Parallelmove.StateBeing
R56345 Coq.Init.Logic "x <> y" type_scope
R56348 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R56349 Coq.Lists.List.nil
R56354 Coq.Lists.List.nil
R56332 Parallelmove.Moves
R56310 Parallelmove.State
R56310 Parallelmove.State
R56573 Locations.eq
R56573 Locations.eq
R56626 Parallelmove.dstep_nop
R56626 Parallelmove.dstep_nop
R56675 Parallelmove.dstep_start
R56675 Parallelmove.dstep_start
R56757 Parallelmove.split_move
R56757 Parallelmove.split_move
R56892 Parallelmove.unsplit_move
R56908 Coq.Lists.List "x :: y" list_scope
R56892 Parallelmove.unsplit_move
R56908 Coq.Lists.List "x :: y" list_scope
R56958 Parallelmove.dstep_push
R56958 Parallelmove.dstep_push
R57041 Parallelmove.splitSome
R57060 Coq.Lists.List "x :: y" list_scope
R57052 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R57041 Parallelmove.splitSome
R57060 Coq.Lists.List "x :: y" list_scope
R57052 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R57093 Parallelmove.noOverlap_head
R57093 Parallelmove.noOverlap_head
R57171 Parallelmove.noOverlap_head
R57171 Parallelmove.noOverlap_head
R57283 Parallelmove.dstep_last
R57283 Parallelmove.dstep_last
R57283 Parallelmove.dstep_last
R57378 Parallelmove.splitNone
R57378 Parallelmove.splitNone
R57483 Parallelmove.rebuild_l
R57483 Parallelmove.rebuild_l
R57522 Parallelmove.last
R57530 Coq.Lists.List "x :: y" list_scope
R57522 Parallelmove.last
R57530 Coq.Lists.List "x :: y" list_scope
R57544 Locations.eq
R57544 Locations.eq
R57589 Parallelmove.head_but_last
R57606 Coq.Lists.List "x :: y" list_scope
R57704 Locations.eq
R57589 Parallelmove.head_but_last
R57606 Coq.Lists.List "x :: y" list_scope
R57704 Locations.eq
R57704 Locations.eq
R57764 Parallelmove.dstep_pop_loop
R57783 Coq.Lists.List.nil
R57779 Coq.Lists.List.nil
R57764 Parallelmove.dstep_pop_loop
R57783 Coq.Lists.List.nil
R57779 Coq.Lists.List.nil
R57835 Parallelmove.dstep_pop_loop
R57866 Coq.Lists.List.nil
R57860 Coq.Lists.List "x :: y" list_scope
R57851 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R57888 Coq.Lists.List.app
R57931 Parallelmove.splitNone
R57835 Parallelmove.dstep_pop_loop
R57866 Coq.Lists.List.nil
R57860 Coq.Lists.List "x :: y" list_scope
R57851 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R57888 Coq.Lists.List.app
R57931 Parallelmove.splitNone
R58017 Coq.Lists.List "x ++ y" list_scope
R57994 Parallelmove.head_but_last
R58011 Coq.Lists.List "x :: y" list_scope
R58029 Coq.Lists.List "x :: y" list_scope
R58021 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R58032 Coq.Lists.List.nil
R57973 Parallelmove.noOverlap_head
R58017 Coq.Lists.List "x ++ y" list_scope
R57994 Parallelmove.head_but_last
R58011 Coq.Lists.List "x :: y" list_scope
R58029 Coq.Lists.List "x :: y" list_scope
R58021 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R58032 Coq.Lists.List.nil
R57973 Parallelmove.noOverlap_head
R58053 Parallelmove.stepf_popLoop
R58053 Parallelmove.stepf_popLoop
R58086 Parallelmove.dstep_pop_loop
R58107 Coq.Lists.List "x :: y" list_scope
R58161 Parallelmove.splitNone
R58086 Parallelmove.dstep_pop_loop
R58107 Coq.Lists.List "x :: y" list_scope
R58161 Parallelmove.splitNone
R58247 Coq.Lists.List "x ++ y" list_scope
R58224 Parallelmove.head_but_last
R58241 Coq.Lists.List "x :: y" list_scope
R58259 Coq.Lists.List "x :: y" list_scope
R58251 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R58262 Coq.Lists.List.nil
R58203 Parallelmove.noOverlap_head
R58247 Coq.Lists.List "x ++ y" list_scope
R58224 Parallelmove.head_but_last
R58241 Coq.Lists.List "x :: y" list_scope
R58259 Coq.Lists.List "x :: y" list_scope
R58251 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R58262 Coq.Lists.List.nil
R58203 Parallelmove.noOverlap_head
R58290 Locations.diff
R58290 Locations.diff
R58319 Coq.Init.Logic "A \/ B" type_scope
R58315 Coq.Init.Logic "x = y" type_scope
R58322 Locations.diff
R58319 Coq.Init.Logic "A \/ B" type_scope
R58315 Coq.Init.Logic "x = y" type_scope
R58322 Locations.diff
R58344 Parallelmove.noO_diff
R58356 Parallelmove.head_but_last
R58373 Coq.Lists.List "x :: y" list_scope
R58344 Parallelmove.noO_diff
R58356 Parallelmove.head_but_last
R58373 Coq.Lists.List "x :: y" list_scope
R58428 Coq.Init.Logic "x = y" type_scope
R58428 Coq.Init.Logic "x = y" type_scope
R58467 Parallelmove.stepf_pop
R58467 Parallelmove.stepf_pop
R58496 Parallelmove.dstep_pop
R58509 Parallelmove.head_but_last
R58526 Coq.Lists.List "x :: y" list_scope
R58496 Parallelmove.dstep_pop
R58509 Parallelmove.head_but_last
R58526 Coq.Lists.List "x :: y" list_scope
R58578 Parallelmove.splitNone
R58578 Parallelmove.splitNone
R58664 Coq.Lists.List "x ++ y" list_scope
R58641 Parallelmove.head_but_last
R58658 Coq.Lists.List "x :: y" list_scope
R58676 Coq.Lists.List "x :: y" list_scope
R58668 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R58679 Coq.Lists.List.nil
R58620 Parallelmove.noOverlap_head
R58664 Coq.Lists.List "x ++ y" list_scope
R58641 Parallelmove.head_but_last
R58658 Coq.Lists.List "x :: y" list_scope
R58676 Coq.Lists.List "x :: y" list_scope
R58668 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R58679 Coq.Lists.List.nil
R58620 Parallelmove.noOverlap_head
R58833 Parallelmove.dstep
R58843 Parallelmove.stepf
R58785 Parallelmove.noOverlap
R58811 Coq.Lists.List "x ++ y" list_scope
R58796 Parallelmove.StateToMove
R58814 Parallelmove.StateBeing
R58762 Coq.Init.Logic "x <> y" type_scope
R58765 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R58766 Coq.Lists.List.nil
R58771 Coq.Lists.List.nil
R58749 Parallelmove.Moves
R58727 Parallelmove.State
R58884 Parallelmove.f2ind
R58884 Parallelmove.f2ind
R58989 Coq.Init.Logic "x = y" type_scope
R58964 Coq.Lists.List.length
R58975 Coq.Lists.List "x ++ y" list_scope
R58981 Coq.Lists.List "x :: y" list_scope
R59010 Coq.Init.Peano "x + y" nat_scope
R58992 Coq.Lists.List.length
R59003 Coq.Lists.List "x ++ y" list_scope
R58955 Parallelmove.Move
R58943 Parallelmove.Moves
R58943 Parallelmove.Moves
R59138 Coq.Init.Datatypes.nat
R59201 Coq.Init.Peano "x + y" nat_scope
R59190 Coq.Init.Peano "x * y" nat_scope
R59192 Coq.Lists.List.length
R59203 Coq.Lists.List.length
R59129 Parallelmove.State
R59349 Coq.Init.Peano "x < y" nat_scope
R59337 Coq.Init.Peano "x + y" nat_scope
R59325 Coq.Init.Peano "x * y" nat_scope
R59327 Coq.Lists.List.length
R59339 Coq.Lists.List.length
R59365 Coq.Init.Peano "x + y" nat_scope
R59353 Coq.Init.Peano "x * y" nat_scope
R59355 Coq.Lists.List.length
R59367 Coq.Lists.List.length
R59285 Parallelmove.dstep
R59304 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R59291 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R59276 Parallelmove.Moves
R59276 Parallelmove.Moves
R59260 Parallelmove.Moves
R59260 Parallelmove.Moves
R59260 Parallelmove.Moves
R59260 Parallelmove.Moves
R59459 Parallelmove.appcons_length
R59459 Parallelmove.appcons_length
R59520 Coq.Init.Logic "x = y" type_scope
R59487 Coq.Lists.List.length
R59497 Coq.Lists.List "x ++ y" list_scope
R59511 Coq.Lists.List "x :: y" list_scope
R59501 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R59502 Parallelmove.T
R59514 Coq.Lists.List.nil
R59522 Coq.Lists.List.length
R59532 Coq.Lists.List "x ++ y" list_scope
R59544 Coq.Lists.List "x :: y" list_scope
R59536 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R59547 Coq.Lists.List.nil
R59520 Coq.Init.Logic "x = y" type_scope
R59487 Coq.Lists.List.length
R59497 Coq.Lists.List "x ++ y" list_scope
R59511 Coq.Lists.List "x :: y" list_scope
R59501 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R59502 Parallelmove.T
R59514 Coq.Lists.List.nil
R59522 Coq.Lists.List.length
R59532 Coq.Lists.List "x ++ y" list_scope
R59544 Coq.Lists.List "x :: y" list_scope
R59536 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R59547 Coq.Lists.List.nil
R59611 Parallelmove.appcons_length
R59611 Parallelmove.appcons_length
R59611 Parallelmove.appcons_length
R59611 Parallelmove.appcons_length
R59709 Coq.Init.Peano "x < y" nat_scope
R59699 Parallelmove.mesure
R59711 Parallelmove.mesure
R59682 Parallelmove.dstep
R59674 Parallelmove.State
R59674 Parallelmove.State
R59821 Parallelmove.step_dec0
R59821 Parallelmove.step_dec0
R60039 Coq.Init.Peano "x < y" nat_scope
R60029 Parallelmove.mesure
R60041 Parallelmove.mesure
R59954 Coq.Init.Logic "A /\ B" type_scope
R59937 Coq.Init.Logic "x <> y" type_scope
R59940 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R59941 Coq.Lists.List.nil
R59946 Coq.Lists.List.nil
R59924 Parallelmove.Moves
R59975 Coq.Init.Logic "A /\ B" type_scope
R59964 Coq.Init.Logic "x = y" type_scope
R59966 Parallelmove.stepf
R59978 Parallelmove.noOverlap
R60004 Coq.Lists.List "x ++ y" list_scope
R59989 Parallelmove.StateToMove
R60007 Parallelmove.StateBeing
R59902 Parallelmove.State
R59902 Parallelmove.State
R60097 Parallelmove.step_dec
R60097 Parallelmove.step_dec
R60113 Parallelmove.f2ind
R60113 Parallelmove.f2ind
R60322 Coq.Arith.Wf_nat.ltof
R60329 Parallelmove.mesure
R60218 Coq.Init.Logic "A /\ B" type_scope
R60207 Coq.Init.Logic "x = y" type_scope
R60209 Parallelmove.stepf
R60266 Coq.Init.Logic "A /\ B" type_scope
R60249 Coq.Init.Logic "x <> y" type_scope
R60252 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R60253 Coq.Lists.List.nil
R60258 Coq.Lists.List.nil
R60236 Parallelmove.Moves
R60273 Parallelmove.noOverlap
R60299 Coq.Lists.List "x ++ y" list_scope
R60284 Parallelmove.StateToMove
R60302 Parallelmove.StateBeing
R60195 Parallelmove.State
R60195 Parallelmove.State
R60396 Parallelmove.step_dec
R60396 Parallelmove.step_dec
R60412 Parallelmove.f2ind
R60412 Parallelmove.f2ind
R60532 Coq.Init.Logic "x = y" type_scope
R60500 Parallelmove.replace_last_s
R60518 Coq.Lists.List "x :: y" list_scope
R60525 Coq.Lists.List "x :: y" list_scope
R60536 Coq.Lists.List "x :: y" list_scope
R60539 Parallelmove.replace_last_s
R60558 Coq.Lists.List "x :: y" list_scope
R60710 Coq.Init.Logic "x = y" type_scope
R60684 Coq.Lists.List.length
R60692 Parallelmove.replace_last_s
R60712 Coq.Lists.List.length
R60874 Coq.Init.Logic "x = y" type_scope
R60856 Coq.Lists.List.length
R60867 Coq.Lists.List "x ++ y" list_scope
R60886 Coq.Init.Peano "x + y" nat_scope
R60876 Coq.Lists.List.length
R60888 Coq.Lists.List.length
R60844 Coq.Lists.List.list
R60844 Coq.Lists.List.list
R61088 Coq.Init.Logic "x = y" type_scope
R61079 Coq.Lists.List.length
R61112 Coq.Init.Peano "x + y" nat_scope
R61101 Coq.Init.Peano "x + y" nat_scope
R61091 Coq.Lists.List.length
R61103 Coq.Lists.List.length
R61054 Coq.Init.Logic "x = y" type_scope
R61039 Parallelmove.split_move
R61056 Coq.Init.Datatypes.Some
R61061 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R61032 Parallelmove.Reg
R61032 Parallelmove.Reg
R61018 Parallelmove.Moves
R61018 Parallelmove.Moves
R61018 Parallelmove.Moves
R61219 Locations.eq
R61219 Locations.eq
R61284 Parallelmove.split_move
R61284 Parallelmove.split_move
R61581 Coq.Init.Peano "x < y" nat_scope
R61563 Parallelmove.mesure
R61571 Parallelmove.stepf
R61583 Parallelmove.mesure
R61538 Coq.Init.Logic "x <> y" type_scope
R61541 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R61542 Coq.Lists.List.nil
R61547 Coq.Lists.List.nil
R61525 Parallelmove.Moves
R61503 Parallelmove.State
R61785 Locations.eq
R61796 Coq.Init.Datatypes.fst
R61801 Parallelmove.last
R61809 Coq.Lists.List "x :: y" list_scope
R61785 Locations.eq
R61796 Coq.Init.Datatypes.fst
R61801 Parallelmove.last
R61809 Coq.Lists.List "x :: y" list_scope
R61836 Parallelmove.length_replace
R61836 Parallelmove.length_replace
R61942 Locations.eq
R61942 Locations.eq
R62003 Locations.eq
R62003 Locations.eq
R62047 Parallelmove.split_move
R62047 Parallelmove.split_move
R62114 Parallelmove.split_length
R62114 Parallelmove.split_length
R62157 Parallelmove.length_app
R62157 Parallelmove.length_app
R62215 Locations.eq
R62226 Coq.Init.Datatypes.fst
R62231 Parallelmove.last
R62239 Coq.Lists.List "x :: y" list_scope
R62215 Locations.eq
R62226 Coq.Init.Datatypes.fst
R62231 Parallelmove.last
R62239 Coq.Lists.List "x :: y" list_scope
R62266 Parallelmove.length_replace
R62266 Parallelmove.length_replace
R62428 Coq.Arith.Wf_nat.ltof
R62435 Parallelmove.mesure
R62413 Coq.Init.Logic "x = y" type_scope
R62415 Parallelmove.stepf
R62387 Coq.Init.Logic "x <> y" type_scope
R62390 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R62391 Coq.Lists.List.nil
R62396 Coq.Lists.List.nil
R62374 Parallelmove.Moves
R62352 Parallelmove.State
R62352 Parallelmove.State
R62506 Parallelmove.stepf_dec0'
R62506 Parallelmove.stepf_dec0'
R62624 Coq.Init.Logic "x <> y" type_scope
R62606 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R62609 Coq.Lists.List "x :: y" list_scope
R62627 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R62628 Coq.Lists.List.nil
R62633 Coq.Lists.List.nil
R62591 Coq.Lists.List.list
R62596 Parallelmove.Move
R62591 Coq.Lists.List.list
R62596 Parallelmove.Move
R62591 Coq.Lists.List.list
R62596 Parallelmove.Move
R62591 Coq.Lists.List.list
R62596 Parallelmove.Move
R62570 Parallelmove.Move
R62760 Coq.Init.Logic "x <> y" type_scope
R62742 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R62749 Coq.Lists.List "x :: y" list_scope
R62763 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R62764 Coq.Lists.List.nil
R62769 Coq.Lists.List.nil
R62727 Coq.Lists.List.list
R62732 Parallelmove.Move
R62727 Coq.Lists.List.list
R62732 Parallelmove.Move
R62727 Coq.Lists.List.list
R62732 Parallelmove.Move
R62727 Coq.Lists.List.list
R62732 Parallelmove.Move
R62706 Parallelmove.Move
R62827 Parallelmove.disc1
R62833 Parallelmove.disc2
R62890 Parallelmove.sameExec
R62881 Parallelmove.State
R63048 Coq.Init.Specif "{ A } + { B }" type_scope
R63051 Coq.Init.Logic "'exists' x : t , p" type_scope
R63076 Coq.Init.Logic "x = y" type_scope
R63078 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R63079 Coq.Lists.List.nil
R63084 Coq.Lists.List.nil
R63062 Coq.Lists.List.list
R63067 Parallelmove.Move
R63117 Coq.Init.Logic "x <> y" type_scope
R63120 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R63121 Coq.Lists.List.nil
R63126 Coq.Lists.List.nil
R63038 Parallelmove.State
R63275 Coq.Init.Wf.Fix
R63428 Parallelmove.base_case_Pmov_dec
R63465 Coq.Init.Specif.left
R63489 Coq.Init.Specif.right
R63517 Parallelmove.stepf_dec0'
R63506 Parallelmove.stepf
R63404 Parallelmove.State
R63381 Coq.Arith.Wf_nat.ltof
R63388 Parallelmove.mesure
R63344 Parallelmove.State
R63322 Parallelmove.State
R63284 Coq.Arith.Wf_nat.well_founded_ltof
R63304 Parallelmove.mesure
R63586 Coq.Init.Logic "x = y" type_scope
R63578 Parallelmove.Pmov
R63649 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R63650 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R63651 Coq.Lists.List.nil
R63656 Coq.Lists.List.nil
R63724 Parallelmove.Pmov
R63730 Parallelmove.stepf
R63836 Coq.Init.Wf.Fix_eq
R64020 Parallelmove.base_case_Pmov_dec
R64064 Coq.Init.Specif.left
R64095 Coq.Init.Specif.right
R64123 Parallelmove.stepf_dec0'
R64112 Parallelmove.stepf
R63989 Parallelmove.State
R63966 Coq.Arith.Wf_nat.ltof
R63973 Parallelmove.mesure
R63922 Parallelmove.State
R63893 Parallelmove.State
R63855 Coq.Arith.Wf_nat.well_founded_ltof
R63875 Parallelmove.mesure
R63836 Coq.Init.Wf.Fix_eq
R64020 Parallelmove.base_case_Pmov_dec
R64064 Coq.Init.Specif.left
R64095 Coq.Init.Specif.right
R64123 Parallelmove.stepf_dec0'
R64112 Parallelmove.stepf
R63989 Parallelmove.State
R63966 Coq.Arith.Wf_nat.ltof
R63973 Parallelmove.mesure
R63922 Parallelmove.State
R63893 Parallelmove.State
R63855 Coq.Arith.Wf_nat.well_founded_ltof
R63875 Parallelmove.mesure
R64153 Parallelmove.Pmov
R64153 Parallelmove.Pmov
R64266 Coq.Init.Logic "x = y" type_scope
R64235 Coq.Init.Specif.left
R64249 Coq.Init.Specif.right
R64451 Coq.Init.Logic "x = y" type_scope
R64420 Coq.Init.Specif.left
R64434 Coq.Init.Specif.right
R64816 Parallelmove.sameExec
R64797 Parallelmove.sameExec
R64779 Parallelmove.sameExec
R64726 Coq.Lists.List.In
R64732 Parallelmove.getdst
R64755 Coq.Lists.List "x ++ y" list_scope
R64740 Parallelmove.StateToMove
R64758 Parallelmove.StateBeing
R64672 Coq.Lists.List.In
R64678 Parallelmove.getdst
R64701 Coq.Lists.List "x ++ y" list_scope
R64686 Parallelmove.StateToMove
R64704 Parallelmove.StateBeing
R64606 Coq.Lists.List.In
R64612 Parallelmove.getdst
R64635 Coq.Lists.List "x ++ y" list_scope
R64620 Parallelmove.StateToMove
R64638 Parallelmove.StateBeing
R64552 Coq.Lists.List.In
R64558 Parallelmove.getdst
R64581 Coq.Lists.List "x ++ y" list_scope
R64566 Parallelmove.StateToMove
R64584 Parallelmove.StateBeing
R64530 Parallelmove.State
R64530 Parallelmove.State
R64530 Parallelmove.State
R64895 Parallelmove.getdst_app
R64895 Parallelmove.getdst_app
R64895 Parallelmove.getdst_app
R64895 Parallelmove.getdst_app
R64895 Parallelmove.getdst_app
R64895 Parallelmove.getdst_app
R64895 Parallelmove.getdst_app
R64895 Parallelmove.getdst_app
R64895 Parallelmove.getdst_app
R64895 Parallelmove.getdst_app
R64895 Parallelmove.getdst_app
R64895 Parallelmove.getdst_app
R64895 Parallelmove.getdst_app
R64895 Parallelmove.getdst_app
R65087 Coq.Lists.List.in_or_app
R65087 Coq.Lists.List.in_or_app
R65110 Coq.Lists.List.in_app_or
R65156 Coq.Lists.List "x ++ y" list_scope
R65146 Parallelmove.getdst
R65159 Parallelmove.getdst
R65131 Coq.Lists.List "x ++ y" list_scope
R65121 Parallelmove.getdst
R65134 Parallelmove.getdst
R65110 Coq.Lists.List.in_app_or
R65156 Coq.Lists.List "x ++ y" list_scope
R65146 Parallelmove.getdst
R65159 Parallelmove.getdst
R65131 Coq.Lists.List "x ++ y" list_scope
R65121 Parallelmove.getdst
R65134 Parallelmove.getdst
R65208 Coq.Lists.List.in_or_app
R65208 Coq.Lists.List.in_or_app
R65231 Coq.Lists.List.in_app_or
R65277 Coq.Lists.List "x ++ y" list_scope
R65267 Parallelmove.getdst
R65280 Parallelmove.getdst
R65252 Coq.Lists.List "x ++ y" list_scope
R65242 Parallelmove.getdst
R65255 Parallelmove.getdst
R65231 Coq.Lists.List.in_app_or
R65277 Coq.Lists.List "x ++ y" list_scope
R65267 Parallelmove.getdst
R65280 Parallelmove.getdst
R65252 Coq.Lists.List "x ++ y" list_scope
R65242 Parallelmove.getdst
R65255 Parallelmove.getdst
R65429 Coq.Lists.List.In
R65435 Parallelmove.getdst
R65458 Coq.Lists.List "x ++ y" list_scope
R65443 Parallelmove.StateToMove
R65461 Parallelmove.StateBeing
R65376 Coq.Lists.List.In
R65382 Parallelmove.getdst
R65405 Coq.Lists.List "x ++ y" list_scope
R65390 Parallelmove.StateToMove
R65408 Parallelmove.StateBeing
R65360 Parallelmove.dstep
R65349 Parallelmove.State
R65349 Parallelmove.State
R65581 Parallelmove.app_nil
R65609 Parallelmove.getdst_app
R65581 Parallelmove.app_nil
R65581 Parallelmove.app_nil
R65581 Parallelmove.app_nil
R65581 Parallelmove.app_nil
R65581 Parallelmove.app_nil
R65581 Parallelmove.app_nil
R65581 Parallelmove.app_nil
R65581 Parallelmove.app_nil
R65581 Parallelmove.app_nil
R65581 Parallelmove.app_nil
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65609 Parallelmove.getdst_app
R65681 Coq.Lists.List.in_app_or
R65705 Coq.Lists.List "x :: y" list_scope
R65708 Coq.Lists.List.nil
R65692 Parallelmove.getdst
R65681 Coq.Lists.List.in_app_or
R65705 Coq.Lists.List "x :: y" list_scope
R65708 Coq.Lists.List.nil
R65692 Parallelmove.getdst
R65790 Coq.Lists.List.in_app_or
R65829 Coq.Lists.List "x :: y" list_scope
R65835 Coq.Lists.List "x :: y" list_scope
R65838 Parallelmove.getdst
R65811 Coq.Lists.List "x ++ y" list_scope
R65801 Parallelmove.getdst
R65814 Parallelmove.getdst
R65790 Coq.Lists.List.in_app_or
R65829 Coq.Lists.List "x :: y" list_scope
R65835 Coq.Lists.List "x :: y" list_scope
R65838 Parallelmove.getdst
R65811 Coq.Lists.List "x ++ y" list_scope
R65801 Parallelmove.getdst
R65814 Parallelmove.getdst
R65883 Coq.Lists.List.in_app_or
R65906 Parallelmove.getdst
R65894 Parallelmove.getdst
R65883 Coq.Lists.List.in_app_or
R65906 Parallelmove.getdst
R65894 Parallelmove.getdst
R65950 Coq.Lists.List.in_or_app
R65973 Coq.Lists.List.in_or_app
R65950 Coq.Lists.List.in_or_app
R65973 Coq.Lists.List.in_or_app
R66008 Coq.Lists.List.in_or_app
R66031 Coq.Lists.List.in_or_app
R66008 Coq.Lists.List.in_or_app
R66031 Coq.Lists.List.in_or_app
R66120 Coq.Lists.List.in_or_app
R66143 Coq.Lists.List.in_or_app
R66120 Coq.Lists.List.in_or_app
R66143 Coq.Lists.List.in_or_app
R66186 Coq.Lists.List.in_or_app
R66186 Coq.Lists.List.in_or_app
R66229 Coq.Lists.List.in_or_app
R66229 Coq.Lists.List.in_or_app
R66279 Coq.Lists.List.in_app_or
R66310 Coq.Lists.List "x ++ y" list_scope
R66301 Parallelmove.getdst
R66316 Coq.Lists.List "x :: y" list_scope
R66319 Coq.Lists.List.nil
R66290 Parallelmove.getdst
R66279 Coq.Lists.List.in_app_or
R66310 Coq.Lists.List "x ++ y" list_scope
R66301 Parallelmove.getdst
R66316 Coq.Lists.List "x :: y" list_scope
R66319 Coq.Lists.List.nil
R66290 Parallelmove.getdst
R66358 Coq.Lists.List.in_or_app
R66358 Coq.Lists.List.in_or_app
R66393 Coq.Lists.List.in_app_or
R66417 Coq.Lists.List "x :: y" list_scope
R66420 Coq.Lists.List.nil
R66404 Parallelmove.getdst
R66393 Coq.Lists.List.in_app_or
R66417 Coq.Lists.List "x :: y" list_scope
R66420 Coq.Lists.List.nil
R66404 Parallelmove.getdst
R66458 Coq.Lists.List.in_or_app
R66496 Coq.Lists.List.in_or_app
R66458 Coq.Lists.List.in_or_app
R66496 Coq.Lists.List.in_or_app
R66579 Coq.Lists.List.in_or_app
R66617 Coq.Lists.List.in_or_app
R66579 Coq.Lists.List.in_or_app
R66617 Coq.Lists.List.in_or_app
R66654 Coq.Lists.List.in_app_or
R66685 Coq.Lists.List "x ++ y" list_scope
R66676 Parallelmove.getdst
R66692 Coq.Lists.List "x :: y" list_scope
R66695 Coq.Lists.List.nil
R66665 Parallelmove.getdst
R66654 Coq.Lists.List.in_app_or
R66685 Coq.Lists.List "x ++ y" list_scope
R66676 Parallelmove.getdst
R66692 Coq.Lists.List "x :: y" list_scope
R66695 Coq.Lists.List.nil
R66665 Parallelmove.getdst
R66734 Coq.Lists.List.in_or_app
R66734 Coq.Lists.List.in_or_app
R66769 Coq.Lists.List.in_app_or
R66794 Coq.Lists.List "x :: y" list_scope
R66797 Coq.Lists.List.nil
R66780 Parallelmove.getdst
R66769 Coq.Lists.List.in_app_or
R66794 Coq.Lists.List "x :: y" list_scope
R66797 Coq.Lists.List.nil
R66780 Parallelmove.getdst
R66880 Coq.Lists.List.in_or_app
R66918 Coq.Lists.List.in_or_app
R66880 Coq.Lists.List.in_or_app
R66918 Coq.Lists.List.in_or_app
R66953 Coq.Lists.List.in_or_app
R66991 Coq.Lists.List.in_or_app
R66953 Coq.Lists.List.in_or_app
R66991 Coq.Lists.List.in_or_app
R67028 Coq.Lists.List.in_or_app
R67028 Coq.Lists.List.in_or_app
R67126 Coq.Init.Logic "x = y" type_scope
R67104 Parallelmove.StateToMove
R67117 Parallelmove.Pmov
R67128 Coq.Lists.List.nil
R67095 Parallelmove.State
R67167 Coq.Init.Wf.well_founded_ind
R67185 Coq.Arith.Wf_nat.well_founded_ltof
R67212 Parallelmove.mesure
R67167 Coq.Init.Wf.well_founded_ind
R67185 Coq.Arith.Wf_nat.well_founded_ltof
R67212 Parallelmove.mesure
R67291 Parallelmove.Pmov_equation
R67291 Parallelmove.Pmov_equation
R67354 Parallelmove.stepf1_dec
R67354 Parallelmove.stepf1_dec
R67390 Parallelmove.stepf1_dec
R67390 Parallelmove.stepf1_dec
R67475 Coq.Init.Logic "x = y" type_scope
R67454 Parallelmove.StateBeing
R67466 Parallelmove.Pmov
R67477 Coq.Lists.List.nil
R67445 Parallelmove.State
R67516 Coq.Init.Wf.well_founded_ind
R67534 Coq.Arith.Wf_nat.well_founded_ltof
R67561 Parallelmove.mesure
R67516 Coq.Init.Wf.well_founded_ind
R67534 Coq.Arith.Wf_nat.well_founded_ltof
R67561 Parallelmove.mesure
R67640 Parallelmove.Pmov_equation
R67640 Parallelmove.Pmov_equation
R67703 Parallelmove.stepf1_dec
R67703 Parallelmove.stepf1_dec
R67739 Parallelmove.stepf1_dec
R67739 Parallelmove.stepf1_dec
R67824 Parallelmove.sameExec
R67837 Parallelmove.Pmov
R67809 Parallelmove.stepInv
R67801 Parallelmove.State
R67881 Coq.Init.Wf.well_founded_ind
R67899 Coq.Arith.Wf_nat.well_founded_ltof
R67926 Parallelmove.mesure
R67881 Coq.Init.Wf.well_founded_ind
R67899 Coq.Arith.Wf_nat.well_founded_ltof
R67926 Parallelmove.mesure
R67983 Parallelmove.Pmov_equation
R67983 Parallelmove.Pmov_equation
R68141 Coq.Lists.List.In
R68147 Parallelmove.getdst
R68178 Coq.Lists.List "x ++ y" list_scope
R68155 Parallelmove.StateToMove
R68168 Parallelmove.stepf
R68181 Parallelmove.StateBeing
R68193 Parallelmove.stepf
R68057 Coq.Lists.List.In
R68063 Parallelmove.getdst
R68101 Coq.Lists.List "x ++ y" list_scope
R68071 Parallelmove.StateToMove
R68084 Parallelmove.Pmov
R68090 Parallelmove.stepf
R68104 Parallelmove.StateBeing
R68116 Parallelmove.Pmov
R68122 Parallelmove.stepf
R68046 Parallelmove.Reg
R68141 Coq.Lists.List.In
R68147 Parallelmove.getdst
R68178 Coq.Lists.List "x ++ y" list_scope
R68155 Parallelmove.StateToMove
R68168 Parallelmove.stepf
R68181 Parallelmove.StateBeing
R68193 Parallelmove.stepf
R68057 Coq.Lists.List.In
R68063 Parallelmove.getdst
R68101 Coq.Lists.List "x ++ y" list_scope
R68071 Parallelmove.StateToMove
R68084 Parallelmove.Pmov
R68090 Parallelmove.stepf
R68104 Parallelmove.StateBeing
R68116 Parallelmove.Pmov
R68122 Parallelmove.stepf
R68046 Parallelmove.Reg
R68229 Parallelmove.STM_Pmov
R68239 Parallelmove.stepf
R68259 Parallelmove.SB_Pmov
R68229 Parallelmove.STM_Pmov
R68239 Parallelmove.stepf
R68259 Parallelmove.SB_Pmov
R68326 Parallelmove.sameExec_reflexive
R68326 Parallelmove.sameExec_reflexive
R68355 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R68356 Coq.Lists.List.nil
R68364 Parallelmove.Move
R68373 Coq.Lists.List "x :: y" list_scope
R68355 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R68356 Coq.Lists.List.nil
R68364 Parallelmove.Move
R68373 Coq.Lists.List "x :: y" list_scope
R68392 Parallelmove.dstep
R68402 Parallelmove.stepf
R68425 Parallelmove.f2ind
R68392 Parallelmove.dstep
R68402 Parallelmove.stepf
R68425 Parallelmove.f2ind
R68425 Parallelmove.f2ind
R68532 Parallelmove.stepf
R68506 Parallelmove.sameExec_transitive
R68532 Parallelmove.stepf
R68506 Parallelmove.sameExec_transitive
R68565 Parallelmove.dstep_inv_getdst
R68565 Parallelmove.dstep_inv_getdst
R68595 Parallelmove.dstepp_sameExec
R68643 Parallelmove.stepf
R68624 Parallelmove.dstepp_trans
R68595 Parallelmove.dstepp_sameExec
R68643 Parallelmove.stepf
R68624 Parallelmove.dstepp_trans
R68666 Parallelmove.dstepp_refl
R68666 Parallelmove.dstepp_refl
R68722 Parallelmove.step_dec
R68722 Parallelmove.step_dec
R68751 Parallelmove.dstep_inv
R68751 Parallelmove.dstep_inv
R68787 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R68790 Coq.Lists.List "x :: y" list_scope
R68787 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R68790 Coq.Lists.List "x :: y" list_scope
R68812 Parallelmove.dstep
R68822 Parallelmove.stepf
R68845 Parallelmove.f2ind
R68812 Parallelmove.dstep
R68822 Parallelmove.stepf
R68845 Parallelmove.f2ind
R68845 Parallelmove.f2ind
R68952 Parallelmove.stepf
R68926 Parallelmove.sameExec_transitive
R68952 Parallelmove.stepf
R68926 Parallelmove.sameExec_transitive
R68985 Parallelmove.dstep_inv_getdst
R68985 Parallelmove.dstep_inv_getdst
R69015 Parallelmove.dstepp_sameExec
R69063 Parallelmove.stepf
R69044 Parallelmove.dstepp_trans
R69015 Parallelmove.dstepp_sameExec
R69063 Parallelmove.stepf
R69044 Parallelmove.dstepp_trans
R69086 Parallelmove.dstepp_refl
R69086 Parallelmove.dstepp_refl
R69142 Parallelmove.step_dec
R69142 Parallelmove.step_dec
R69171 Parallelmove.dstep_inv
R69171 Parallelmove.dstep_inv
R69245 Parallelmove.StateDone
R69256 Parallelmove.Pmov
R69261 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R69265 Coq.Lists.List.nil
R69270 Coq.Lists.List.nil
R69235 Parallelmove.Moves
R69299 Parallelmove.sexec
R69326 Parallelmove.get
R69393 Parallelmove.Moves
R69368 Coq.Lists.List.list
R69373 Locations.loc
R69368 Coq.Lists.List.list
R69373 Locations.loc
R69421 Coq.Lists.List.nil
R69428 Coq.Lists.List.nil
R69438 Coq.Lists.List "x :: y" list_scope
R69478 Coq.Lists.List.nil
R69485 Coq.Lists.List.nil
R69500 Coq.Lists.List "x :: y" list_scope
R69518 Coq.Lists.List "x :: y" list_scope
R69511 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R69368 Coq.Lists.List.list
R69373 Locations.loc
R69368 Coq.Lists.List.list
R69373 Locations.loc
R69660 Coq.Init.Logic "A \/ B" type_scope
R69656 Coq.Init.Logic "x = y" type_scope
R69663 Locations.diff
R69642 Coq.Lists.List.In
R69621 Coq.Lists.List.In
R69595 Coq.Lists.List.list
R69600 Locations.loc
R69595 Coq.Lists.List.list
R69600 Locations.loc
R69725 Parallelmove.no_overlap
R69786 Parallelmove.getdst
R69808 Coq.Lists.List "x ++ y" list_scope
R69794 Parallelmove.StateToMove
R69811 Parallelmove.StateBeing
R69741 Parallelmove.getsrc
R69763 Coq.Lists.List "x ++ y" list_scope
R69749 Parallelmove.StateToMove
R69766 Parallelmove.StateBeing
R69712 Parallelmove.State
R69868 Parallelmove.no_overlap
R69891 Parallelmove.getdst
R69880 Parallelmove.getsrc
R70014 Parallelmove.noOverlap_aux
R70031 Parallelmove.getdst
R69992 Coq.Init.Logic "A \/ B" type_scope
R69988 Coq.Init.Logic "x = y" type_scope
R69995 Locations.diff
R69965 Coq.Lists.List.In
R69971 Parallelmove.getdst
R69959 Parallelmove.Reg
R70177 Locations.diff_sym
R70177 Locations.diff_sym
R70349 Parallelmove.noOverlap
R70374 Coq.Lists.List "x ++ y" list_scope
R70360 Parallelmove.StateToMove
R70377 Parallelmove.StateBeing
R70326 Parallelmove.no_overlap_state
R70468 Coq.Lists.List "x ++ y" list_scope
R70454 Parallelmove.StateToMove
R70471 Parallelmove.StateBeing
R70468 Coq.Lists.List "x ++ y" list_scope
R70454 Parallelmove.StateToMove
R70471 Parallelmove.StateBeing
R70526 Parallelmove.Indst_noOverlap_aux
R70526 Parallelmove.Indst_noOverlap_aux
R70775 Coq.Init.Logic "x = y" type_scope
R70757 Parallelmove.get
R70762 Parallelmove.pexec
R70777 Parallelmove.get
R70782 Parallelmove.sexec
R70789 Parallelmove.StateDone
R70800 Parallelmove.Pmov
R70805 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R70809 Coq.Lists.List.nil
R70814 Coq.Lists.List.nil
R70735 Coq.Init.Logic "A \/ B" type_scope
R70731 Coq.Init.Logic "x = y" type_scope
R70738 Locations.diff
R70709 Coq.Lists.List.In
R70715 Parallelmove.getdst
R70703 Parallelmove.Reg
R70672 Parallelmove.notemporary
R70660 Parallelmove.noTmp
R70638 Parallelmove.no_overlap_list
R70621 Parallelmove.simpleDest
R70882 Parallelmove.Fpmov_correct
R70896 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R70900 Coq.Lists.List.nil
R70905 Coq.Lists.List.nil
R70951 Parallelmove.SB_Pmov
R70968 Parallelmove.STM_Pmov
R70882 Parallelmove.Fpmov_correct
R70896 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R70900 Coq.Lists.List.nil
R70905 Coq.Lists.List.nil
R70951 Parallelmove.SB_Pmov
R70968 Parallelmove.STM_Pmov
R71001 Parallelmove.app_nil
R71001 Parallelmove.app_nil
R71001 Parallelmove.app_nil
R71001 Parallelmove.app_nil
R71086 Parallelmove.app_nil
R71086 Parallelmove.app_nil
R71086 Parallelmove.app_nil
R71086 Parallelmove.app_nil
R71127 Parallelmove.no_overlap_noOverlap
R71148 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R71152 Coq.Lists.List.nil
R71157 Coq.Lists.List.nil
R71127 Parallelmove.no_overlap_noOverlap
R71148 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R71152 Coq.Lists.List.nil
R71157 Coq.Lists.List.nil
R71282 Parallelmove.app_nil
R71282 Parallelmove.app_nil
R71282 Parallelmove.app_nil
R71530 Coq.Init.Logic "x = y" type_scope
R71522 Parallelmove.get
R71532 Parallelmove.get
R71537 Parallelmove.sexec
R71544 Parallelmove.StateDone
R71555 Parallelmove.Pmov
R71560 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R71564 Coq.Lists.List.nil
R71569 Coq.Lists.List.nil
R71506 Parallelmove.noWrite
R71485 Coq.Init.Logic "A \/ B" type_scope
R71481 Coq.Init.Logic "x = y" type_scope
R71488 Locations.diff
R71459 Coq.Lists.List.In
R71465 Parallelmove.getdst
R71453 Parallelmove.Reg
R71422 Parallelmove.notemporary
R71410 Parallelmove.noTmp
R71388 Parallelmove.no_overlap_list
R71371 Parallelmove.simpleDest
R71364 Parallelmove.Reg
R71354 Parallelmove.Env
R71342 Parallelmove.Moves
R71659 Parallelmove.Fpmov_correctMoves
R71659 Parallelmove.Fpmov_correctMoves
R71756 Locations.eq
R71756 Locations.eq
R71804 Locations.diff
R71804 Locations.diff
R71844 Locations.same_not_diff
R71844 Locations.same_not_diff
R71895 Parallelmove.get_update_diff
R71895 Parallelmove.get_update_diff
R71936 Parallelmove.get_noWrite
R71936 Parallelmove.get_noWrite
R72078 Locations.diff
R72047 Parallelmove.simpleDest
R72068 Coq.Lists.List "x :: y" list_scope
R72059 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R72032 Coq.Lists.List.In
R72035 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R72023 Parallelmove.Moves
R72013 Parallelmove.Reg
R72013 Parallelmove.Reg
R72013 Parallelmove.Reg
R72013 Parallelmove.Reg
R72210 Locations.diff_sym
R72210 Locations.diff_sym
R72267 Parallelmove.simpleDest_pop2
R72267 Parallelmove.simpleDest_pop2
R72447 Coq.Init.Logic "x = y" type_scope
R72429 Parallelmove.get
R72434 Parallelmove.pexec
R72449 Parallelmove.get
R72392 Parallelmove.simpleDest
R72382 Coq.Lists.List.In
R72373 Parallelmove.Moves
R72362 Parallelmove.Move
R72352 Parallelmove.Env
R72513 Coq.Lists.List.in_inv
R72513 Coq.Lists.List.in_inv
R72558 Parallelmove.get_update_id
R72558 Parallelmove.get_update_id
R72617 Parallelmove.get_update_diff
R72617 Parallelmove.get_update_diff
R72658 Parallelmove.simpleDest_pop
R72673 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R72658 Parallelmove.simpleDest_pop
R72673 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R72709 Parallelmove.In_SD_diff
R72709 Parallelmove.In_SD_diff
R72850 Parallelmove.notemporary
R72838 Parallelmove.noTmp
R72823 Coq.Lists.List.In
R72826 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R72815 Parallelmove.Moves
R72805 Parallelmove.Reg
R72805 Parallelmove.Reg
R73130 Coq.Lists.List.In
R73136 Parallelmove.getdst
R73114 Coq.Lists.List.In
R73117 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R73382 Locations.diff
R73351 Parallelmove.simpleDest
R73372 Coq.Lists.List "x :: y" list_scope
R73363 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R73332 Coq.Lists.List.In
R73338 Parallelmove.getdst
R73323 Parallelmove.Moves
R73313 Parallelmove.Reg
R73313 Parallelmove.Reg
R73313 Parallelmove.Reg
R73536 Locations.diff_sym
R73536 Locations.diff_sym
R73625 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R73604 Parallelmove.simpleDest_pop2
R73625 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R73604 Parallelmove.simpleDest_pop2
R73787 Coq.Init.Logic "A \/ B" type_scope
R73783 Coq.Init.Logic "x = y" type_scope
R73790 Locations.diff
R73761 Coq.Lists.List.In
R73767 Parallelmove.getdst
R73755 Parallelmove.Reg
R73727 Parallelmove.simpleDest
R73711 Coq.Lists.List.In
R73714 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R73702 Parallelmove.Moves
R73692 Parallelmove.Reg
R73692 Parallelmove.Reg
R73994 Parallelmove.In_SD_diff'
R73994 Parallelmove.In_SD_diff'
R74062 Locations.diff_sym
R74083 Parallelmove.In_SD_diff
R74062 Locations.diff_sym
R74083 Parallelmove.In_SD_diff
R74145 Parallelmove.simpleDest_pop
R74160 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R74145 Parallelmove.simpleDest_pop
R74160 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R74228 Coq.Init.Logic "x = y" type_scope
R74219 Parallelmove.getdst
R74230 Coq.Lists.List.map
R74244 Coq.Init.Datatypes.snd
R74370 Coq.Init.Logic "x = y" type_scope
R74361 Parallelmove.getsrc
R74372 Coq.Lists.List.map
R74386 Coq.Init.Datatypes.fst
R74673 Coq.Init.Logic "x = y" type_scope
R74624 Parallelmove.get
R74629 Parallelmove.sexec
R74636 Parallelmove.StateDone
R74647 Parallelmove.Pmov
R74652 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R74656 Coq.Lists.List.nil
R74661 Coq.Lists.List.nil
R74675 Parallelmove.get
R74591 Parallelmove.noTmp
R74569 Parallelmove.no_overlap_list
R74552 Parallelmove.simpleDest
R74541 Coq.Lists.List.In
R74533 Parallelmove.Move
R74523 Parallelmove.Env
R74511 Parallelmove.Moves
R74761 Parallelmove.Fpmov_correctMoves
R74761 Parallelmove.Fpmov_correctMoves
R74846 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R74820 Parallelmove.pexec_correct
R74846 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R74820 Parallelmove.pexec_correct
R74869 Parallelmove.In_noTmp_notempo
R74869 Parallelmove.In_noTmp_notempo
R74907 Parallelmove.In_SD_no_o
R74907 Parallelmove.In_SD_no_o
R74999 Parallelmove.noWrite
R74972 Locations.notin
R74985 Parallelmove.getdst
R75114 Locations.diff_sym
R75114 Locations.diff_sym
R75289 Parallelmove.noTmp
R75249 Locations.disjoint
R75273 Conventions.temporaries
R75263 Parallelmove.getdst
R75209 Locations.disjoint
R75233 Conventions.temporaries
R75223 Parallelmove.getsrc
R75360 Parallelmove.getsrc
R75374 Parallelmove.getdst
R75360 Parallelmove.getsrc
R75374 Parallelmove.getdst
R75451 Locations.type
R75451 Locations.type
R75590 Locations.type
R75590 Locations.type
R75724 Locations.disjoint_cons_left
R75724 Locations.disjoint_cons_left
R75768 Locations.disjoint_cons_left
R75768 Locations.disjoint_cons_left
R76027 Coq.Init.Logic "x = y" type_scope
R75976 Parallelmove.sexec
R75983 Parallelmove.StateDone
R75994 Parallelmove.Pmov
R75999 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R76003 Coq.Lists.List.nil
R76008 Coq.Lists.List.nil
R76020 Locations.R
R76022 Locations.IT3
R76033 Locations.R
R76035 Locations.IT3
R75934 Locations.disjoint
R75958 Conventions.temporaries
R75948 Parallelmove.getdst
R75894 Locations.disjoint
R75918 Conventions.temporaries
R75908 Parallelmove.getsrc
R75872 Parallelmove.no_overlap_list
R75855 Parallelmove.simpleDest
R76105 Parallelmove.Fpmov_correctMoves
R76105 Parallelmove.Fpmov_correctMoves
R76199 Parallelmove.get_noWrite
R76214 Locations.R
R76216 Locations.IT3
R76199 Parallelmove.get_noWrite
R76214 Locations.R
R76216 Locations.IT3
R76281 Parallelmove.notindst_nW
R76281 Parallelmove.notindst_nW
R76301 Locations.disjoint_notin
R76320 Conventions.temporaries
R76301 Locations.disjoint_notin
R76320 Conventions.temporaries
R76340 Locations.disjoint_sym
R76340 Locations.disjoint_sym
R76399 Parallelmove.disjoint_tmp__noTmp
R76399 Parallelmove.disjoint_tmp__noTmp
R76465 Locations.type
R76465 Locations.type
R76555 Parallelmove.getdst
R76531 Locations.in_notin_diff
R76555 Parallelmove.getdst
R76531 Locations.in_notin_diff
R76602 Conventions.temporaries
R76578 Locations.disjoint_notin
R76602 Conventions.temporaries
R76578 Locations.disjoint_notin
R76627 Locations.disjoint_sym
R76627 Locations.disjoint_sym
R76913 Coq.Init.Logic "x = y" type_scope
R76849 Coq.Lists.List.map
R76903 Parallelmove.getdst
R76859 Parallelmove.sexec
R76866 Parallelmove.StateDone
R76877 Parallelmove.Pmov
R76882 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R76886 Coq.Lists.List.nil
R76891 Coq.Lists.List.nil
R76917 Coq.Lists.List.map
R76930 Parallelmove.getsrc
R76808 Locations.disjoint
R76832 Conventions.temporaries
R76822 Parallelmove.getdst
R76768 Locations.disjoint
R76792 Conventions.temporaries
R76782 Parallelmove.getsrc
R76746 Parallelmove.no_overlap_list
R76729 Parallelmove.simpleDest
R76964 Parallelmove.getsrc_map
R76984 Parallelmove.getdst_map
R77004 Coqlib.list_map_compose
R77031 Coqlib.list_map_compose
R77055 Coqlib.list_map_exten
R76964 Parallelmove.getsrc_map
R76984 Parallelmove.getdst_map
R77004 Coqlib.list_map_compose
R77031 Coqlib.list_map_compose
R77055 Coqlib.list_map_exten
R77091 Parallelmove.Fpmov_correct2
R77091 Parallelmove.Fpmov_correct2
R77196 Parallelmove.disjoint_tmp__noTmp
R77196 Parallelmove.disjoint_tmp__noTmp
R77504 Coq.Init.Logic "x = y" type_scope
R77459 Parallelmove.sexec
R77466 Parallelmove.StateDone
R77477 Parallelmove.Pmov
R77482 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R77486 Coq.Lists.List.nil
R77491 Coq.Lists.List.nil
R77429 Locations.notin
R77441 Conventions.temporaries
R77402 Locations.notin
R77415 Parallelmove.getdst
R77351 Locations.disjoint
R77375 Conventions.temporaries
R77365 Parallelmove.getdst
R77311 Locations.disjoint
R77335 Conventions.temporaries
R77325 Parallelmove.getsrc
R77289 Parallelmove.no_overlap_list
R77272 Parallelmove.simpleDest
R77539 Parallelmove.Fpmov_correct1
R77539 Parallelmove.Fpmov_correct1
R77622 Parallelmove.disjoint_tmp__noTmp
R77622 Parallelmove.disjoint_tmp__noTmp
R77711 Locations.type
R77711 Locations.type
R78074 Locations.eq
R78074 Locations.eq
R78186 Parallelmove.getdst
R78162 Locations.in_notin_diff
R78186 Parallelmove.getdst
R78162 Locations.in_notin_diff
R78209 Parallelmove.notindst_nW
R78209 Parallelmove.notindst_nW
FAllocation
R409 Registers.add
R442 Registers.remove
R536 Coq.Init.Datatypes.None
R549 Coq.Init.Datatypes.Some
R507 Registers.t
R490 Coq.Init.Datatypes.option
R497 Registers.reg
R657 Coq.Init.Datatypes.inl
R682 Coq.Init.Datatypes.inr
R627 Registers.t
R613 Coq.Init.Datatypes "x + y" type_scope
R609 Registers.reg
R615 AST.ident
R780 Registers.t
R756 Registers.t
R741 Coq.Lists.List.list
R746 Registers.reg
R812 Coq.Lists.List.nil
R829 Coq.Lists.List "x :: y" list_scope
R756 Registers.t
R741 Coq.Lists.List.list
R746 Registers.reg
R960 Registers.t
R936 Registers.t
R921 Coq.Lists.List.list
R926 Registers.reg
R992 Coq.Lists.List.nil
R1009 Coq.Lists.List "x :: y" list_scope
R936 Registers.t
R921 Coq.Lists.List.list
R926 Registers.reg
R1141 Registers.t
R1172 Maps "a ! b"
R1164 RTL.fn_code
R1185 Coq.Init.Datatypes.None
R1209 Coq.Init.Datatypes.Some
R1246 RTL.Inop
R1280 RTL.Iop
R1314 Registers.mem
R1352 Allocation.reg_list_live
R1433 RTL.Iload
R1477 Registers.mem
R1515 Allocation.reg_list_live
R1596 RTL.Istore
R1638 Allocation.reg_list_live
R1686 RTL.Icall
R1724 Allocation.reg_list_live
R1755 Allocation.reg_sum_live
R1802 RTL.Icond
R1842 Allocation.reg_list_live
R1875 RTL.Ireturn
R1903 Allocation.reg_option_live
R1129 Registers.t
R1115 RTL.node
R1096 RTL.function
R2036 Coq.Init.Datatypes.option
R2044 Maps.t
R2051 Registers.t
R2066 Allocation.fixpoint
R2120 Coq.Lists.List.nil
R2108 Allocation.transfer
R2096 RTL.fn_nextpc
R2079 RTL.successors
R2021 RTL.function
R2225 Locations.mreg
R2252 Locations.R
R2265 Locations.S
R2278 Locations.slot_type
R2295 AST.Tint
R2303 Locations.IT1
R2309 AST.Tfloat
R2319 Locations.FT1
R2218 Locations.loc
R2437 Coq.Lists.List.list
R2442 Locations.mreg
R2388 Coq.Lists.List.list
R2393 Locations.mreg
R2388 Coq.Lists.List.list
R2393 Locations.mreg
R2364 Coq.Lists.List.list
R2369 Locations.loc
R2489 Coq.Lists.List "x :: y" list_scope
R2500 Coq.Lists.List "x :: y" list_scope
R2512 Coq.Lists.List "x :: y" list_scope
R2645 Coq.Lists.List "x :: y" list_scope
R2550 Locations.R
R2567 Locations.S
R2580 Locations.slot_type
R2597 AST.Tint
R2611 AST.Tfloat
R2687 Coq.Lists.List.nil
R2388 Coq.Lists.List.list
R2393 Locations.mreg
R2388 Coq.Lists.List.list
R2393 Locations.mreg
R2364 Coq.Lists.List.list
R2369 Locations.loc
R2741 Allocation.regs_for_rec
R2791 Coq.Lists.List "x :: y" list_scope
R2787 Locations.FT1
R2798 Coq.Lists.List "x :: y" list_scope
R2794 Locations.FT2
R2805 Coq.Lists.List "x :: y" list_scope
R2801 Locations.FT3
R2808 Coq.Lists.List.nil
R2764 Coq.Lists.List "x :: y" list_scope
R2760 Locations.IT1
R2771 Coq.Lists.List "x :: y" list_scope
R2767 Locations.IT2
R2778 Coq.Lists.List "x :: y" list_scope
R2774 Locations.IT3
R2781 Coq.Lists.List.nil
R2726 Coq.Lists.List.list
R2731 Locations.loc
R2946 Locations.R
R2957 Locations.mreg_eq
R2984 LTL.Bop
R2998 Coq.Lists.List "x :: y" list_scope
R3001 Coq.Lists.List.nil
R2988 Op.Omove
R3016 Locations.S
R3024 LTL.Bgetstack
R2915 LTL.block
R2905 Locations.mreg
R2894 Locations.loc
R3130 Locations.R
R3141 Locations.mreg_eq
R3168 LTL.Bop
R3183 Coq.Lists.List "x :: y" list_scope
R3186 Coq.Lists.List.nil
R3172 Op.Omove
R3200 Locations.S
R3208 LTL.Bsetstack
R3099 LTL.block
R3090 Locations.loc
R3078 Locations.mreg
R3362 LTL.block
R3295 LTL.block
R3280 Coq.Lists.List.list
R3285 Locations.mreg
R3263 Coq.Lists.List.list
R3268 Locations.loc
R3402 Coq.Lists.List "x :: y" list_scope
R3412 Coq.Lists.List "x :: y" list_scope
R3427 Allocation.add_reload
R3295 LTL.block
R3280 Coq.Lists.List.list
R3285 Locations.mreg
R3263 Coq.Lists.List.list
R3268 Locations.loc
R3548 Locations.eq
R3605 Locations.R
R3624 Allocation.add_spill
R3652 Locations.R
R3668 Allocation.add_reload
R3694 Locations.S
R3700 Locations.S
R3804 Allocation.add_reload
R3824 Allocation.add_spill
R3743 Locations.slot_type
R3761 AST.Tint
R3769 Locations.IT1
R3775 AST.Tfloat
R3785 Locations.FT1
R3533 LTL.block
R3524 Locations.loc
R3524 Locations.loc
R3915 Parallelmove.Moves
R3890 Coq.Lists.List.list
R3895 Locations.loc
R3890 Coq.Lists.List.list
R3895 Locations.loc
R3950 Coq.Lists.List.nil
R3960 Coq.Lists.List.nil
R3970 Coq.Lists.List "x :: y" list_scope
R3979 Coq.Lists.List.nil
R3986 Coq.Lists.List.nil
R3996 Coq.Lists.List "x :: y" list_scope
R4007 Coq.Lists.List "x :: y" list_scope
R4025 Coq.Lists.List "x :: y" list_scope
R4018 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3890 Coq.Lists.List.list
R3895 Locations.loc
R3890 Coq.Lists.List.list
R3895 Locations.loc
R4119 Parallelmove.P_move
R4140 Allocation.listsLoc2Moves
R4103 Coq.Lists.List.list
R4108 Locations.loc
R4103 Coq.Lists.List.list
R4108 Locations.loc
R4226 LTL.block
R4237 Coq.Lists.List.fold_left
R4302 Allocation.parallel_move_order
R4268 Allocation.add_move
R4286 Coq.Init.Datatypes.snd
R4278 Coq.Init.Datatypes.fst
R4217 LTL.block
R4203 Coq.Lists.List.list
R4208 Locations.loc
R4203 Coq.Lists.List.list
R4208 Locations.loc
R4526 Op.is_move_operation
R4561 Coq.Init.Datatypes.Some
R4579 Allocation.add_move
R4597 LTL.Bgoto
R4610 Coq.Init.Datatypes.None
R4693 Allocation.add_reloads
R4717 LTL.Bop
R4736 Allocation.add_spill
R4756 LTL.Bgoto
R4672 Allocation.reg_for
R4637 Allocation.regs_for
R4509 LTL.node
R4500 Locations.loc
R4484 Coq.Lists.List.list
R4489 Locations.loc
R4466 Op.operation
R4960 Allocation.add_reloads
R4988 LTL.Bload
R5017 Allocation.add_spill
R5037 LTL.Bgoto
R4943 Allocation.reg_for
R4912 Allocation.regs_for
R4888 LTL.node
R4879 Locations.loc
R4863 Coq.Lists.List.list
R4868 Locations.loc
R4824 Op.addressing
R4803 AST.memory_chunk
R5182 Allocation.regs_for
R5196 Coq.Lists.List "x :: y" list_scope
R5214 Coq.Lists.List.nil
R5221 LTL.Breturn
R5279 Coq.Lists.List "x :: y" list_scope
R5297 Allocation.add_reloads
R5348 LTL.Bstore
R5378 LTL.Bgoto
R5329 Coq.Lists.List "x :: y" list_scope
R5314 Coq.Lists.List "x :: y" list_scope
R5165 LTL.node
R5156 Locations.loc
R5140 Coq.Lists.List.list
R5145 Locations.loc
R5100 Op.addressing
R5079 AST.memory_chunk
R5603 Coq.Init.Datatypes.inl
R5620 Allocation.add_reload
R5647 Allocation.parallel_move
R5683 LTL.Bcall
R5706 Allocation.add_spill
R5726 LTL.Bgoto
R5694 Coq.Init.Datatypes.inl
R5700 Locations.IT3
R5634 Locations.IT3
R5743 Coq.Init.Datatypes.inr
R5759 Allocation.parallel_move
R5793 LTL.Bcall
R5815 Allocation.add_spill
R5835 LTL.Bgoto
R5804 Coq.Init.Datatypes.inr
R5564 Conventions.loc_result
R5528 Conventions.loc_arguments
R5504 LTL.node
R5495 Locations.loc
R5479 Coq.Lists.List.list
R5484 Locations.loc
R5443 Coq.Init.Datatypes "x + y" type_scope
R5439 Locations.loc
R5445 AST.ident
R5422 AST.signature
R5965 Allocation.add_reloads
R5989 LTL.Bcond
R5946 Allocation.regs_for
R5922 LTL.node
R5922 LTL.node
R5899 Coq.Lists.List.list
R5904 Locations.loc
R5881 Op.condition
R6107 Coq.Init.Datatypes.Some
R6119 Allocation.add_reload
R6151 LTL.Breturn
R6135 Conventions.loc_result
R6163 Coq.Init.Datatypes.None
R6175 LTL.Bop
R6207 LTL.Breturn
R6191 Conventions.loc_result
R6186 Coq.Lists.List.nil
R6179 Op.Oundef
R6068 Coq.Init.Datatypes.option
R6075 Locations.loc
R6048 AST.signature
R6285 LTL.block
R6264 LTL.block
R6250 Coq.Lists.List.list
R6255 Locations.loc
R6314 Coq.Lists.List.nil
R6331 Coq.Lists.List "x :: y" list_scope
R6327 Locations.R
R6340 LTL.Bop
R6351 Coq.Lists.List.nil
R6344 Op.Oundef
R6383 Coq.Lists.List "x :: y" list_scope
R6379 Locations.S
R6264 LTL.block
R6250 Coq.Lists.List.list
R6255 Locations.loc
R6528 Allocation.parallel_move
R6571 Allocation.add_undefs
R6590 LTL.Bgoto
R6543 Conventions.loc_parameters
R6517 LTL.node
R6482 Coq.Lists.List.list
R6487 Locations.loc
R6463 Coq.Lists.List.list
R6468 Locations.loc
R6443 AST.signature
R6780 LTL.block
R6816 RTL.Inop
R6832 LTL.Bgoto
R6844 RTL.Iop
R6874 Registers.mem
R6893 Maps "a !! b"
R6978 LTL.Bgoto
R6911 Allocation.add_op
R6922 Coq.Lists.List.map
R6990 RTL.Iload
R7030 Registers.mem
R7049 Maps "a !! b"
R7144 LTL.Bgoto
R7067 Allocation.add_load
R7088 Coq.Lists.List.map
R7156 RTL.Istore
R7194 Allocation.add_store
R7216 Coq.Lists.List.map
R7257 RTL.Icall
R7291 Allocation.add_call
R7331 Coq.Lists.List.map
R7305 Coqlib.sum_left_map
R7391 RTL.Icond
R7427 Allocation.add_cond
R7442 Coq.Lists.List.map
R7479 RTL.Ireturn
R7503 Allocation.add_return
R7530 Coqlib.option_map
R7515 RTL.fn_sig
R6761 RTL.instruction
R6747 LTL.node
R6728 Locations.loc
R6721 Registers.reg
R6695 Maps.t
R6702 Registers.t
R6674 RTL.function
R7688 LTL.code
R7925 Maps.set
R7953 Allocation.add_entry
R8045 Coq.Lists.List.map
R7994 Coq.Lists.List.map
R8011 RTL.fn_params
R7964 RTL.fn_sig
R7798 Registers.elements
R7815 Allocation.reg_list_dead
R7883 Allocation.transfer
R7907 Maps "a !! b"
R7830 RTL.fn_params
R7759 RTL.fn_nextpc
R7718 RTL.fn_entrypoint
R7676 LTL.code
R7656 Locations.loc
R7649 Registers.reg
R7623 Maps.t
R7630 Registers.t
R7602 RTL.function
R8386 Coq.Init.Logic "A \/ B" type_scope
R8353 Coqlib.Plt
R8361 Coq.NArith.BinPos.Psucc
R8368 RTL.fn_nextpc
R8396 Coq.Init.Logic "x = y" type_scope
R8392 Maps "a ! b"
R8398 Coq.Init.Datatypes.None
R8346 LTL.node
R8293 Allocation.transf_entrypoint
R8222 Maps.map
R8262 RTL.fn_code
R8233 Allocation.transf_instr
R8203 Locations.loc
R8196 Registers.reg
R8170 Maps.t
R8177 Registers.t
R8149 RTL.function
R8427 Coqlib.plt
R8435 Coq.NArith.BinPos.Psucc
R8442 RTL.fn_nextpc
R8427 Coqlib.plt
R8435 Coq.NArith.BinPos.Psucc
R8442 RTL.fn_nextpc
R8507 Coq.Init.Logic "x <> y" type_scope
R8510 RTL.fn_nextpc
R8507 Coq.Init.Logic "x <> y" type_scope
R8510 RTL.fn_nextpc
R8566 Coqlib.Plt_succ
R8566 Coqlib.Plt_succ
R8586 Coq.Init.Logic "~ x" type_scope
R8589 Coqlib.Plt
R8597 RTL.fn_nextpc
R8586 Coq.Init.Logic "~ x" type_scope
R8589 Coqlib.Plt
R8597 RTL.fn_nextpc
R8645 Coqlib.Plt_trans_succ
R8645 Coqlib.Plt_trans_succ
R8718 Maps.gso
R8718 Maps.gso
R8758 Maps.gmap
R8758 Maps.gmap
R8779 RTL.fn_code_wf
R8779 RTL.fn_code_wf
R8915 Coq.Init.Datatypes.option
R8922 LTL.function
R8946 RTLtyping.type_rtl_function
R8975 Coq.Init.Datatypes.None
R8983 Coq.Init.Datatypes.None
R8992 Coq.Init.Datatypes.Some
R9014 Allocation.analyze
R9035 Coq.Init.Datatypes.None
R9043 Coq.Init.Datatypes.None
R9054 Coq.Init.Datatypes.Some
R9168 Coloring.regalloc
R9207 Coq.Init.Datatypes.None
R9215 Coq.Init.Datatypes.None
R9228 Coq.Init.Datatypes.Some
R9253 Coq.Init.Datatypes.Some
R9259 LTL.mkfunction
R9499 Allocation.transf_entrypoint_wf
R9469 RTL.fn_nextpc
R9347 Allocation.transf_entrypoint
R9399 Maps.map
R9439 RTL.fn_code
R9410 Allocation.transf_instr
R9314 RTL.fn_stacksize
R9287 RTL.fn_sig
R9128 Allocation.transfer
R9147 Maps "a !! b"
R9087 RTL.fn_entrypoint
R8899 RTL.function
R9607 Coq.Init.Datatypes.option
R9614 LTL.program
R9631 AST.transform_partial_program
R9657 Allocation.transf_function
R9592 RTL.program
FAllocproof_aux
R226 LTL.genv
R250 Values.val
R319 Coq.Init.Logic "'exists' x , p" type_scope
R389 Coq.Init.Logic "A /\ B" type_scope
R337 LTL.exec_instrs
R356 Allocation.add_move
R415 Coq.Init.Logic "A /\ B" type_scope
R406 Coq.Init.Logic "x = y" type_scope
R518 Coq.Init.Logic "x = y" type_scope
R489 Locations.diff
R501 Locations.R
R503 Locations.FT1
R467 Locations.diff
R479 Locations.R
R481 Locations.IT1
R442 Locations.diff
R581 Coq.Init.Logic "'exists' x , p" type_scope
R646 Coq.Init.Logic "A /\ B" type_scope
R597 LTL.exec_instrs
R616 Allocation.add_move
R684 Coq.Init.Logic "A /\ B" type_scope
R660 Coq.Init.Logic "x = y" type_scope
R662 Parallelmove.update
R780 Coq.Init.Logic "x = y" type_scope
R783 Parallelmove.update
R751 Locations.diff
R763 Locations.R
R765 Locations.FT1
R729 Locations.diff
R741 Locations.R
R743 Locations.IT1
R707 Locations.diff
R937 Parallelmove.get_update_id
R937 Parallelmove.get_update_id
R1035 Parallelmove.get_update_diff
R1035 Parallelmove.get_update_diff
R1116 Locations.diff_sym
R1116 Locations.diff_sym
R1252 Coq.Init.Logic "x = y" type_scope
R1237 Coq.Lists.List.In
R1213 Coq.Init.Logic "x = y" type_scope
R1205 Coq.Lists.List.map
R1215 Coq.Lists.List.map
R1416 Parallelmove.Moves
R1450 Coq.Lists.List.nil
R1457 Coq.Init.Logic.True
R1473 Coq.Lists.List "x :: y" list_scope
R1466 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R1504 Coq.Init.Logic "A /\ B" type_scope
R1481 Locations.notin
R1494 Parallelmove.getdst
R1416 Parallelmove.Moves
R1564 Coq.Lists.List "x :: y" list_scope
R1558 Locations.R
R1560 Locations.IT1
R1574 Coq.Lists.List "x :: y" list_scope
R1568 Locations.R
R1570 Locations.FT1
R1577 Coq.Lists.List.nil
R1654 Parallelmove.no_overlap_list
R1625 Parallelmove.no_overlap_list
R1644 Coq.Lists.List "x :: y" list_scope
R1922 Coq.Init.Logic "'exists' x , p" type_scope
R2081 Coq.Init.Logic "A /\ B" type_scope
R1938 LTL.exec_instrs
R1965 Coq.Lists.List.fold_left
R2026 Allocation.add_move
R2045 Coq.Init.Datatypes.snd
R2036 Coq.Init.Datatypes.fst
R2016 Coq.Init.Datatypes "x * y" type_scope
R2012 Locations.loc
R2018 Locations.loc
R1992 LTL.block
R2238 Coq.Init.Logic "x = y" type_scope
R2241 Parallelmove.sexec
R2199 Locations.diff
R2211 Locations.R
R2223 Locations.FT1
R2163 Locations.diff
R2175 Locations.R
R2187 Locations.IT1
R2139 Coq.Init.Logic "A \/ B" type_scope
R2135 Coq.Init.Logic "x = y" type_scope
R2142 Locations.diff
R2113 Coq.Lists.List.In
R2119 Parallelmove.getdst
R1879 Locations.disjoint
R1903 Allocproof_aux.temporaries1
R1893 Parallelmove.getsrc
R1838 Locations.disjoint
R1862 Allocproof_aux.temporaries1
R1852 Parallelmove.getdst
R1816 Parallelmove.no_overlap_list
R2340 LTL.exec_refl
R2340 LTL.exec_refl
R2419 Allocation.add_move
R2485 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2460 Allocproof_aux.no_overlap_list_pop
R2505 Locations.disjoint_cons_left
R2541 Locations.disjoint_cons_left
R2419 Allocation.add_move
R2485 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2460 Allocproof_aux.no_overlap_list_pop
R2505 Locations.disjoint_cons_left
R2541 Locations.disjoint_cons_left
R2757 Allocation.add_move
R2733 LTL.exec_trans
R2757 Allocation.add_move
R2733 LTL.exec_trans
R2840 Locations.eq
R2840 Locations.eq
R2881 Parallelmove.get_update_id
R2881 Parallelmove.get_update_id
R3155 Locations.diff_sym
R3155 Locations.diff_sym
R3347 Coq.Init.Logic "x = y" type_scope
R3347 Coq.Init.Logic "x = y" type_scope
R3405 Parallelmove.get_update_diff
R3405 Parallelmove.get_update_diff
R3499 Locations.diff_sym
R3499 Locations.diff_sym
R3605 Coq.Lists.List.fold_left
R3697 Parallelmove.P_move
R3663 Allocation.add_move
R3681 Coq.Init.Datatypes.snd
R3673 Coq.Init.Datatypes.fst
R3653 Coq.Init.Datatypes "x * y" type_scope
R3649 Locations.loc
R3655 Locations.loc
R3630 LTL.block
R3592 LTL.block
R3559 Coq.Lists.List.list
R3569 Coq.Init.Datatypes "x * y" type_scope
R3565 Locations.loc
R3571 Locations.loc
R3767 Parallelmove.simpleDest
R3740 Locations.norepet
R3753 Parallelmove.getdst
R3872 Parallelmove.notindst_nW
R3872 Parallelmove.notindst_nW
R3992 Coq.Init.Logic "x = y" type_scope
R3979 Parallelmove.StateDone
R3994 Coq.Lists.List.nil
R3969 Coq.Init.Logic "x = y" type_scope
R3948 Parallelmove.StateDone
R3959 Parallelmove.stepf
R3971 Coq.Lists.List.nil
R4138 Locations.eq
R4149 Coq.Init.Datatypes.fst
R4154 Parallelmove.last
R4162 Coq.Lists.List "x :: y" list_scope
R4138 Locations.eq
R4149 Coq.Init.Datatypes.fst
R4154 Parallelmove.last
R4162 Coq.Lists.List "x :: y" list_scope
R4249 Locations.eq
R4249 Locations.eq
R4314 Locations.eq
R4314 Locations.eq
R4369 Parallelmove.split_move
R4369 Parallelmove.split_move
R4489 Locations.eq
R4500 Coq.Init.Datatypes.fst
R4505 Parallelmove.last
R4513 Coq.Lists.List "x :: y" list_scope
R4489 Locations.eq
R4500 Coq.Init.Datatypes.fst
R4505 Parallelmove.last
R4513 Coq.Lists.List "x :: y" list_scope
R4639 Coq.Init.Logic "x = y" type_scope
R4626 Parallelmove.StateDone
R4641 Coq.Lists.List.nil
R4616 Coq.Init.Logic "x = y" type_scope
R4596 Parallelmove.StateDone
R4607 Parallelmove.Pmov
R4618 Coq.Lists.List.nil
R4680 Coq.Init.Wf.well_founded_ind
R4698 Coq.Arith.Wf_nat.well_founded_ltof
R4725 Parallelmove.mesure
R4680 Coq.Init.Wf.well_founded_ind
R4698 Coq.Arith.Wf_nat.well_founded_ltof
R4725 Parallelmove.mesure
R4803 Parallelmove.Pmov_equation
R4803 Parallelmove.Pmov_equation
R4898 Coq.Init.Logic "x = y" type_scope
R4863 Parallelmove.StateDone
R4874 Parallelmove.stepf
R4880 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4881 Coq.Lists.List.nil
R4888 Coq.Lists.List "x :: y" list_scope
R4900 Coq.Lists.List.nil
R4932 Parallelmove.stepf1_dec
R4951 Allocproof_aux.SDone_stepf
R4898 Coq.Init.Logic "x = y" type_scope
R4863 Parallelmove.StateDone
R4874 Parallelmove.stepf
R4880 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4881 Coq.Lists.List.nil
R4888 Coq.Lists.List "x :: y" list_scope
R4900 Coq.Lists.List.nil
R4932 Parallelmove.stepf1_dec
R4951 Allocproof_aux.SDone_stepf
R5019 Coq.Init.Logic "x = y" type_scope
R4986 Parallelmove.StateDone
R4997 Parallelmove.stepf
R5003 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5006 Coq.Lists.List "x :: y" list_scope
R5021 Coq.Lists.List.nil
R5053 Parallelmove.stepf1_dec
R5072 Allocproof_aux.SDone_stepf
R5019 Coq.Init.Logic "x = y" type_scope
R4986 Parallelmove.StateDone
R4997 Parallelmove.stepf
R5003 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5006 Coq.Lists.List "x :: y" list_scope
R5021 Coq.Lists.List.nil
R5053 Parallelmove.stepf1_dec
R5072 Allocproof_aux.SDone_stepf
R5161 Coq.Init.Logic "A \/ B" type_scope
R5157 Coq.Init.Logic "x = y" type_scope
R5164 Locations.diff
R5134 Coq.Lists.List.In
R5139 Conventions.temporaries
R5205 Locations.eq
R5205 Locations.eq
R5601 Coq.Init.Logic "A /\ B" type_scope
R5589 Coq.Init.Logic "x = y" type_scope
R5579 Parallelmove.getdst
R5591 Parallelmove.getsrc
R5614 Coq.Init.Logic "x = y" type_scope
R5604 Parallelmove.getdst
R5616 Parallelmove.getsrc
R5549 Coq.Init.Logic "x = y" type_scope
R5536 Coq.Lists.List "x ++ y" list_scope
R5526 Parallelmove.getdst
R5539 Parallelmove.getdst
R5561 Coq.Lists.List "x ++ y" list_scope
R5551 Parallelmove.getsrc
R5564 Parallelmove.getsrc
R5929 Coq.Init.Logic "A \/ B" type_scope
R5925 Coq.Init.Logic "x = y" type_scope
R5932 Locations.diff
R5912 Coq.Lists.List.In
R5902 Coq.Lists.List.In
R5885 Locations.norepet
R6121 Locations.in_notin_diff
R6121 Locations.in_notin_diff
R6175 Locations.diff_sym
R6195 Locations.in_notin_diff
R6175 Locations.diff_sym
R6195 Locations.in_notin_diff
R6298 Parallelmove.no_overlap
R6376 Parallelmove.getdst
R6398 Coq.Lists.List "x ++ y" list_scope
R6384 Parallelmove.StateToMove
R6415 Coq.Lists.List "x ++ y" list_scope
R6402 Parallelmove.StateBeing
R6418 Parallelmove.StateDone
R6314 Parallelmove.getsrc
R6336 Coq.Lists.List "x ++ y" list_scope
R6322 Parallelmove.StateToMove
R6353 Coq.Lists.List "x ++ y" list_scope
R6340 Parallelmove.StateBeing
R6356 Parallelmove.StateDone
R6285 Parallelmove.State
R6746 Coq.Lists.List.incl_tl
R6711 Coq.Lists.List.incl_appr
R6663 Coq.Lists.List.incl_appl
R6599 Coq.Lists.List.in_or_app
R6542 Coq.Lists.List.in_or_app
R6499 Coq.Lists.List.in_cons
R6823 Coq.Lists.List.incl_app
R6804 Coq.Lists.List.incl_cons
R6887 Coq.Lists.List.In
R6920 Coq.Lists.List.In
R6973 Coq.Lists.List.incl
R7139 Coq.Lists.List.In
R7130 Coq.Init.Logic "x <> y" type_scope
R7111 Coq.Lists.List.In
R7119 Coq.Lists.List "x :: y" list_scope
R7102 Coq.Lists.List.list
R7232 Coq.Init.Logic "x = y" type_scope
R7232 Coq.Init.Logic "x = y" type_scope
R7328 Allocproof_aux.no_overlap_stateD
R7303 Allocproof_aux.no_overlap_stateD
R7289 Parallelmove.step
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7481 Parallelmove.getdst_app
R7461 Parallelmove.getsrc_app
R7593 Locations.eq
R7603 Parallelmove.T
R7593 Locations.eq
R7603 Parallelmove.T
R7627 Allocproof_aux.no_overlap_temp
R7692 Locations.diff_sym
R7627 Allocproof_aux.no_overlap_temp
R7692 Locations.diff_sym
R7742 Locations.type
R7742 Locations.type
R7826 Locations.eq
R7837 Parallelmove.T
R7826 Locations.eq
R7837 Parallelmove.T
R7863 Allocproof_aux.no_overlap_temp
R7915 Locations.type
R7863 Allocproof_aux.no_overlap_temp
R7915 Locations.type
R8035 Parallelmove.T
R8009 Allocproof_aux.in_cons_noteq
R8035 Parallelmove.T
R8009 Allocproof_aux.in_cons_noteq
R8035 Parallelmove.T
R8009 Allocproof_aux.in_cons_noteq
R8162 Allocproof_aux.no_overlap_stateD
R8137 Allocproof_aux.no_overlap_stateD
R8122 Parallelmove.stepp
R8270 Allocproof_aux.no_overlapD_inv
R8270 Allocproof_aux.no_overlapD_inv
R8383 Allocproof_aux.no_overlap_stateD
R8402 Parallelmove.stepf
R8358 Allocproof_aux.no_overlap_stateD
R8344 Parallelmove.stepInv
R8498 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8499 Coq.Lists.List.nil
R8507 Parallelmove.Move
R8516 Coq.Lists.List "x :: y" list_scope
R8498 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8499 Coq.Lists.List.nil
R8507 Parallelmove.Move
R8516 Coq.Lists.List "x :: y" list_scope
R8536 Allocproof_aux.no_overlapD_invpp
R8566 Parallelmove.dstep_step
R8536 Allocproof_aux.no_overlapD_invpp
R8566 Parallelmove.dstep_step
R8604 Parallelmove.f2ind
R8604 Parallelmove.f2ind
R8734 Parallelmove.no_overlap_noOverlap
R8734 Parallelmove.no_overlap_noOverlap
R8848 Parallelmove.getdst_app
R8878 Parallelmove.getsrc_app
R8848 Parallelmove.getdst_app
R8848 Parallelmove.getdst_app
R8848 Parallelmove.getdst_app
R8878 Parallelmove.getsrc_app
R8878 Parallelmove.getsrc_app
R8878 Parallelmove.getsrc_app
R9037 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9040 Coq.Lists.List "x :: y" list_scope
R9047 Coq.Lists.List.nil
R9055 Parallelmove.Move
R9037 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9040 Coq.Lists.List "x :: y" list_scope
R9047 Coq.Lists.List.nil
R9055 Parallelmove.Move
R9075 Allocproof_aux.no_overlapD_invpp
R9105 Parallelmove.dstep_step
R9075 Allocproof_aux.no_overlapD_invpp
R9105 Parallelmove.dstep_step
R9143 Parallelmove.f2ind
R9143 Parallelmove.f2ind
R9273 Parallelmove.no_overlap_noOverlap
R9273 Parallelmove.no_overlap_noOverlap
R9387 Parallelmove.getdst_app
R9417 Parallelmove.getsrc_app
R9453 Parallelmove.app_nil
R9387 Parallelmove.getdst_app
R9387 Parallelmove.getdst_app
R9387 Parallelmove.getdst_app
R9387 Parallelmove.getdst_app
R9417 Parallelmove.getsrc_app
R9417 Parallelmove.getsrc_app
R9417 Parallelmove.getsrc_app
R9417 Parallelmove.getsrc_app
R9453 Parallelmove.app_nil
R9453 Parallelmove.app_nil
R9453 Parallelmove.app_nil
R9608 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9611 Coq.Lists.List "x :: y" list_scope
R9621 Coq.Lists.List "x :: y" list_scope
R9608 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9611 Coq.Lists.List "x :: y" list_scope
R9621 Coq.Lists.List "x :: y" list_scope
R9641 Allocproof_aux.no_overlapD_invpp
R9671 Parallelmove.dstep_step
R9641 Allocproof_aux.no_overlapD_invpp
R9671 Parallelmove.dstep_step
R9709 Parallelmove.f2ind
R9709 Parallelmove.f2ind
R9839 Parallelmove.no_overlap_noOverlap
R9839 Parallelmove.no_overlap_noOverlap
R9953 Parallelmove.getdst_app
R9983 Parallelmove.getsrc_app
R9953 Parallelmove.getdst_app
R9953 Parallelmove.getdst_app
R9953 Parallelmove.getdst_app
R9953 Parallelmove.getdst_app
R9983 Parallelmove.getsrc_app
R9983 Parallelmove.getsrc_app
R9983 Parallelmove.getsrc_app
R9983 Parallelmove.getsrc_app
R10227 Allocproof_aux.no_overlap_stateD
R10246 Parallelmove.Pmov
R10202 Allocproof_aux.no_overlap_stateD
R10188 Parallelmove.stepInv
R10290 Coq.Init.Wf.well_founded_ind
R10308 Coq.Arith.Wf_nat.well_founded_ltof
R10335 Parallelmove.mesure
R10290 Coq.Init.Wf.well_founded_ind
R10308 Coq.Arith.Wf_nat.well_founded_ltof
R10335 Parallelmove.mesure
R10405 Parallelmove.Pmov_equation
R10405 Parallelmove.Pmov_equation
R10482 Parallelmove.stepf1_dec
R10482 Parallelmove.stepf1_dec
R10507 Parallelmove.dstep_inv
R10517 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10518 Coq.Lists.List.nil
R10525 Coq.Lists.List "x :: y" list_scope
R10507 Parallelmove.dstep_inv
R10517 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10518 Coq.Lists.List.nil
R10525 Coq.Lists.List "x :: y" list_scope
R10548 Parallelmove.f2ind'
R10548 Parallelmove.f2ind'
R10568 Parallelmove.no_overlap_noOverlap
R10568 Parallelmove.no_overlap_noOverlap
R10696 Parallelmove.getdst_app
R10725 Parallelmove.getsrc_app
R10696 Parallelmove.getdst_app
R10696 Parallelmove.getdst_app
R10725 Parallelmove.getsrc_app
R10725 Parallelmove.getsrc_app
R10802 Allocproof_aux.no_overlapD_invf
R10802 Allocproof_aux.no_overlapD_invf
R10852 Parallelmove.stepf1_dec
R10852 Parallelmove.stepf1_dec
R10877 Parallelmove.dstep_inv
R10887 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10890 Coq.Lists.List "x :: y" list_scope
R10877 Parallelmove.dstep_inv
R10887 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10890 Coq.Lists.List "x :: y" list_scope
R10916 Parallelmove.f2ind'
R10916 Parallelmove.f2ind'
R10936 Parallelmove.no_overlap_noOverlap
R10936 Parallelmove.no_overlap_noOverlap
R11067 Parallelmove.getdst_app
R11105 Parallelmove.getsrc_app
R11067 Parallelmove.getdst_app
R11067 Parallelmove.getdst_app
R11067 Parallelmove.getdst_app
R11067 Parallelmove.getdst_app
R11105 Parallelmove.getsrc_app
R11105 Parallelmove.getsrc_app
R11105 Parallelmove.getsrc_app
R11105 Parallelmove.getsrc_app
R11313 Allocproof_aux.no_overlapD_invf
R11313 Allocproof_aux.no_overlapD_invf
R11379 Coq.Lists.List "x :: y" list_scope
R11373 Locations.R
R11375 Locations.IT1
R11389 Coq.Lists.List "x :: y" list_scope
R11383 Locations.R
R11385 Locations.FT1
R11399 Coq.Lists.List "x :: y" list_scope
R11393 Locations.R
R11395 Locations.IT3
R11402 Coq.Lists.List.nil
R11444 Coq.Lists.List "x :: y" list_scope
R11438 Locations.R
R11440 Locations.IT2
R11454 Coq.Lists.List "x :: y" list_scope
R11448 Locations.R
R11450 Locations.FT2
R11457 Coq.Lists.List.nil
R11562 Coq.Init.Logic "A /\ B" type_scope
R11510 Locations.disjoint
R11547 Allocproof_aux.temporaries1_3
R11524 Parallelmove.getsrc
R11532 Parallelmove.StateDone
R11568 Locations.disjoint
R11605 Allocproof_aux.temporaries1_3
R11582 Parallelmove.getdst
R11590 Parallelmove.StateDone
R11497 Parallelmove.State
R11794 Coq.Init.Logic "A /\ B" type_scope
R11744 Coq.Init.Logic "A \/ B" type_scope
R11726 Coq.Lists.List.In
R11731 Allocproof_aux.temporaries2
R11747 Coq.Lists.List.In
R11753 Parallelmove.getsrc
R11776 Coq.Lists.List "x ++ y" list_scope
R11761 Parallelmove.StateToMove
R11779 Parallelmove.StateBeing
R11688 Coq.Lists.List.In
R11694 Parallelmove.getsrc
R11702 Parallelmove.StateDone
R11860 Coq.Init.Logic "A \/ B" type_scope
R11842 Coq.Lists.List.In
R11847 Allocproof_aux.temporaries2
R11863 Coq.Lists.List.In
R11869 Parallelmove.getdst
R11892 Coq.Lists.List "x ++ y" list_scope
R11877 Parallelmove.StateToMove
R11895 Parallelmove.StateBeing
R11804 Coq.Lists.List.In
R11810 Parallelmove.getdst
R11818 Parallelmove.StateDone
R11660 Parallelmove.State
R11660 Parallelmove.State
R12160 Locations.diff
R12172 Locations.R
R12174 Locations.IT3
R12089 Coq.Lists.List.In
R12095 Parallelmove.getdst
R12118 Coq.Lists.List "x ++ y" list_scope
R12103 Parallelmove.StateToMove
R12136 Coq.Lists.List "x ++ y" list_scope
R12122 Parallelmove.StateBeing
R12139 Parallelmove.StateDone
R12054 Locations.diff
R12066 Locations.R
R12068 Locations.IT3
R11982 Coq.Lists.List.In
R11988 Parallelmove.getdst
R12011 Coq.Lists.List "x ++ y" list_scope
R11996 Parallelmove.StateToMove
R12029 Coq.Lists.List "x ++ y" list_scope
R12015 Parallelmove.StateBeing
R12032 Parallelmove.StateDone
R11954 Parallelmove.step
R12259 Parallelmove.StateDone
R12276 Parallelmove.StateToMove
R12295 Parallelmove.StateBeing
R12313 Parallelmove.getdst
R12339 Parallelmove.getdst_app
R12259 Parallelmove.StateDone
R12259 Parallelmove.StateDone
R12259 Parallelmove.StateDone
R12259 Parallelmove.StateDone
R12259 Parallelmove.StateDone
R12276 Parallelmove.StateToMove
R12276 Parallelmove.StateToMove
R12276 Parallelmove.StateToMove
R12276 Parallelmove.StateToMove
R12276 Parallelmove.StateToMove
R12295 Parallelmove.StateBeing
R12295 Parallelmove.StateBeing
R12295 Parallelmove.StateBeing
R12295 Parallelmove.StateBeing
R12295 Parallelmove.StateBeing
R12313 Parallelmove.getdst
R12313 Parallelmove.getdst
R12313 Parallelmove.getdst
R12313 Parallelmove.getdst
R12313 Parallelmove.getdst
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12339 Parallelmove.getdst_app
R12440 Locations.eq
R12450 Parallelmove.T
R12440 Locations.eq
R12450 Parallelmove.T
R12496 Locations.type
R12496 Locations.type
R12597 Parallelmove.T
R12571 Allocproof_aux.in_cons_noteq
R12597 Parallelmove.T
R12571 Allocproof_aux.in_cons_noteq
R12892 Locations.diff
R12904 Locations.R
R12906 Locations.IT3
R12821 Coq.Lists.List.In
R12827 Parallelmove.getdst
R12850 Coq.Lists.List "x ++ y" list_scope
R12835 Parallelmove.StateToMove
R12868 Coq.Lists.List "x ++ y" list_scope
R12854 Parallelmove.StateBeing
R12871 Parallelmove.StateDone
R12786 Locations.diff
R12798 Locations.R
R12800 Locations.IT3
R12714 Coq.Lists.List.In
R12720 Parallelmove.getdst
R12743 Coq.Lists.List "x ++ y" list_scope
R12728 Parallelmove.StateToMove
R12761 Coq.Lists.List "x ++ y" list_scope
R12747 Parallelmove.StateBeing
R12764 Parallelmove.StateDone
R12685 Parallelmove.stepp
R13026 Allocproof_aux.Done_notmp3_inv
R13026 Allocproof_aux.Done_notmp3_inv
R13339 Locations.diff
R13351 Locations.R
R13353 Locations.IT3
R13236 Coq.Lists.List.In
R13246 Parallelmove.getdst
R13281 Coq.Lists.List "x ++ y" list_scope
R13258 Parallelmove.StateToMove
R13271 Parallelmove.stepf
R13307 Coq.Lists.List "x ++ y" list_scope
R13285 Parallelmove.StateBeing
R13297 Parallelmove.stepf
R13310 Parallelmove.StateDone
R13321 Parallelmove.stepf
R13201 Locations.diff
R13213 Locations.R
R13215 Locations.IT3
R13129 Coq.Lists.List.In
R13135 Parallelmove.getdst
R13158 Coq.Lists.List "x ++ y" list_scope
R13143 Parallelmove.StateToMove
R13176 Coq.Lists.List "x ++ y" list_scope
R13162 Parallelmove.StateBeing
R13179 Parallelmove.StateDone
R13101 Parallelmove.stepInv
R13514 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13569 Allocproof_aux.Done_notmp3_invpp
R13604 Parallelmove.dstep_step
R13628 Parallelmove.f2ind
R13514 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13569 Allocproof_aux.Done_notmp3_invpp
R13569 Allocproof_aux.Done_notmp3_invpp
R13569 Allocproof_aux.Done_notmp3_invpp
R13604 Parallelmove.dstep_step
R13604 Parallelmove.dstep_step
R13604 Parallelmove.dstep_step
R13628 Parallelmove.f2ind
R13628 Parallelmove.f2ind
R13628 Parallelmove.f2ind
R13931 Locations.diff
R13943 Locations.R
R13945 Locations.IT3
R13831 Coq.Lists.List.In
R13841 Parallelmove.getdst
R13875 Coq.Lists.List "x ++ y" list_scope
R13853 Parallelmove.StateToMove
R13866 Parallelmove.Pmov
R13900 Coq.Lists.List "x ++ y" list_scope
R13879 Parallelmove.StateBeing
R13891 Parallelmove.Pmov
R13903 Parallelmove.StateDone
R13914 Parallelmove.Pmov
R13796 Locations.diff
R13808 Locations.R
R13810 Locations.IT3
R13724 Coq.Lists.List.In
R13730 Parallelmove.getdst
R13753 Coq.Lists.List "x ++ y" list_scope
R13738 Parallelmove.StateToMove
R13771 Coq.Lists.List "x ++ y" list_scope
R13757 Parallelmove.StateBeing
R13774 Parallelmove.StateDone
R13696 Parallelmove.stepInv
R13985 Coq.Init.Wf.well_founded_ind
R14003 Coq.Arith.Wf_nat.well_founded_ltof
R14030 Parallelmove.mesure
R13985 Coq.Init.Wf.well_founded_ind
R14003 Coq.Arith.Wf_nat.well_founded_ltof
R14030 Parallelmove.mesure
R14101 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14101 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14132 Parallelmove.Pmov_equation
R14132 Parallelmove.Pmov_equation
R14284 Parallelmove.stepf1_dec
R14304 Parallelmove.dstep_inv
R14331 Parallelmove.f2ind'
R14350 Allocproof_aux.Done_notmp3_invf
R14284 Parallelmove.stepf1_dec
R14304 Parallelmove.dstep_inv
R14331 Parallelmove.f2ind'
R14350 Allocproof_aux.Done_notmp3_invf
R14284 Parallelmove.stepf1_dec
R14304 Parallelmove.dstep_inv
R14331 Parallelmove.f2ind'
R14350 Allocproof_aux.Done_notmp3_invf
R14669 Coq.Init.Logic "A /\ B" type_scope
R14650 Locations.diff
R14662 Locations.R
R14664 Locations.IT1
R14672 Locations.diff
R14684 Locations.R
R14686 Locations.FT1
R14579 Coq.Lists.List.In
R14585 Parallelmove.getdst
R14608 Coq.Lists.List "x ++ y" list_scope
R14593 Parallelmove.StateToMove
R14626 Coq.Lists.List "x ++ y" list_scope
R14612 Parallelmove.StateBeing
R14629 Parallelmove.StateDone
R14541 Coq.Init.Logic "A /\ B" type_scope
R14522 Locations.diff
R14534 Locations.R
R14536 Locations.IT1
R14544 Locations.diff
R14556 Locations.R
R14558 Locations.FT1
R14450 Coq.Lists.List.In
R14456 Parallelmove.getdst
R14479 Coq.Lists.List "x ++ y" list_scope
R14464 Parallelmove.StateToMove
R14497 Coq.Lists.List "x ++ y" list_scope
R14483 Parallelmove.StateBeing
R14500 Parallelmove.StateDone
R14422 Parallelmove.step
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14782 Parallelmove.getdst_app
R14883 Locations.eq
R14893 Parallelmove.T
R14883 Locations.eq
R14893 Parallelmove.T
R14935 Locations.type
R14935 Locations.type
R15031 Parallelmove.T
R15005 Allocproof_aux.in_cons_noteq
R15031 Parallelmove.T
R15005 Allocproof_aux.in_cons_noteq
R15379 Coq.Init.Logic "A /\ B" type_scope
R15360 Locations.diff
R15372 Locations.R
R15374 Locations.IT1
R15382 Locations.diff
R15394 Locations.R
R15396 Locations.FT1
R15289 Coq.Lists.List.In
R15295 Parallelmove.getdst
R15318 Coq.Lists.List "x ++ y" list_scope
R15303 Parallelmove.StateToMove
R15336 Coq.Lists.List "x ++ y" list_scope
R15322 Parallelmove.StateBeing
R15339 Parallelmove.StateDone
R15251 Coq.Init.Logic "A /\ B" type_scope
R15232 Locations.diff
R15244 Locations.R
R15246 Locations.IT1
R15254 Locations.diff
R15266 Locations.R
R15268 Locations.FT1
R15160 Coq.Lists.List.In
R15166 Parallelmove.getdst
R15189 Coq.Lists.List "x ++ y" list_scope
R15174 Parallelmove.StateToMove
R15207 Coq.Lists.List "x ++ y" list_scope
R15193 Parallelmove.StateBeing
R15210 Parallelmove.StateDone
R15131 Parallelmove.stepp
R15516 Allocproof_aux.Done_notmp1_inv
R15516 Allocproof_aux.Done_notmp1_inv
R15870 Coq.Init.Logic "A /\ B" type_scope
R15851 Locations.diff
R15863 Locations.R
R15865 Locations.IT1
R15873 Locations.diff
R15885 Locations.R
R15887 Locations.FT1
R15748 Coq.Lists.List.In
R15758 Parallelmove.getdst
R15793 Coq.Lists.List "x ++ y" list_scope
R15770 Parallelmove.StateToMove
R15783 Parallelmove.stepf
R15819 Coq.Lists.List "x ++ y" list_scope
R15797 Parallelmove.StateBeing
R15809 Parallelmove.stepf
R15822 Parallelmove.StateDone
R15833 Parallelmove.stepf
R15710 Coq.Init.Logic "A /\ B" type_scope
R15691 Locations.diff
R15703 Locations.R
R15705 Locations.IT1
R15713 Locations.diff
R15725 Locations.R
R15727 Locations.FT1
R15619 Coq.Lists.List.In
R15625 Parallelmove.getdst
R15648 Coq.Lists.List "x ++ y" list_scope
R15633 Parallelmove.StateToMove
R15666 Coq.Lists.List "x ++ y" list_scope
R15652 Parallelmove.StateBeing
R15669 Parallelmove.StateDone
R15591 Parallelmove.stepInv
R16048 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16103 Allocproof_aux.Done_notmp1_invpp
R16138 Parallelmove.dstep_step
R16162 Parallelmove.f2ind
R16048 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16103 Allocproof_aux.Done_notmp1_invpp
R16103 Allocproof_aux.Done_notmp1_invpp
R16103 Allocproof_aux.Done_notmp1_invpp
R16138 Parallelmove.dstep_step
R16138 Parallelmove.dstep_step
R16138 Parallelmove.dstep_step
R16162 Parallelmove.f2ind
R16162 Parallelmove.f2ind
R16162 Parallelmove.f2ind
R16506 Coq.Init.Logic "A /\ B" type_scope
R16487 Locations.diff
R16499 Locations.R
R16501 Locations.IT1
R16509 Locations.diff
R16521 Locations.R
R16523 Locations.FT1
R16387 Coq.Lists.List.In
R16397 Parallelmove.getdst
R16431 Coq.Lists.List "x ++ y" list_scope
R16409 Parallelmove.StateToMove
R16422 Parallelmove.Pmov
R16456 Coq.Lists.List "x ++ y" list_scope
R16435 Parallelmove.StateBeing
R16447 Parallelmove.Pmov
R16459 Parallelmove.StateDone
R16470 Parallelmove.Pmov
R16349 Coq.Init.Logic "A /\ B" type_scope
R16330 Locations.diff
R16342 Locations.R
R16344 Locations.IT1
R16352 Locations.diff
R16364 Locations.R
R16366 Locations.FT1
R16258 Coq.Lists.List.In
R16264 Parallelmove.getdst
R16287 Coq.Lists.List "x ++ y" list_scope
R16272 Parallelmove.StateToMove
R16305 Coq.Lists.List "x ++ y" list_scope
R16291 Parallelmove.StateBeing
R16308 Parallelmove.StateDone
R16230 Parallelmove.stepInv
R16563 Coq.Init.Wf.well_founded_ind
R16581 Coq.Arith.Wf_nat.well_founded_ltof
R16608 Parallelmove.mesure
R16563 Coq.Init.Wf.well_founded_ind
R16581 Coq.Arith.Wf_nat.well_founded_ltof
R16608 Parallelmove.mesure
R16679 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16679 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16776 Parallelmove.Pmov_equation
R16776 Parallelmove.Pmov_equation
R16862 Parallelmove.stepf1_dec
R16882 Parallelmove.dstep_inv
R16909 Parallelmove.f2ind'
R16928 Allocproof_aux.Done_notmp1_invf
R16862 Parallelmove.stepf1_dec
R16882 Parallelmove.dstep_inv
R16909 Parallelmove.f2ind'
R16928 Allocproof_aux.Done_notmp1_invf
R16862 Parallelmove.stepf1_dec
R16882 Parallelmove.dstep_inv
R16909 Parallelmove.f2ind'
R16928 Allocproof_aux.Done_notmp1_invf
R17250 Coq.Init.Logic "A /\ B" type_scope
R17231 Locations.diff
R17243 Locations.R
R17245 Locations.IT1
R17253 Locations.diff
R17265 Locations.R
R17267 Locations.FT1
R17160 Coq.Lists.List.In
R17166 Parallelmove.getsrc
R17189 Coq.Lists.List "x ++ y" list_scope
R17174 Parallelmove.StateToMove
R17207 Coq.Lists.List "x ++ y" list_scope
R17193 Parallelmove.StateBeing
R17210 Parallelmove.StateDone
R17122 Coq.Init.Logic "A /\ B" type_scope
R17103 Locations.diff
R17115 Locations.R
R17117 Locations.IT1
R17125 Locations.diff
R17137 Locations.R
R17139 Locations.FT1
R17031 Coq.Lists.List.In
R17037 Parallelmove.getsrc
R17060 Coq.Lists.List "x ++ y" list_scope
R17045 Parallelmove.StateToMove
R17078 Coq.Lists.List "x ++ y" list_scope
R17064 Parallelmove.StateBeing
R17081 Parallelmove.StateDone
R17003 Parallelmove.step
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17363 Parallelmove.getsrc_app
R17464 Locations.eq
R17474 Parallelmove.T
R17464 Locations.eq
R17474 Parallelmove.T
R17516 Locations.type
R17516 Locations.type
R17612 Parallelmove.T
R17586 Allocproof_aux.in_cons_noteq
R17612 Parallelmove.T
R17586 Allocproof_aux.in_cons_noteq
R17963 Coq.Init.Logic "A /\ B" type_scope
R17944 Locations.diff
R17956 Locations.R
R17958 Locations.IT1
R17966 Locations.diff
R17978 Locations.R
R17980 Locations.FT1
R17873 Coq.Lists.List.In
R17879 Parallelmove.getsrc
R17902 Coq.Lists.List "x ++ y" list_scope
R17887 Parallelmove.StateToMove
R17920 Coq.Lists.List "x ++ y" list_scope
R17906 Parallelmove.StateBeing
R17923 Parallelmove.StateDone
R17835 Coq.Init.Logic "A /\ B" type_scope
R17816 Locations.diff
R17828 Locations.R
R17830 Locations.IT1
R17838 Locations.diff
R17850 Locations.R
R17852 Locations.FT1
R17744 Coq.Lists.List.In
R17750 Parallelmove.getsrc
R17773 Coq.Lists.List "x ++ y" list_scope
R17758 Parallelmove.StateToMove
R17791 Coq.Lists.List "x ++ y" list_scope
R17777 Parallelmove.StateBeing
R17794 Parallelmove.StateDone
R17715 Parallelmove.stepp
R18100 Allocproof_aux.Done_notmp1src_inv
R18100 Allocproof_aux.Done_notmp1src_inv
R18460 Coq.Init.Logic "A /\ B" type_scope
R18441 Locations.diff
R18453 Locations.R
R18455 Locations.IT1
R18463 Locations.diff
R18475 Locations.R
R18477 Locations.FT1
R18338 Coq.Lists.List.In
R18348 Parallelmove.getsrc
R18383 Coq.Lists.List "x ++ y" list_scope
R18360 Parallelmove.StateToMove
R18373 Parallelmove.stepf
R18409 Coq.Lists.List "x ++ y" list_scope
R18387 Parallelmove.StateBeing
R18399 Parallelmove.stepf
R18412 Parallelmove.StateDone
R18423 Parallelmove.stepf
R18300 Coq.Init.Logic "A /\ B" type_scope
R18281 Locations.diff
R18293 Locations.R
R18295 Locations.IT1
R18303 Locations.diff
R18315 Locations.R
R18317 Locations.FT1
R18209 Coq.Lists.List.In
R18215 Parallelmove.getsrc
R18238 Coq.Lists.List "x ++ y" list_scope
R18223 Parallelmove.StateToMove
R18256 Coq.Lists.List "x ++ y" list_scope
R18242 Parallelmove.StateBeing
R18259 Parallelmove.StateDone
R18181 Parallelmove.stepInv
R18620 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18675 Allocproof_aux.Done_notmp1src_invpp
R18713 Parallelmove.dstep_step
R18738 Parallelmove.f2ind
R18620 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18675 Allocproof_aux.Done_notmp1src_invpp
R18675 Allocproof_aux.Done_notmp1src_invpp
R18675 Allocproof_aux.Done_notmp1src_invpp
R18713 Parallelmove.dstep_step
R18713 Parallelmove.dstep_step
R18713 Parallelmove.dstep_step
R18738 Parallelmove.f2ind
R18738 Parallelmove.f2ind
R18738 Parallelmove.f2ind
R19084 Coq.Init.Logic "A /\ B" type_scope
R19065 Locations.diff
R19077 Locations.R
R19079 Locations.IT1
R19087 Locations.diff
R19099 Locations.R
R19101 Locations.FT1
R18965 Coq.Lists.List.In
R18975 Parallelmove.getsrc
R19009 Coq.Lists.List "x ++ y" list_scope
R18987 Parallelmove.StateToMove
R19000 Parallelmove.Pmov
R19034 Coq.Lists.List "x ++ y" list_scope
R19013 Parallelmove.StateBeing
R19025 Parallelmove.Pmov
R19037 Parallelmove.StateDone
R19048 Parallelmove.Pmov
R18927 Coq.Init.Logic "A /\ B" type_scope
R18908 Locations.diff
R18920 Locations.R
R18922 Locations.IT1
R18930 Locations.diff
R18942 Locations.R
R18944 Locations.FT1
R18836 Coq.Lists.List.In
R18842 Parallelmove.getsrc
R18865 Coq.Lists.List "x ++ y" list_scope
R18850 Parallelmove.StateToMove
R18883 Coq.Lists.List "x ++ y" list_scope
R18869 Parallelmove.StateBeing
R18886 Parallelmove.StateDone
R18808 Parallelmove.stepInv
R19141 Coq.Init.Wf.well_founded_ind
R19159 Coq.Arith.Wf_nat.well_founded_ltof
R19186 Parallelmove.mesure
R19141 Coq.Init.Wf.well_founded_ind
R19159 Coq.Arith.Wf_nat.well_founded_ltof
R19186 Parallelmove.mesure
R19257 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R19257 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R19354 Parallelmove.Pmov_equation
R19354 Parallelmove.Pmov_equation
R19440 Parallelmove.stepf1_dec
R19460 Parallelmove.dstep_inv
R19487 Parallelmove.f2ind'
R19506 Allocproof_aux.Done_notmp1src_invf
R19440 Parallelmove.stepf1_dec
R19460 Parallelmove.dstep_inv
R19487 Parallelmove.f2ind'
R19506 Allocproof_aux.Done_notmp1src_invf
R19440 Parallelmove.stepf1_dec
R19460 Parallelmove.dstep_inv
R19487 Parallelmove.f2ind'
R19506 Allocproof_aux.Done_notmp1src_invf
R19694 Coq.Init.Logic "A \/ B" type_scope
R19676 Coq.Lists.List.In
R19681 Allocproof_aux.temporaries2
R19699 Coq.Lists.List.In
R19705 Parallelmove.getdst
R19728 Coq.Lists.List "x ++ y" list_scope
R19713 Parallelmove.StateToMove
R19746 Coq.Lists.List "x ++ y" list_scope
R19732 Parallelmove.StateBeing
R19749 Parallelmove.StateDone
R19605 Coq.Lists.List.In
R19611 Parallelmove.getdst
R19634 Coq.Lists.List "x ++ y" list_scope
R19619 Parallelmove.StateToMove
R19652 Coq.Lists.List "x ++ y" list_scope
R19638 Parallelmove.StateBeing
R19655 Parallelmove.StateDone
R19579 Parallelmove.step
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19825 Parallelmove.getdst_app
R19911 Locations.eq
R19921 Parallelmove.T
R19911 Locations.eq
R19921 Parallelmove.T
R19963 Locations.type
R19963 Locations.type
R20053 Parallelmove.T
R20027 Allocproof_aux.in_cons_noteq
R20053 Parallelmove.T
R20027 Allocproof_aux.in_cons_noteq
R20236 Coq.Init.Logic "A \/ B" type_scope
R20218 Coq.Lists.List.In
R20223 Allocproof_aux.temporaries2
R20241 Coq.Lists.List.In
R20247 Parallelmove.getdst
R20270 Coq.Lists.List "x ++ y" list_scope
R20255 Parallelmove.StateToMove
R20288 Coq.Lists.List "x ++ y" list_scope
R20274 Parallelmove.StateBeing
R20291 Parallelmove.StateDone
R20147 Coq.Lists.List.In
R20153 Parallelmove.getdst
R20176 Coq.Lists.List "x ++ y" list_scope
R20161 Parallelmove.StateToMove
R20194 Coq.Lists.List "x ++ y" list_scope
R20180 Parallelmove.StateBeing
R20197 Parallelmove.StateDone
R20120 Parallelmove.stepp
R20527 Allocproof_aux.dst_tmp2_step
R20527 Allocproof_aux.dst_tmp2_step
R20744 Coq.Init.Logic "A \/ B" type_scope
R20726 Coq.Lists.List.In
R20731 Allocproof_aux.temporaries2
R20749 Coq.Lists.List.In
R20755 Parallelmove.getdst
R20778 Coq.Lists.List "x ++ y" list_scope
R20763 Parallelmove.StateToMove
R20796 Coq.Lists.List "x ++ y" list_scope
R20782 Parallelmove.StateBeing
R20799 Parallelmove.StateDone
R20623 Coq.Lists.List.In
R20633 Parallelmove.getdst
R20668 Coq.Lists.List "x ++ y" list_scope
R20645 Parallelmove.StateToMove
R20658 Parallelmove.stepf
R20694 Coq.Lists.List "x ++ y" list_scope
R20672 Parallelmove.StateBeing
R20684 Parallelmove.stepf
R20697 Parallelmove.StateDone
R20708 Parallelmove.stepf
R20597 Parallelmove.stepInv
R20953 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21008 Allocproof_aux.dst_tmp2_stepp
R21040 Parallelmove.dstep_step
R21064 Parallelmove.f2ind
R20953 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21008 Allocproof_aux.dst_tmp2_stepp
R21008 Allocproof_aux.dst_tmp2_stepp
R21008 Allocproof_aux.dst_tmp2_stepp
R21040 Parallelmove.dstep_step
R21040 Parallelmove.dstep_step
R21040 Parallelmove.dstep_step
R21064 Parallelmove.f2ind
R21064 Parallelmove.f2ind
R21064 Parallelmove.f2ind
R21273 Coq.Init.Logic "A \/ B" type_scope
R21255 Coq.Lists.List.In
R21260 Allocproof_aux.temporaries2
R21278 Coq.Lists.List.In
R21284 Parallelmove.getdst
R21307 Coq.Lists.List "x ++ y" list_scope
R21292 Parallelmove.StateToMove
R21325 Coq.Lists.List "x ++ y" list_scope
R21311 Parallelmove.StateBeing
R21328 Parallelmove.StateDone
R21155 Coq.Lists.List.In
R21165 Parallelmove.getdst
R21199 Coq.Lists.List "x ++ y" list_scope
R21177 Parallelmove.StateToMove
R21190 Parallelmove.Pmov
R21224 Coq.Lists.List "x ++ y" list_scope
R21203 Parallelmove.StateBeing
R21215 Parallelmove.Pmov
R21227 Parallelmove.StateDone
R21238 Parallelmove.Pmov
R21129 Parallelmove.stepInv
R21379 Coq.Init.Wf.well_founded_ind
R21397 Coq.Arith.Wf_nat.well_founded_ltof
R21424 Parallelmove.mesure
R21379 Coq.Init.Wf.well_founded_ind
R21397 Coq.Arith.Wf_nat.well_founded_ltof
R21424 Parallelmove.mesure
R21495 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21495 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21592 Parallelmove.Pmov_equation
R21592 Parallelmove.Pmov_equation
R21673 Parallelmove.stepf
R21673 Parallelmove.stepf
R21803 Allocproof_aux.dst_tmp2_stepf
R21803 Allocproof_aux.dst_tmp2_stepf
R21831 Parallelmove.stepf1_dec
R21831 Parallelmove.stepf1_dec
R21856 Parallelmove.dstep_inv
R21894 Parallelmove.f2ind'
R21856 Parallelmove.dstep_inv
R21894 Parallelmove.f2ind'
R21930 Parallelmove.stepf
R22004 Allocproof_aux.dst_tmp2_stepf
R22035 Parallelmove.stepf1_dec
R22063 Parallelmove.dstep_inv
R22101 Parallelmove.f2ind'
R21930 Parallelmove.stepf
R22004 Allocproof_aux.dst_tmp2_stepf
R22035 Parallelmove.stepf1_dec
R22063 Parallelmove.dstep_inv
R22101 Parallelmove.f2ind'
R22258 Coq.Init.Logic "A /\ B" type_scope
R22251 Coq.Init.Logic "x = y" type_scope
R22217 Parallelmove.getsrc
R22225 Allocation.listsLoc2Moves
R22297 Coq.Init.Logic "x = y" type_scope
R22263 Parallelmove.getdst
R22271 Allocation.listsLoc2Moves
R22198 Coq.Init.Logic "x = y" type_scope
R22186 Coq.Lists.List.length
R22200 Coq.Lists.List.length
R22650 Parallelmove.stepInv
R22658 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22662 Coq.Lists.List.nil
R22667 Coq.Lists.List.nil
R22628 Parallelmove.no_overlap_list
R22588 Locations.disjoint
R22612 Conventions.temporaries
R22602 Parallelmove.getdst
R22548 Locations.disjoint
R22572 Conventions.temporaries
R22562 Parallelmove.getsrc
R22531 Parallelmove.simpleDest
R22733 Parallelmove.app_nil
R22733 Parallelmove.app_nil
R22760 Parallelmove.no_overlap_noOverlap
R22781 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22785 Coq.Lists.List.nil
R22790 Coq.Lists.List.nil
R22760 Parallelmove.no_overlap_noOverlap
R22781 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22785 Coq.Lists.List.nil
R22790 Coq.Lists.List.nil
R22906 Parallelmove.app_nil
R22906 Parallelmove.app_nil
R22927 Parallelmove.disjoint_tmp__noTmp
R22927 Parallelmove.disjoint_tmp__noTmp
R23126 Parallelmove.no_overlap_list
R23143 Parallelmove.StateDone
R23154 Parallelmove.Pmov
R23159 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23163 Coq.Lists.List.nil
R23168 Coq.Lists.List.nil
R23104 Parallelmove.no_overlap_list
R23064 Locations.disjoint
R23088 Conventions.temporaries
R23078 Parallelmove.getdst
R23024 Locations.disjoint
R23048 Conventions.temporaries
R23038 Parallelmove.getsrc
R23007 Parallelmove.simpleDest
R22998 Parallelmove.Moves
R23203 Allocproof_aux.no_overlapD_res
R23219 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23223 Coq.Lists.List.nil
R23228 Coq.Lists.List.nil
R23203 Allocproof_aux.no_overlapD_res
R23219 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23223 Coq.Lists.List.nil
R23228 Coq.Lists.List.nil
R23287 Parallelmove.STM_Pmov
R23305 Parallelmove.SB_Pmov
R23329 Parallelmove.app_nil
R23287 Parallelmove.STM_Pmov
R23305 Parallelmove.SB_Pmov
R23329 Parallelmove.app_nil
R23367 Allocproof_aux.stepInv_pnilnil
R23367 Allocproof_aux.stepInv_pnilnil
R23566 Locations.disjoint
R23621 Allocproof_aux.temporaries1
R23580 Parallelmove.getsrc
R23588 Parallelmove.StateDone
R23599 Parallelmove.Pmov
R23604 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23608 Coq.Lists.List.nil
R23613 Coq.Lists.List.nil
R23543 Parallelmove.no_overlap_list
R23503 Locations.disjoint
R23527 Conventions.temporaries
R23517 Parallelmove.getdst
R23463 Locations.disjoint
R23487 Conventions.temporaries
R23477 Parallelmove.getsrc
R23446 Parallelmove.simpleDest
R23437 Parallelmove.Moves
R23662 Allocproof_aux.Done_notmp1src_res
R23681 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23685 Coq.Lists.List.nil
R23690 Coq.Lists.List.nil
R23662 Allocproof_aux.Done_notmp1src_res
R23681 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23685 Coq.Lists.List.nil
R23690 Coq.Lists.List.nil
R23712 Parallelmove.STM_Pmov
R23730 Parallelmove.SB_Pmov
R23754 Parallelmove.app_nil
R23712 Parallelmove.STM_Pmov
R23730 Parallelmove.SB_Pmov
R23754 Parallelmove.app_nil
R23797 Locations.notin_disjoint
R23797 Locations.notin_disjoint
R23851 Parallelmove.stepInv
R23859 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23863 Coq.Lists.List.nil
R23868 Coq.Lists.List.nil
R23886 Allocproof_aux.stepInv_pnilnil
R23851 Parallelmove.stepInv
R23859 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23863 Coq.Lists.List.nil
R23868 Coq.Lists.List.nil
R23886 Allocproof_aux.stepInv_pnilnil
R23886 Allocproof_aux.stepInv_pnilnil
R24028 Conventions.temporaries
R23997 Locations.in_notin_diff
R24078 Parallelmove.getsrc
R24053 Locations.disjoint_notin
R24028 Conventions.temporaries
R23997 Locations.in_notin_diff
R24078 Parallelmove.getsrc
R24053 Locations.disjoint_notin
R24028 Conventions.temporaries
R23997 Locations.in_notin_diff
R24078 Parallelmove.getsrc
R24053 Locations.disjoint_notin
R24281 Locations.disjoint
R24336 Allocproof_aux.temporaries1
R24295 Parallelmove.getdst
R24303 Parallelmove.StateDone
R24314 Parallelmove.Pmov
R24319 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R24323 Coq.Lists.List.nil
R24328 Coq.Lists.List.nil
R24258 Parallelmove.no_overlap_list
R24218 Locations.disjoint
R24242 Conventions.temporaries
R24232 Parallelmove.getdst
R24178 Locations.disjoint
R24202 Conventions.temporaries
R24192 Parallelmove.getsrc
R24161 Parallelmove.simpleDest
R24152 Parallelmove.Moves
R24377 Allocproof_aux.Done_notmp1_res
R24393 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R24397 Coq.Lists.List.nil
R24402 Coq.Lists.List.nil
R24377 Allocproof_aux.Done_notmp1_res
R24393 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R24397 Coq.Lists.List.nil
R24402 Coq.Lists.List.nil
R24424 Parallelmove.STM_Pmov
R24442 Parallelmove.SB_Pmov
R24466 Parallelmove.app_nil
R24424 Parallelmove.STM_Pmov
R24442 Parallelmove.SB_Pmov
R24466 Parallelmove.app_nil
R24509 Locations.notin_disjoint
R24509 Locations.notin_disjoint
R24563 Parallelmove.stepInv
R24571 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R24575 Coq.Lists.List.nil
R24580 Coq.Lists.List.nil
R24598 Allocproof_aux.stepInv_pnilnil
R24563 Parallelmove.stepInv
R24571 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R24575 Coq.Lists.List.nil
R24580 Coq.Lists.List.nil
R24598 Allocproof_aux.stepInv_pnilnil
R24598 Allocproof_aux.stepInv_pnilnil
R24740 Conventions.temporaries
R24709 Locations.in_notin_diff
R24790 Parallelmove.getdst
R24765 Locations.disjoint_notin
R24740 Conventions.temporaries
R24709 Locations.in_notin_diff
R24790 Parallelmove.getdst
R24765 Locations.disjoint_notin
R24740 Conventions.temporaries
R24709 Locations.in_notin_diff
R24790 Parallelmove.getdst
R24765 Locations.disjoint_notin
R25004 Coq.Init.Logic "'exists' x , p" type_scope
R25064 Coq.Init.Logic "A /\ B" type_scope
R25020 LTL.exec_instrs
R25039 Allocproof_aux.p_move
R25120 Coq.Init.Logic "A /\ B" type_scope
R25095 Coq.Init.Logic "x = y" type_scope
R25071 Coq.Lists.List.map
R25085 Parallelmove.getdst
R25097 Coq.Lists.List.map
R25110 Parallelmove.getsrc
R25153 Coq.Init.Logic "A /\ B" type_scope
R25140 Coq.Init.Logic "x = y" type_scope
R25133 Locations.R
R25135 Locations.IT3
R25146 Locations.R
R25148 Locations.IT3
R25238 Coq.Init.Logic "x = y" type_scope
R25204 Locations.notin
R25216 Conventions.temporaries
R25178 Locations.notin
R25191 Parallelmove.getdst
R24962 Locations.disjoint
R24986 Conventions.temporaries
R24976 Parallelmove.getdst
R24922 Locations.disjoint
R24946 Conventions.temporaries
R24936 Parallelmove.getsrc
R24900 Parallelmove.no_overlap_list
R24873 Locations.norepet
R24886 Parallelmove.getdst
R25360 Parallelmove.simpleDest
R25387 Allocproof_aux.norepet_SD
R25360 Parallelmove.simpleDest
R25387 Allocproof_aux.norepet_SD
R25387 Allocproof_aux.norepet_SD
R25426 Parallelmove.stepInv
R25434 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R25438 Coq.Lists.List.nil
R25443 Coq.Lists.List.nil
R25462 Allocproof_aux.stepInv_pnilnil
R25426 Parallelmove.stepInv
R25434 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R25438 Coq.Lists.List.nil
R25443 Coq.Lists.List.nil
R25462 Allocproof_aux.stepInv_pnilnil
R25462 Allocproof_aux.stepInv_pnilnil
R25531 Parallelmove.StateToMove
R25550 Parallelmove.StateBeing
R25579 Parallelmove.app_nil
R25531 Parallelmove.StateToMove
R25550 Parallelmove.StateBeing
R25579 Parallelmove.app_nil
R25579 Parallelmove.app_nil
R25629 Allocproof_aux.exec_instrs_pmov
R25647 Parallelmove.StateDone
R25658 Parallelmove.Pmov
R25663 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R25667 Coq.Lists.List.nil
R25672 Coq.Lists.List.nil
R25706 Allocproof_aux.noO_list_pnilnil
R25736 Allocproof_aux.dis_dsttmp1_pnilnil
R25770 Allocproof_aux.dis_srctmp1_pnilnil
R25629 Allocproof_aux.exec_instrs_pmov
R25647 Parallelmove.StateDone
R25658 Parallelmove.Pmov
R25663 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R25667 Coq.Lists.List.nil
R25672 Coq.Lists.List.nil
R25706 Allocproof_aux.noO_list_pnilnil
R25706 Allocproof_aux.noO_list_pnilnil
R25706 Allocproof_aux.noO_list_pnilnil
R25706 Allocproof_aux.noO_list_pnilnil
R25736 Allocproof_aux.dis_dsttmp1_pnilnil
R25736 Allocproof_aux.dis_dsttmp1_pnilnil
R25736 Allocproof_aux.dis_dsttmp1_pnilnil
R25736 Allocproof_aux.dis_dsttmp1_pnilnil
R25736 Allocproof_aux.dis_dsttmp1_pnilnil
R25736 Allocproof_aux.dis_dsttmp1_pnilnil
R25736 Allocproof_aux.dis_dsttmp1_pnilnil
R25770 Allocproof_aux.dis_srctmp1_pnilnil
R25770 Allocproof_aux.dis_srctmp1_pnilnil
R25770 Allocproof_aux.dis_srctmp1_pnilnil
R25770 Allocproof_aux.dis_srctmp1_pnilnil
R25770 Allocproof_aux.dis_srctmp1_pnilnil
R25770 Allocproof_aux.dis_srctmp1_pnilnil
R25770 Allocproof_aux.dis_srctmp1_pnilnil
R25770 Allocproof_aux.dis_srctmp1_pnilnil
R25770 Allocproof_aux.dis_srctmp1_pnilnil
R25770 Allocproof_aux.dis_srctmp1_pnilnil
R25866 Parallelmove.Fpmov_correct_map
R25866 Parallelmove.Fpmov_correct_map
R25903 Coqlib.list_map_exten
R25994 Conventions.temporaries
R25963 Locations.in_notin_diff
R26046 Parallelmove.getdst
R26021 Locations.disjoint_notin
R25903 Coqlib.list_map_exten
R25994 Conventions.temporaries
R25963 Locations.in_notin_diff
R25994 Conventions.temporaries
R25963 Locations.in_notin_diff
R26046 Parallelmove.getdst
R26021 Locations.disjoint_notin
R25994 Conventions.temporaries
R25963 Locations.in_notin_diff
R26046 Parallelmove.getdst
R26021 Locations.disjoint_notin
R26086 Allocproof_aux.dst_tmp2_res
R26099 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R26103 Coq.Lists.List.nil
R26108 Coq.Lists.List.nil
R26086 Allocproof_aux.dst_tmp2_res
R26099 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R26103 Coq.Lists.List.nil
R26108 Coq.Lists.List.nil
R26186 Parallelmove.app_nil
R26229 Parallelmove.getdst
R26212 Allocproof_aux.In_norepet
R26274 Parallelmove.STM_Pmov
R26292 Parallelmove.SB_Pmov
R26186 Parallelmove.app_nil
R26229 Parallelmove.getdst
R26212 Allocproof_aux.In_norepet
R26274 Parallelmove.STM_Pmov
R26292 Parallelmove.SB_Pmov
R26314 Locations.diff_sym
R26365 Conventions.temporaries
R26334 Locations.in_notin_diff
R26314 Locations.diff_sym
R26365 Conventions.temporaries
R26334 Locations.in_notin_diff
R26430 Parallelmove.getdst
R26405 Locations.disjoint_notin
R26430 Parallelmove.getdst
R26405 Locations.disjoint_notin
R26524 Parallelmove.Fpmov_correct_IT3
R26524 Parallelmove.Fpmov_correct_IT3
R26638 Allocproof_aux.Done_notmp3_res
R26654 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R26658 Coq.Lists.List.nil
R26663 Coq.Lists.List.nil
R26691 Parallelmove.STM_Pmov
R26709 Parallelmove.SB_Pmov
R26638 Allocproof_aux.Done_notmp3_res
R26654 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R26658 Coq.Lists.List.nil
R26663 Coq.Lists.List.nil
R26691 Parallelmove.STM_Pmov
R26691 Parallelmove.STM_Pmov
R26709 Parallelmove.SB_Pmov
R26741 Parallelmove.app_nil
R26787 Conventions.temporaries
R26764 Locations.in_notin_diff
R26741 Parallelmove.app_nil
R26787 Conventions.temporaries
R26764 Locations.in_notin_diff
R26837 Parallelmove.getdst
R26812 Locations.disjoint_notin
R26837 Parallelmove.getdst
R26812 Locations.disjoint_notin
R26910 Parallelmove.Fpmov_correct_ext
R26997 Conventions.temporaries
R26974 Locations.in_notin_diff
R26910 Parallelmove.Fpmov_correct_ext
R26997 Conventions.temporaries
R26974 Locations.in_notin_diff
R26997 Conventions.temporaries
R26974 Locations.in_notin_diff
R26997 Conventions.temporaries
R26974 Locations.in_notin_diff
R27057 Allocproof_aux.dst_tmp2_res
R27070 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R27074 Coq.Lists.List.nil
R27079 Coq.Lists.List.nil
R27057 Allocproof_aux.dst_tmp2_res
R27070 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R27074 Coq.Lists.List.nil
R27079 Coq.Lists.List.nil
R27148 Parallelmove.app_nil
R27192 Parallelmove.STM_Pmov
R27210 Parallelmove.SB_Pmov
R27148 Parallelmove.app_nil
R27192 Parallelmove.STM_Pmov
R27210 Parallelmove.SB_Pmov
R27232 Locations.diff_sym
R27275 Conventions.temporaries
R27252 Locations.in_notin_diff
R27232 Locations.diff_sym
R27275 Conventions.temporaries
R27252 Locations.in_notin_diff
R27365 Locations.diff_sym
R27416 Parallelmove.getdst
R27385 Locations.in_notin_diff
R27365 Locations.diff_sym
R27416 Parallelmove.getdst
R27385 Locations.in_notin_diff
R27654 Coq.Init.Logic "'exists' x , p" type_scope
R27729 Coq.Init.Logic "A /\ B" type_scope
R27670 LTL.exec_instrs
R27689 Allocation.parallel_move
R27773 Coq.Init.Logic "A /\ B" type_scope
R27754 Coq.Init.Logic "x = y" type_scope
R27736 Coq.Lists.List.map
R27756 Coq.Lists.List.map
R27806 Coq.Init.Logic "A /\ B" type_scope
R27793 Coq.Init.Logic "x = y" type_scope
R27786 Locations.R
R27788 Locations.IT3
R27799 Locations.R
R27801 Locations.IT3
R27879 Coq.Init.Logic "x = y" type_scope
R27845 Locations.notin
R27857 Conventions.temporaries
R27825 Locations.notin
R27618 Locations.disjoint
R27636 Conventions.temporaries
R27584 Locations.disjoint
R27602 Conventions.temporaries
R27563 Locations.norepet
R27538 Parallelmove.no_overlap
R27515 Coq.Init.Logic "x = y" type_scope
R27498 Coq.Lists.List.length
R27517 Coq.Lists.List.length
R27963 Allocproof_aux.parallel_move_correct'
R27987 Allocation.listsLoc2Moves
R27963 Allocproof_aux.parallel_move_correct'
R27987 Allocation.listsLoc2Moves
R28028 Allocproof_aux.getdst_lists2moves
R28028 Allocproof_aux.getdst_lists2moves
FAllocproof
R599 Coq.Init.Logic "x = y" type_scope
R556 LTL.call_regs
R574 Conventions.parameter_of_argument
R526 Coq.Lists.List.In
R532 Conventions.loc_arguments
R639 Conventions.loc_arguments_acceptable
R639 Conventions.loc_arguments_acceptable
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R914 Coq.Init.Logic "x = y" type_scope
R863 LTL.return_regs
R894 Locations.R
R897 Conventions.loc_result
R928 Locations.R
R931 Conventions.loc_result
R998 Coq.Lists.List.In_dec
R1033 Conventions.temporaries
R1013 Locations.R
R1016 Conventions.loc_result
R1005 Locations.eq
R998 Coq.Lists.List.In_dec
R1033 Conventions.temporaries
R1013 Locations.R
R1016 Conventions.loc_result
R1005 Locations.eq
R1070 Coq.Lists.List.In_dec
R1105 Conventions.destroyed_at_call
R1085 Locations.R
R1088 Conventions.loc_result
R1077 Locations.eq
R1070 Coq.Lists.List.In_dec
R1105 Conventions.destroyed_at_call
R1085 Locations.R
R1088 Conventions.loc_result
R1077 Locations.eq
R1157 Conventions.loc_result_acceptable
R1157 Conventions.loc_result_acceptable
R1334 Coq.Init.Logic "x = y" type_scope
R1302 LTL.return_regs
R1280 Conventions.loc_acceptable
R1247 Locations.notin
R1259 Conventions.destroyed_at_call
R1431 Coq.Lists.List.In_dec
R1451 Conventions.temporaries
R1446 Locations.R
R1438 Locations.eq
R1431 Coq.Lists.List.In_dec
R1451 Conventions.temporaries
R1446 Locations.R
R1438 Locations.eq
R1497 Coq.Lists.List.In_dec
R1517 Conventions.destroyed_at_call
R1512 Locations.R
R1504 Locations.eq
R1497 Coq.Lists.List.In_dec
R1517 Conventions.destroyed_at_call
R1512 Locations.R
R1504 Locations.eq
R1552 Locations.notin_not_in
R1552 Locations.notin_not_in
R1842 Registers.ge
R1861 Allocation.transfer
R1878 Maps "a !! b"
R1856 Maps "a !! b"
R1815 Coq.Lists.List.In
R1821 RTL.successors
R1802 Coq.Init.Logic "x <> y" type_scope
R1799 Maps "a ! b"
R1791 RTL.fn_code
R1805 Coq.Init.Datatypes.None
R1775 Coq.Init.Logic "x <> y" type_scope
R1772 Maps "a ! b"
R1764 RTL.fn_code
R1778 Coq.Init.Datatypes.None
R1744 Coq.Init.Logic "x = y" type_scope
R1734 Allocation.analyze
R1746 Coq.Init.Datatypes.Some
R1725 RTL.node
R1725 RTL.node
R1702 Maps.t
R1709 Registers.t
R1685 RTL.function
R1910 Allocation.fixpoint_solution
R1910 Allocation.fixpoint_solution
R1973 RTL.fn_code_wf
R1973 RTL.fn_code_wf
R2026 RTL.fn_code_wf
R2026 RTL.fn_code_wf
R2149 Allocation.transfer
R2186 Maps "a !! b"
R2192 RTL.fn_entrypoint
R2163 RTL.fn_entrypoint
R2127 Maps.t
R2134 Registers.t
R2106 RTL.function
R2256 RTL.function
R2280 RTLtyping.regenv
R2303 Maps.t
R2310 Registers.t
R2343 Locations.loc
R2336 Registers.reg
R2401 Coq.Init.Logic "x = y" type_scope
R2366 Coloring.regalloc
R2383 Allocproof.live0
R2403 Coq.Init.Datatypes.Some
R2500 Locations.diff
R2491 Coq.Init.Logic "x <> y" type_scope
R2467 Conventions.loc_acceptable
R2661 Coqlib.zeq
R2661 Coqlib.zeq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R2849 Locations.diff
R2840 Coq.Init.Logic "x <> y" type_scope
R2896 Allocproof.loc_acceptable_noteq_diff
R2896 Allocproof.loc_acceptable_noteq_diff
R2933 Coloringproof.regalloc_acceptable
R2933 Coloringproof.regalloc_acceptable
R3065 Locations.notin
R3051 Coq.Init.Logic "~ x" type_scope
R3053 Coq.Lists.List.In
R3029 Conventions.loc_acceptable
R3142 Allocproof.loc_acceptable_noteq_diff
R3142 Allocproof.loc_acceptable_noteq_diff
R3190 Coq.Init.Logic.sym_not_equal
R3190 Coq.Init.Logic.sym_not_equal
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R3320 Locations.notin
R3298 Coq.Init.Logic "~ x" type_scope
R3300 Coq.Lists.List.In
R3367 Allocproof.loc_acceptable_notin_notin
R3367 Allocproof.loc_acceptable_notin_notin
R3405 Coloringproof.regalloc_acceptable
R3405 Coloringproof.regalloc_acceptable
R3532 Locations.norepet
R3545 Coq.Lists.List.map
R3494 Coqlib.list_norepet
R3508 Coq.Lists.List.map
R3611 Locations.norepet_nil
R3611 Locations.norepet_nil
R3651 Locations.norepet_cons
R3651 Locations.norepet_cons
R3678 Allocproof.regalloc_notin_notin
R3678 Allocproof.regalloc_notin_notin
R3773 Locations.notin
R3793 Conventions.temporaries
R3764 Registers.reg
R3829 Conventions.temporaries_not_acceptable
R3829 Conventions.temporaries_not_acceptable
R3867 Coloringproof.regalloc_acceptable
R3867 Coloringproof.regalloc_acceptable
R3961 Locations.disjoint
R3994 Conventions.temporaries
R3975 Coq.Lists.List.map
R3948 Coq.Lists.List.list
R3953 Registers.reg
R4033 Locations.notin_disjoint
R4033 Locations.notin_disjoint
R4075 Coqlib.list_in_map_inv
R4075 Coqlib.list_in_map_inv
R4138 Allocproof.regalloc_not_temporary
R4138 Allocproof.regalloc_not_temporary
R4307 RTL.function
R4335 RTLtyping.regenv
R4359 Maps.t
R4366 Registers.t
R4400 Locations.loc
R4393 Registers.reg
R4463 Coq.Init.Logic "x = y" type_scope
R4426 Coloring.regalloc
R4444 Allocproof.live0
R4465 Coq.Init.Datatypes.Some
R4610 Coq.Init.Logic "x = y" type_scope
R4614 Registers "a # b"
R4586 Coq.Init.Logic "x = y" type_scope
R4568 Registers.mem
R4588 Coq.Init.Datatypes.true
R4562 Registers.reg
R4531 LTL.locset
R4518 RTL.regset
R4503 Registers.t
R4721 Allocproof.agree
R4698 Allocproof.agree
R4673 Registers.ge
R4885 Allocproof.agree
R4852 Allocproof.agree
R4926 Allocproof.agree_increasing
R4926 Allocproof.agree_increasing
R4988 Registers.eq
R4988 Registers.eq
R5027 Registers.mem_add_same
R5027 Registers.mem_add_same
R5058 Registers.mem_add_other
R5058 Registers.mem_add_other
R5190 Allocproof.agree
R5151 Allocproof.agree
R5158 Allocation.reg_list_live
R5269 Allocproof.agree_reg_live
R5269 Allocproof.agree_reg_live
R5414 Allocproof.agree
R5375 Allocproof.agree
R5382 Allocation.reg_sum_live
R5483 Allocproof.agree_reg_live
R5483 Allocproof.agree_reg_live
R5622 Coq.Init.Logic "x = y" type_scope
R5626 Registers "a # b"
R5575 Allocproof.agree
R5662 Registers.mem_add_same
R5662 Registers.mem_add_same
R5812 Coq.Init.Logic "x = y" type_scope
R5779 Coq.Lists.List.map
R5792 Coq.Lists.List.map
R5816 Registers "a ## b"
R5738 Allocproof.agree
R5745 Allocation.reg_list_live
R5884 Coq.Init.Logic.f_equal2
R5895 Coq.Lists.List.cons
R5900 Values.val
R5884 Coq.Init.Logic.f_equal2
R5895 Coq.Lists.List.cons
R5900 Values.val
R5916 Allocproof.agree_eval_reg
R5916 Allocproof.agree_eval_reg
R5951 Allocproof.agree_reg_list_live
R5951 Allocproof.agree_reg_list_live
R6142 Allocproof.agree
R6129 Coq.Init.Logic "x = y" type_scope
R6096 Locations.notin
R6108 Conventions.temporaries
R6063 Allocproof.agree
R6229 Allocproof.regalloc_not_temporary
R6229 Allocproof.regalloc_not_temporary
R6371 Allocproof.agree
R6385 Registers "a # b <- c"
R6349 Allocproof.agree
R6336 Coq.Init.Logic "x = y" type_scope
R6318 Registers.mem
R6338 Coq.Init.Datatypes.false
R6437 Registers.eq
R6437 Registers.eq
R6492 Registers.gso
R6492 Registers.gso
R6795 Allocproof.agree
R6809 Registers "a # b <- c"
R6760 Allocproof.agree
R6747 Coq.Init.Logic "x = y" type_scope
R6714 Locations.notin
R6726 Conventions.temporaries
R6689 Locations.diff
R6669 Coq.Init.Logic "x = y" type_scope
R6636 Coq.Init.Logic "x <> y" type_scope
R6619 Coq.Init.Logic "x <> y" type_scope
R6607 Coq.Init.Logic "x = y" type_scope
R6589 Registers.mem
R6609 Coq.Init.Datatypes.true
R6862 Registers.eq
R6862 Registers.eq
R6903 Registers.gss
R6903 Registers.gss
R6937 Registers.gso
R6937 Registers.gso
R6987 Registers.mem_remove_other
R6987 Registers.mem_remove_other
R7034 Allocproof.regalloc_noteq_diff
R7034 Allocproof.regalloc_noteq_diff
R7093 Allocproof.regalloc_not_temporary
R7093 Allocproof.regalloc_not_temporary
R7477 Allocproof.agree
R7491 Registers "a # b <- c"
R7502 Registers "a # b"
R7425 Allocproof.agree
R7412 Coq.Init.Logic "x = y" type_scope
R7379 Locations.notin
R7391 Conventions.temporaries
R7352 Locations.diff
R7318 Coq.Init.Logic "x = y" type_scope
R7281 Coq.Init.Logic "x <> y" type_scope
R7256 Coq.Init.Logic "x <> y" type_scope
R7244 Coq.Init.Logic "x <> y" type_scope
R7232 Coq.Init.Logic "x = y" type_scope
R7214 Registers.mem
R7234 Coq.Init.Datatypes.true
R7187 LTL.locset
R7187 LTL.locset
R7554 Registers.eq
R7554 Registers.eq
R7595 Registers.gss
R7595 Registers.gss
R7637 Registers.mem_add_same
R7637 Registers.mem_add_same
R7668 Registers.gso
R7668 Registers.gso
R7694 Locations.eq
R7694 Locations.eq
R7767 Registers.eq
R7767 Registers.eq
R7816 Registers.mem_add_same
R7816 Registers.mem_add_same
R7890 Registers.eq
R7890 Registers.eq
R7927 Registers.mem_add_same
R7927 Registers.mem_add_same
R7958 Registers.mem_add_other
R7958 Registers.mem_add_other
R7996 Registers.mem_remove_other
R7996 Registers.mem_remove_other
R8036 Allocproof.regalloc_noteq_diff
R8036 Allocproof.regalloc_noteq_diff
R8073 Allocproof.regalloc_not_temporary
R8073 Allocproof.regalloc_not_temporary
R8601 Allocproof.agree
R8615 Registers "a # b <- c"
R8524 Allocproof.agree
R8531 Allocation.reg_list_live
R8551 Allocation.reg_sum_live
R8511 Coq.Init.Logic "x = y" type_scope
R8474 Locations.diff
R8454 Conventions.loc_acceptable
R8421 Locations.notin
R8433 Conventions.destroyed_at_call
R8397 Coq.Init.Logic "x = y" type_scope
R8360 Coq.Init.Logic "x <> y" type_scope
R8341 Coq.Init.Logic "x <> y" type_scope
R8329 Coq.Init.Logic "x = y" type_scope
R8311 Registers.mem
R8331 Coq.Init.Datatypes.true
R8243 Coq.Init.Logic "~ x" type_scope
R8245 Coq.Lists.List.In
R8259 Conventions.destroyed_at_call
R8229 Coq.Init.Logic "x <> y" type_scope
R8213 Coq.Init.Logic "x = y" type_scope
R8195 Registers.mem
R8215 Coq.Init.Datatypes.true
R8169 LTL.locset
R8169 LTL.locset
R8659 Allocproof.agree
R8659 Allocproof.agree
R8701 Allocproof.agree_reg_sum_live
R8701 Allocproof.agree_reg_sum_live
R8739 Allocproof.agree_reg_list_live
R8739 Allocproof.agree_reg_list_live
R8806 Registers.eq
R8806 Registers.eq
R8847 Registers.gss
R8847 Registers.gss
R8881 Registers.gso
R8881 Registers.gso
R8931 Registers.mem_remove_other
R8931 Registers.mem_remove_other
R8971 Allocproof.regalloc_notin_notin
R8971 Allocproof.regalloc_notin_notin
R9010 Coloringproof.regalloc_acceptable
R9010 Coloringproof.regalloc_acceptable
R9047 Allocproof.regalloc_noteq_diff
R9047 Allocproof.regalloc_noteq_diff
R9337 Allocproof.agree
R9349 RTL.init_regs
R9278 Allocproof.agree
R9309 Registers.init
R9321 Values.Vundef
R9285 Allocation.reg_list_dead
R9268 Coq.Init.Logic "x = y" type_scope
R9235 Coq.Lists.List.map
R9248 Coq.Lists.List.map
R9216 Coq.Init.Logic "x <> y" type_scope
R9193 Coq.Init.Logic "x <> y" type_scope
R9180 Coq.Init.Logic "x = y" type_scope
R9161 Registers.mem
R9182 Coq.Init.Datatypes.true
R9149 Coq.Lists.List.In
R9462 Allocproof.agree
R9487 RTL.init_regs
R9462 Allocproof.agree
R9487 RTL.init_regs
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R9556 Registers.eq
R9556 Registers.eq
R9598 Registers.mem_remove_same
R9598 Registers.mem_remove_same
R9652 Registers.mem_remove_other
R9652 Registers.mem_remove_other
R9742 Registers.eq
R9742 Registers.eq
R9781 Registers.gss
R9781 Registers.gss
R9816 Registers.gso
R9816 Registers.gso
R9855 Registers.mem_remove_other
R9855 Registers.mem_remove_other
R10130 Allocproof.agree
R10153 RTL.init_regs
R10137 Allocproof.live0
R10115 Coq.Init.Logic "x = y" type_scope
R10117 Values.Vundef
R10086 Coq.Init.Logic "x = y" type_scope
R10034 Registers.mem
R10048 Allocation.reg_list_dead
R10070 Allocproof.live0
R10088 Coq.Init.Datatypes.true
R10008 Coq.Init.Logic "x = y" type_scope
R9971 Coq.Lists.List.map
R9984 Coq.Lists.List.map
R9951 RTL.fn_params
R10201 Allocproof.agree_init_regs
R10201 Allocproof.agree_init_regs
R10236 Coloringproof.regalloc_correct_3
R10236 Coloringproof.regalloc_correct_3
R10301 Registers.gi
R10301 Registers.gi
R10400 LTL.genv
R10423 Values.val
R10480 Coq.Init.Logic "A \/ B" type_scope
R10476 Coq.Init.Logic "x = y" type_scope
R10463 Locations.R
R10465 Allocation.reg_for
R10483 Coq.Lists.List.In
R10502 Conventions.temporaries
R10487 Locations.R
R10490 Allocation.reg_for
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R10575 Locations.slot_type
R10575 Locations.slot_type
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R10662 Coq.Init.Logic "'exists' x , p" type_scope
R10730 Coq.Init.Logic "A /\ B" type_scope
R10676 LTL.exec_instrs
R10695 Allocation.add_reload
R10756 Coq.Init.Logic "A /\ B" type_scope
R10747 Coq.Init.Logic "x = y" type_scope
R10740 Locations.R
R10799 Coq.Init.Logic "x = y" type_scope
R10771 Locations.diff
R10781 Locations.R
R10865 Locations.mreg_eq
R10865 Locations.mreg_eq
R10926 LTL.exec_refl
R10926 LTL.exec_refl
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R10954 Locations.set
R10978 Locations.R
R10966 Locations.R
R10954 Locations.set
R10978 Locations.R
R10966 Locations.R
R11005 LTL.exec_one
R11021 LTL.exec_Bop
R11005 LTL.exec_one
R11021 LTL.exec_Bop
R11061 Locations.gss
R11061 Locations.gss
R11090 Locations.gso
R11090 Locations.gso
R11118 Locations.set
R11142 Locations.S
R11130 Locations.R
R11118 Locations.set
R11142 Locations.S
R11130 Locations.R
R11168 LTL.exec_one
R11184 LTL.exec_Bgetstack
R11168 LTL.exec_one
R11184 LTL.exec_Bgetstack
R11216 Locations.gss
R11216 Locations.gss
R11245 Locations.gso
R11245 Locations.gso
R11321 Coq.Init.Logic "'exists' x , p" type_scope
R11388 Coq.Init.Logic "A /\ B" type_scope
R11335 LTL.exec_instrs
R11354 Allocation.add_spill
R11414 Coq.Init.Logic "A /\ B" type_scope
R11401 Coq.Init.Logic "x = y" type_scope
R11407 Locations.R
R11453 Coq.Init.Logic "x = y" type_scope
R11429 Locations.diff
R11518 Locations.mreg_eq
R11518 Locations.mreg_eq
R11579 LTL.exec_refl
R11579 LTL.exec_refl
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R11607 Locations.set
R11630 Locations.R
R11619 Locations.R
R11607 Locations.set
R11630 Locations.R
R11619 Locations.R
R11658 LTL.exec_one
R11658 LTL.exec_one
R11674 LTL.exec_Bop
R11674 LTL.exec_Bop
R11712 Locations.gss
R11712 Locations.gss
R11740 Locations.gso
R11740 Locations.gso
R11768 Locations.set
R11790 Locations.R
R11780 Locations.S
R11768 Locations.set
R11790 Locations.R
R11780 Locations.S
R11818 LTL.exec_one
R11818 LTL.exec_one
R11834 LTL.exec_Bsetstack
R11834 LTL.exec_Bsetstack
R11866 Locations.gss
R11866 Locations.gss
R11894 Locations.gso
R11894 Locations.gso
R12270 Coq.Init.Logic "'exists' x , p" type_scope
R12368 Coq.Init.Logic "A /\ B" type_scope
R12284 LTL.exec_instrs
R12303 Allocation.add_reloads
R12321 Allocation.regs_for_rec
R12431 Coq.Init.Logic "A /\ B" type_scope
R12417 Coq.Init.Logic "x = y" type_scope
R12373 LTL.reglist
R12382 Allocation.regs_for_rec
R12419 Coq.Lists.List.map
R12501 Coq.Init.Logic "A /\ B" type_scope
R12491 Coq.Init.Logic "x = y" type_scope
R12486 Locations.R
R12497 Locations.R
R12464 Coq.Init.Logic "~ x" type_scope
R12466 Coq.Lists.List.In
R12447 Coq.Init.Logic "~ x" type_scope
R12449 Coq.Lists.List.In
R12529 Coq.Init.Logic "x = y" type_scope
R12524 Locations.S
R12535 Locations.S
R12246 Coqlib.list_norepet
R12222 Coqlib.list_norepet
R12191 Coqlib.list_disjoint
R12179 Coq.Init.Logic.False
R12165 Coq.Lists.List.In
R12148 Coq.Lists.List.In
R12152 Locations.R
R12125 Coq.Init.Logic.False
R12111 Coq.Lists.List.In
R12094 Coq.Lists.List.In
R12098 Locations.R
R12052 Coq.Init.Peano "x <= y" nat_scope
R12035 Coq.Lists.List.length
R12055 Coq.Lists.List.length
R12003 Coq.Init.Peano "x <= y" nat_scope
R11986 Coq.Lists.List.length
R12006 Coq.Lists.List.length
R12626 LTL.exec_refl
R12626 LTL.exec_refl
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R12795 Coq.Init.Peano "x <= y" nat_scope
R12783 Coq.Lists.List.length
R12798 Coq.Lists.List.length
R12795 Coq.Init.Peano "x <= y" nat_scope
R12783 Coq.Lists.List.length
R12798 Coq.Lists.List.length
R12852 Coq.Init.Peano "x <= y" nat_scope
R12840 Coq.Lists.List.length
R12855 Coq.Lists.List.length
R12852 Coq.Init.Peano "x <= y" nat_scope
R12840 Coq.Lists.List.length
R12855 Coq.Lists.List.length
R12937 Coq.Init.Logic.False
R12923 Coq.Lists.List.In
R12906 Coq.Lists.List.In
R12910 Locations.R
R12937 Coq.Init.Logic.False
R12923 Coq.Lists.List.In
R12906 Coq.Lists.List.In
R12910 Locations.R
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R13055 Coq.Init.Logic.False
R13041 Coq.Lists.List.In
R13024 Coq.Lists.List.In
R13028 Locations.R
R13055 Coq.Init.Logic.False
R13041 Coq.Lists.List.In
R13024 Coq.Lists.List.In
R13028 Locations.R
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R13131 Coqlib.list_disjoint
R13131 Coqlib.list_disjoint
R13170 Coqlib.list_disjoint_cons_left
R13170 Coqlib.list_disjoint_cons_left
R13206 Coqlib.list_disjoint_cons_right
R13206 Coqlib.list_disjoint_cons_right
R13253 Coqlib.list_norepet
R13253 Coqlib.list_norepet
R13312 Coqlib.list_norepet
R13312 Coqlib.list_norepet
R13545 Locations.mreg_eq
R13545 Locations.mreg_eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R13598 Coq.Init.Logic.f_equal2
R13609 Coq.Lists.List.cons
R13614 Values.val
R13598 Coq.Init.Logic.f_equal2
R13609 Coq.Lists.List.cons
R13614 Values.val
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R13892 Locations.slot_type
R13909 AST.Tint
R13922 AST.Tfloat
R13892 Locations.slot_type
R13909 AST.Tint
R13922 AST.Tfloat
R13955 Coq.Init.Logic "~ x" type_scope
R13957 Coq.Lists.List.In
R13955 Coq.Init.Logic "~ x" type_scope
R13957 Coq.Lists.List.In
R13995 Locations.slot_type
R13995 Locations.slot_type
R14073 Coq.Lists.List "x :: y" list_scope
R14044 Coqlib.list_disjoint_notin
R14073 Coq.Lists.List "x :: y" list_scope
R14044 Coqlib.list_disjoint_notin
R14095 Coqlib.list_disjoint_sym
R14095 Coqlib.list_disjoint_sym
R14120 Coqlib.list_disjoint_cons_left
R14120 Coqlib.list_disjoint_cons_left
R14195 Coq.Init.Logic "~ x" type_scope
R14197 Coq.Lists.List.In
R14195 Coq.Init.Logic "~ x" type_scope
R14197 Coq.Lists.List.In
R14235 Locations.slot_type
R14235 Locations.slot_type
R14288 Coq.Lists.List "x :: y" list_scope
R14259 Coqlib.list_disjoint_notin
R14288 Coq.Lists.List "x :: y" list_scope
R14259 Coqlib.list_disjoint_notin
R14310 Coqlib.list_disjoint_cons_right
R14310 Coqlib.list_disjoint_cons_right
R14415 Allocproof.add_reload_correct
R14452 Allocation.add_reloads
R14470 Allocation.regs_for_rec
R14435 Locations.S
R14415 Allocproof.add_reload_correct
R14452 Allocation.add_reloads
R14470 Allocation.regs_for_rec
R14435 Locations.S
R14682 LTL.exec_trans
R14682 LTL.exec_trans
R14724 Coq.Init.Logic.f_equal2
R14735 Coq.Lists.List.cons
R14740 Values.val
R14724 Coq.Init.Logic.f_equal2
R14735 Coq.Lists.List.cons
R14740 Values.val
R14791 Coqlib.list_map_exten
R14791 Coqlib.list_map_exten
R14863 Coq.Init.Logic.I
R14863 Coq.Init.Logic.I
R14863 Coq.Init.Logic.I
R14930 Locations.slot_type
R14930 Locations.slot_type
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R15146 Locations.slot_type
R15146 Locations.slot_type
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R15224 Coq.Init.Logic.I
R15224 Coq.Init.Logic.I
R15352 Coq.Init.Logic "'exists' x , p" type_scope
R15434 Coq.Init.Logic "A /\ B" type_scope
R15366 LTL.exec_instrs
R15385 Allocation.add_reloads
R15403 Allocation.regs_for
R15486 Coq.Init.Logic "A /\ B" type_scope
R15467 Coq.Init.Logic "x = y" type_scope
R15439 LTL.reglist
R15448 Allocation.regs_for
R15469 Coq.Lists.List.map
R15534 Coq.Init.Logic "x = y" type_scope
R15501 Locations.notin
R15513 Conventions.temporaries
R15317 Locations.disjoint
R15335 Conventions.temporaries
R15302 Coq.Init.Peano "x <= y" nat_scope
R15285 Coq.Lists.List.length
R15580 Coq.Lists.List "x :: y" list_scope
R15576 Locations.IT1
R15587 Coq.Lists.List "x :: y" list_scope
R15583 Locations.IT2
R15594 Coq.Lists.List "x :: y" list_scope
R15590 Locations.IT3
R15597 Coq.Lists.List.nil
R15580 Coq.Lists.List "x :: y" list_scope
R15576 Locations.IT1
R15587 Coq.Lists.List "x :: y" list_scope
R15583 Locations.IT2
R15594 Coq.Lists.List "x :: y" list_scope
R15590 Locations.IT3
R15597 Coq.Lists.List.nil
R15624 Coq.Lists.List "x :: y" list_scope
R15620 Locations.FT1
R15631 Coq.Lists.List "x :: y" list_scope
R15627 Locations.FT2
R15638 Coq.Lists.List "x :: y" list_scope
R15634 Locations.FT3
R15641 Coq.Lists.List.nil
R15624 Coq.Lists.List "x :: y" list_scope
R15620 Locations.FT1
R15631 Coq.Lists.List "x :: y" list_scope
R15627 Locations.FT2
R15638 Coq.Lists.List "x :: y" list_scope
R15634 Locations.FT3
R15641 Coq.Lists.List.nil
R15679 Coq.Init.Peano "x <= y" nat_scope
R15662 Coq.Lists.List.length
R15682 Coq.Lists.List.length
R15679 Coq.Init.Peano "x <= y" nat_scope
R15662 Coq.Lists.List.length
R15682 Coq.Lists.List.length
R15776 Coq.Init.Peano "x <= y" nat_scope
R15759 Coq.Lists.List.length
R15779 Coq.Lists.List.length
R15776 Coq.Init.Peano "x <= y" nat_scope
R15759 Coq.Lists.List.length
R15779 Coq.Lists.List.length
R15896 Coq.Init.Logic.False
R15882 Coq.Lists.List.In
R15865 Coq.Lists.List.In
R15869 Locations.R
R15896 Coq.Init.Logic.False
R15882 Coq.Lists.List.In
R15865 Coq.Lists.List.In
R15869 Locations.R
R15924 Coq.Lists.List.In
R15933 Conventions.temporaries
R15928 Locations.R
R15924 Coq.Lists.List.In
R15933 Conventions.temporaries
R15928 Locations.R
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R16094 Coq.Init.Logic.False
R16080 Coq.Lists.List.In
R16063 Coq.Lists.List.In
R16067 Locations.R
R16094 Coq.Init.Logic.False
R16080 Coq.Lists.List.In
R16063 Coq.Lists.List.In
R16067 Locations.R
R16122 Coq.Lists.List.In
R16131 Conventions.temporaries
R16126 Locations.R
R16122 Coq.Lists.List.In
R16131 Conventions.temporaries
R16126 Locations.R
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R16251 Coqlib.list_disjoint
R16251 Coqlib.list_disjoint
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R16345 Coqlib.list_norepet
R16345 Coqlib.list_norepet
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R16407 Coqlib.list_norepet
R16407 Coqlib.list_norepet
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R16469 Allocproof.add_reloads_correct_rec
R16469 Allocproof.add_reloads_correct_rec
R16695 Locations.notin_not_in
R16695 Locations.notin_not_in
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R16764 Locations.notin_not_in
R16764 Locations.notin_not_in
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R16890 Coq.Init.Logic "'exists' x , p" type_scope
R16956 Coq.Init.Logic "A /\ B" type_scope
R16904 LTL.exec_instrs
R16923 Allocation.add_move
R16978 Coq.Init.Logic "A /\ B" type_scope
R16969 Coq.Init.Logic "x = y" type_scope
R17061 Coq.Init.Logic "x = y" type_scope
R17033 Locations.diff
R17045 Locations.R
R17047 Locations.FT1
R17011 Locations.diff
R17023 Locations.R
R17025 Locations.IT1
R16993 Locations.diff
R17111 Locations.eq
R17111 Locations.eq
R17172 LTL.exec_refl
R17172 LTL.exec_refl
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R17246 Allocproof.add_spill_correct
R17246 Allocproof.add_spill_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R17351 Locations.diff_sym
R17351 Locations.diff_sym
R17445 Allocproof.add_reload_correct
R17465 Locations.S
R17445 Allocproof.add_reload_correct
R17465 Locations.S
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R17553 Locations.diff_sym
R17553 Locations.diff_sym
R17629 Locations.slot_type
R17646 AST.Tint
R17654 Locations.IT1
R17660 AST.Tfloat
R17670 Locations.FT1
R17629 Locations.slot_type
R17646 AST.Tint
R17654 Locations.IT1
R17660 AST.Tfloat
R17670 Locations.FT1
R17694 Allocproof.add_reload_correct
R17724 Allocation.add_spill
R17739 Locations.S
R17714 Locations.S
R17694 Allocproof.add_reload_correct
R17724 Allocation.add_spill
R17739 Locations.S
R17714 Locations.S
R17803 Allocproof.add_spill_correct
R17826 Locations.S
R17803 Allocproof.add_spill_correct
R17826 Locations.S
R17906 LTL.exec_trans
R17906 LTL.exec_trans
R17991 Locations.diff_sym
R17991 Locations.diff_sym
R18023 Locations.slot_type
R18023 Locations.slot_type
R18051 Locations.diff_sym
R18051 Locations.diff_sym
R18300 Coq.Init.Logic "'exists' x , p" type_scope
R18373 Coq.Init.Logic "A /\ B" type_scope
R18314 LTL.exec_instrs
R18333 Allocation.parallel_move
R18415 Coq.Init.Logic "A /\ B" type_scope
R18396 Coq.Init.Logic "x = y" type_scope
R18378 Coq.Lists.List.map
R18398 Coq.Lists.List.map
R18445 Coq.Init.Logic "A /\ B" type_scope
R18432 Coq.Init.Logic "x = y" type_scope
R18425 Locations.R
R18427 Locations.IT3
R18438 Locations.R
R18440 Locations.IT3
R18513 Coq.Init.Logic "x = y" type_scope
R18480 Locations.notin
R18492 Conventions.temporaries
R18460 Locations.notin
R18265 Locations.disjoint
R18283 Conventions.temporaries
R18230 Locations.disjoint
R18248 Conventions.temporaries
R18208 Locations.norepet
R18178 Locations.no_overlap
R18154 Coq.Init.Logic "x = y" type_scope
R18137 Coq.Lists.List.length
R18156 Coq.Lists.List.length
R18537 Allocproof_aux.parallel_move_correctX
R18537 Allocproof_aux.parallel_move_correctX
R18576 Allocproof.add_move_correct
R18576 Allocproof.add_move_correct
R18781 Coq.Init.Logic "'exists' x , p" type_scope
R18855 Coq.Init.Logic "A /\ B" type_scope
R18795 LTL.exec_block
R18841 LTL.Cont
R18813 Allocation.add_op
R18873 Coq.Init.Logic "A /\ B" type_scope
R18868 Coq.Init.Logic "x = y" type_scope
R18939 Coq.Init.Logic "x = y" type_scope
R18906 Locations.notin
R18918 Conventions.temporaries
R18888 Locations.diff
R18767 Coq.Init.Logic "x = y" type_scope
R18724 Op.eval_operation
R18749 Coq.Lists.List.map
R18769 Coq.Init.Datatypes.Some
R18689 Locations.disjoint
R18707 Conventions.temporaries
R18674 Coq.Init.Peano "x <= y" nat_scope
R18657 Coq.Lists.List.length
R18990 Op.is_move_operation
R18990 Op.is_move_operation
R19064 Op.is_move_operation_correct
R19064 Op.is_move_operation_correct
R19164 Allocproof.add_move_correct
R19190 LTL.Bgoto
R19164 Allocproof.add_move_correct
R19190 LTL.Bgoto
R19269 LTL.exec_Bgoto
R19269 LTL.exec_Bgoto
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R19462 Allocation.regs_for
R19462 Allocation.regs_for
R19491 Allocation.reg_for
R19491 Allocation.reg_for
R19519 Allocproof.add_reloads_correct
R19561 LTL.Bop
R19580 Allocation.add_spill
R19600 LTL.Bgoto
R19519 Allocproof.add_reloads_correct
R19561 LTL.Bop
R19580 Allocation.add_spill
R19600 LTL.Bgoto
R19690 Locations.set
R19702 Locations.R
R19690 Locations.set
R19702 Locations.R
R19732 Allocproof.add_spill_correct
R19760 LTL.Bgoto
R19732 Allocproof.add_spill_correct
R19760 LTL.Bgoto
R19842 LTL.exec_Bgoto
R19842 LTL.exec_Bgoto
R19861 LTL.exec_trans
R19861 LTL.exec_trans
R19895 LTL.exec_trans
R19895 LTL.exec_trans
R19923 LTL.exec_one
R19923 LTL.exec_one
R19951 LTL.exec_Bop
R19951 LTL.exec_Bop
R20039 Locations.gss
R20039 Locations.gss
R20098 Locations.gso
R20098 Locations.gso
R20147 Locations.diff_sym
R20147 Locations.diff_sym
R20180 Allocproof.reg_for_spec
R20180 Allocproof.reg_for_spec
R20236 Locations.in_notin_diff
R20236 Locations.in_notin_diff
R20268 Locations.diff_sym
R20268 Locations.diff_sym
R20519 Coq.Init.Logic "'exists' x , p" type_scope
R20603 Coq.Init.Logic "A /\ B" type_scope
R20533 LTL.exec_block
R20589 LTL.Cont
R20551 Allocation.add_load
R20620 Coq.Init.Logic "A /\ B" type_scope
R20616 Coq.Init.Logic "x = y" type_scope
R20686 Coq.Init.Logic "x = y" type_scope
R20653 Locations.notin
R20665 Conventions.temporaries
R20635 Locations.diff
R20505 Coq.Init.Logic "x = y" type_scope
R20489 Mem.loadv
R20507 Coq.Init.Datatypes.Some
R20475 Coq.Init.Logic "x = y" type_scope
R20429 Op.eval_addressing
R20457 Coq.Lists.List.map
R20477 Coq.Init.Datatypes.Some
R20394 Locations.disjoint
R20412 Conventions.temporaries
R20379 Coq.Init.Peano "x <= y" nat_scope
R20362 Coq.Lists.List.length
R20745 Allocation.regs_for
R20745 Allocation.regs_for
R20774 Allocation.reg_for
R20774 Allocation.reg_for
R20820 Coq.Init.Peano "x <= y" nat_scope
R20803 Coq.Lists.List.length
R20820 Coq.Init.Peano "x <= y" nat_scope
R20803 Coq.Lists.List.length
R20853 Allocproof.add_reloads_correct
R20895 LTL.Bload
R20924 Allocation.add_spill
R20944 LTL.Bgoto
R20853 Allocproof.add_reloads_correct
R20895 LTL.Bload
R20924 Allocation.add_spill
R20944 LTL.Bgoto
R21035 Locations.set
R21047 Locations.R
R21035 Locations.set
R21047 Locations.R
R21077 Allocproof.add_spill_correct
R21105 LTL.Bgoto
R21077 Allocproof.add_spill_correct
R21105 LTL.Bgoto
R21187 LTL.exec_Bgoto
R21187 LTL.exec_Bgoto
R21206 LTL.exec_trans
R21206 LTL.exec_trans
R21234 LTL.exec_trans
R21234 LTL.exec_trans
R21262 LTL.exec_one
R21262 LTL.exec_one
R21291 LTL.exec_Bload
R21291 LTL.exec_Bload
R21405 Locations.gss
R21405 Locations.gss
R21463 Locations.gso
R21463 Locations.gso
R21513 Locations.diff_sym
R21513 Locations.diff_sym
R21546 Allocproof.reg_for_spec
R21546 Allocproof.reg_for_spec
R21601 Locations.in_notin_diff
R21601 Locations.in_notin_diff
R21633 Locations.diff_sym
R21633 Locations.diff_sym
R21928 Coq.Init.Logic "'exists' x , p" type_scope
R22014 Coq.Init.Logic "A /\ B" type_scope
R21942 LTL.exec_block
R21999 LTL.Cont
R21960 Allocation.add_store
R22062 Coq.Init.Logic "x = y" type_scope
R22029 Locations.notin
R22041 Conventions.temporaries
R21913 Coq.Init.Logic "x = y" type_scope
R21887 Mem.storev
R21915 Coq.Init.Datatypes.Some
R21873 Coq.Init.Logic "x = y" type_scope
R21827 Op.eval_addressing
R21855 Coq.Lists.List.map
R21875 Coq.Init.Datatypes.Some
R21796 Locations.notin
R21810 Conventions.temporaries
R21761 Locations.disjoint
R21779 Conventions.temporaries
R21746 Coq.Init.Peano "x <= y" nat_scope
R21729 Coq.Lists.List.length
R22129 Coq.Init.Peano "x <= y" nat_scope
R22103 Coq.Lists.List.length
R22120 Coq.Lists.List "x :: y" list_scope
R22129 Coq.Init.Peano "x <= y" nat_scope
R22103 Coq.Lists.List.length
R22120 Coq.Lists.List "x :: y" list_scope
R22175 Locations.disjoint
R22202 Conventions.temporaries
R22193 Coq.Lists.List "x :: y" list_scope
R22175 Locations.disjoint
R22202 Conventions.temporaries
R22193 Coq.Lists.List "x :: y" list_scope
R22271 Locations.in_notin_diff
R22271 Locations.in_notin_diff
R22347 Allocation.regs_for
R22361 Coq.Lists.List "x :: y" list_scope
R22347 Allocation.regs_for
R22361 Coq.Lists.List "x :: y" list_scope
R22458 Allocproof.add_reloads_correct
R22508 LTL.Bstore
R22538 LTL.Bgoto
R22483 Coq.Lists.List "x :: y" list_scope
R22458 Allocproof.add_reloads_correct
R22508 LTL.Bstore
R22538 LTL.Bgoto
R22483 Coq.Lists.List "x :: y" list_scope
R22718 LTL.exec_Bgoto
R22718 LTL.exec_Bgoto
R22740 LTL.exec_trans
R22740 LTL.exec_trans
R22788 LTL.exec_one
R22788 LTL.exec_one
R22804 LTL.exec_Bstore
R22804 LTL.exec_Bstore
R23125 Coq.Init.Logic "'exists' x , p" type_scope
R23208 Coq.Init.Logic "A /\ B" type_scope
R23139 LTL.exec_block
R23194 LTL.Cont
R23157 Allocation.add_cond
R23256 Coq.Init.Logic "x = y" type_scope
R23223 Locations.notin
R23235 Conventions.temporaries
R23090 Coq.Init.Logic "x = y" type_scope
R23074 Coq.Init.Logic "x = y" type_scope
R23035 Op.eval_condition
R23056 Coq.Lists.List.map
R23076 Coq.Init.Datatypes.Some
R23000 Locations.disjoint
R23018 Conventions.temporaries
R22985 Coq.Init.Peano "x <= y" nat_scope
R22968 Coq.Lists.List.length
R23314 Allocation.regs_for
R23314 Allocation.regs_for
R23344 Allocproof.add_reloads_correct
R23385 LTL.Bcond
R23344 Allocproof.add_reloads_correct
R23385 LTL.Bcond
R23551 LTL.exec_Bcond_true
R23551 LTL.exec_Bcond_true
R23633 LTL.exec_Bcond_false
R23633 LTL.exec_Bcond_false
R23788 Coq.Init.Datatypes.option
R23795 LTL.function
R23828 Coq.Init.Datatypes.inl
R23837 Globalenvs.find_funct
R23867 Coq.Init.Datatypes.inr
R23891 Globalenvs.find_symbol
R23929 Coq.Init.Datatypes.None
R23937 Coq.Init.Datatypes.None
R23950 Coq.Init.Datatypes.Some
R23960 Globalenvs.find_funct_ptr
R23778 LTL.locset
R23764 Coq.Init.Datatypes "x + y" type_scope
R23760 Locations.loc
R23766 AST.ident
R24516 Coq.Init.Logic "'exists' x , p" type_scope
R24598 Coq.Init.Logic "A /\ B" type_scope
R24530 LTL.exec_block
R24583 LTL.Cont
R24548 Allocation.add_call
R24618 Coq.Init.Logic "A /\ B" type_scope
R24611 Coq.Init.Logic "x = y" type_scope
R24718 Coq.Init.Logic "x = y" type_scope
R24690 Locations.diff
R24670 Conventions.loc_acceptable
R24637 Locations.notin
R24649 Conventions.destroyed_at_call
R24493 Conventions.loc_acceptable
R24461 Conventions.locs_acceptable
R24419 Coq.Init.Logic "x = y" type_scope
R24402 Coq.Lists.List.length
R24421 Coq.Lists.List.length
R24438 AST.sig_args
R24381 Coq.Init.Logic "x = y" type_scope
R24364 Coq.Lists.List.map
R24338 Coq.Init.Logic "x = y" type_scope
R24343 LTL.fn_sig
R24314 Coq.Init.Logic "x = y" type_scope
R24292 Allocproof.find_function2
R24316 Coq.Init.Datatypes.Some
R24173 Coq.Init.Logic "'exists' x , p" type_scope
R24238 Coq.Init.Logic "A /\ B" type_scope
R24197 LTL.exec_function
R24273 Coq.Init.Logic "x = y" type_scope
R24246 Locations.R
R24249 Conventions.loc_result
R24263 LTL.fn_sig
R24154 Coq.Init.Logic "x = y" type_scope
R24114 Coq.Lists.List.map
R24128 Conventions.loc_arguments
R24145 LTL.fn_sig
R24895 Coq.Init.Logic "x = y" type_scope
R24878 Coq.Lists.List.length
R24897 Coq.Lists.List.length
R24910 Conventions.loc_arguments
R24895 Coq.Init.Logic "x = y" type_scope
R24878 Coq.Lists.List.length
R24897 Coq.Lists.List.length
R24910 Conventions.loc_arguments
R24966 Conventions.loc_arguments_length
R24966 Conventions.loc_arguments_length
R25004 Conventions.locs_acceptable_disj_temporaries
R25004 Conventions.locs_acceptable_disj_temporaries
R25064 Allocproof.add_reload_correct
R25098 Allocation.parallel_move
R25148 LTL.Bcall
R25188 Allocation.add_spill
R25220 LTL.Bgoto
R25199 Conventions.loc_result
R25159 Coq.Init.Datatypes.inl
R25169 Locations.IT3
R25163 AST.ident
R25118 Conventions.loc_arguments
R25086 Locations.IT3
R25064 Allocproof.add_reload_correct
R25098 Allocation.parallel_move
R25148 LTL.Bcall
R25188 Allocation.add_spill
R25220 LTL.Bgoto
R25199 Conventions.loc_result
R25159 Coq.Init.Datatypes.inl
R25169 Locations.IT3
R25163 AST.ident
R25118 Conventions.loc_arguments
R25086 Locations.IT3
R25300 Allocproof.parallel_move_correct
R25563 Conventions.loc_arguments_not_temporaries
R25513 Conventions.loc_arguments_norepet
R25467 Conventions.no_overlap_arguments
R25356 LTL.Bcall
R25396 Allocation.add_spill
R25428 LTL.Bgoto
R25407 Conventions.loc_result
R25367 Coq.Init.Datatypes.inl
R25377 Locations.IT3
R25371 AST.ident
R25328 Conventions.loc_arguments
R25300 Allocproof.parallel_move_correct
R25563 Conventions.loc_arguments_not_temporaries
R25513 Conventions.loc_arguments_norepet
R25467 Conventions.no_overlap_arguments
R25356 LTL.Bcall
R25396 Allocation.add_spill
R25428 LTL.Bgoto
R25407 Conventions.loc_result
R25367 Coq.Init.Datatypes.inl
R25377 Locations.IT3
R25371 AST.ident
R25328 Conventions.loc_arguments
R25694 Coq.Init.Logic "x = y" type_scope
R25661 Coq.Lists.List.map
R25675 Conventions.loc_arguments
R25694 Coq.Init.Logic "x = y" type_scope
R25661 Coq.Lists.List.map
R25675 Conventions.loc_arguments
R25751 Coqlib.list_map_exten
R25751 Coqlib.list_map_exten
R25809 Locations.diff_sym
R25809 Locations.diff_sym
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R25930 LTL.return_regs
R25930 LTL.return_regs
R25966 Allocproof.add_spill_correct
R26022 LTL.Bgoto
R25985 Conventions.loc_result
R25966 Allocproof.add_spill_correct
R26022 LTL.Bgoto
R25985 Conventions.loc_result
R26123 LTL.exec_Bgoto
R26123 LTL.exec_Bgoto
R26145 LTL.exec_trans
R26145 LTL.exec_trans
R26178 LTL.exec_trans
R26178 LTL.exec_trans
R26211 LTL.exec_trans
R26211 LTL.exec_trans
R26229 LTL.exec_one
R26229 LTL.exec_one
R26245 LTL.exec_Bcall
R26245 LTL.exec_Bcall
R26426 Allocproof.return_regs_result
R26426 Allocproof.return_regs_result
R26534 Allocproof.return_regs_not_destroyed
R26534 Allocproof.return_regs_not_destroyed
R26609 Locations.diff_sym
R26609 Locations.diff_sym
R26652 Conventions.temporaries
R26629 Locations.in_notin_diff
R26652 Conventions.temporaries
R26629 Locations.in_notin_diff
R26675 Conventions.temporaries_not_acceptable
R26675 Conventions.temporaries_not_acceptable
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R26731 Conventions.arguments_not_preserved
R26731 Conventions.arguments_not_preserved
R26770 Conventions.temporaries_not_acceptable
R26770 Conventions.temporaries_not_acceptable
R26812 Locations.diff_sym
R26812 Locations.diff_sym
R26884 Coq.Init.Logic "x = y" type_scope
R26867 Coq.Lists.List.length
R26886 Coq.Lists.List.length
R26899 Conventions.loc_arguments
R26884 Coq.Init.Logic "x = y" type_scope
R26867 Coq.Lists.List.length
R26886 Coq.Lists.List.length
R26899 Conventions.loc_arguments
R26955 Conventions.loc_arguments_length
R26955 Conventions.loc_arguments_length
R26993 Conventions.locs_acceptable_disj_temporaries
R26993 Conventions.locs_acceptable_disj_temporaries
R27057 Allocproof.parallel_move_correct
R27308 Conventions.loc_arguments_not_temporaries
R27267 Conventions.loc_arguments_norepet
R27221 Conventions.no_overlap_arguments
R27113 LTL.Bcall
R27151 Allocation.add_spill
R27183 LTL.Bgoto
R27162 Conventions.loc_result
R27124 Coq.Init.Datatypes.inr
R27128 Locations.mreg
R27085 Conventions.loc_arguments
R27057 Allocproof.parallel_move_correct
R27308 Conventions.loc_arguments_not_temporaries
R27267 Conventions.loc_arguments_norepet
R27221 Conventions.no_overlap_arguments
R27113 LTL.Bcall
R27151 Allocation.add_spill
R27183 LTL.Bgoto
R27162 Conventions.loc_result
R27124 Coq.Init.Datatypes.inr
R27128 Locations.mreg
R27085 Conventions.loc_arguments
R27439 Coq.Init.Logic "x = y" type_scope
R27406 Coq.Lists.List.map
R27420 Conventions.loc_arguments
R27439 Coq.Init.Logic "x = y" type_scope
R27406 Coq.Lists.List.map
R27420 Conventions.loc_arguments
R27566 LTL.return_regs
R27566 LTL.return_regs
R27602 Allocproof.add_spill_correct
R27658 LTL.Bgoto
R27621 Conventions.loc_result
R27602 Allocproof.add_spill_correct
R27658 LTL.Bgoto
R27621 Conventions.loc_result
R27759 LTL.exec_Bgoto
R27759 LTL.exec_Bgoto
R27781 LTL.exec_trans
R27781 LTL.exec_trans
R27814 LTL.exec_trans
R27814 LTL.exec_trans
R27832 LTL.exec_one
R27832 LTL.exec_one
R27848 LTL.exec_Bcall
R27848 LTL.exec_Bcall
R28001 Allocproof.return_regs_result
R28001 Allocproof.return_regs_result
R28109 Allocproof.return_regs_not_destroyed
R28109 Allocproof.return_regs_not_destroyed
R28167 Conventions.arguments_not_preserved
R28167 Conventions.arguments_not_preserved
R28206 Conventions.temporaries_not_acceptable
R28206 Conventions.temporaries_not_acceptable
R28248 Locations.diff_sym
R28248 Locations.diff_sym
R28451 Coq.Init.Logic "'exists' x , p" type_scope
R28515 Coq.Init.Logic "A /\ B" type_scope
R28465 LTL.exec_instrs
R28484 Allocation.add_undefs
R28557 Coq.Init.Logic "A /\ B" type_scope
R28549 Coq.Init.Logic "x = y" type_scope
R28551 Values.Vundef
R28531 Coq.Lists.List.In
R28600 Coq.Init.Logic "x = y" type_scope
R28575 Locations.notin
R28436 Coq.Init.Logic "x = y" type_scope
R28418 Locations.S
R28421 Locations.Local
R28438 Values.Vundef
R28385 Coq.Lists.List.In
R28389 Locations.S
R28392 Locations.Local
R28346 Conventions.loc_acceptable
R28334 Coq.Lists.List.In
R28674 LTL.exec_refl
R28674 LTL.exec_refl
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R28729 Conventions.loc_acceptable
R28717 Coq.Lists.List.In
R28729 Conventions.loc_acceptable
R28717 Coq.Lists.List.In
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R28829 Locations.set
R28847 Values.Vundef
R28841 Locations.R
R28829 Locations.set
R28847 Values.Vundef
R28841 Locations.R
R28944 Coq.Init.Logic "x = y" type_scope
R28926 Locations.S
R28929 Locations.Local
R28946 Values.Vundef
R28892 Coq.Lists.List.In
R28896 Locations.S
R28899 Locations.Local
R28944 Coq.Init.Logic "x = y" type_scope
R28926 Locations.S
R28929 Locations.Local
R28946 Values.Vundef
R28892 Coq.Lists.List.In
R28896 Locations.S
R28899 Locations.Local
R28987 Locations.gso
R28987 Locations.gso
R29039 Locations.set
R29057 Values.Vundef
R29051 Locations.R
R29039 Locations.set
R29057 Values.Vundef
R29051 Locations.R
R29149 LTL.exec_trans
R29149 LTL.exec_trans
R29167 LTL.exec_one
R29167 LTL.exec_one
R29183 LTL.exec_Bop
R29183 LTL.exec_Bop
R29250 Coq.Lists.List.In_dec
R29257 Locations.eq
R29250 Coq.Lists.List.In_dec
R29257 Locations.eq
R29351 Locations.gss
R29351 Locations.gss
R29388 Allocproof.loc_acceptable_notin_notin
R29388 Allocproof.loc_acceptable_notin_notin
R29456 Locations.gso
R29456 Locations.gso
R29477 Locations.diff_sym
R29477 Locations.diff_sym
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R29619 Coq.Init.Logic "x = y" type_scope
R29601 Locations.S
R29604 Locations.Local
R29621 Values.Vundef
R29568 Coq.Lists.List.In
R29572 Locations.S
R29575 Locations.Local
R29619 Coq.Init.Logic "x = y" type_scope
R29601 Locations.S
R29604 Locations.Local
R29621 Values.Vundef
R29568 Coq.Lists.List.In
R29572 Locations.S
R29575 Locations.Local
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R29791 Coq.Lists.List.In_dec
R29798 Locations.eq
R29791 Coq.Lists.List.In_dec
R29798 Locations.eq
R29895 Coq.Lists.List.in_eq
R29889 Locations.S
R29895 Coq.Lists.List.in_eq
R29889 Locations.S
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R29987 Allocproof.loc_acceptable_notin_notin
R29987 Allocproof.loc_acceptable_notin_notin
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R30339 Coq.Init.Logic "'exists' x , p" type_scope
R30422 Coq.Init.Logic "A /\ B" type_scope
R30353 LTL.exec_block
R30408 LTL.Cont
R30371 Allocation.add_entry
R30482 Coq.Init.Logic "A /\ B" type_scope
R30447 Coq.Init.Logic "x = y" type_scope
R30427 Coq.Lists.List.map
R30449 Coq.Lists.List.map
R30462 Conventions.loc_parameters
R30519 Coq.Init.Logic "x = y" type_scope
R30521 Values.Vundef
R30498 Coq.Lists.List.In
R30324 Coq.Init.Logic "x = y" type_scope
R30306 Locations.S
R30309 Locations.Local
R30326 Values.Vundef
R30258 Conventions.locs_acceptable
R30226 Locations.disjoint
R30198 Conventions.locs_acceptable
R30174 Locations.norepet
R30140 Coq.Init.Logic "x = y" type_scope
R30121 Coq.Lists.List.length
R30142 Coq.Lists.List.length
R30159 AST.sig_args
R30591 Coq.Init.Logic "x = y" type_scope
R30558 Coq.Lists.List.length
R30571 Conventions.loc_parameters
R30593 Coq.Lists.List.length
R30591 Coq.Init.Logic "x = y" type_scope
R30558 Coq.Lists.List.length
R30571 Conventions.loc_parameters
R30593 Coq.Lists.List.length
R30649 Coqlib.list_length_map
R30649 Coqlib.list_length_map
R30679 Conventions.loc_arguments_length
R30679 Conventions.loc_arguments_length
R30723 Locations.disjoint
R30743 Conventions.temporaries
R30723 Locations.disjoint
R30743 Conventions.temporaries
R30767 Conventions.locs_acceptable_disj_temporaries
R30767 Conventions.locs_acceptable_disj_temporaries
R30821 Allocproof.parallel_move_correct
R30968 Conventions.loc_parameters_not_temporaries
R30918 Conventions.no_overlap_parameters
R30848 Allocation.add_undefs
R30867 LTL.Bgoto
R30821 Allocproof.parallel_move_correct
R30968 Conventions.loc_parameters_not_temporaries
R30918 Conventions.no_overlap_parameters
R30848 Allocation.add_undefs
R30867 LTL.Bgoto
R31134 Coq.Init.Logic "x = y" type_scope
R31116 Locations.S
R31119 Locations.Local
R31136 Values.Vundef
R31079 Coq.Lists.List.In
R31083 Locations.S
R31086 Locations.Local
R31134 Coq.Init.Logic "x = y" type_scope
R31116 Locations.S
R31119 Locations.Local
R31136 Values.Vundef
R31079 Coq.Lists.List.In
R31083 Locations.S
R31086 Locations.Local
R31185 Locations.disjoint_notin
R31185 Locations.disjoint_notin
R31227 Locations.disjoint_sym
R31227 Locations.disjoint_sym
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R31289 Allocproof.add_undefs_correct
R31316 LTL.Bgoto
R31289 Allocproof.add_undefs_correct
R31316 LTL.Bgoto
R31404 LTL.exec_Bgoto
R31404 LTL.exec_Bgoto
R31444 LTL.exec_trans
R31444 LTL.exec_trans
R31512 Coqlib.list_map_exten
R31512 Coqlib.list_map_exten
R31570 Locations.disjoint_notin
R31570 Locations.disjoint_notin
R31671 Coq.Init.Logic "'exists' x , p" type_scope
R31744 Coq.Init.Logic "A /\ B" type_scope
R31685 LTL.exec_block
R31731 LTL.Return
R31703 Allocation.add_return
R31771 Coq.Init.Datatypes.Some
R31808 Coq.Init.Logic "x = y" type_scope
R31788 Locations.R
R31791 Conventions.loc_result
R31821 Coq.Init.Datatypes.None
R31854 Coq.Init.Logic "x = y" type_scope
R31834 Locations.R
R31837 Conventions.loc_result
R31856 Values.Vundef
R31939 Allocproof.add_reload_correct
R31977 LTL.Breturn
R31961 Conventions.loc_result
R31939 Allocproof.add_reload_correct
R31977 LTL.Breturn
R31961 Conventions.loc_result
R32057 LTL.exec_Breturn
R32057 LTL.exec_Breturn
R32105 Locations.set
R32137 Values.Vundef
R32117 Locations.R
R32120 Conventions.loc_result
R32105 Locations.set
R32137 Values.Vundef
R32117 Locations.R
R32120 Conventions.loc_result
R32166 LTL.exec_Breturn
R32166 LTL.exec_Breturn
R32186 LTL.exec_one
R32186 LTL.exec_one
R32207 LTL.exec_Bop
R32207 LTL.exec_Bop
R32236 Locations.gss
R32236 Locations.gss
R32412 Coq.Init.Peano "x <= y" nat_scope
R32378 Coq.Lists.List.length
R32391 Op.type_of_condition
R32365 Op.condition
R32591 Coq.Init.Peano "x <= y" nat_scope
R32550 Coq.Lists.List.length
R32563 Coq.Init.Datatypes.fst
R32568 Op.type_of_operation
R32537 Op.operation
R32676 Allocproof.length_type_of_condition
R32676 Allocproof.length_type_of_condition
R32810 Coq.Init.Peano "x <= y" nat_scope
R32772 Coq.Lists.List.length
R32785 Op.type_of_addressing
R32758 Op.addressing
R33059 Coq.Init.Peano "x <= y" nat_scope
R33042 Coq.Lists.List.length
R33013 Coq.Init.Logic "x = y" type_scope
R32984 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R32985 Coq.Lists.List.map
R33015 Op.type_of_operation
R32976 Registers.reg
R32960 Coq.Lists.List.list
R32965 Registers.reg
R32942 Op.operation
R32929 RTLtyping.regenv
R33099 Coqlib.list_length_map
R33099 Coqlib.list_length_map
R33136 Allocproof.length_type_of_operation
R33136 Allocproof.length_type_of_operation
R33354 Coq.Init.Peano "x <= y" nat_scope
R33337 Coq.Lists.List.length
R33305 Coq.Init.Logic "x = y" type_scope
R33287 Coq.Lists.List.map
R33307 Op.type_of_addressing
R33274 Coq.Lists.List.list
R33279 Registers.reg
R33255 Op.addressing
R33240 RTLtyping.regenv
R33394 Coqlib.list_length_map
R33394 Coqlib.list_length_map
R33436 Allocproof.length_type_of_addressing
R33436 Allocproof.length_type_of_addressing
R33620 Coq.Init.Peano "x <= y" nat_scope
R33603 Coq.Lists.List.length
R33572 Coq.Init.Logic "x = y" type_scope
R33554 Coq.Lists.List.map
R33574 Op.type_of_condition
R33541 Coq.Lists.List.list
R33546 Registers.reg
R33523 Op.condition
R33508 RTLtyping.regenv
R33660 Coqlib.list_length_map
R33660 Coqlib.list_length_map
R33702 Allocproof.length_type_of_condition
R33702 Allocproof.length_type_of_condition
R33805 RTL.program
R33834 LTL.program
R33886 Coq.Init.Logic "x = y" type_scope
R33866 Allocation.transf_program
R33888 Coq.Init.Datatypes.Some
R33911 Globalenvs.globalenv
R33943 Globalenvs.globalenv
R34035 Coq.Init.Logic "x = y" type_scope
R34012 Globalenvs.find_symbol
R34037 Globalenvs.find_symbol
R34004 AST.ident
R34137 Allocation.transf_function
R34100 Globalenvs.find_symbol_transf_partial
R34137 Allocation.transf_function
R34100 Globalenvs.find_symbol_transf_partial
R34278 Coq.Init.Logic "'exists' x , p" type_scope
R34323 Coq.Init.Logic "A /\ B" type_scope
R34313 Coq.Init.Logic "x = y" type_scope
R34291 Globalenvs.find_funct
R34315 Coq.Init.Datatypes.Some
R34344 Coq.Init.Logic "x = y" type_scope
R34326 Allocation.transf_function
R34346 Coq.Init.Datatypes.Some
R34264 Coq.Init.Logic "x = y" type_scope
R34243 Globalenvs.find_funct
R34266 Coq.Init.Datatypes.Some
R34226 RTL.function
R34217 Values.val
R34393 Globalenvs.find_funct_transf_partial
R34424 Allocation.transf_function
R34393 Globalenvs.find_funct_transf_partial
R34424 Allocation.transf_function
R34459 Allocation.transf_function
R34459 Allocation.transf_function
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R34677 Coq.Init.Logic "'exists' x , p" type_scope
R34726 Coq.Init.Logic "A /\ B" type_scope
R34716 Coq.Init.Logic "x = y" type_scope
R34690 Globalenvs.find_funct_ptr
R34718 Coq.Init.Datatypes.Some
R34747 Coq.Init.Logic "x = y" type_scope
R34729 Allocation.transf_function
R34749 Coq.Init.Datatypes.Some
R34663 Coq.Init.Logic "x = y" type_scope
R34638 Globalenvs.find_funct_ptr
R34665 Coq.Init.Datatypes.Some
R34621 RTL.function
R34603 Values.block
R34796 Globalenvs.find_funct_ptr_transf_partial
R34831 Allocation.transf_function
R34796 Globalenvs.find_funct_ptr_transf_partial
R34831 Allocation.transf_function
R34866 Allocation.transf_function
R34866 Allocation.transf_function
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R35063 Coq.Init.Logic "x = y" type_scope
R35051 LTL.fn_sig
R35068 RTL.fn_sig
R35032 Coq.Init.Logic "x = y" type_scope
R35014 Allocation.transf_function
R35034 Coq.Init.Datatypes.Some
R35139 RTLtyping.type_rtl_function
R35139 RTLtyping.type_rtl_function
R35173 Allocation.analyze
R35173 Allocation.analyze
R35197 Coloring.regalloc
R35197 Coloring.regalloc
R35469 Coq.Init.Logic "x = y" type_scope
R35450 LTL.fn_entrypoint
R35474 RTL.fn_nextpc
R35431 Coq.Init.Logic "x = y" type_scope
R35413 Allocation.transf_function
R35433 Coq.Init.Datatypes.Some
R35548 RTLtyping.type_rtl_function
R35548 RTLtyping.type_rtl_function
R35582 Allocation.analyze
R35582 Allocation.analyze
R35606 Coloring.regalloc
R35606 Coloring.regalloc
R36234 Coq.Init.Logic "'exists' x , p" type_scope
R36298 Coq.Init.Logic "A /\ B" type_scope
R36250 LTL.exec_blocks
R36281 LTL.Cont
R36305 Allocproof.agree
R36322 Maps "a !! b"
R36188 Maps.map
R36199 Allocation.transf_instr
R36130 Allocproof.agree
R36144 Allocation.transfer
R36162 Maps "a !! b"
R36101 Coq.Init.Logic "x = y" type_scope
R36066 Coloring.regalloc
R36083 Allocproof.live0
R36103 Coq.Init.Datatypes.Some
R36032 RTLtyping.wt_function
R35999 Coq.Init.Logic "x = y" type_scope
R36004 RTL.fn_code
R35938 Mem.mem
R35925 RTL.regset
R35913 LTL.node
R35894 Mem.mem
R35882 RTL.regset
R35871 LTL.node
R35853 Values.val
R35838 RTL.code
R36847 Coq.Init.Logic "'exists' x , p" type_scope
R36911 Coq.Init.Logic "A /\ B" type_scope
R36863 LTL.exec_blocks
R36894 LTL.Cont
R36918 Allocproof.agree
R36932 Allocation.transfer
R36951 Maps "a !! b"
R36801 Maps.map
R36812 Allocation.transf_instr
R36779 Coq.Init.Logic "x <> y" type_scope
R36774 Maps "a ! b"
R36782 Coq.Init.Datatypes.None
R36708 Allocproof.agree
R36722 Allocation.transfer
R36740 Maps "a !! b"
R36679 Coq.Init.Logic "x = y" type_scope
R36644 Coloring.regalloc
R36661 Allocproof.live0
R36681 Coq.Init.Datatypes.Some
R36616 Coq.Init.Logic "x = y" type_scope
R36606 Allocation.analyze
R36618 Coq.Init.Datatypes.Some
R36572 RTLtyping.wt_function
R36539 Coq.Init.Logic "x = y" type_scope
R36544 RTL.fn_code
R36477 Mem.mem
R36464 RTL.regset
R36452 LTL.node
R36433 Mem.mem
R36421 RTL.regset
R36410 LTL.node
R36392 Values.val
R36377 RTL.code
R37204 Coq.Init.Logic "'exists' x , p" type_scope
R37257 Coq.Init.Logic "A /\ B" type_scope
R37220 LTL.exec_function
R37309 Coq.Init.Logic "x = y" type_scope
R37269 Locations.R
R37272 Conventions.loc_result
R37299 LTL.fn_sig
R37192 Coq.Init.Logic "x = y" type_scope
R37140 Coq.Lists.List.map
R37153 Conventions.loc_arguments
R37183 LTL.fn_sig
R37125 Coq.Init.Logic "x = y" type_scope
R37107 Allocation.transf_function
R37127 Coq.Init.Datatypes.Some
R37074 Mem.mem
R37064 Values.val
R37045 Mem.mem
R37031 Coq.Lists.List.list
R37036 Values.val
R37010 RTL.function
R37409 Coq.Init.Logic "x = y" type_scope
R37395 Maps.get
R37411 Coq.Init.Datatypes.Some
R37431 Coq.Init.Logic "x = y" type_scope
R37433 RTL.fn_code
R37458 Allocproof.agree
R37467 Allocation.transfer
R37624 Coq.Init.Logic "x = y" type_scope
R37610 Maps.get
R37626 Coq.Init.Datatypes.Some
R37646 Coq.Init.Logic "x = y" type_scope
R37648 RTL.fn_code
R37673 RTLtyping.wt_function
R37772 RTLtyping.wt_instrs
R37986 Coq.Init.Logic "x = y" type_scope
R37972 Maps.get
R37988 Coq.Init.Datatypes.Some
R38017 LTL.exec_blocks_one
R38049 Maps.gmap
R38317 Allocproof.exec_instr_prop
R38296 Coq.Init.Logic "x = y" type_scope
R38291 Maps "a ! b"
R38298 Coq.Init.Datatypes.Some
R38304 RTL.Inop
R38276 RTL.node
R38264 Mem.mem
R38251 RTL.regset
R38231 Coq.NArith.BinPos.positive
R38220 Values.val
R38194 Maps.t
R38202 RTL.instruction
R38440 LTL.exec_Bgoto
R38440 LTL.exec_Bgoto
R38458 LTL.exec_refl
R38458 LTL.exec_refl
R38782 Allocproof.exec_instr_prop
R38819 Registers "a # b <- c"
R38768 Coq.Init.Logic "x = y" type_scope
R38731 Op.eval_operation
R38759 Registers "a ## b"
R38770 Coq.Init.Datatypes.Some
R38697 Coq.Init.Logic "x = y" type_scope
R38692 Maps "a ! b"
R38699 Coq.Init.Datatypes.Some
R38705 RTL.Iop
R38682 Values.val
R38668 RTL.node
R38656 Registers.reg
R38635 Coq.Lists.List.list
R38640 Registers.reg
R38616 Op.operation
R38605 Mem.mem
R38586 Registers.t
R38595 Values.val
R38566 Coq.NArith.BinPos.positive
R38555 Values.val
R38529 Maps.t
R38537 RTL.instruction
R38887 Registers.mem
R38906 Maps "a !! b"
R38887 Registers.mem
R38906 Maps "a !! b"
R38993 Coq.Init.Peano "x <= y" nat_scope
R38958 Coq.Lists.List.length
R38971 Coq.Lists.List.map
R38993 Coq.Init.Peano "x <= y" nat_scope
R38958 Coq.Lists.List.length
R38971 Coq.Lists.List.map
R39017 Coqlib.list_length_map
R39017 Coqlib.list_length_map
R39093 Allocproof.length_op_args
R39093 Allocproof.length_op_args
R39132 Locations.disjoint
R39168 Conventions.temporaries
R39146 Coq.Lists.List.map
R39132 Locations.disjoint
R39168 Conventions.temporaries
R39146 Coq.Lists.List.map
R39193 Allocproof.regalloc_disj_temporaries
R39193 Allocproof.regalloc_disj_temporaries
R39289 Coq.Init.Logic "x = y" type_scope
R39237 Op.eval_operation
R39263 Coq.Lists.List.map
R39271 Coq.Lists.List.map
R39291 Coq.Init.Datatypes.Some
R39289 Coq.Init.Logic "x = y" type_scope
R39237 Op.eval_operation
R39263 Coq.Lists.List.map
R39271 Coq.Lists.List.map
R39291 Coq.Init.Datatypes.Some
R39313 Coq.Lists.List.map
R39321 Coq.Lists.List.map
R39346 Registers "a ## b"
R39313 Coq.Lists.List.map
R39321 Coq.Lists.List.map
R39346 Registers "a ## b"
R39368 Op.eval_operation_preserved
R39393 Allocproof.symbols_preserved
R39368 Op.eval_operation_preserved
R39393 Allocproof.symbols_preserved
R39446 Allocproof.agree_eval_regs
R39446 Allocproof.agree_eval_regs
R39484 Allocproof.add_op_correct
R39526 Coq.Lists.List.map
R39484 Allocproof.add_op_correct
R39526 Coq.Lists.List.map
R39727 Coloringproof.regalloc_correct_1
R39727 Coloringproof.regalloc_correct_1
R39814 Op.is_move_operation
R39814 Op.is_move_operation
R39910 Op.is_move_operation_correct
R39910 Op.is_move_operation_correct
R40036 Allocproof.agree_move_live
R40036 Allocproof.agree_move_live
R40126 Allocproof.agree_eval_reg
R40126 Allocproof.agree_eval_reg
R40215 Allocproof.agree_assign_live
R40215 Allocproof.agree_assign_live
R40268 Allocproof.agree_reg_list_live
R40268 Allocproof.agree_reg_list_live
R40410 LTL.exec_Bgoto
R40428 LTL.exec_refl
R40410 LTL.exec_Bgoto
R40428 LTL.exec_refl
R40447 Allocproof.agree_assign_dead
R40447 Allocproof.agree_assign_dead
R40852 Allocproof.exec_instr_prop
R40888 Registers "a # b <- c"
R40838 Coq.Init.Logic "x = y" type_scope
R40822 Mem.loadv
R40840 Coq.Init.Datatypes.Some
R40808 Coq.Init.Logic "x = y" type_scope
R40770 Op.eval_addressing
R40800 Registers "a ## b"
R40810 Coq.Init.Datatypes.Some
R40726 Coq.Init.Logic "x = y" type_scope
R40721 Maps "a ! b"
R40728 Coq.Init.Datatypes.Some
R40734 RTL.Iload
R40711 Values.val
R40711 Values.val
R40690 RTL.node
R40678 Registers.reg
R40661 Coq.Lists.List.list
R40666 Registers.reg
R40641 Op.addressing
R40615 AST.memory_chunk
R40601 Mem.mem
R40582 Registers.t
R40591 Values.val
R40562 Coq.NArith.BinPos.positive
R40551 Values.val
R40525 Maps.t
R40533 RTL.instruction
R40955 Registers.mem
R40974 Maps "a !! b"
R40955 Registers.mem
R40974 Maps "a !! b"
R41081 Coq.Init.Peano "x <= y" nat_scope
R41046 Coq.Lists.List.length
R41059 Coq.Lists.List.map
R41081 Coq.Init.Peano "x <= y" nat_scope
R41046 Coq.Lists.List.length
R41059 Coq.Lists.List.map
R41105 Coqlib.list_length_map
R41105 Coqlib.list_length_map
R41154 Allocproof.length_addr_args
R41154 Allocproof.length_addr_args
R41195 Locations.disjoint
R41231 Conventions.temporaries
R41209 Coq.Lists.List.map
R41195 Locations.disjoint
R41231 Conventions.temporaries
R41209 Coq.Lists.List.map
R41256 Allocproof.regalloc_disj_temporaries
R41256 Allocproof.regalloc_disj_temporaries
R41368 Coq.Init.Logic "x = y" type_scope
R41313 Op.eval_addressing
R41342 Coq.Lists.List.map
R41350 Coq.Lists.List.map
R41370 Coq.Init.Datatypes.Some
R41368 Coq.Init.Logic "x = y" type_scope
R41313 Op.eval_addressing
R41342 Coq.Lists.List.map
R41350 Coq.Lists.List.map
R41370 Coq.Init.Datatypes.Some
R41414 Registers "a ## b"
R41428 Coq.Lists.List.map
R41436 Coq.Lists.List.map
R41414 Registers "a ## b"
R41428 Coq.Lists.List.map
R41436 Coq.Lists.List.map
R41465 Op.eval_addressing_preserved
R41465 Op.eval_addressing_preserved
R41498 Allocproof.symbols_preserved
R41498 Allocproof.symbols_preserved
R41528 Allocproof.agree_eval_regs
R41528 Allocproof.agree_eval_regs
R41566 Allocproof.add_load_correct
R41617 Coq.Lists.List.map
R41566 Allocproof.add_load_correct
R41617 Coq.Lists.List.map
R41823 Coloringproof.regalloc_correct_1
R41823 Coloringproof.regalloc_correct_1
R41920 Allocproof.agree_assign_live
R41920 Allocproof.agree_assign_live
R41955 Allocproof.agree_reg_list_live
R41955 Allocproof.agree_reg_list_live
R42059 LTL.exec_Bgoto
R42077 LTL.exec_refl
R42059 LTL.exec_Bgoto
R42077 LTL.exec_refl
R42096 Allocproof.agree_assign_dead
R42096 Allocproof.agree_assign_dead
R42517 Allocproof.exec_instr_prop
R42502 Coq.Init.Logic "x = y" type_scope
R42476 Mem.storev
R42496 Registers "a # b"
R42504 Coq.Init.Datatypes.Some
R42462 Coq.Init.Logic "x = y" type_scope
R42424 Op.eval_addressing
R42454 Registers "a ## b"
R42464 Coq.Init.Datatypes.Some
R42379 Coq.Init.Logic "x = y" type_scope
R42374 Maps "a ! b"
R42381 Coq.Init.Datatypes.Some
R42387 RTL.Istore
R42364 Mem.mem
R42353 Values.val
R42334 RTL.node
R42322 Registers.reg
R42305 Coq.Lists.List.list
R42310 Registers.reg
R42285 Op.addressing
R42259 AST.memory_chunk
R42245 Mem.mem
R42226 Registers.t
R42235 Values.val
R42206 Coq.NArith.BinPos.positive
R42195 Values.val
R42169 Maps.t
R42177 RTL.instruction
R42650 Coq.Init.Peano "x <= y" nat_scope
R42615 Coq.Lists.List.length
R42628 Coq.Lists.List.map
R42650 Coq.Init.Peano "x <= y" nat_scope
R42615 Coq.Lists.List.length
R42628 Coq.Lists.List.map
R42674 Coqlib.list_length_map
R42674 Coqlib.list_length_map
R42723 Allocproof.length_addr_args
R42723 Allocproof.length_addr_args
R42764 Locations.disjoint
R42800 Conventions.temporaries
R42778 Coq.Lists.List.map
R42764 Locations.disjoint
R42800 Conventions.temporaries
R42778 Coq.Lists.List.map
R42825 Allocproof.regalloc_disj_temporaries
R42825 Allocproof.regalloc_disj_temporaries
R42874 Locations.notin
R42897 Conventions.temporaries
R42874 Locations.notin
R42897 Conventions.temporaries
R42922 Allocproof.regalloc_not_temporary
R42922 Allocproof.regalloc_not_temporary
R43031 Coq.Init.Logic "x = y" type_scope
R42976 Op.eval_addressing
R43005 Coq.Lists.List.map
R43013 Coq.Lists.List.map
R43033 Coq.Init.Datatypes.Some
R43031 Coq.Init.Logic "x = y" type_scope
R42976 Op.eval_addressing
R43005 Coq.Lists.List.map
R43013 Coq.Lists.List.map
R43033 Coq.Init.Datatypes.Some
R43076 Registers "a ## b"
R43090 Coq.Lists.List.map
R43098 Coq.Lists.List.map
R43076 Registers "a ## b"
R43090 Coq.Lists.List.map
R43098 Coq.Lists.List.map
R43127 Op.eval_addressing_preserved
R43127 Op.eval_addressing_preserved
R43160 Allocproof.symbols_preserved
R43160 Allocproof.symbols_preserved
R43190 Allocproof.agree_eval_regs
R43190 Allocproof.agree_eval_regs
R43246 Coq.Init.Logic "x = y" type_scope
R43250 Registers "a # b"
R43246 Coq.Init.Logic "x = y" type_scope
R43250 Registers "a # b"
R43268 Allocproof.agree_eval_reg
R43268 Allocproof.agree_eval_reg
R43291 Allocproof.agree_reg_list_live
R43291 Allocproof.agree_reg_list_live
R43358 Allocproof.add_store_correct
R43410 Coq.Lists.List.map
R43358 Allocproof.add_store_correct
R43410 Coq.Lists.List.map
R43601 Coloringproof.regalloc_correct_1
R43601 Coloringproof.regalloc_correct_1
R43698 Allocproof.agree_exten
R43698 Allocproof.agree_exten
R43728 Allocproof.agree_reg_live
R43728 Allocproof.agree_reg_live
R43751 Allocproof.agree_reg_list_live
R43751 Allocproof.agree_reg_list_live
R44266 Allocproof.exec_instr_prop
R44302 Registers "a # b <- c"
R44219 Allocproof.exec_function_prop
R44243 Registers "a ## b"
R44170 RTL.exec_function
R44196 Registers "a ## b"
R44150 Coq.Init.Logic "x = y" type_scope
R44152 RTL.fn_sig
R44132 Coq.Init.Logic "x = y" type_scope
R44104 RTL.find_function
R44134 Coq.Init.Datatypes.Some
R44063 Coq.Init.Logic "x = y" type_scope
R44058 Maps "a ! b"
R44065 Coq.Init.Datatypes.Some
R44071 RTL.Icall
R44048 Mem.mem
R44037 Values.val
R44015 RTL.function
R43996 RTL.node
R43984 Registers.reg
R43967 Coq.Lists.List.list
R43972 Registers.reg
R43946 Coq.Init.Datatypes "x + y" type_scope
R43942 Registers.reg
R43948 AST.ident
R43924 AST.signature
R43912 Mem.mem
R43899 RTL.regset
R43879 Coq.NArith.BinPos.positive
R43868 Values.val
R43842 Maps.t
R43850 RTL.instruction
R44377 Coqlib.sum_left_map
R44377 Coqlib.sum_left_map
R44419 Coq.Init.Logic "'exists' x , p" type_scope
R44478 Coq.Init.Logic "A /\ B" type_scope
R44468 Coq.Init.Logic "x = y" type_scope
R44442 Allocproof.find_function2
R44470 Coq.Init.Datatypes.Some
R44511 Coq.Init.Logic "x = y" type_scope
R44493 Allocation.transf_function
R44513 Coq.Init.Datatypes.Some
R44419 Coq.Init.Logic "'exists' x , p" type_scope
R44478 Coq.Init.Logic "A /\ B" type_scope
R44468 Coq.Init.Logic "x = y" type_scope
R44442 Allocproof.find_function2
R44470 Coq.Init.Datatypes.Some
R44511 Coq.Init.Logic "x = y" type_scope
R44493 Allocation.transf_function
R44513 Coq.Init.Datatypes.Some
R44583 Allocproof.functions_translated
R44583 Allocproof.functions_translated
R44641 Registers "a # b"
R44641 Registers "a # b"
R44691 Allocproof.agree_eval_reg
R44691 Allocproof.agree_eval_reg
R44718 Allocproof.agree_reg_list_live
R44718 Allocproof.agree_reg_list_live
R44758 Allocproof.symbols_preserved
R44758 Allocproof.symbols_preserved
R44787 Globalenvs.find_symbol
R44787 Globalenvs.find_symbol
R44821 Allocproof.function_ptr_translated
R44821 Allocproof.function_ptr_translated
R44938 Coq.Init.Logic "x = y" type_scope
R44940 LTL.fn_sig
R44938 Coq.Init.Logic "x = y" type_scope
R44940 LTL.fn_sig
R44965 Allocproof.sig_function_translated
R44965 Allocproof.sig_function_translated
R45111 Coq.Init.Logic "x = y" type_scope
R45076 Coq.Lists.List.map
R45089 Coq.Lists.List.map
R45115 Registers "a ## b"
R45111 Coq.Init.Logic "x = y" type_scope
R45076 Coq.Lists.List.map
R45089 Coq.Lists.List.map
R45115 Registers "a ## b"
R45135 Allocproof.agree_eval_regs
R45135 Allocproof.agree_eval_regs
R45212 Coq.Init.Logic "x = y" type_scope
R45177 Coq.Lists.List.length
R45190 Coq.Lists.List.map
R45250 Coq.Lists.List.length
R45267 AST.sig_args
R45212 Coq.Init.Logic "x = y" type_scope
R45177 Coq.Lists.List.length
R45190 Coq.Lists.List.map
R45250 Coq.Lists.List.length
R45267 AST.sig_args
R45334 Coqlib.list_length_map
R45334 Coqlib.list_length_map
R45334 Coqlib.list_length_map
R45334 Coqlib.list_length_map
R45376 Conventions.locs_acceptable
R45393 Coq.Lists.List.map
R45376 Conventions.locs_acceptable
R45393 Coq.Lists.List.map
R45428 Coloringproof.regsalloc_acceptable
R45428 Coloringproof.regsalloc_acceptable
R45491 Coloringproof.regalloc_correct_1
R45491 Coloringproof.regalloc_correct_1
R45606 Conventions.loc_acceptable
R45606 Conventions.loc_acceptable
R45647 Coloringproof.regalloc_acceptable
R45647 Coloringproof.regalloc_acceptable
R45689 Allocproof.add_call_correct
R45689 Allocproof.add_call_correct
R45924 Allocproof.agree_call
R45924 Allocproof.agree_call
R46240 Allocproof.exec_instr_prop
R46223 Coq.Init.Logic "x = y" type_scope
R46192 Op.eval_condition
R46215 Registers "a ## b"
R46225 Coq.Init.Datatypes.Some
R46230 Coq.Init.Datatypes.true
R46151 Coq.Init.Logic "x = y" type_scope
R46146 Maps "a ! b"
R46153 Coq.Init.Datatypes.Some
R46159 RTL.Icond
R46131 RTL.node
R46131 RTL.node
R46103 Coq.Lists.List.list
R46108 Registers.reg
R46084 Op.condition
R46071 Mem.mem
R46052 Registers.t
R46061 Values.val
R46032 Coq.NArith.BinPos.positive
R46021 Values.val
R45995 Maps.t
R46003 RTL.instruction
R46368 Coq.Init.Peano "x <= y" nat_scope
R46338 Coq.Lists.List.length
R46351 Coq.Lists.List.map
R46368 Coq.Init.Peano "x <= y" nat_scope
R46338 Coq.Lists.List.length
R46351 Coq.Lists.List.map
R46392 Coqlib.list_length_map
R46392 Coqlib.list_length_map
R46436 Allocproof.length_cond_args
R46436 Allocproof.length_cond_args
R46477 Locations.disjoint
R46508 Conventions.temporaries
R46491 Coq.Lists.List.map
R46477 Locations.disjoint
R46508 Conventions.temporaries
R46491 Coq.Lists.List.map
R46533 Allocproof.regalloc_disj_temporaries
R46533 Allocproof.regalloc_disj_temporaries
R46630 Coq.Init.Logic "x = y" type_scope
R46583 Op.eval_condition
R46604 Coq.Lists.List.map
R46612 Coq.Lists.List.map
R46632 Coq.Init.Datatypes.Some
R46637 Coq.Init.Datatypes.true
R46630 Coq.Init.Logic "x = y" type_scope
R46583 Op.eval_condition
R46604 Coq.Lists.List.map
R46612 Coq.Lists.List.map
R46632 Coq.Init.Datatypes.Some
R46637 Coq.Init.Datatypes.true
R46657 Coq.Lists.List.map
R46665 Coq.Lists.List.map
R46690 Registers "a ## b"
R46657 Coq.Lists.List.map
R46665 Coq.Lists.List.map
R46690 Registers "a ## b"
R46731 Allocproof.agree_eval_regs
R46731 Allocproof.agree_eval_regs
R46769 Allocproof.add_cond_correct
R46842 Coq.Init.Logic.refl_equal
R46769 Allocproof.add_cond_correct
R46842 Coq.Init.Logic.refl_equal
R46945 Allocproof.agree_exten
R46945 Allocproof.agree_exten
R46972 Allocproof.agree_reg_list_live
R46972 Allocproof.agree_reg_list_live
R47314 Allocproof.exec_instr_prop
R47296 Coq.Init.Logic "x = y" type_scope
R47265 Op.eval_condition
R47288 Registers "a ## b"
R47298 Coq.Init.Datatypes.Some
R47303 Coq.Init.Datatypes.false
R47224 Coq.Init.Logic "x = y" type_scope
R47219 Maps "a ! b"
R47226 Coq.Init.Datatypes.Some
R47232 RTL.Icond
R47204 RTL.node
R47204 RTL.node
R47176 Coq.Lists.List.list
R47181 Registers.reg
R47157 Op.condition
R47144 Mem.mem
R47125 Registers.t
R47134 Values.val
R47105 Coq.NArith.BinPos.positive
R47094 Values.val
R47068 Maps.t
R47076 RTL.instruction
R47443 Coq.Init.Peano "x <= y" nat_scope
R47413 Coq.Lists.List.length
R47426 Coq.Lists.List.map
R47443 Coq.Init.Peano "x <= y" nat_scope
R47413 Coq.Lists.List.length
R47426 Coq.Lists.List.map
R47467 Coqlib.list_length_map
R47467 Coqlib.list_length_map
R47511 Allocproof.length_cond_args
R47511 Allocproof.length_cond_args
R47552 Locations.disjoint
R47583 Conventions.temporaries
R47566 Coq.Lists.List.map
R47552 Locations.disjoint
R47583 Conventions.temporaries
R47566 Coq.Lists.List.map
R47608 Allocproof.regalloc_disj_temporaries
R47608 Allocproof.regalloc_disj_temporaries
R47705 Coq.Init.Logic "x = y" type_scope
R47658 Op.eval_condition
R47679 Coq.Lists.List.map
R47687 Coq.Lists.List.map
R47707 Coq.Init.Datatypes.Some
R47712 Coq.Init.Datatypes.false
R47705 Coq.Init.Logic "x = y" type_scope
R47658 Op.eval_condition
R47679 Coq.Lists.List.map
R47687 Coq.Lists.List.map
R47707 Coq.Init.Datatypes.Some
R47712 Coq.Init.Datatypes.false
R47733 Coq.Lists.List.map
R47741 Coq.Lists.List.map
R47766 Registers "a ## b"
R47733 Coq.Lists.List.map
R47741 Coq.Lists.List.map
R47766 Registers "a ## b"
R47807 Allocproof.agree_eval_regs
R47807 Allocproof.agree_eval_regs
R47845 Allocproof.add_cond_correct
R47917 Coq.Init.Logic.refl_equal
R47845 Allocproof.add_cond_correct
R47917 Coq.Init.Logic.refl_equal
R48021 Allocproof.agree_exten
R48021 Allocproof.agree_exten
R48048 Allocproof.agree_reg_list_live
R48048 Allocproof.agree_reg_list_live
R48202 Allocproof.exec_instrs_prop
R48196 Mem.mem
R48179 RTL.regset
R48163 RTL.node
R48152 Values.val
R48137 RTL.code
R48298 LTL.exec_blocks_refl
R48298 LTL.exec_blocks_refl
R48575 Allocproof.exec_instrs_prop
R48530 Allocproof.exec_instr_prop
R48483 RTL.exec_instr
R48475 Mem.mem
R48461 RTL.regset
R48444 RTL.node
R48432 Mem.mem
R48415 RTL.regset
R48399 RTL.node
R48388 Values.val
R48373 RTL.code
R48792 Maps "a !! b"
R48766 Allocproof.agree_increasing
R48792 Maps "a !! b"
R48766 Allocproof.agree_increasing
R48806 Allocproof.analyze_correct
R48806 Allocproof.analyze_correct
R48854 RTL.exec_instr_present
R48854 RTL.exec_instr_present
R48913 RTL.successors_correct
R48913 RTL.successors_correct
R49382 Allocproof.exec_instrs_prop
R49333 Allocproof.exec_instrs_prop
R49282 RTL.exec_instrs
R49233 Allocproof.exec_instrs_prop
R49182 RTL.exec_instrs
R49174 Mem.mem
R49160 RTL.regset
R49143 RTL.node
R49127 Mem.mem
R49113 RTL.regset
R49096 RTL.node
R49084 Mem.mem
R49066 RTL.regset
R49049 RTL.node
R49037 Values.val
R49022 RTL.code
R49483 Coq.Init.Logic "x <> y" type_scope
R49478 Maps "a ! b"
R49486 Coq.Init.Datatypes.None
R49483 Coq.Init.Logic "x <> y" type_scope
R49478 Maps "a ! b"
R49486 Coq.Init.Datatypes.None
R49504 RTL.exec_instrs_present
R49504 RTL.exec_instrs_present
R49750 LTL.exec_blocks_trans
R49750 LTL.exec_blocks_trans
R49926 Coq.Init.Logic "A /\ B" type_scope
R49915 Coq.Init.Logic "~ x" type_scope
R49917 Coq.Lists.List.In
R49947 Coq.Init.Logic "x = y" type_scope
R49929 Registers.mem
R49949 Coq.Init.Datatypes.true
R49903 Coq.Init.Logic "x = y" type_scope
R49866 Registers.mem
R49880 Allocation.reg_list_dead
R49905 Coq.Init.Datatypes.true
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R50059 Coq.Init.Logic "x <> y" type_scope
R50059 Coq.Init.Logic "x <> y" type_scope
R50098 Registers.mem_remove_same
R50098 Registers.mem_remove_same
R50152 Registers.mem_remove_other
R50152 Registers.mem_remove_other
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R50551 Coq.Init.Logic "'exists' x , p" type_scope
R50669 Coq.Init.Logic "A /\ B" type_scope
R50565 LTL.exec_blocks
R50635 LTL.Cont
R50641 RTL.fn_entrypoint
R50588 RTL.fn_nextpc
R50674 Allocproof.agree
R50759 RTL.init_regs
R50775 RTL.fn_params
R50688 Allocation.transfer
R50725 Maps "a !! b"
R50728 RTL.fn_entrypoint
R50700 RTL.fn_entrypoint
R50512 Allocation.transf_entrypoint
R50487 Coq.Init.Logic "x = y" type_scope
R50469 Locations.S
R50472 Locations.Local
R50489 Values.Vundef
R50437 Coq.Init.Logic "x = y" type_scope
R50393 Coq.Lists.List.map
R50406 Conventions.loc_parameters
R50422 RTL.fn_sig
R50381 Coq.Init.Logic "x = y" type_scope
R50362 Maps "a ! b"
R50364 RTL.fn_nextpc
R50383 Coq.Init.Datatypes.None
R50342 Coq.Init.Logic "x = y" type_scope
R50307 Coloring.regalloc
R50324 Allocproof.live0
R50344 Coq.Init.Datatypes.Some
R50284 RTLtyping.wt_function
R50871 RTL.fn_entrypoint
R50871 RTL.fn_entrypoint
R50912 RTL.fn_nextpc
R50912 RTL.fn_nextpc
R50947 RTL.fn_params
R50947 RTL.fn_params
R50982 Registers.elements
R50999 Allocation.reg_list_dead
R51021 Allocation.transfer
R51045 Maps "a !! b"
R50982 Registers.elements
R50999 Allocation.reg_list_dead
R51021 Allocation.transfer
R51045 Maps "a !! b"
R51122 Coq.Init.Logic "x = y" type_scope
R51085 Coq.Lists.List.length
R51098 Coq.Lists.List.map
R51138 Coq.Lists.List.length
R51166 AST.sig_args
R51151 RTL.fn_sig
R51122 Coq.Init.Logic "x = y" type_scope
R51085 Coq.Lists.List.length
R51098 Coq.Lists.List.map
R51138 Coq.Lists.List.length
R51166 AST.sig_args
R51151 RTL.fn_sig
R51194 RTLtyping.wt_params
R51194 RTLtyping.wt_params
R51234 Coqlib.list_length_map
R51234 Coqlib.list_length_map
R51234 Coqlib.list_length_map
R51234 Coqlib.list_length_map
R51272 Locations.norepet
R51285 Coq.Lists.List.map
R51302 RTL.fn_params
R51272 Locations.norepet
R51285 Coq.Lists.List.map
R51302 RTL.fn_params
R51333 Allocproof.regalloc_norepet_norepet
R51333 Allocproof.regalloc_norepet_norepet
R51377 Coloringproof.regalloc_correct_2
R51377 Coloringproof.regalloc_correct_2
R51415 RTLtyping.wt_norepet
R51415 RTLtyping.wt_norepet
R51448 Conventions.locs_acceptable
R51465 Coq.Lists.List.map
R51482 RTL.fn_params
R51448 Conventions.locs_acceptable
R51465 Coq.Lists.List.map
R51482 RTL.fn_params
R51513 Coloringproof.regsalloc_acceptable
R51513 Coloringproof.regsalloc_acceptable
R51556 Locations.disjoint
R51639 Coq.Lists.List.map
R51587 Coq.Lists.List.map
R51604 RTL.fn_params
R51556 Locations.disjoint
R51639 Coq.Lists.List.map
R51587 Coq.Lists.List.map
R51604 RTL.fn_params
R51714 Coqlib.list_in_map_inv
R51714 Coqlib.list_in_map_inv
R51806 Coqlib.list_in_map_inv
R51806 Coqlib.list_in_map_inv
R51898 Registers.elements_complete
R51898 Registers.elements_complete
R51956 Allocproof.regset_mem_reg_list_dead
R51956 Allocproof.regset_mem_reg_list_dead
R52022 Allocproof.regalloc_noteq_diff
R52022 Allocproof.regalloc_noteq_diff
R52061 Coloringproof.regalloc_correct_3
R52061 Coloringproof.regalloc_correct_3
R52184 Conventions.loc_acceptable
R52151 Coq.Lists.List.In
R52157 Coq.Lists.List.map
R52184 Conventions.loc_acceptable
R52151 Coq.Lists.List.In
R52157 Coq.Lists.List.map
R52232 Coqlib.list_in_map_inv
R52232 Coqlib.list_in_map_inv
R52314 Coloringproof.regalloc_acceptable
R52314 Coloringproof.regalloc_acceptable
R52356 Allocproof.add_entry_correct
R52445 Coq.Lists.List.map
R52405 Coq.Lists.List.map
R52422 RTL.fn_params
R52386 RTL.fn_sig
R52356 Allocproof.add_entry_correct
R52445 Coq.Lists.List.map
R52405 Coq.Lists.List.map
R52422 RTL.fn_params
R52386 RTL.fn_sig
R52578 LTL.exec_blocks_one
R52578 LTL.exec_blocks_one
R52605 Maps.gss
R52605 Maps.gss
R52699 Allocproof.live0
R52653 Allocation.transfer
R52677 Maps "a !! b"
R52699 Allocproof.live0
R52653 Allocation.transfer
R52677 Maps "a !! b"
R52738 Allocproof.agree_parameters
R52738 Allocproof.agree_parameters
R52788 Registers.reg
R52772 Registers.elt
R52788 Registers.reg
R52772 Registers.elt
R52897 Coq.Lists.List.in_map
R52897 Coq.Lists.List.in_map
R52929 Registers.elements_correct
R52929 Registers.elements_correct
R53548 Allocproof.exec_function_prop
R53582 Mem.free
R53514 Coq.Init.Logic "x = y" type_scope
R53516 Registers.regmap_optget
R53533 Values.Vundef
R53484 Coq.Init.Logic "x = y" type_scope
R53477 Maps "a ! b"
R53464 RTL.fn_code
R53486 Coq.Init.Datatypes.Some
R53492 RTL.Ireturn
R53336 Allocproof.exec_instrs_prop
R53416 RTL.init_regs
R53432 RTL.fn_params
R53394 RTL.fn_entrypoint
R53370 Values.Vptr
R53379 Integers.zero
R53354 RTL.fn_code
R53207 RTL.exec_instrs
R53289 RTL.init_regs
R53305 RTL.fn_params
R53267 RTL.fn_entrypoint
R53243 Values.Vptr
R53252 Integers.zero
R53227 RTL.fn_code
R53190 Coq.Init.Logic "x = y" type_scope
R53159 Mem.alloc
R53170 RTL.fn_stacksize
R53192 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R53151 Values.val
R53131 Coq.Init.Datatypes.option
R53138 Registers.reg
R53116 Mem.mem
R53102 RTL.regset
R53086 RTL.node
R53070 Coq.Lists.List.list
R53075 Values.val
R53044 Values.block
R53032 Mem.mem
R53032 Mem.mem
R53010 RTL.function
R53671 RTLtyping.type_rtl_function
R53671 RTLtyping.type_rtl_function
R53722 Allocation.analyze
R53722 Allocation.analyze
R53835 Allocproof.live0
R53763 Allocation.transfer
R53800 Maps "a !! b"
R53803 RTL.fn_entrypoint
R53775 RTL.fn_entrypoint
R53835 Allocproof.live0
R53763 Allocation.transfer
R53800 Maps "a !! b"
R53803 RTL.fn_entrypoint
R53775 RTL.fn_entrypoint
R53860 Coloring.regalloc
R53877 Allocproof.live0
R53860 Coloring.regalloc
R53877 Allocproof.live0
R53931 Maps.map
R53970 RTL.fn_code
R53942 Allocation.transf_instr
R53931 Maps.map
R53970 RTL.fn_code
R53942 Allocation.transf_instr
R54001 Allocation.transf_entrypoint
R54001 Allocation.transf_entrypoint
R54112 RTLtyping.type_rtl_function_correct
R54112 RTLtyping.type_rtl_function_correct
R54201 Coq.Init.Logic "x = y" type_scope
R54182 Maps "a ! b"
R54184 RTL.fn_nextpc
R54203 Coq.Init.Datatypes.None
R54201 Coq.Init.Logic "x = y" type_scope
R54182 Maps "a ! b"
R54184 RTL.fn_nextpc
R54203 Coq.Init.Datatypes.None
R54234 Maps.gmap
R54234 Maps.gmap
R54275 RTL.fn_code_wf
R54293 RTL.fn_nextpc
R54275 RTL.fn_code_wf
R54293 RTL.fn_nextpc
R54325 Coqlib.Plt_ne
R54325 Coqlib.Plt_ne
R54384 LTL.call_regs
R54384 LTL.call_regs
R54462 Coq.Init.Logic "x = y" type_scope
R54417 Coq.Lists.List.map
R54431 Conventions.loc_parameters
R54447 RTL.fn_sig
R54462 Coq.Init.Logic "x = y" type_scope
R54417 Coq.Lists.List.map
R54431 Conventions.loc_parameters
R54447 RTL.fn_sig
R54484 RTL.fn_sig
R54504 LTL.fn_sig
R54484 RTL.fn_sig
R54504 LTL.fn_sig
R54573 Coqlib.list_map_compose
R54573 Coqlib.list_map_compose
R54597 Coqlib.list_map_exten
R54597 Coqlib.list_map_exten
R54654 Allocproof.call_regs_param_of_arg
R54654 Allocproof.call_regs_param_of_arg
R54788 Coq.Init.Logic "x = y" type_scope
R54770 Locations.S
R54773 Locations.Local
R54790 Values.Vundef
R54759 AST.typ
R54750 Coq.ZArith.BinInt.Z
R54788 Coq.Init.Logic "x = y" type_scope
R54770 Locations.S
R54773 Locations.Local
R54790 Values.Vundef
R54759 AST.typ
R54750 Coq.ZArith.BinInt.Z
R54842 Allocproof.transf_entrypoint_correct
R54915 Values.Vptr
R54924 Integers.zero
R54842 Allocproof.transf_entrypoint_correct
R54915 Values.Vptr
R54924 Integers.zero
R55064 Coq.Init.Logic "x <> y" type_scope
R55060 Maps "a ! b"
R55048 RTL.fn_code
R55067 Coq.Init.Datatypes.None
R55064 Coq.Init.Logic "x <> y" type_scope
R55060 Maps "a ! b"
R55048 RTL.fn_code
R55067 Coq.Init.Datatypes.None
R55140 Coq.Init.Logic.refl_equal
R55140 Coq.Init.Logic.refl_equal
R55236 Allocproof.add_return_correct
R55324 Coqlib.option_map
R55280 RTL.fn_sig
R55260 Values.Vptr
R55269 Integers.zero
R55236 Allocproof.add_return_correct
R55324 Coqlib.option_map
R55280 RTL.fn_sig
R55260 Values.Vptr
R55269 Integers.zero
R55429 LTL.exec_funct
R55429 LTL.exec_funct
R55530 LTL.exec_blocks_trans
R55530 LTL.exec_blocks_trans
R55570 LTL.exec_blocks_extends
R55570 LTL.exec_blocks_extends
R55657 Coqlib.peq
R55664 RTL.fn_nextpc
R55657 Coqlib.peq
R55664 RTL.fn_nextpc
R55724 Maps.gmap
R55724 Maps.gmap
R55745 RTL.fn_code_wf
R55763 RTL.fn_nextpc
R55745 RTL.fn_code_wf
R55763 RTL.fn_nextpc
R55793 Coqlib.Plt_ne
R55793 Coqlib.Plt_ne
R55854 Maps.gso
R55854 Maps.gso
R55880 LTL.exec_blocks_trans
R55880 LTL.exec_blocks_trans
R55920 LTL.exec_blocks_one
R55920 LTL.exec_blocks_one
R55960 Maps.gmap
R55960 Maps.gmap
R56121 Allocproof.agree_eval_reg
R56121 Allocproof.agree_eval_reg
R56744 Allocproof.exec_function_prop
R56702 RTL.exec_function
R56789 Allocproof.exec_function_ind_3
R57234 Allocproof.transl_function_correct
R57202 Allocproof.transl_trans_correct
R57173 Allocproof.transl_one_correct
R57143 Allocproof.transl_refl_correct
R57105 Allocproof.transl_Icond_false_correct
R57069 Allocproof.transl_Icond_true_correct
R57038 Allocproof.transl_Icall_correct
R57006 Allocproof.transl_Istore_correct
R56975 Allocproof.transl_Iload_correct
R56946 Allocproof.transl_Iop_correct
R56916 Allocproof.transl_Inop_correct
R56877 Allocproof.exec_function_prop
R56850 Allocproof.exec_instrs_prop
R56823 Allocproof.exec_instr_prop
R57341 LTL.exec_program
R57314 RTL.exec_program
R57306 Values.val
R57439 Allocproof.function_ptr_translated
R57439 Allocproof.function_ptr_translated
R57530 Coq.Init.Logic "x = y" type_scope
R57522 LTL.fn_sig
R57532 AST.mksignature
R57549 Coq.Init.Datatypes.Some
R57554 AST.Tint
R57544 Coq.Lists.List.nil
R57530 Coq.Init.Logic "x = y" type_scope
R57522 LTL.fn_sig
R57532 AST.mksignature
R57549 Coq.Init.Datatypes.Some
R57554 AST.Tint
R57544 Coq.Lists.List.nil
R57588 Allocproof.sig_function_translated
R57588 Allocproof.sig_function_translated
R57691 Coq.Init.Logic "x = y" type_scope
R57638 Coq.Lists.List.map
R57664 Conventions.loc_arguments
R57679 LTL.fn_sig
R57643 Locations.init
R57655 Values.Vundef
R57693 Coq.Lists.List.nil
R57691 Coq.Init.Logic "x = y" type_scope
R57638 Coq.Lists.List.map
R57664 Conventions.loc_arguments
R57679 LTL.fn_sig
R57643 Locations.init
R57655 Values.Vundef
R57693 Coq.Lists.List.nil
R57744 Allocproof.transl_function_correctness
R57804 Locations.init
R57816 Values.Vundef
R57744 Allocproof.transl_function_correctness
R57804 Locations.init
R57816 Values.Vundef
R57936 Allocproof.symbols_preserved
R57936 Allocproof.symbols_preserved
R57967 AST.transform_partial_program_main
R57967 AST.transform_partial_program_main
R58086 Globalenvs.init_mem
R58113 Globalenvs.init_mem
R58086 Globalenvs.init_mem
R58113 Globalenvs.init_mem
R58168 Globalenvs.init_mem_transf_partial
R58168 Globalenvs.init_mem_transf_partial
FAlloctyping_aux
R251 LTL.function
R288 Locations.loc
R353 Locations.R
R383 Locations.loc
R450 Locations.R
R514 Coq.Lists.List.In
R481 Coq.Lists.List.list
R486 Locations.loc
R600 Coq.Lists.List.In
R567 Coq.Lists.List.list
R572 Locations.loc
R799 LTLtyping.wt_block
R812 Allocation.add_move
R781 LTLtyping.wt_block
R760 Coq.Init.Logic "x = y" type_scope
R747 Locations.type
R762 Locations.type
R687 LTL.block
R677 Locations.loc
R677 Locations.loc
R907 Coq.Init.Logic "A /\ B" type_scope
R885 Coq.Lists.List.In
R897 Parallelmove.getsrc
R889 Coq.Init.Datatypes.fst
R910 Coq.Lists.List.In
R922 Parallelmove.getdst
R914 Coq.Init.Datatypes.snd
R874 Coq.Lists.List.In
R1206 Coq.Init.Logic "x = y" type_scope
R1195 Locations.type
R1208 Locations.type
R1218 Parallelmove.T
R1254 Locations.type
R1254 Locations.type
R1322 Coq.Lists.List.incl
R1327 Coq.Lists.List.nil
R1312 Coq.Lists.List.list
R1398 Alloctyping_aux.incl_nil
R1532 Coq.Init.Logic "A /\ B" type_scope
R1522 Coq.Lists.List.incl
R1535 Coq.Lists.List.incl
R1499 Coq.Init.Logic "x = y" type_scope
R1484 Parallelmove.split_move
R1501 Coq.Init.Datatypes.Some
R1506 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R1477 Parallelmove.Reg
R1477 Parallelmove.Reg
R1463 Parallelmove.Moves
R1463 Parallelmove.Moves
R1463 Parallelmove.Moves
R1651 Locations.eq
R1651 Locations.eq
R1712 Alloctyping_aux.incl_nil
R1712 Alloctyping_aux.incl_nil
R1728 Coq.Lists.List.incl_tl
R1743 Coq.Lists.List.incl_refl
R1728 Coq.Lists.List.incl_tl
R1743 Coq.Lists.List.incl_refl
R1768 Parallelmove.split_move
R1768 Parallelmove.split_move
R2065 Coq.Lists.List.incl_tl
R2065 Coq.Lists.List.incl_tl
R2186 Coq.Lists.List.In
R2189 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2163 Coq.Init.Logic "x = y" type_scope
R2148 Parallelmove.split_move
R2165 Coq.Init.Datatypes.Some
R2170 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2141 Parallelmove.Reg
R2141 Parallelmove.Reg
R2127 Parallelmove.Moves
R2127 Parallelmove.Moves
R2127 Parallelmove.Moves
R2302 Locations.eq
R2302 Locations.eq
R2374 Parallelmove.split_move
R2374 Parallelmove.split_move
R2791 Coq.Init.Logic "x = y" type_scope
R2779 Locations.type
R2793 Locations.type
R2682 Coq.Lists.List.In
R2722 Coq.Lists.List "x ++ y" list_scope
R2699 Parallelmove.StateToMove
R2712 Parallelmove.stepf
R2748 Coq.Lists.List "x ++ y" list_scope
R2726 Parallelmove.StateBeing
R2738 Parallelmove.stepf
R2751 Parallelmove.StateDone
R2762 Parallelmove.stepf
R2687 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2648 Coq.Init.Logic "x = y" type_scope
R2636 Locations.type
R2650 Locations.type
R2566 Coq.Lists.List.In
R2594 Coq.Lists.List "x ++ y" list_scope
R2579 Parallelmove.StateToMove
R2612 Coq.Lists.List "x ++ y" list_scope
R2598 Parallelmove.StateBeing
R2615 Parallelmove.StateDone
R2569 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2870 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2924 Parallelmove.StateToMove
R2951 Parallelmove.StateBeing
R2978 Parallelmove.StateDone
R3003 Coq.Lists.List.app
R2870 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2924 Parallelmove.StateToMove
R2924 Parallelmove.StateToMove
R2924 Parallelmove.StateToMove
R2951 Parallelmove.StateBeing
R2951 Parallelmove.StateBeing
R2951 Parallelmove.StateBeing
R2978 Parallelmove.StateDone
R2978 Parallelmove.StateDone
R2978 Parallelmove.StateDone
R3003 Coq.Lists.List.app
R3003 Coq.Lists.List.app
R3003 Coq.Lists.List.app
R3032 Coq.Lists.List.in_app_or
R3123 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3094 Coq.Lists.List "x ++ y" list_scope
R3072 Parallelmove.StateBeing
R3084 Parallelmove.stepf
R3097 Parallelmove.StateDone
R3108 Parallelmove.stepf
R3047 Parallelmove.StateToMove
R3060 Parallelmove.stepf
R3032 Coq.Lists.List.in_app_or
R3123 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3094 Coq.Lists.List "x ++ y" list_scope
R3072 Parallelmove.StateBeing
R3084 Parallelmove.stepf
R3097 Parallelmove.StateDone
R3108 Parallelmove.stepf
R3047 Parallelmove.StateToMove
R3060 Parallelmove.stepf
R3171 Coq.Init.Logic "x = y" type_scope
R3148 Parallelmove.StateToMove
R3161 Parallelmove.stepf
R3173 Coq.Lists.List.nil
R3171 Coq.Init.Logic "x = y" type_scope
R3148 Parallelmove.StateToMove
R3161 Parallelmove.stepf
R3173 Coq.Lists.List.nil
R3185 Parallelmove.stepf
R3185 Parallelmove.stepf
R3219 Locations.eq
R3229 Coq.Init.Datatypes.fst
R3234 Parallelmove.last
R3219 Locations.eq
R3229 Coq.Init.Datatypes.fst
R3234 Parallelmove.last
R3318 Coq.Lists.List.in_app_or
R3375 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3353 Parallelmove.StateDone
R3364 Parallelmove.stepf
R3329 Parallelmove.StateBeing
R3341 Parallelmove.stepf
R3318 Coq.Lists.List.in_app_or
R3375 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R3353 Parallelmove.StateDone
R3364 Parallelmove.stepf
R3329 Parallelmove.StateBeing
R3341 Parallelmove.stepf
R3430 Coq.Init.Logic "A \/ B" type_scope
R3424 Coq.Init.Logic "x = y" type_scope
R3402 Parallelmove.StateBeing
R3414 Parallelmove.stepf
R3426 Coq.Lists.List.nil
R3463 Coq.Init.Logic "A \/ B" type_scope
R3458 Coq.Init.Logic "x = y" type_scope
R3436 Parallelmove.StateBeing
R3448 Parallelmove.stepf
R3488 Coq.Init.Logic "x = y" type_scope
R3466 Parallelmove.StateBeing
R3478 Parallelmove.stepf
R3490 Parallelmove.replace_last_s
R3430 Coq.Init.Logic "A \/ B" type_scope
R3424 Coq.Init.Logic "x = y" type_scope
R3402 Parallelmove.StateBeing
R3414 Parallelmove.stepf
R3426 Coq.Lists.List.nil
R3463 Coq.Init.Logic "A \/ B" type_scope
R3458 Coq.Init.Logic "x = y" type_scope
R3436 Parallelmove.StateBeing
R3448 Parallelmove.stepf
R3488 Coq.Init.Logic "x = y" type_scope
R3466 Parallelmove.StateBeing
R3478 Parallelmove.stepf
R3490 Parallelmove.replace_last_s
R3517 Parallelmove.stepf
R3517 Parallelmove.stepf
R3551 Locations.eq
R3561 Coq.Init.Datatypes.fst
R3566 Parallelmove.last
R3551 Locations.eq
R3561 Coq.Init.Datatypes.fst
R3566 Parallelmove.last
R3992 Parallelmove.app_rewriter
R3992 Parallelmove.app_rewriter
R4087 Parallelmove.last_replace
R4087 Parallelmove.last_replace
R4113 Coq.Lists.List.in_app_or
R4145 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4137 Coq.Lists.List "x :: y" list_scope
R4126 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4127 Parallelmove.T
R4140 Coq.Lists.List.nil
R4113 Coq.Lists.List.in_app_or
R4145 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4137 Coq.Lists.List "x :: y" list_scope
R4126 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4127 Parallelmove.T
R4140 Coq.Lists.List.nil
R4260 Alloctyping_aux.T_type
R4260 Alloctyping_aux.T_type
R4339 Coq.Lists.List.In
R4361 Coq.Lists.List "x :: y" list_scope
R4352 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4364 Coq.Lists.List.nil
R4342 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4339 Coq.Lists.List.In
R4361 Coq.Lists.List "x :: y" list_scope
R4352 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4364 Coq.Lists.List.nil
R4342 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4482 Coq.Init.Logic "A \/ B" type_scope
R4467 Coq.Init.Logic "x = y" type_scope
R4446 Parallelmove.StateDone
R4457 Parallelmove.stepf
R4476 Coq.Lists.List "x :: y" list_scope
R4469 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4508 Coq.Init.Logic "x = y" type_scope
R4487 Parallelmove.StateDone
R4498 Parallelmove.stepf
R4517 Coq.Lists.List "x :: y" list_scope
R4510 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4530 Coq.Lists.List "x :: y" list_scope
R4521 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4525 Parallelmove.T
R4482 Coq.Init.Logic "A \/ B" type_scope
R4467 Coq.Init.Logic "x = y" type_scope
R4446 Parallelmove.StateDone
R4457 Parallelmove.stepf
R4476 Coq.Lists.List "x :: y" list_scope
R4469 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4508 Coq.Init.Logic "x = y" type_scope
R4487 Parallelmove.StateDone
R4498 Parallelmove.stepf
R4517 Coq.Lists.List "x :: y" list_scope
R4510 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4530 Coq.Lists.List "x :: y" list_scope
R4521 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4525 Parallelmove.T
R4552 Locations.eq
R4562 Coq.Init.Datatypes.fst
R4567 Parallelmove.last
R4552 Locations.eq
R4562 Coq.Init.Datatypes.fst
R4567 Parallelmove.last
R4899 Alloctyping_aux.T_type
R4899 Alloctyping_aux.T_type
R4923 Coq.Lists.List.in_app_or
R5014 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4985 Coq.Lists.List "x ++ y" list_scope
R4963 Parallelmove.StateBeing
R4975 Parallelmove.stepf
R4988 Parallelmove.StateDone
R4999 Parallelmove.stepf
R4938 Parallelmove.StateToMove
R4951 Parallelmove.stepf
R4923 Coq.Lists.List.in_app_or
R5014 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R4985 Coq.Lists.List "x ++ y" list_scope
R4963 Parallelmove.StateBeing
R4975 Parallelmove.stepf
R4988 Parallelmove.StateDone
R4999 Parallelmove.stepf
R4938 Parallelmove.StateToMove
R4951 Parallelmove.stepf
R5037 Parallelmove.stepf
R5037 Parallelmove.stepf
R5071 Locations.eq
R5071 Locations.eq
R5129 Coq.Lists.List.in_app_or
R5186 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5164 Parallelmove.StateDone
R5175 Parallelmove.stepf
R5140 Parallelmove.StateBeing
R5152 Parallelmove.stepf
R5129 Coq.Lists.List.in_app_or
R5186 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5164 Parallelmove.StateDone
R5175 Parallelmove.stepf
R5140 Parallelmove.StateBeing
R5152 Parallelmove.stepf
R5210 Parallelmove.stepf
R5210 Parallelmove.stepf
R5244 Locations.eq
R5244 Locations.eq
R5308 Parallelmove.stepf
R5308 Parallelmove.stepf
R5342 Locations.eq
R5342 Locations.eq
R5450 Coq.Lists.List.in_app_or
R5541 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5512 Coq.Lists.List "x ++ y" list_scope
R5490 Parallelmove.StateBeing
R5502 Parallelmove.stepf
R5515 Parallelmove.StateDone
R5526 Parallelmove.stepf
R5465 Parallelmove.StateToMove
R5478 Parallelmove.stepf
R5450 Coq.Lists.List.in_app_or
R5541 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5512 Coq.Lists.List "x ++ y" list_scope
R5490 Parallelmove.StateBeing
R5502 Parallelmove.stepf
R5515 Parallelmove.StateDone
R5526 Parallelmove.stepf
R5465 Parallelmove.StateToMove
R5478 Parallelmove.stepf
R5564 Parallelmove.stepf
R5564 Parallelmove.stepf
R5622 Locations.eq
R5622 Locations.eq
R5686 Parallelmove.split_move
R5686 Parallelmove.split_move
R5764 Parallelmove.StateToMove
R5764 Parallelmove.StateToMove
R5790 Alloctyping_aux.split_move_incl
R5790 Alloctyping_aux.split_move_incl
R5861 Coq.Lists.List.In
R5881 Coq.Lists.List "x :: y" list_scope
R5874 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5888 Coq.Lists.List "x ++ y" list_scope
R5864 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5861 Coq.Lists.List.In
R5881 Coq.Lists.List "x :: y" list_scope
R5874 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5888 Coq.Lists.List "x ++ y" list_scope
R5864 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5997 Coq.Lists.List.in_app_or
R6013 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R6043 Coq.Lists.List.in_or_app
R5997 Coq.Lists.List.in_app_or
R6013 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R6043 Coq.Lists.List.in_or_app
R6043 Coq.Lists.List.in_or_app
R6157 Locations.eq
R6168 Coq.Init.Datatypes.fst
R6173 Parallelmove.last
R6206 Parallelmove.StateToMove
R6157 Locations.eq
R6168 Coq.Init.Datatypes.fst
R6173 Parallelmove.last
R6206 Parallelmove.StateToMove
R6206 Parallelmove.StateToMove
R6206 Parallelmove.StateToMove
R6206 Parallelmove.StateToMove
R6258 Coq.Lists.List.in_app_or
R6315 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R6293 Parallelmove.StateDone
R6304 Parallelmove.stepf
R6269 Parallelmove.StateBeing
R6281 Parallelmove.stepf
R6258 Coq.Lists.List.in_app_or
R6315 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R6293 Parallelmove.StateDone
R6304 Parallelmove.stepf
R6269 Parallelmove.StateBeing
R6281 Parallelmove.stepf
R6339 Parallelmove.stepf
R6339 Parallelmove.stepf
R6397 Locations.eq
R6397 Locations.eq
R6441 Parallelmove.StateBeing
R6441 Parallelmove.StateBeing
R6504 Parallelmove.split_move
R6504 Parallelmove.split_move
R6564 Parallelmove.StateBeing
R6564 Parallelmove.StateBeing
R6605 Alloctyping_aux.in_split_move
R6605 Alloctyping_aux.in_split_move
R6759 Locations.eq
R6770 Coq.Init.Datatypes.fst
R6775 Parallelmove.last
R6783 Coq.Lists.List "x :: y" list_scope
R6759 Locations.eq
R6770 Coq.Init.Datatypes.fst
R6775 Parallelmove.last
R6783 Coq.Lists.List "x :: y" list_scope
R6805 Parallelmove.app_rewriter
R6818 Parallelmove.Move
R6805 Parallelmove.app_rewriter
R6818 Parallelmove.Move
R6866 Parallelmove.StateBeing
R6866 Parallelmove.StateBeing
R6913 Parallelmove.last_replace
R6913 Parallelmove.last_replace
R7020 Coq.Lists.List.in_app_or
R7052 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7044 Coq.Lists.List "x :: y" list_scope
R7033 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7034 Parallelmove.T
R7047 Coq.Lists.List.nil
R7020 Coq.Lists.List.in_app_or
R7052 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7044 Coq.Lists.List "x :: y" list_scope
R7033 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7034 Parallelmove.T
R7047 Coq.Lists.List.nil
R7165 Alloctyping_aux.T_type
R7165 Alloctyping_aux.T_type
R7230 Coq.Lists.List.In
R7252 Coq.Lists.List "x :: y" list_scope
R7243 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7255 Coq.Lists.List.nil
R7233 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7230 Coq.Lists.List.In
R7252 Coq.Lists.List "x :: y" list_scope
R7243 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7255 Coq.Lists.List.nil
R7233 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7295 Parallelmove.StateBeing
R7295 Parallelmove.StateBeing
R7356 Parallelmove.stepf
R7356 Parallelmove.stepf
R7414 Locations.eq
R7414 Locations.eq
R7478 Parallelmove.split_move
R7478 Parallelmove.split_move
R7556 Parallelmove.StateDone
R7556 Parallelmove.StateDone
R7603 Locations.eq
R7614 Coq.Init.Datatypes.fst
R7619 Parallelmove.last
R7646 Parallelmove.StateDone
R7603 Locations.eq
R7614 Coq.Init.Datatypes.fst
R7619 Parallelmove.last
R7646 Parallelmove.StateDone
R7646 Parallelmove.StateDone
R7646 Parallelmove.StateDone
R7646 Parallelmove.StateDone
R7725 Coq.Lists.List.In
R7747 Coq.Lists.List "x :: y" list_scope
R7738 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7750 Coq.Lists.List.nil
R7728 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7725 Coq.Lists.List.In
R7747 Coq.Lists.List "x :: y" list_scope
R7738 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7750 Coq.Lists.List.nil
R7728 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R7845 Alloctyping_aux.T_type
R7845 Alloctyping_aux.T_type
R8151 Coq.Init.Logic "x = y" type_scope
R8139 Locations.type
R8153 Locations.type
R8045 Coq.Lists.List.In
R8084 Coq.Lists.List "x ++ y" list_scope
R8062 Parallelmove.StateToMove
R8075 Parallelmove.Pmov
R8109 Coq.Lists.List "x ++ y" list_scope
R8088 Parallelmove.StateBeing
R8100 Parallelmove.Pmov
R8112 Parallelmove.StateDone
R8123 Parallelmove.Pmov
R8050 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8011 Coq.Init.Logic "x = y" type_scope
R7999 Locations.type
R8013 Locations.type
R7929 Coq.Lists.List.In
R7957 Coq.Lists.List "x ++ y" list_scope
R7942 Parallelmove.StateToMove
R7975 Coq.Lists.List "x ++ y" list_scope
R7961 Parallelmove.StateBeing
R7978 Parallelmove.StateDone
R7932 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8200 Coq.Init.Wf.well_founded_ind
R8218 Coq.Arith.Wf_nat.well_founded_ltof
R8245 Parallelmove.mesure
R8200 Coq.Init.Wf.well_founded_ind
R8218 Coq.Arith.Wf_nat.well_founded_ltof
R8245 Parallelmove.mesure
R8316 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8316 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8347 Parallelmove.Pmov_equation
R8347 Parallelmove.Pmov_equation
R8419 Parallelmove.stepf
R8419 Parallelmove.stepf
R8437 Parallelmove.stepf1_dec
R8437 Parallelmove.stepf1_dec
R8461 Alloctyping_aux.move_types_stepf
R8461 Alloctyping_aux.move_types_stepf
R8515 Parallelmove.stepf
R8515 Parallelmove.stepf
R8533 Parallelmove.stepf1_dec
R8533 Parallelmove.stepf1_dec
R8557 Alloctyping_aux.move_types_stepf
R8557 Alloctyping_aux.move_types_stepf
R8838 Coq.Init.Logic "A /\ B" type_scope
R8766 Coq.Init.Logic "A \/ B" type_scope
R8747 Coq.Lists.List.In
R8753 Allocproof_aux.temporaries2
R8772 Coq.Lists.List.In
R8779 Parallelmove.getsrc
R8802 Coq.Lists.List "x ++ y" list_scope
R8787 Parallelmove.StateToMove
R8820 Coq.Lists.List "x ++ y" list_scope
R8806 Parallelmove.StateBeing
R8823 Parallelmove.StateDone
R8865 Coq.Init.Logic "A \/ B" type_scope
R8846 Coq.Lists.List.In
R8852 Allocproof_aux.temporaries2
R8871 Coq.Lists.List.In
R8878 Parallelmove.getdst
R8901 Coq.Lists.List "x ++ y" list_scope
R8886 Parallelmove.StateToMove
R8919 Coq.Lists.List "x ++ y" list_scope
R8905 Parallelmove.StateBeing
R8922 Parallelmove.StateDone
R8649 Coq.Lists.List.In
R8689 Coq.Lists.List "x ++ y" list_scope
R8666 Parallelmove.StateToMove
R8679 Parallelmove.stepf
R8715 Coq.Lists.List "x ++ y" list_scope
R8693 Parallelmove.StateBeing
R8705 Parallelmove.stepf
R8718 Parallelmove.StateDone
R8729 Parallelmove.stepf
R8654 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8982 Parallelmove.getsrc_app
R9011 Parallelmove.getdst_app
R8982 Parallelmove.getsrc_app
R8982 Parallelmove.getsrc_app
R8982 Parallelmove.getsrc_app
R9011 Parallelmove.getdst_app
R9011 Parallelmove.getdst_app
R9011 Parallelmove.getdst_app
R9062 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9062 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9131 Alloctyping_aux.in_move__in_srcdst
R9150 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9131 Alloctyping_aux.in_move__in_srcdst
R9150 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9185 Coq.Lists.List.in_app_or
R9274 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9246 Coq.Lists.List "x ++ y" list_scope
R9224 Parallelmove.StateBeing
R9236 Parallelmove.stepf
R9249 Parallelmove.StateDone
R9260 Parallelmove.stepf
R9199 Parallelmove.StateToMove
R9212 Parallelmove.stepf
R9185 Coq.Lists.List.in_app_or
R9274 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9246 Coq.Lists.List "x ++ y" list_scope
R9224 Parallelmove.StateBeing
R9236 Parallelmove.stepf
R9249 Parallelmove.StateDone
R9260 Parallelmove.stepf
R9199 Parallelmove.StateToMove
R9212 Parallelmove.stepf
R9322 Coq.Init.Logic "x = y" type_scope
R9299 Parallelmove.StateToMove
R9312 Parallelmove.stepf
R9324 Coq.Lists.List.nil
R9322 Coq.Init.Logic "x = y" type_scope
R9299 Parallelmove.StateToMove
R9312 Parallelmove.stepf
R9324 Coq.Lists.List.nil
R9336 Parallelmove.stepf
R9336 Parallelmove.stepf
R9370 Locations.eq
R9380 Coq.Init.Datatypes.fst
R9385 Parallelmove.last
R9370 Locations.eq
R9380 Coq.Init.Datatypes.fst
R9385 Parallelmove.last
R9469 Coq.Lists.List.in_app_or
R9526 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9504 Parallelmove.StateDone
R9515 Parallelmove.stepf
R9480 Parallelmove.StateBeing
R9492 Parallelmove.stepf
R9469 Coq.Lists.List.in_app_or
R9526 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9504 Parallelmove.StateDone
R9515 Parallelmove.stepf
R9480 Parallelmove.StateBeing
R9492 Parallelmove.stepf
R9550 Parallelmove.stepf
R9550 Parallelmove.stepf
R9652 Parallelmove.app_rewriter
R9652 Parallelmove.app_rewriter
R9740 Parallelmove.last_app
R9756 Coq.Init.Datatypes.fst
R9740 Parallelmove.last_app
R9756 Coq.Init.Datatypes.fst
R9767 Locations.eq
R9767 Locations.eq
R9802 Parallelmove.last_replace
R9802 Parallelmove.last_replace
R9836 Coq.Lists.List.in_app_or
R9868 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9860 Coq.Lists.List "x :: y" list_scope
R9849 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9850 Parallelmove.T
R9863 Coq.Lists.List.nil
R9836 Coq.Lists.List.in_app_or
R9868 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9860 Coq.Lists.List "x :: y" list_scope
R9849 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9850 Parallelmove.T
R9863 Coq.Lists.List.nil
R9918 Parallelmove.getsrc_app
R9945 Parallelmove.getdst_app
R9918 Parallelmove.getsrc_app
R9945 Parallelmove.getdst_app
R9977 Alloctyping_aux.in_move__in_srcdst
R9996 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R9977 Alloctyping_aux.in_move__in_srcdst
R9996 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10118 Locations.type
R10118 Locations.type
R10244 Parallelmove.getdst_app
R10244 Parallelmove.getdst_app
R10271 Coq.Lists.List.In
R10281 Coq.Lists.List "x :: y" list_scope
R10284 Coq.Lists.List.nil
R10271 Coq.Lists.List.In
R10281 Coq.Lists.List "x :: y" list_scope
R10284 Coq.Lists.List.nil
R10318 Parallelmove.StateBeing
R10318 Parallelmove.StateBeing
R10344 Alloctyping_aux.in_move__in_srcdst
R10375 Coq.Lists.List "x ++ y" list_scope
R10388 Coq.Lists.List "x :: y" list_scope
R10379 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10391 Coq.Lists.List.nil
R10363 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10344 Alloctyping_aux.in_move__in_srcdst
R10375 Coq.Lists.List "x ++ y" list_scope
R10388 Coq.Lists.List "x :: y" list_scope
R10379 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10391 Coq.Lists.List.nil
R10363 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10603 Parallelmove.stepf
R10603 Parallelmove.stepf
R10655 Parallelmove.StateDone
R10655 Parallelmove.StateDone
R10715 Coq.Lists.List.app
R10715 Coq.Lists.List.app
R10726 Alloctyping_aux.in_move__in_srcdst
R10762 Coq.Lists.List "x :: y" list_scope
R10755 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10745 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10726 Alloctyping_aux.in_move__in_srcdst
R10762 Coq.Lists.List "x :: y" list_scope
R10755 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10745 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R10805 Coq.Init.Datatypes.snd
R10825 Coq.Init.Datatypes.fst
R10845 Parallelmove.getdst
R10869 Parallelmove.getsrc
R10805 Coq.Init.Datatypes.snd
R10825 Coq.Init.Datatypes.fst
R10845 Parallelmove.getdst
R10869 Parallelmove.getsrc
R10906 Coq.Init.Datatypes.snd
R10926 Coq.Init.Datatypes.fst
R10946 Parallelmove.getdst
R10970 Parallelmove.getsrc
R10906 Coq.Init.Datatypes.snd
R10926 Coq.Init.Datatypes.fst
R10946 Parallelmove.getdst
R10970 Parallelmove.getsrc
R11021 Parallelmove.app_rewriter
R11021 Parallelmove.app_rewriter
R11096 Parallelmove.last_app
R11096 Parallelmove.last_app
R11135 Coq.Init.Datatypes.fst
R11135 Coq.Init.Datatypes.fst
R11146 Locations.eq
R11146 Locations.eq
R11166 Parallelmove.StateDone
R11166 Parallelmove.StateDone
R11447 Parallelmove.getsrc_app
R11465 Parallelmove.getsrc
R11447 Parallelmove.getsrc_app
R11465 Parallelmove.getsrc
R11507 Coq.Lists.List.In
R11517 Coq.Lists.List "x :: y" list_scope
R11520 Coq.Lists.List.nil
R11507 Coq.Lists.List.In
R11517 Coq.Lists.List "x :: y" list_scope
R11520 Coq.Lists.List.nil
R11570 Locations.type
R11570 Locations.type
R11603 Alloctyping_aux.in_move__in_srcdst
R11622 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R11603 Alloctyping_aux.in_move__in_srcdst
R11622 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R11699 Parallelmove.StateDone
R11699 Parallelmove.StateDone
R11763 Parallelmove.getsrc
R11777 Coq.Lists.List.app
R11763 Parallelmove.getsrc
R11777 Coq.Lists.List.app
R11809 Alloctyping_aux.in_move__in_srcdst
R11845 Coq.Lists.List "x :: y" list_scope
R11838 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R11828 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R11869 Coq.Init.Datatypes.fst
R11880 Coq.Init.Datatypes.snd
R11891 Parallelmove.getsrc
R11905 Parallelmove.getdst
R11809 Alloctyping_aux.in_move__in_srcdst
R11845 Coq.Lists.List "x :: y" list_scope
R11838 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R11828 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R11869 Coq.Init.Datatypes.fst
R11880 Coq.Init.Datatypes.snd
R11891 Parallelmove.getsrc
R11905 Parallelmove.getdst
R12008 Coq.Lists.List.in_app_or
R12097 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12069 Coq.Lists.List "x ++ y" list_scope
R12047 Parallelmove.StateBeing
R12059 Parallelmove.stepf
R12072 Parallelmove.StateDone
R12083 Parallelmove.stepf
R12022 Parallelmove.StateToMove
R12035 Parallelmove.stepf
R12008 Coq.Lists.List.in_app_or
R12097 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12069 Coq.Lists.List "x ++ y" list_scope
R12047 Parallelmove.StateBeing
R12059 Parallelmove.stepf
R12072 Parallelmove.StateDone
R12083 Parallelmove.stepf
R12022 Parallelmove.StateToMove
R12035 Parallelmove.stepf
R12120 Parallelmove.stepf
R12120 Parallelmove.stepf
R12154 Locations.eq
R12154 Locations.eq
R12173 Parallelmove.StateToMove
R12173 Parallelmove.StateToMove
R12200 Alloctyping_aux.in_move__in_srcdst
R12219 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12257 Parallelmove.getsrc_app
R12275 Parallelmove.getsrc
R12303 Parallelmove.getdst_app
R12321 Parallelmove.getdst
R12337 Coq.Init.Datatypes.fst
R12348 Coq.Init.Datatypes.snd
R12200 Alloctyping_aux.in_move__in_srcdst
R12219 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12257 Parallelmove.getsrc_app
R12303 Parallelmove.getdst_app
R12337 Coq.Init.Datatypes.fst
R12348 Coq.Init.Datatypes.snd
R12410 Parallelmove.StateToMove
R12410 Parallelmove.StateToMove
R12437 Alloctyping_aux.in_move__in_srcdst
R12456 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12494 Parallelmove.getsrc_app
R12512 Parallelmove.getsrc
R12540 Parallelmove.getdst_app
R12558 Parallelmove.getdst
R12574 Coq.Init.Datatypes.fst
R12585 Coq.Init.Datatypes.snd
R12437 Alloctyping_aux.in_move__in_srcdst
R12456 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12494 Parallelmove.getsrc_app
R12540 Parallelmove.getdst_app
R12574 Coq.Init.Datatypes.fst
R12585 Coq.Init.Datatypes.snd
R12654 Coq.Lists.List.in_app_or
R12711 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12689 Parallelmove.StateDone
R12700 Parallelmove.stepf
R12665 Parallelmove.StateBeing
R12677 Parallelmove.stepf
R12654 Coq.Lists.List.in_app_or
R12711 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12689 Parallelmove.StateDone
R12700 Parallelmove.stepf
R12665 Parallelmove.StateBeing
R12677 Parallelmove.stepf
R12735 Parallelmove.stepf
R12735 Parallelmove.stepf
R12769 Locations.eq
R12769 Locations.eq
R12788 Parallelmove.StateBeing
R12788 Parallelmove.StateBeing
R12834 Parallelmove.StateBeing
R12834 Parallelmove.StateBeing
R12866 Alloctyping_aux.in_move__in_srcdst
R12902 Coq.Lists.List "x :: y" list_scope
R12895 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12905 Coq.Lists.List.nil
R12885 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12924 Coq.Init.Datatypes.fst
R12935 Coq.Init.Datatypes.snd
R12866 Alloctyping_aux.in_move__in_srcdst
R12902 Coq.Lists.List "x :: y" list_scope
R12895 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12905 Coq.Lists.List.nil
R12885 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R12924 Coq.Init.Datatypes.fst
R12935 Coq.Init.Datatypes.snd
R13130 Parallelmove.stepf
R13130 Parallelmove.stepf
R13164 Locations.eq
R13164 Locations.eq
R13183 Parallelmove.StateDone
R13183 Parallelmove.StateDone
R13214 Alloctyping_aux.in_move__in_srcdst
R13233 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13259 Coq.Init.Datatypes.fst
R13270 Coq.Init.Datatypes.snd
R13214 Alloctyping_aux.in_move__in_srcdst
R13233 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13259 Coq.Init.Datatypes.fst
R13270 Coq.Init.Datatypes.snd
R13332 Parallelmove.StateDone
R13332 Parallelmove.StateDone
R13363 Alloctyping_aux.in_move__in_srcdst
R13382 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13408 Coq.Init.Datatypes.fst
R13419 Coq.Init.Datatypes.snd
R13363 Alloctyping_aux.in_move__in_srcdst
R13382 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13408 Coq.Init.Datatypes.fst
R13419 Coq.Init.Datatypes.snd
R13482 Coq.Lists.List.in_app_or
R13571 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13543 Coq.Lists.List "x ++ y" list_scope
R13521 Parallelmove.StateBeing
R13533 Parallelmove.stepf
R13546 Parallelmove.StateDone
R13557 Parallelmove.stepf
R13496 Parallelmove.StateToMove
R13509 Parallelmove.stepf
R13482 Coq.Lists.List.in_app_or
R13571 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13543 Coq.Lists.List "x ++ y" list_scope
R13521 Parallelmove.StateBeing
R13533 Parallelmove.stepf
R13546 Parallelmove.StateDone
R13557 Parallelmove.stepf
R13496 Parallelmove.StateToMove
R13509 Parallelmove.stepf
R13594 Parallelmove.stepf
R13594 Parallelmove.stepf
R13652 Locations.eq
R13652 Locations.eq
R13719 Coq.Lists.List.app
R13719 Coq.Lists.List.app
R13743 Alloctyping_aux.in_move__in_srcdst
R13762 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13743 Alloctyping_aux.in_move__in_srcdst
R13762 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13852 Parallelmove.split_move
R13852 Parallelmove.split_move
R13981 Alloctyping_aux.split_move_incl
R13981 Alloctyping_aux.split_move_incl
R14043 Coq.Lists.List.In
R14063 Coq.Lists.List "x :: y" list_scope
R14056 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14070 Coq.Lists.List "x ++ y" list_scope
R14046 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14043 Coq.Lists.List.In
R14063 Coq.Lists.List "x :: y" list_scope
R14056 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14070 Coq.Lists.List "x ++ y" list_scope
R14046 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14179 Coq.Lists.List.in_app_or
R14195 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14225 Coq.Lists.List.in_or_app
R14179 Coq.Lists.List.in_app_or
R14195 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14225 Coq.Lists.List.in_or_app
R14225 Coq.Lists.List.in_or_app
R14338 Alloctyping_aux.in_move__in_srcdst
R14374 Coq.Lists.List "x :: y" list_scope
R14367 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14381 Coq.Lists.List "x ++ y" list_scope
R14357 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14338 Alloctyping_aux.in_move__in_srcdst
R14374 Coq.Lists.List "x :: y" list_scope
R14367 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14381 Coq.Lists.List "x ++ y" list_scope
R14357 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14564 Parallelmove.getsrc_app
R14564 Parallelmove.getsrc_app
R14602 Alloctyping_aux.in_move__in_srcdst
R14638 Coq.Lists.List "x :: y" list_scope
R14631 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14645 Coq.Lists.List "x ++ y" list_scope
R14621 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14602 Alloctyping_aux.in_move__in_srcdst
R14638 Coq.Lists.List "x :: y" list_scope
R14631 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14645 Coq.Lists.List "x ++ y" list_scope
R14621 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14814 Parallelmove.getdst_app
R14814 Parallelmove.getdst_app
R14924 Alloctyping_aux.in_move__in_srcdst
R14960 Coq.Lists.List "x :: y" list_scope
R14953 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14943 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14924 Alloctyping_aux.in_move__in_srcdst
R14960 Coq.Lists.List "x :: y" list_scope
R14953 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14943 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R14991 Coq.Init.Datatypes.snd
R15011 Coq.Init.Datatypes.fst
R14991 Coq.Init.Datatypes.snd
R15011 Coq.Init.Datatypes.fst
R15079 Parallelmove.app_rewriter
R15079 Parallelmove.app_rewriter
R15162 Parallelmove.last_app
R15178 Coq.Init.Datatypes.fst
R15162 Parallelmove.last_app
R15178 Coq.Init.Datatypes.fst
R15189 Locations.eq
R15189 Locations.eq
R15265 Alloctyping_aux.in_move__in_srcdst
R15301 Coq.Lists.List "x :: y" list_scope
R15294 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15284 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15265 Alloctyping_aux.in_move__in_srcdst
R15301 Coq.Lists.List "x :: y" list_scope
R15294 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15284 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15330 Coq.Init.Datatypes.snd
R15350 Coq.Init.Datatypes.fst
R15330 Coq.Init.Datatypes.snd
R15350 Coq.Init.Datatypes.fst
R15455 Alloctyping_aux.in_move__in_srcdst
R15491 Coq.Lists.List "x :: y" list_scope
R15484 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15474 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15455 Alloctyping_aux.in_move__in_srcdst
R15491 Coq.Lists.List "x :: y" list_scope
R15484 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15474 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15520 Coq.Init.Datatypes.snd
R15540 Coq.Init.Datatypes.fst
R15520 Coq.Init.Datatypes.snd
R15540 Coq.Init.Datatypes.fst
R15597 Coq.Lists.List.in_app_or
R15654 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15632 Parallelmove.StateDone
R15643 Parallelmove.stepf
R15608 Parallelmove.StateBeing
R15620 Parallelmove.stepf
R15597 Coq.Lists.List.in_app_or
R15654 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15632 Parallelmove.StateDone
R15643 Parallelmove.stepf
R15608 Parallelmove.StateBeing
R15620 Parallelmove.stepf
R15678 Parallelmove.stepf
R15678 Parallelmove.stepf
R15736 Locations.eq
R15736 Locations.eq
R15780 Parallelmove.StateBeing
R15780 Parallelmove.StateBeing
R15853 Alloctyping_aux.in_move__in_srcdst
R15889 Coq.Lists.List "x :: y" list_scope
R15882 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15901 Coq.Lists.List "x :: y" list_scope
R15893 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15872 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15853 Alloctyping_aux.in_move__in_srcdst
R15889 Coq.Lists.List "x :: y" list_scope
R15882 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15901 Coq.Lists.List "x :: y" list_scope
R15893 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R15872 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16114 Coq.Lists.List.In
R16124 Coq.Lists.List "x :: y" list_scope
R16127 Coq.Lists.List.nil
R16114 Coq.Lists.List.In
R16124 Coq.Lists.List "x :: y" list_scope
R16127 Coq.Lists.List.nil
R16369 Coq.Lists.List.In
R16378 Coq.Lists.List "x :: y" list_scope
R16381 Coq.Lists.List.nil
R16369 Coq.Lists.List.In
R16378 Coq.Lists.List "x :: y" list_scope
R16381 Coq.Lists.List.nil
R16452 Parallelmove.split_move
R16452 Parallelmove.split_move
R16512 Parallelmove.StateBeing
R16512 Parallelmove.StateBeing
R16544 Alloctyping_aux.in_split_move
R16544 Alloctyping_aux.in_split_move
R16641 Alloctyping_aux.in_move__in_srcdst
R16660 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16641 Alloctyping_aux.in_move__in_srcdst
R16660 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16694 Coq.Init.Datatypes.snd
R16714 Coq.Init.Datatypes.fst
R16694 Coq.Init.Datatypes.snd
R16714 Coq.Init.Datatypes.fst
R16795 Parallelmove.getsrc
R16795 Parallelmove.getsrc
R16823 Alloctyping_aux.in_move__in_srcdst
R16861 Coq.Lists.List "x :: y" list_scope
R16852 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16842 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16823 Alloctyping_aux.in_move__in_srcdst
R16861 Coq.Lists.List "x :: y" list_scope
R16852 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16842 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R16892 Coq.Init.Datatypes.snd
R16912 Coq.Init.Datatypes.fst
R16892 Coq.Init.Datatypes.snd
R16912 Coq.Init.Datatypes.fst
R17100 Coq.Lists.List.In
R17110 Coq.Lists.List "x :: y" list_scope
R17113 Coq.Lists.List.nil
R17100 Coq.Lists.List.In
R17110 Coq.Lists.List "x :: y" list_scope
R17113 Coq.Lists.List.nil
R17218 Alloctyping_aux.in_move__in_srcdst
R17237 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17218 Alloctyping_aux.in_move__in_srcdst
R17237 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17273 Coq.Init.Datatypes.snd
R17273 Coq.Init.Datatypes.snd
R17355 Alloctyping_aux.in_move__in_srcdst
R17393 Coq.Lists.List "x :: y" list_scope
R17384 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17374 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17355 Alloctyping_aux.in_move__in_srcdst
R17393 Coq.Lists.List "x :: y" list_scope
R17384 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17374 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17422 Coq.Init.Datatypes.snd
R17422 Coq.Init.Datatypes.snd
R17458 Coq.Lists.List.in_or_app
R17517 Coq.Lists.List "x ++ y" list_scope
R17493 Parallelmove.getdst
R17510 Coq.Lists.List "x :: y" list_scope
R17501 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17520 Parallelmove.getdst
R17469 Parallelmove.getdst
R17484 Coq.Lists.List "x :: y" list_scope
R17477 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17458 Coq.Lists.List.in_or_app
R17517 Coq.Lists.List "x ++ y" list_scope
R17493 Parallelmove.getdst
R17510 Coq.Lists.List "x :: y" list_scope
R17501 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17520 Parallelmove.getdst
R17469 Parallelmove.getdst
R17484 Coq.Lists.List "x :: y" list_scope
R17477 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17625 Parallelmove.app_rewriter
R17625 Parallelmove.app_rewriter
R17708 Parallelmove.last_app
R17724 Coq.Init.Datatypes.fst
R17708 Parallelmove.last_app
R17724 Coq.Init.Datatypes.fst
R17735 Locations.eq
R17735 Locations.eq
R17809 Parallelmove.last_replace
R17809 Parallelmove.last_replace
R17884 Coq.Lists.List.in_app_or
R17916 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17908 Coq.Lists.List "x :: y" list_scope
R17897 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17898 Parallelmove.T
R17911 Coq.Lists.List.nil
R17884 Coq.Lists.List.in_app_or
R17916 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17908 Coq.Lists.List "x :: y" list_scope
R17897 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17898 Parallelmove.T
R17911 Coq.Lists.List.nil
R17987 Alloctyping_aux.in_move__in_srcdst
R18006 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18031 Coq.Init.Datatypes.fst
R18042 Coq.Init.Datatypes.snd
R17987 Alloctyping_aux.in_move__in_srcdst
R18006 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18031 Coq.Init.Datatypes.fst
R18042 Coq.Init.Datatypes.snd
R18085 Parallelmove.getsrc_app
R18085 Parallelmove.getsrc_app
R18126 Alloctyping_aux.in_move__in_srcdst
R18145 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18170 Coq.Init.Datatypes.fst
R18181 Coq.Init.Datatypes.snd
R18126 Alloctyping_aux.in_move__in_srcdst
R18145 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18170 Coq.Init.Datatypes.fst
R18181 Coq.Init.Datatypes.snd
R18224 Parallelmove.getdst_app
R18224 Parallelmove.getdst_app
R18346 Locations.type
R18346 Locations.type
R18416 Parallelmove.getdst_app
R18416 Parallelmove.getdst_app
R18443 Coq.Lists.List.In
R18453 Coq.Lists.List "x :: y" list_scope
R18456 Coq.Lists.List.nil
R18443 Coq.Lists.List.In
R18453 Coq.Lists.List "x :: y" list_scope
R18456 Coq.Lists.List.nil
R18609 Alloctyping_aux.in_move__in_srcdst
R18640 Coq.Lists.List "x ++ y" list_scope
R18653 Coq.Lists.List "x :: y" list_scope
R18644 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18656 Coq.Lists.List.nil
R18628 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18609 Alloctyping_aux.in_move__in_srcdst
R18640 Coq.Lists.List "x ++ y" list_scope
R18653 Coq.Lists.List "x :: y" list_scope
R18644 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18656 Coq.Lists.List.nil
R18628 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18685 Coq.Init.Datatypes.snd
R18705 Coq.Init.Datatypes.fst
R18685 Coq.Init.Datatypes.snd
R18705 Coq.Init.Datatypes.fst
R18753 Coq.Lists.List.in_or_app
R18753 Coq.Lists.List.in_or_app
R18805 Alloctyping_aux.in_move__in_srcdst
R18836 Coq.Lists.List "x ++ y" list_scope
R18849 Coq.Lists.List "x :: y" list_scope
R18840 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18852 Coq.Lists.List.nil
R18824 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18805 Alloctyping_aux.in_move__in_srcdst
R18836 Coq.Lists.List "x ++ y" list_scope
R18849 Coq.Lists.List "x :: y" list_scope
R18840 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18852 Coq.Lists.List.nil
R18824 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18880 Coq.Init.Datatypes.snd
R18880 Coq.Init.Datatypes.snd
R18928 Coq.Lists.List.in_or_app
R18928 Coq.Lists.List.in_or_app
R18980 Parallelmove.stepf
R18980 Parallelmove.stepf
R19038 Locations.eq
R19038 Locations.eq
R19113 Alloctyping_aux.in_move__in_srcdst
R19132 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R19113 Alloctyping_aux.in_move__in_srcdst
R19132 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R19235 Parallelmove.split_move
R19235 Parallelmove.split_move
R19295 Parallelmove.StateDone
R19295 Parallelmove.StateDone
R19367 Alloctyping_aux.in_move__in_srcdst
R19386 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R19367 Alloctyping_aux.in_move__in_srcdst
R19386 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R19546 Alloctyping_aux.in_move__in_srcdst
R19584 Coq.Lists.List "x :: y" list_scope
R19575 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R19565 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R19546 Alloctyping_aux.in_move__in_srcdst
R19584 Coq.Lists.List "x :: y" list_scope
R19575 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R19565 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R19755 Coq.Lists.List.In
R19765 Coq.Lists.List "x :: y" list_scope
R19768 Coq.Lists.List.nil
R19755 Coq.Lists.List.In
R19765 Coq.Lists.List "x :: y" list_scope
R19768 Coq.Lists.List.nil
R19926 Coq.Lists.List.In
R19936 Coq.Lists.List "x :: y" list_scope
R19939 Coq.Lists.List.nil
R19926 Coq.Lists.List.In
R19936 Coq.Lists.List "x :: y" list_scope
R19939 Coq.Lists.List.nil
R20028 Parallelmove.app_rewriter
R20028 Parallelmove.app_rewriter
R20111 Parallelmove.last_app
R20127 Coq.Init.Datatypes.fst
R20111 Parallelmove.last_app
R20127 Coq.Init.Datatypes.fst
R20138 Locations.eq
R20138 Locations.eq
R20326 Coq.Lists.List.in_or_app
R20326 Coq.Lists.List.in_or_app
R20370 Coq.Lists.List.in_or_app
R20370 Coq.Lists.List.in_or_app
R20528 Parallelmove.getsrc_app
R20528 Parallelmove.getsrc_app
R20562 Coq.Lists.List.In
R20572 Coq.Lists.List "x :: y" list_scope
R20575 Coq.Lists.List.nil
R20562 Coq.Lists.List.In
R20572 Coq.Lists.List "x :: y" list_scope
R20575 Coq.Lists.List.nil
R20626 Locations.type
R20626 Locations.type
R20652 Alloctyping_aux.in_move__in_srcdst
R20671 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R20652 Alloctyping_aux.in_move__in_srcdst
R20671 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R20707 Coq.Init.Datatypes.snd
R20727 Coq.Init.Datatypes.fst
R20707 Coq.Init.Datatypes.snd
R20727 Coq.Init.Datatypes.fst
R20830 Alloctyping_aux.in_move__in_srcdst
R20868 Coq.Lists.List "x :: y" list_scope
R20859 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R20849 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R20830 Alloctyping_aux.in_move__in_srcdst
R20868 Coq.Lists.List "x :: y" list_scope
R20859 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R20849 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R20994 Coq.Lists.List.in_or_app
R20994 Coq.Lists.List.in_or_app
R21125 Coq.Lists.List.in_or_app
R21125 Coq.Lists.List.in_or_app
R21233 Coq.Init.Logic "'exists' x , p" type_scope
R21244 Coq.Lists.List.In
R21247 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21212 Coq.Lists.List.In
R21218 Parallelmove.getsrc
R21285 Parallelmove.getsrc
R21285 Parallelmove.getsrc
R21285 Parallelmove.getsrc
R21645 Coq.Lists.List.incl
R21663 Parallelmove.getsrc
R21651 Parallelmove.getsrc
R21630 Coq.Lists.List.incl
R21767 Alloctyping_aux.getsrc_f
R21767 Alloctyping_aux.getsrc_f
R21887 Coq.Lists.List.In
R21890 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21887 Coq.Lists.List.In
R21890 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21923 Alloctyping_aux.in_move__in_srcdst
R21942 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21923 Alloctyping_aux.in_move__in_srcdst
R21942 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22016 Coq.Init.Logic "'exists' x , p" type_scope
R22027 Coq.Lists.List.In
R22030 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R21995 Coq.Lists.List.In
R22001 Parallelmove.getdst
R22068 Parallelmove.getdst
R22068 Parallelmove.getdst
R22068 Parallelmove.getdst
R22428 Coq.Lists.List.incl
R22446 Parallelmove.getdst
R22434 Parallelmove.getdst
R22413 Coq.Lists.List.incl
R22550 Alloctyping_aux.getdst_f
R22550 Alloctyping_aux.getdst_f
R22670 Coq.Lists.List.In
R22673 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22670 Coq.Lists.List.In
R22673 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22706 Alloctyping_aux.in_move__in_srcdst
R22725 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22706 Alloctyping_aux.in_move__in_srcdst
R22725 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R22975 Coq.Init.Logic "A /\ B" type_scope
R22903 Coq.Init.Logic "A \/ B" type_scope
R22884 Coq.Lists.List.In
R22890 Allocproof_aux.temporaries2
R22909 Coq.Lists.List.In
R22916 Parallelmove.getsrc
R22939 Coq.Lists.List "x ++ y" list_scope
R22924 Parallelmove.StateToMove
R22957 Coq.Lists.List "x ++ y" list_scope
R22943 Parallelmove.StateBeing
R22960 Parallelmove.StateDone
R23002 Coq.Init.Logic "A \/ B" type_scope
R22983 Coq.Lists.List.In
R22989 Allocproof_aux.temporaries2
R23008 Coq.Lists.List.In
R23015 Parallelmove.getdst
R23038 Coq.Lists.List "x ++ y" list_scope
R23023 Parallelmove.StateToMove
R23056 Coq.Lists.List "x ++ y" list_scope
R23042 Parallelmove.StateBeing
R23059 Parallelmove.StateDone
R22789 Coq.Lists.List.In
R22828 Coq.Lists.List "x ++ y" list_scope
R22806 Parallelmove.StateToMove
R22819 Parallelmove.Pmov
R22853 Coq.Lists.List "x ++ y" list_scope
R22832 Parallelmove.StateBeing
R22844 Parallelmove.Pmov
R22856 Parallelmove.StateDone
R22867 Parallelmove.Pmov
R22794 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23111 Coq.Init.Wf.well_founded_ind
R23129 Coq.Arith.Wf_nat.well_founded_ltof
R23156 Parallelmove.mesure
R23111 Coq.Init.Wf.well_founded_ind
R23129 Coq.Arith.Wf_nat.well_founded_ltof
R23156 Parallelmove.mesure
R23227 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23227 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R23258 Parallelmove.Pmov_equation
R23258 Parallelmove.Pmov_equation
R23311 Alloctyping_aux.srcdst_tmp2_stepf
R23311 Alloctyping_aux.srcdst_tmp2_stepf
R23358 Parallelmove.stepf
R23412 Parallelmove.stepf1_dec
R23358 Parallelmove.stepf
R23412 Parallelmove.stepf1_dec
R23681 Alloctyping_aux.getsrc_f
R23681 Alloctyping_aux.getsrc_f
R23744 Alloctyping_aux.srcdst_tmp2_stepf
R23744 Alloctyping_aux.srcdst_tmp2_stepf
R23874 Alloctyping_aux.getdst_f
R23874 Alloctyping_aux.getdst_f
R23937 Alloctyping_aux.srcdst_tmp2_stepf
R23937 Alloctyping_aux.srcdst_tmp2_stepf
R23985 Alloctyping_aux.getsrc_f
R23985 Alloctyping_aux.getsrc_f
R24035 Alloctyping_aux.srcdst_tmp2_stepf
R24035 Alloctyping_aux.srcdst_tmp2_stepf
R24093 Alloctyping_aux.getdst_f
R24093 Alloctyping_aux.getdst_f
R24143 Alloctyping_aux.srcdst_tmp2_stepf
R24143 Alloctyping_aux.srcdst_tmp2_stepf
R24207 Parallelmove.stepf
R24261 Parallelmove.stepf1_dec
R24207 Parallelmove.stepf
R24261 Parallelmove.stepf1_dec
R24530 Alloctyping_aux.getsrc_f
R24530 Alloctyping_aux.getsrc_f
R24593 Alloctyping_aux.srcdst_tmp2_stepf
R24593 Alloctyping_aux.srcdst_tmp2_stepf
R24723 Alloctyping_aux.getdst_f
R24723 Alloctyping_aux.getdst_f
R24786 Alloctyping_aux.srcdst_tmp2_stepf
R24786 Alloctyping_aux.srcdst_tmp2_stepf
R24834 Alloctyping_aux.getsrc_f
R24834 Alloctyping_aux.getsrc_f
R24884 Alloctyping_aux.srcdst_tmp2_stepf
R24884 Alloctyping_aux.srcdst_tmp2_stepf
R24942 Alloctyping_aux.getdst_f
R24942 Alloctyping_aux.getdst_f
R24992 Alloctyping_aux.srcdst_tmp2_stepf
R24992 Alloctyping_aux.srcdst_tmp2_stepf
R25215 LTLtyping.wt_block
R25234 Coq.Lists.List.fold_left
R25304 Allocation.add_move
R25323 Coq.Init.Datatypes.snd
R25314 Coq.Init.Datatypes.fst
R25294 Coq.Init.Datatypes "x * y" type_scope
R25290 Locations.loc
R25296 Locations.loc
R25260 LTL.block
R25196 LTLtyping.wt_block
R25182 Parallelmove.getdst
R25153 Parallelmove.getsrc
R25104 Coq.Init.Logic "x = y" type_scope
R25075 Coq.Lists.List.map
R25094 Parallelmove.getsrc
R25084 Locations.type
R25106 Coq.Lists.List.map
R25125 Parallelmove.getdst
R25115 Locations.type
R25941 Coq.Init.Logic "x = y" type_scope
R25918 Coq.Lists.List.In
R25921 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R25881 Coq.Init.Logic "x = y" type_scope
R25864 Coq.Lists.List.map
R25871 Parallelmove.getsrc
R25883 Coq.Lists.List.map
R25890 Parallelmove.getdst
R25849 Parallelmove.Reg
R26338 LTLtyping.wt_block
R26351 Allocproof_aux.p_move
R26320 LTLtyping.wt_block
R26307 Parallelmove.getdst
R26278 Parallelmove.getsrc
R26229 Coq.Init.Logic "x = y" type_scope
R26200 Coq.Lists.List.map
R26219 Parallelmove.getsrc
R26209 Locations.type
R26231 Coq.Lists.List.map
R26250 Parallelmove.getdst
R26240 Locations.type
R26415 Alloctyping_aux.wt_add_moves
R26415 Alloctyping_aux.wt_add_moves
R26443 Parallelmove.getsrc_map
R26463 Parallelmove.getdst_map
R26443 Parallelmove.getsrc_map
R26463 Parallelmove.getdst_map
R26483 Coqlib.list_map_compose
R26483 Coqlib.list_map_compose
R26509 Coqlib.list_map_compose
R26509 Coqlib.list_map_compose
R26533 Coqlib.list_map_exten
R26533 Coqlib.list_map_exten
R26561 Alloctyping_aux.move_types_res
R26576 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R26580 Coq.Lists.List.nil
R26585 Coq.Lists.List.nil
R26561 Alloctyping_aux.move_types_res
R26576 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R26580 Coq.Lists.List.nil
R26585 Coq.Lists.List.nil
R26677 Parallelmove.app_nil
R26677 Parallelmove.app_nil
R26692 Alloctyping_aux.map_f_getsrc_getdst
R26692 Alloctyping_aux.map_f_getsrc_getdst
R26766 Alloctyping_aux.getsrc_f
R26766 Alloctyping_aux.getsrc_f
R26813 Alloctyping_aux.src_tmp2_res
R26826 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R26830 Coq.Lists.List.nil
R26835 Coq.Lists.List.nil
R26813 Alloctyping_aux.src_tmp2_res
R26826 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R26830 Coq.Lists.List.nil
R26835 Coq.Lists.List.nil
R26862 Parallelmove.app_nil
R26862 Parallelmove.app_nil
R26996 Alloctyping_aux.getdst_f
R26996 Alloctyping_aux.getdst_f
R27043 Alloctyping_aux.src_tmp2_res
R27056 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R27060 Coq.Lists.List.nil
R27065 Coq.Lists.List.nil
R27043 Alloctyping_aux.src_tmp2_res
R27056 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R27060 Coq.Lists.List.nil
R27065 Coq.Lists.List.nil
R27092 Parallelmove.app_nil
R27092 Parallelmove.app_nil
R27378 LTLtyping.wt_block
R27391 Allocation.parallel_move
R27360 LTLtyping.wt_block
R27287 Coq.Init.Logic "x = y" type_scope
R27264 Coq.Lists.List.map
R27273 Locations.type
R27289 Coq.Lists.List.map
R27298 Locations.type
R27497 Alloctyping_aux.wt_parallel_move'
R27516 Parallelmove.listsLoc2Moves
R27497 Alloctyping_aux.wt_parallel_move'
R27516 Parallelmove.listsLoc2Moves
R27609 Allocproof_aux.getdst_lists2moves
R27609 Allocproof_aux.getdst_lists2moves
R27767 Coqlib.list_length_map
R27783 Locations.type
R27767 Coqlib.list_length_map
R27783 Locations.type
R27767 Coqlib.list_length_map
R27783 Locations.type
R27767 Coqlib.list_length_map
R27783 Locations.type
R27817 Allocproof_aux.getdst_lists2moves
R27817 Allocproof_aux.getdst_lists2moves
R27961 Coqlib.list_length_map
R27977 Locations.type
R27961 Coqlib.list_length_map
R27977 Locations.type
R27961 Coqlib.list_length_map
R27977 Locations.type
R27961 Coqlib.list_length_map
R27977 Locations.type
R28011 Allocproof_aux.getdst_lists2moves
R28011 Allocproof_aux.getdst_lists2moves
R28155 Coqlib.list_length_map
R28171 Locations.type
R28155 Coqlib.list_length_map
R28171 Locations.type
R28155 Coqlib.list_length_map
R28171 Locations.type
R28155 Coqlib.list_length_map
R28171 Locations.type
FAlloctyping
R475 RTL.function
R503 RTLtyping.regenv
R526 Maps.t
R533 Registers.t
R566 Locations.loc
R559 Registers.reg
R584 LTL.function
R640 Coq.Init.Logic "x = y" type_scope
R620 RTLtyping.type_rtl_function
R642 Coq.Init.Datatypes.Some
R705 Coq.Init.Logic "x = y" type_scope
R670 Coloring.regalloc
R687 Allocproof.live0
R707 Coq.Init.Datatypes.Some
R756 Coq.Init.Logic "x = y" type_scope
R738 Allocation.transf_function
R758 Coq.Init.Datatypes.Some
R791 RTLtyping.wt_function
R835 RTLtyping.type_rtl_function_correct
R835 RTLtyping.type_rtl_function_correct
R921 Coq.Init.Logic "x = y" type_scope
R902 Locations.type
R953 Coloringproof.regalloc_preserves_types
R953 Coloringproof.regalloc_preserves_types
R1062 Coq.Init.Logic "x = y" type_scope
R1024 Coq.Lists.List.map
R1043 Coq.Lists.List.map
R1033 Locations.type
R1064 Coq.Lists.List.map
R1106 Coqlib.list_map_compose
R1106 Coqlib.list_map_compose
R1130 Coqlib.list_map_exten
R1130 Coqlib.list_map_exten
R1172 Alloctyping.alloc_type
R1172 Alloctyping.alloc_type
R1248 Locations.R
R1255 Coq.Init.Logic.True
R1262 Locations.S
R1269 LTLtyping.slot_bounded
R1218 Locations.loc
R1356 Locations.R
R1363 Coq.Init.Logic.True
R1372 Locations.S
R1375 Locations.Incoming
R1392 Coq.Init.Logic.False
R1402 Locations.S
R1409 LTLtyping.slot_bounded
R1321 Locations.loc
R1505 Alloctyping.loc_read_ok
R1494 Coq.Lists.List.In
R1462 Coq.Lists.List.list
R1467 Locations.loc
R1594 Alloctyping.loc_write_ok
R1583 Coq.Lists.List.In
R1551 Coq.Lists.List.list
R1556 Locations.loc
R1670 Alloctyping.loc_read_ok
R1652 Alloctyping.loc_write_ok
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R1758 Alloctyping.loc_write_ok_read_ok
R1853 Alloctyping.locs_read_ok
R1833 Alloctyping.locs_write_ok
R1952 Alloctyping.locs_write_ok_read_ok
R2019 Alloctyping.loc_write_ok
R2072 Coloringproof.regalloc_acceptable
R2072 Coloringproof.regalloc_acceptable
R2213 Alloctyping.alloc_write_ok
R2275 Alloctyping.locs_write_ok
R2290 Coq.Lists.List.map
R2354 Coqlib.list_in_map_inv
R2354 Coqlib.list_in_map_inv
R2448 Alloctyping.allocs_write_ok
R2623 LTLtyping.wt_block
R2636 Allocation.add_reload
R2604 LTLtyping.wt_block
R2583 Coq.Init.Logic "x = y" type_scope
R2570 Locations.type
R2585 Locations.mreg_type
R2549 Alloctyping.loc_read_ok
R2718 Locations.mreg_eq
R2718 Locations.mreg_eq
R2753 LTLtyping.wt_Bopmove
R2753 LTLtyping.wt_Bopmove
R2789 LTLtyping.wt_Bgetstack
R2789 LTLtyping.wt_Bgetstack
R2951 LTLtyping.wt_block
R2964 Allocation.add_spill
R2932 LTLtyping.wt_block
R2912 Coq.Init.Logic "x = y" type_scope
R2898 Locations.mreg_type
R2914 Locations.type
R2876 Alloctyping.loc_write_ok
R3044 Locations.mreg_eq
R3044 Locations.mreg_eq
R3082 LTLtyping.wt_Bopmove
R3082 LTLtyping.wt_Bopmove
R3118 LTLtyping.wt_Bsetstack
R3118 LTLtyping.wt_Bsetstack
R3403 LTLtyping.wt_block
R3416 Allocation.add_reloads
R3384 LTLtyping.wt_block
R3353 Coq.Init.Logic "x = y" type_scope
R3330 Coq.Lists.List.map
R3339 Locations.type
R3355 Coq.Lists.List.map
R3364 Locations.mreg_type
R3307 Alloctyping.locs_read_ok
R3593 Alloctyping.wt_add_reload
R3593 Alloctyping.wt_add_reload
R3623 Coq.Lists.List.in_eq
R3623 Coq.Lists.List.in_eq
R3687 Coq.Lists.List.in_cons
R3687 Coq.Lists.List.in_cons
R3780 Coq.Init.Logic "x = y" type_scope
R3758 Locations.mreg_type
R3769 Allocation.reg_for
R3782 Locations.type
R3844 Locations.slot_type
R3844 Locations.slot_type
R3889 Alloctyping.wt_reg_for
R4214 Coq.Init.Logic "x = y" type_scope
R4163 Coq.Lists.List.map
R4183 Allocation.regs_for_rec
R4172 Locations.mreg_type
R4216 Coq.Lists.List.map
R4225 Locations.type
R4148 Coq.Init.Logic "x = y" type_scope
R4136 Locations.mreg_type
R4150 AST.Tfloat
R4122 Coq.Lists.List.In
R4098 Coq.Init.Logic "x = y" type_scope
R4086 Locations.mreg_type
R4100 AST.Tint
R4072 Coq.Lists.List.In
R4030 Coq.Init.Peano "x <= y" nat_scope
R4013 Coq.Lists.List.length
R4033 Coq.Lists.List.length
R3981 Coq.Init.Peano "x <= y" nat_scope
R3964 Coq.Lists.List.length
R3984 Coq.Lists.List.length
R4405 Coq.Init.Logic.f_equal2
R4416 Coq.Lists.List.cons
R4421 AST.typ
R4405 Coq.Init.Logic.f_equal2
R4416 Coq.Lists.List.cons
R4421 AST.typ
R4469 Locations.slot_type
R4469 Locations.slot_type
R4501 Coq.Lists.List.in_eq
R4501 Coq.Lists.List.in_eq
R4524 Coq.Lists.List.in_eq
R4524 Coq.Lists.List.in_eq
R4588 Coq.Lists.List.in_cons
R4588 Coq.Lists.List.in_cons
R4629 Coq.Lists.List.in_cons
R4629 Coq.Lists.List.in_cons
R4754 Coq.Init.Logic "x = y" type_scope
R4719 Coq.Lists.List.map
R4739 Allocation.regs_for
R4728 Locations.mreg_type
R4756 Coq.Lists.List.map
R4765 Locations.type
R4704 Coq.Init.Peano "x <= y" nat_scope
R4687 Coq.Lists.List.length
R4820 Alloctyping.wt_regs_for_rec
R4820 Alloctyping.wt_regs_for_rec
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R4984 Alloctyping.wt_regs_for
R5141 LTLtyping.wt_block
R5154 Allocation.add_move
R5122 LTLtyping.wt_block
R5102 Coq.Init.Logic "x = y" type_scope
R5089 Locations.type
R5104 Locations.type
R5067 Alloctyping.loc_write_ok
R5048 Alloctyping.loc_read_ok
R5218 Locations.eq
R5218 Locations.eq
R5272 Alloctyping.wt_add_spill
R5272 Alloctyping.wt_add_spill
R5315 Alloctyping.wt_add_reload
R5315 Alloctyping.wt_add_reload
R5356 Locations.slot_type
R5373 AST.Tint
R5381 Locations.IT1
R5387 AST.Tfloat
R5397 Locations.FT1
R5356 Locations.slot_type
R5373 AST.Tint
R5381 Locations.IT1
R5387 AST.Tfloat
R5397 Locations.FT1
R5415 Alloctyping.wt_add_reload
R5415 Alloctyping.wt_add_reload
R5464 Locations.slot_type
R5464 Locations.slot_type
R5499 Alloctyping.wt_add_spill
R5499 Alloctyping.wt_add_spill
R5574 Locations.slot_type
R5574 Locations.slot_type
R5777 LTLtyping.wt_block
R5790 Allocation.parallel_move
R5759 LTLtyping.wt_block
R5737 Alloctyping.locs_write_ok
R5715 Alloctyping.locs_read_ok
R5686 Coq.Init.Logic "x = y" type_scope
R5663 Coq.Lists.List.map
R5672 Locations.type
R5688 Coq.Lists.List.map
R5697 Locations.type
R5871 Alloctyping_aux.wt_parallel_moveX
R5871 Alloctyping_aux.wt_parallel_moveX
R5911 Alloctyping.wt_add_move
R5911 Alloctyping.wt_add_move
R6049 LTLtyping.wt_block
R6062 Allocation.add_op
R6080 Coq.Lists.List "x :: y" list_scope
R6083 Coq.Lists.List.nil
R6069 Op.Omove
R6027 Alloctyping.loc_write_ok
R6008 Alloctyping.loc_read_ok
R5988 Coq.Init.Logic "x = y" type_scope
R5975 Locations.type
R5990 Locations.type
R6144 Alloctyping.wt_add_move
R6144 Alloctyping.wt_add_move
R6258 LTLtyping.wt_block
R6271 Allocation.add_op
R6285 Coq.Lists.List.nil
R6278 Op.Oundef
R6236 Alloctyping.loc_write_ok
R6345 LTLtyping.wt_Bopundef
R6345 LTLtyping.wt_Bopundef
R6364 Alloctyping.wt_add_spill
R6364 Alloctyping.wt_add_spill
R6620 LTLtyping.wt_block
R6633 Allocation.add_op
R6598 Alloctyping.loc_write_ok
R6575 Alloctyping.locs_read_ok
R6547 Coq.Init.Logic "x = y" type_scope
R6508 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R6509 Coq.Lists.List.map
R6518 Locations.type
R6533 Locations.type
R6549 Op.type_of_operation
R6493 Coq.Init.Logic "x <> y" type_scope
R6496 Op.Oundef
R6478 Coq.Init.Logic "x <> y" type_scope
R6481 Op.Omove
R6699 Op.is_move_operation
R6699 Op.is_move_operation
R6749 Op.is_move_operation_correct
R6749 Op.is_move_operation_correct
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R6830 Coq.Init.Peano "x <= y" nat_scope
R6813 Coq.Lists.List.length
R6830 Coq.Init.Peano "x <= y" nat_scope
R6813 Coq.Lists.List.length
R6855 Coq.Lists.List.length
R6874 Coq.Lists.List.length
R6882 Coq.Init.Datatypes.fst
R6887 Op.type_of_operation
R6855 Coq.Lists.List.length
R6874 Coq.Lists.List.length
R6882 Coq.Init.Datatypes.fst
R6887 Op.type_of_operation
R6922 Allocproof.length_type_of_operation
R6922 Allocproof.length_type_of_operation
R6992 Coqlib.list_length_map
R6992 Coqlib.list_length_map
R7024 Alloctyping.wt_regs_for
R7024 Alloctyping.wt_regs_for
R7067 Alloctyping.wt_reg_for
R7067 Alloctyping.wt_reg_for
R7099 Alloctyping.wt_add_reloads
R7099 Alloctyping.wt_add_reloads
R7136 LTLtyping.wt_Bop
R7136 LTLtyping.wt_Bop
R7177 Alloctyping.wt_add_spill
R7177 Alloctyping.wt_add_spill
R7414 LTLtyping.wt_block
R7427 Allocation.add_load
R7392 Alloctyping.loc_write_ok
R7369 Alloctyping.locs_read_ok
R7342 Coq.Init.Logic "x = y" type_scope
R7329 Locations.type
R7344 Op.type_of_chunk
R7298 Coq.Init.Logic "x = y" type_scope
R7275 Coq.Lists.List.map
R7284 Locations.type
R7300 Op.type_of_addressing
R7522 Coq.Init.Peano "x <= y" nat_scope
R7505 Coq.Lists.List.length
R7522 Coq.Init.Peano "x <= y" nat_scope
R7505 Coq.Lists.List.length
R7547 Coq.Lists.List.length
R7566 Coq.Lists.List.length
R7574 Op.type_of_addressing
R7547 Coq.Lists.List.length
R7566 Coq.Lists.List.length
R7574 Op.type_of_addressing
R7611 Allocproof.length_type_of_addressing
R7611 Allocproof.length_type_of_addressing
R7673 Coqlib.list_length_map
R7673 Coqlib.list_length_map
R7718 Coq.Init.Peano "x <= y" nat_scope
R7701 Coq.Lists.List.length
R7718 Coq.Init.Peano "x <= y" nat_scope
R7701 Coq.Lists.List.length
R7751 Alloctyping.wt_regs_for
R7751 Alloctyping.wt_regs_for
R7794 Alloctyping.wt_reg_for
R7794 Alloctyping.wt_reg_for
R7826 Alloctyping.wt_add_reloads
R7826 Alloctyping.wt_add_reloads
R7863 LTLtyping.wt_Bload
R7863 LTLtyping.wt_Bload
R7906 Alloctyping.wt_add_spill
R7906 Alloctyping.wt_add_spill
R8143 LTLtyping.wt_block
R8156 Allocation.add_store
R8122 Alloctyping.loc_read_ok
R8099 Alloctyping.locs_read_ok
R8072 Coq.Init.Logic "x = y" type_scope
R8059 Locations.type
R8074 Op.type_of_chunk
R8028 Coq.Init.Logic "x = y" type_scope
R8005 Coq.Lists.List.map
R8014 Locations.type
R8030 Op.type_of_addressing
R8253 Coq.Init.Peano "x <= y" nat_scope
R8236 Coq.Lists.List.length
R8253 Coq.Init.Peano "x <= y" nat_scope
R8236 Coq.Lists.List.length
R8278 Coq.Lists.List.length
R8297 Coq.Lists.List.length
R8305 Op.type_of_addressing
R8278 Coq.Lists.List.length
R8297 Coq.Lists.List.length
R8305 Op.type_of_addressing
R8342 Allocproof.length_type_of_addressing
R8342 Allocproof.length_type_of_addressing
R8404 Coqlib.list_length_map
R8404 Coqlib.list_length_map
R8458 Coq.Init.Peano "x <= y" nat_scope
R8432 Coq.Lists.List.length
R8449 Coq.Lists.List "x :: y" list_scope
R8458 Coq.Init.Peano "x <= y" nat_scope
R8432 Coq.Lists.List.length
R8449 Coq.Lists.List "x :: y" list_scope
R8498 Alloctyping.wt_regs_for
R8515 Coq.Lists.List "x :: y" list_scope
R8498 Alloctyping.wt_regs_for
R8515 Coq.Lists.List "x :: y" list_scope
R8546 Allocation.regs_for
R8560 Coq.Lists.List "x :: y" list_scope
R8546 Allocation.regs_for
R8560 Coq.Lists.List "x :: y" list_scope
R8656 Alloctyping.wt_add_reloads
R8656 Alloctyping.wt_add_reloads
R8756 LTLtyping.wt_Bstore
R8756 LTLtyping.wt_Bstore
R9158 LTLtyping.wt_block
R9171 Allocation.add_call
R9136 Alloctyping.loc_write_ok
R9088 Coq.Init.Datatypes.inl
R9097 Alloctyping.loc_read_ok
R9113 Coq.Init.Datatypes.inr
R9122 Coq.Init.Logic.True
R9050 Alloctyping.locs_read_ok
R8985 Coq.Init.Logic "x = y" type_scope
R8972 Locations.type
R8998 AST.sig_res
R9012 Coq.Init.Datatypes.None
R9020 AST.Tint
R9027 Coq.Init.Datatypes.Some
R8950 Coq.Init.Logic "x = y" type_scope
R8927 Coq.Lists.List.map
R8936 Locations.type
R8957 AST.sig_args
R8875 Coq.Init.Datatypes.inl
R8895 Coq.Init.Logic "x = y" type_scope
R8884 Locations.type
R8897 AST.Tint
R8904 Coq.Init.Datatypes.inr
R8913 Coq.Init.Logic.True
R9229 Alloctyping.locs_write_ok
R9244 Conventions.loc_arguments
R9229 Alloctyping.locs_write_ok
R9244 Conventions.loc_arguments
R9294 Conventions.loc_arguments_acceptable
R9294 Conventions.loc_arguments_acceptable
R9451 Alloctyping.wt_add_reload
R9451 Alloctyping.wt_add_reload
R9500 Alloctyping.wt_parallel_move
R9500 Alloctyping.wt_parallel_move
R9526 Conventions.loc_arguments_type
R9526 Conventions.loc_arguments_type
R9575 LTLtyping.wt_Bcall
R9575 LTLtyping.wt_Bcall
R9607 Alloctyping.wt_add_spill
R9607 Alloctyping.wt_add_spill
R9638 Conventions.loc_result_type
R9638 Conventions.loc_result_type
R9682 Alloctyping.wt_parallel_move
R9682 Alloctyping.wt_parallel_move
R9708 Conventions.loc_arguments_type
R9708 Conventions.loc_arguments_type
R9757 LTLtyping.wt_Bcall
R9757 LTLtyping.wt_Bcall
R9781 Alloctyping.wt_add_spill
R9781 Alloctyping.wt_add_spill
R9812 Conventions.loc_result_type
R9812 Conventions.loc_result_type
R9982 LTLtyping.wt_block
R9995 Allocation.add_cond
R9959 Alloctyping.locs_read_ok
R9929 Coq.Init.Logic "x = y" type_scope
R9906 Coq.Lists.List.map
R9915 Locations.type
R9931 Op.type_of_condition
R10072 Coq.Init.Peano "x <= y" nat_scope
R10056 Coq.Lists.List.length
R10072 Coq.Init.Peano "x <= y" nat_scope
R10056 Coq.Lists.List.length
R10098 Coq.Lists.List.length
R10117 Coq.Lists.List.length
R10125 Op.type_of_condition
R10098 Coq.Lists.List.length
R10117 Coq.Lists.List.length
R10125 Op.type_of_condition
R10161 Allocproof.length_type_of_condition
R10161 Allocproof.length_type_of_condition
R10223 Coqlib.list_length_map
R10223 Coqlib.list_length_map
R10255 Alloctyping.wt_regs_for
R10255 Alloctyping.wt_regs_for
R10311 Alloctyping.wt_add_reloads
R10311 Alloctyping.wt_add_reloads
R10350 LTLtyping.wt_Bcond
R10350 LTLtyping.wt_Bcond
R10541 LTLtyping.wt_block
R10554 Allocation.add_return
R10489 Coq.Init.Datatypes.None
R10497 Coq.Init.Logic.True
R10504 Coq.Init.Datatypes.Some
R10516 Alloctyping.loc_read_ok
R10450 Coq.Init.Logic "x = y" type_scope
R10423 Coqlib.option_map
R10434 Locations.type
R10457 AST.sig_res
R10639 Alloctyping.wt_add_reload
R10639 Alloctyping.wt_add_reload
R10668 Conventions.loc_result_type
R10668 Conventions.loc_result_type
R10710 AST.sig_res
R10710 AST.sig_res
R10773 LTLtyping.wt_Bopundef
R10773 LTLtyping.wt_Bopundef
R10860 LTLtyping.wt_block
R10873 Allocation.add_undefs
R10843 LTLtyping.wt_block
R10965 LTLtyping.wt_Bopundef
R10965 LTLtyping.wt_Bopundef
R11126 LTLtyping.wt_block
R11139 Allocation.add_entry
R11150 RTL.fn_sig
R11100 Alloctyping.locs_write_ok
R11069 Coq.Init.Logic "x = y" type_scope
R11044 Coq.Lists.List.map
R11053 Locations.type
R11071 AST.sig_args
R11081 RTL.fn_sig
R11203 RTL.fn_sig
R11203 RTL.fn_sig
R11232 Coq.Init.Logic "x = y" type_scope
R11238 LTL.fn_sig
R11232 Coq.Init.Logic "x = y" type_scope
R11238 LTL.fn_sig
R11280 Allocproof.sig_function_translated
R11280 Allocproof.sig_function_translated
R11332 Alloctyping.locs_read_ok
R11346 Conventions.loc_parameters
R11332 Alloctyping.locs_read_ok
R11346 Conventions.loc_parameters
R11425 Coqlib.list_in_map_inv
R11425 Coqlib.list_in_map_inv
R11498 Conventions.loc_arguments_acceptable
R11498 Conventions.loc_arguments_acceptable
R11657 Conventions.loc_arguments_bounded
R11657 Conventions.loc_arguments_bounded
R11722 Alloctyping.wt_parallel_move
R11722 Alloctyping.wt_parallel_move
R11748 Conventions.loc_parameters_type
R11748 Conventions.loc_parameters_type
R11798 Alloctyping.wt_add_undefs
R11798 Alloctyping.wt_add_undefs
R11947 LTLtyping.wt_block
R11960 Allocation.transf_instr
R11911 RTLtyping.wt_instr
R12082 Registers.mem
R12099 Maps "a !! b"
R12082 Registers.mem
R12099 Maps "a !! b"
R12115 Alloctyping.wt_add_op_move
R12115 Alloctyping.wt_add_op_move
R12167 Alloctyping.alloc_type
R12167 Alloctyping.alloc_type
R12167 Alloctyping.alloc_type
R12167 Alloctyping.alloc_type
R12220 Registers.mem
R12237 Maps "a !! b"
R12220 Registers.mem
R12237 Maps "a !! b"
R12253 Alloctyping.wt_add_op_undef
R12253 Alloctyping.wt_add_op_undef
R12330 Registers.mem
R12349 Maps "a !! b"
R12330 Registers.mem
R12349 Maps "a !! b"
R12365 Alloctyping.wt_add_op_others
R12365 Alloctyping.wt_add_op_others
R12413 Alloctyping.alloc_types
R12413 Alloctyping.alloc_types
R12434 Alloctyping.alloc_type
R12434 Alloctyping.alloc_type
R12489 Registers.mem
R12508 Maps "a !! b"
R12489 Registers.mem
R12508 Maps "a !! b"
R12524 Alloctyping.wt_add_load
R12524 Alloctyping.wt_add_load
R12567 Alloctyping.alloc_types
R12567 Alloctyping.alloc_types
R12594 Alloctyping.alloc_type
R12594 Alloctyping.alloc_type
R12650 Alloctyping.wt_add_store
R12650 Alloctyping.wt_add_store
R12693 Alloctyping.alloc_types
R12693 Alloctyping.alloc_types
R12720 Alloctyping.alloc_type
R12720 Alloctyping.alloc_type
R12760 Alloctyping.wt_add_call
R12760 Alloctyping.wt_add_call
R12805 Alloctyping.alloc_type
R12805 Alloctyping.alloc_type
R12840 Alloctyping.alloc_types
R12840 Alloctyping.alloc_types
R12869 Alloctyping.alloc_type
R12869 Alloctyping.alloc_type
R12993 Alloctyping.wt_add_cond
R12993 Alloctyping.wt_add_cond
R13014 Alloctyping.alloc_types
R13014 Alloctyping.alloc_types
R13075 Alloctyping.wt_add_return
R13075 Alloctyping.wt_add_return
R13125 Alloctyping.alloc_type
R13125 Alloctyping.alloc_type
R13332 LTLtyping.wt_block
R13320 Coq.Init.Logic "x = y" type_scope
R13316 Maps "a ! b"
R13322 Coq.Init.Datatypes.Some
R13243 Maps.map
R13282 RTL.fn_code
R13254 Allocation.transf_instr
R13392 Maps.gmap
R13392 Maps.gmap
R13425 Maps "a ! b"
R13412 RTL.fn_code
R13425 Maps "a ! b"
R13412 RTL.fn_code
R13503 Alloctyping.wt_transf_instr
R13503 Alloctyping.wt_transf_instr
R13527 RTLtyping.wt_instrs
R13527 RTLtyping.wt_instrs
R13563 Alloctyping.wt_rtl_function
R13563 Alloctyping.wt_rtl_function
R13792 LTLtyping.wt_block
R13780 Coq.Init.Logic "x = y" type_scope
R13776 Maps "a ! b"
R13782 Coq.Init.Datatypes.Some
R13657 Allocation.transf_entrypoint
R13701 Maps.map
R13740 RTL.fn_code
R13712 Allocation.transf_instr
R13874 Maps.gsspec
R13874 Maps.gsspec
R13897 Coqlib.peq
R13905 RTL.fn_nextpc
R13897 Coqlib.peq
R13905 RTL.fn_nextpc
R13968 Alloctyping.wt_add_entry
R13968 Alloctyping.wt_add_entry
R13992 Alloctyping.alloc_types
R13992 Alloctyping.alloc_types
R14012 RTLtyping.wt_params
R14012 RTLtyping.wt_params
R14039 Alloctyping.wt_rtl_function
R14039 Alloctyping.wt_rtl_function
R14086 Alloctyping.wt_transf_instrs
R14086 Alloctyping.wt_transf_instrs
R14220 LTLtyping.wt_function
R14207 Coq.Init.Logic "x = y" type_scope
R14189 Allocation.transf_function
R14209 Coq.Init.Datatypes.Some
R14301 RTLtyping.type_rtl_function
R14301 RTLtyping.type_rtl_function
R14350 Allocation.analyze
R14350 Allocation.analyze
R14482 Allocproof.live0
R14389 Allocation.transfer
R14447 Maps "a !! b"
R14450 RTL.fn_entrypoint
R14401 RTL.fn_entrypoint
R14482 Allocproof.live0
R14389 Allocation.transfer
R14447 Maps "a !! b"
R14450 RTL.fn_entrypoint
R14401 RTL.fn_entrypoint
R14507 Coloring.regalloc
R14524 Allocproof.live0
R14507 Coloring.regalloc
R14524 Allocproof.live0
R14638 Alloctyping.wt_transf_entrypoint
R14638 Alloctyping.wt_transf_entrypoint
R14857 LTLtyping.wt_program
R14842 Coq.Init.Logic "x = y" type_scope
R14825 Allocation.transf_program
R14844 Coq.Init.Datatypes.Some
R14809 LTL.program
R14791 RTL.program
R14926 AST.transform_partial_program_function
R14961 Allocation.transf_function
R14926 AST.transform_partial_program_function
R14961 Allocation.transf_function
R15025 Alloctyping.wt_transf_function
R15025 Alloctyping.wt_transf_function
FTunneling
R287 Coq.Init.Datatypes.option
R294 LTL.node
R317 Coq.Init.Datatypes.Some
R323 LTL.Bgoto
R335 Coq.Init.Datatypes.Some
R349 Coq.Init.Datatypes.None
R271 Coq.Init.Datatypes.option
R278 LTL.block
R473 Coq.Init.Datatypes.option
R480 LTL.node
R424 Coq.Init.Datatypes.nat
R410 LTL.node
R391 LTL.function
R511 Coq.Init.Datatypes.O
R526 Coq.Init.Datatypes.None
R535 Coq.Init.Datatypes.S
R569 Tunneling.is_goto_block
R594 Maps "a ! b"
R586 LTL.fn_code
R611 Coq.Init.Datatypes.Some
R658 Coq.Init.Datatypes.None
R666 Coq.Init.Datatypes.Some
R424 Coq.Init.Datatypes.nat
R410 LTL.node
R391 LTL.function
R757 Tunneling.branch_target_rec
R796 Coq.Init.Datatypes.Some
R816 Coq.Init.Datatypes.None
R740 LTL.node
R721 LTL.function
R899 LTL.block
R879 LTL.block
R861 LTL.function
R927 LTL.Bgetstack
R952 LTL.Bgetstack
R989 LTL.Bsetstack
R1014 LTL.Bsetstack
R1051 LTL.Bop
R1078 LTL.Bop
R1117 LTL.Bload
R1154 LTL.Bload
R1203 LTL.Bstore
R1241 LTL.Bstore
R1291 LTL.Bcall
R1316 LTL.Bcall
R1353 LTL.Bgoto
R1370 LTL.Bgoto
R1377 Tunneling.branch_target
R1400 LTL.Bcond
R1431 LTL.Bcond
R1469 Tunneling.branch_target
R1448 Tunneling.branch_target
R1493 LTL.Breturn
R1510 LTL.Breturn
R879 LTL.block
R861 LTL.function
R1700 Coq.Init.Logic "A \/ B" type_scope
R1667 Coqlib.Plt
R1675 Coq.NArith.BinPos.Psucc
R1682 LTL.fn_entrypoint
R1709 Coq.Init.Logic "x = y" type_scope
R1705 Maps "a ! b"
R1711 Coq.Init.Datatypes.None
R1660 LTL.node
R1590 Maps.map
R1632 LTL.fn_code
R1613 Tunneling.tunnel_block
R1563 LTL.function
R1740 LTL.fn_code_wf
R1740 LTL.fn_code_wf
R1807 Maps.gmap
R1807 Maps.gmap
R1908 LTL.function
R1926 LTL.mkfunction
R2059 Tunneling.wf_tunneled_code
R2037 LTL.fn_entrypoint
R1978 Maps.map
R2020 LTL.fn_code
R2001 Tunneling.tunnel_block
R1957 LTL.fn_stacksize
R1942 LTL.fn_sig
R1892 LTL.function
R2126 LTL.program
R2143 AST.transform_program
R2161 Tunneling.tunnel_function
R2111 LTL.program
FTunnelingproof
R336 Coq.Init.Logic "x = y" type_scope
R338 Coq.Init.Datatypes.Some
R344 LTL.Bgoto
R322 Coq.Init.Logic "x = y" type_scope
R306 Tunneling.is_goto_block
R324 Coq.Init.Datatypes.Some
R554 Coq.Init.Logic "A \/ B" type_scope
R542 Coq.Init.Logic "x = y" type_scope
R517 Tunneling.branch_target_rec
R544 Coq.Init.Datatypes.Some
R591 Coq.Init.Logic "A \/ B" type_scope
R582 Coq.Init.Logic "x = y" type_scope
R557 Tunneling.branch_target_rec
R584 Coq.Init.Datatypes.None
R594 Coq.Init.Logic "'exists' x , p" type_scope
R621 Coq.Init.Logic "x = y" type_scope
R617 Maps "a ! b"
R609 LTL.fn_code
R623 Coq.Init.Datatypes.Some
R628 LTL.Bgoto
R707 Tunneling.is_goto_block
R732 Maps "a ! b"
R724 LTL.fn_code
R707 Tunneling.is_goto_block
R732 Maps "a ! b"
R724 LTL.fn_code
R779 Tunnelingproof.is_goto_block_correct
R779 Tunnelingproof.is_goto_block_correct
R991 Coq.Init.Logic "x = y" type_scope
R965 Tunneling.branch_target_rec
R993 Coq.Init.Datatypes.Some
R949 Coq.Init.Logic "x = y" type_scope
R923 Tunneling.branch_target_rec
R951 Coq.Init.Datatypes.Some
R899 Coq.Init.Logic "x = y" type_scope
R894 Maps "a ! b"
R886 LTL.fn_code
R901 Coq.Init.Datatypes.Some
R907 LTL.Bgoto
R1166 Tunneling.is_goto_block
R1191 Maps "a ! b"
R1183 LTL.fn_code
R1166 Tunneling.is_goto_block
R1191 Maps "a ! b"
R1183 LTL.fn_code
R1234 Tunnelingproof.is_goto_block_correct
R1234 Tunnelingproof.is_goto_block_correct
R1417 Coq.Init.Logic "A \/ B" type_scope
R1412 Coq.Init.Logic "x = y" type_scope
R1393 Tunneling.branch_target
R1423 Coq.Init.Logic "'exists' x , p" type_scope
R1480 Coq.Init.Logic "A /\ B" type_scope
R1450 Coq.Init.Logic "x = y" type_scope
R1446 Maps "a ! b"
R1438 LTL.fn_code
R1452 Coq.Init.Datatypes.Some
R1457 LTL.Bgoto
R1503 Coq.Init.Logic "x = y" type_scope
R1483 Tunneling.branch_target
R1505 Tunneling.branch_target
R1580 Tunnelingproof.branch_target_rec_1
R1580 Tunnelingproof.branch_target_rec_1
R1702 Tunneling.branch_target_rec
R1702 Tunneling.branch_target_rec
R1795 Tunnelingproof.branch_target_rec_2
R1795 Tunnelingproof.branch_target_rec_2
R1938 LTL.program
R1957 Tunneling.tunnel_program
R1985 Globalenvs.globalenv
R2014 Globalenvs.globalenv
R2135 Coq.Init.Logic "x = y" type_scope
R2113 Globalenvs.find_funct
R2137 Coq.Init.Datatypes.Some
R2143 Tunneling.tunnel_function
R2099 Coq.Init.Logic "x = y" type_scope
R2078 Globalenvs.find_funct
R2101 Coq.Init.Datatypes.Some
R2171 Globalenvs.find_funct_transf
R2198 Tunneling.tunnel_function
R2331 Coq.Init.Logic "x = y" type_scope
R2305 Globalenvs.find_funct_ptr
R2333 Coq.Init.Datatypes.Some
R2339 Tunneling.tunnel_function
R2291 Coq.Init.Logic "x = y" type_scope
R2266 Globalenvs.find_funct_ptr
R2293 Coq.Init.Datatypes.Some
R2367 Globalenvs.find_funct_ptr_transf
R2398 Tunneling.tunnel_function
R2483 Coq.Init.Logic "x = y" type_scope
R2459 Globalenvs.find_symbol
R2485 Globalenvs.find_symbol
R2517 Globalenvs.find_symbol_transf
R2545 Tunneling.tunnel_function
R2711 Coq.Init.Logic "A /\ B" type_scope
R2706 Coq.Init.Logic "x = y" type_scope
R2724 Coq.Init.Logic "A /\ B" type_scope
R2718 Coq.Init.Logic "x = y" type_scope
R2730 Coq.Init.Logic "x = y" type_scope
R2689 Coq.Init.Logic "x = y" type_scope
R2691 LTL.Bgoto
R2630 LTL.exec_instrs
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R3046 Coq.Init.Logic "A /\ B" type_scope
R3037 Coq.Init.Logic "x = y" type_scope
R3039 LTL.Cont
R3059 Coq.Init.Logic "A /\ B" type_scope
R3053 Coq.Init.Logic "x = y" type_scope
R3065 Coq.Init.Logic "x = y" type_scope
R2983 LTL.exec_block
R3001 LTL.Bgoto
R3115 Tunnelingproof.exec_instrs_Bgoto_inv
R3157 Coq.Init.Logic.refl_equal
R3115 Tunnelingproof.exec_instrs_Bgoto_inv
R3157 Coq.Init.Logic.refl_equal
R3115 Tunnelingproof.exec_instrs_Bgoto_inv
R3157 Coq.Init.Logic.refl_equal
R3115 Tunnelingproof.exec_instrs_Bgoto_inv
R3157 Coq.Init.Logic.refl_equal
R3115 Tunnelingproof.exec_instrs_Bgoto_inv
R3157 Coq.Init.Logic.refl_equal
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R3460 Coq.Init.Logic "A \/ B" type_scope
R3437 Coq.Init.Logic "A /\ B" type_scope
R3426 Coq.Init.Logic "x = y" type_scope
R3428 LTL.Cont
R3450 Coq.Init.Logic "A /\ B" type_scope
R3444 Coq.Init.Logic "x = y" type_scope
R3456 Coq.Init.Logic "x = y" type_scope
R3467 LTL.exec_blocks
R3399 Coq.Init.Logic "x = y" type_scope
R3394 Maps "a ! b"
R3401 Coq.Init.Datatypes.Some
R3407 LTL.Bgoto
R3346 LTL.exec_blocks
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R3565 Coq.Init.Logic "x = y" type_scope
R3567 LTL.Bgoto
R3565 Coq.Init.Logic "x = y" type_scope
R3567 LTL.Bgoto
R3613 Tunnelingproof.exec_block_Bgoto_inv
R3613 Tunnelingproof.exec_block_Bgoto_inv
R3721 LTL.exec_blocks_refl
R3721 LTL.exec_blocks_refl
R3802 Coq.Init.Logic "x = y" type_scope
R3802 Coq.Init.Logic "x = y" type_scope
R3906 LTL.exec_blocks_trans
R3906 LTL.exec_blocks_trans
R4032 LTL.Cont
R4043 LTL.Cont
R4049 Tunneling.branch_target
R4073 LTL.Return
R4083 LTL.Return
R3999 LTL.outcome
R3983 LTL.function
R4245 LTL.exec_instr
R4311 Tunneling.tunnel_block
R4264 Tunneling.tunnel_block
R4216 Mem.mem
R4203 LTL.locset
R4190 LTL.block
R4168 Mem.mem
R4155 LTL.locset
R4142 LTL.block
R4132 Values.val
R4487 LTL.exec_instrs
R4555 Tunneling.tunnel_block
R4507 Tunneling.tunnel_block
R4458 Mem.mem
R4445 LTL.locset
R4432 LTL.block
R4410 Mem.mem
R4397 LTL.locset
R4384 LTL.block
R4374 Values.val
R4733 LTL.exec_block
R4799 Tunnelingproof.tunnel_outcome
R4752 Tunneling.tunnel_block
R4704 Mem.mem
R4691 LTL.locset
R4676 LTL.outcome
R4653 Mem.mem
R4640 LTL.locset
R4627 LTL.block
R4617 Values.val
R4874 Maps.map
R4916 LTL.fn_code
R4897 Tunneling.tunnel_block
R4859 LTL.function
R5111 LTL.exec_blocks
R5205 Tunnelingproof.tunnel_outcome
R5163 Tunneling.branch_target
R5128 Tunnelingproof.tunneled_code
R5102 Coq.Init.Logic "x = y" type_scope
R5093 LTL.fn_code
R5061 Mem.mem
R5048 LTL.locset
R5033 LTL.outcome
R5017 Mem.mem
R5004 LTL.locset
R4992 LTL.node
R4977 Values.val
R4966 LTL.code
R5363 LTL.exec_function
R5382 Tunneling.tunnel_function
R5346 Mem.mem
R5333 LTL.locset
R5303 Mem.mem
R5290 LTL.locset
R5274 LTL.function
R5857 Tunnelingproof.exec_function_prop
R5819 LTL.exec_function
R5909 Tunnelingproof.exec_function_ind5
R6052 Tunnelingproof.exec_function_prop
R6024 Tunnelingproof.exec_blocks_prop
R5997 Tunnelingproof.exec_block_prop
R5969 Tunnelingproof.exec_instrs_prop
R5942 Tunnelingproof.exec_instr_prop
R5909 Tunnelingproof.exec_function_ind5
R6052 Tunnelingproof.exec_function_prop
R6024 Tunnelingproof.exec_blocks_prop
R5997 Tunnelingproof.exec_block_prop
R5969 Tunnelingproof.exec_instrs_prop
R5942 Tunnelingproof.exec_instr_prop
R6213 Op.eval_operation_preserved
R6213 Op.eval_operation_preserved
R6247 Tunnelingproof.symbols_preserved
R6247 Tunnelingproof.symbols_preserved
R6287 LTL.exec_Bload
R6287 LTL.exec_Bload
R6329 Op.eval_addressing_preserved
R6329 Op.eval_addressing_preserved
R6362 Tunnelingproof.symbols_preserved
R6362 Tunnelingproof.symbols_preserved
R6411 LTL.exec_Bstore
R6411 LTL.exec_Bstore
R6453 Op.eval_addressing_preserved
R6453 Op.eval_addressing_preserved
R6486 Tunnelingproof.symbols_preserved
R6486 Tunnelingproof.symbols_preserved
R6551 Tunneling.tunnel_function
R6534 LTL.exec_Bcall
R6551 Tunneling.tunnel_function
R6534 LTL.exec_Bcall
R6639 Tunnelingproof.functions_translated
R6639 Tunnelingproof.functions_translated
R6677 Tunnelingproof.symbols_preserved
R6677 Tunnelingproof.symbols_preserved
R6706 Globalenvs.find_symbol
R6706 Globalenvs.find_symbol
R6745 Tunnelingproof.function_ptr_translated
R6745 Tunnelingproof.function_ptr_translated
R6855 LTL.exec_refl
R6855 LTL.exec_refl
R6892 LTL.exec_one
R6892 LTL.exec_one
R6957 Tunneling.tunnel_block
R6940 LTL.exec_trans
R6957 Tunneling.tunnel_block
R6940 LTL.exec_trans
R7011 LTL.exec_Bgoto
R7011 LTL.exec_Bgoto
R7086 LTL.exec_Bcond_true
R7086 LTL.exec_Bcond_true
R7173 LTL.exec_Bcond_false
R7173 LTL.exec_Bcond_false
R7254 LTL.exec_Breturn
R7254 LTL.exec_Breturn
R7330 LTL.exec_blocks_refl
R7330 LTL.exec_blocks_refl
R7388 Tunnelingproof.branch_target_characterization
R7388 Tunnelingproof.branch_target_characterization
R7475 Tunneling.tunnel_block
R7453 LTL.exec_blocks_one
R7475 Tunneling.tunnel_block
R7453 LTL.exec_blocks_one
R7526 Maps.gmap
R7526 Maps.gmap
R7626 Coq.Init.Logic "x = y" type_scope
R7628 LTL.Bgoto
R7626 Coq.Init.Logic "x = y" type_scope
R7628 LTL.Bgoto
R7675 Tunnelingproof.exec_block_Bgoto_inv
R7675 Tunnelingproof.exec_block_Bgoto_inv
R7795 LTL.exec_blocks_refl
R7795 LTL.exec_blocks_refl
R7866 Tunneling.branch_target
R7842 LTL.exec_blocks_trans
R7866 Tunneling.branch_target
R7842 LTL.exec_blocks_trans
R8021 Tunnelingproof.tunneled_code
R7986 LTL.fn_code
R7995 Tunneling.tunnel_function
R8021 Tunnelingproof.tunneled_code
R7986 LTL.fn_code
R7995 Tunneling.tunnel_function
R8056 Tunnelingproof.branch_target_characterization
R8090 LTL.fn_entrypoint
R8056 Tunnelingproof.branch_target_characterization
R8090 LTL.fn_entrypoint
R8149 Coq.Init.Logic.refl_equal
R8149 Coq.Init.Logic.refl_equal
R8228 Tunneling.branch_target
R8245 LTL.fn_entrypoint
R8264 LTL.call_regs
R8198 LTL.exec_blocks_trans
R8228 Tunneling.branch_target
R8245 LTL.fn_entrypoint
R8264 LTL.call_regs
R8198 LTL.exec_blocks_trans
R8291 LTL.exec_blocks_one
R8291 LTL.exec_blocks_one
R8341 Maps.gmap
R8341 Maps.gmap
R8398 LTL.exec_Bgoto
R8398 LTL.exec_Bgoto
R8428 LTL.exec_refl
R8428 LTL.exec_refl
R8454 Coq.Init.Logic.refl_equal
R8454 Coq.Init.Logic.refl_equal
R8583 LTL.exec_program
R8597 Tunneling.tunnel_program
R8561 LTL.exec_program
R8553 Values.val
R8540 LTL.program
R8712 Tunneling.tunnel_function
R8712 Tunneling.tunnel_function
R8806 AST.prog_main
R8770 AST.prog_main
R8781 Tunneling.tunnel_program
R8806 AST.prog_main
R8770 AST.prog_main
R8781 Tunneling.tunnel_program
R8846 Tunnelingproof.symbols_preserved
R8846 Tunnelingproof.symbols_preserved
R8880 Tunnelingproof.function_ptr_translated
R8880 Tunnelingproof.function_ptr_translated
R8971 Tunnelingproof.tunnel_function_correct
R8971 Tunnelingproof.tunnel_function_correct
R9030 Globalenvs.init_mem_transf
R9030 Globalenvs.init_mem_transf
FTunnelingtyping
R343 LTLtyping.wt_block
R373 Tunneling.tunnel_block
R353 Tunneling.tunnel_function
R325 LTLtyping.wt_block
R503 LTLtyping.wt_function
R516 Tunneling.tunnel_function
R486 LTLtyping.wt_function
R598 Maps.gmap
R598 Maps.gmap
R649 Maps "a ! b"
R640 LTL.fn_code
R649 Maps "a ! b"
R640 LTL.fn_code
R715 Tunnelingtyping.wt_tunnel_block
R715 Tunnelingtyping.wt_tunnel_block
R847 LTLtyping.wt_program
R859 Tunneling.tunnel_program
R831 LTLtyping.wt_program
R815 LTL.program
R922 AST.transform_program_function
R949 Tunneling.tunnel_function
R922 AST.transform_program_function
R949 Tunneling.tunnel_function
R1020 Tunnelingtyping.wt_tunnel_function
R1020 Tunnelingtyping.wt_tunnel_function
FLinear
R332 Coq.NArith.BinPos.positive
R396 Locations.mreg
R388 Locations.slot
R439 Locations.slot
R431 Locations.mreg
R494 Locations.mreg
R481 Coq.Lists.List.list
R486 Locations.mreg
R468 Op.operation
R568 Locations.mreg
R555 Coq.Lists.List.list
R560 Locations.mreg
R541 Op.addressing
R525 AST.memory_chunk
R643 Locations.mreg
R630 Coq.Lists.List.list
R635 Locations.mreg
R616 Op.addressing
R600 AST.memory_chunk
R692 Coq.Init.Datatypes "x + y" type_scope
R687 Locations.mreg
R694 AST.ident
R674 AST.signature
R727 Linear.label
R759 Linear.label
R817 Linear.label
R804 Coq.Lists.List.list
R809 Locations.mreg
R791 Op.condition
R889 Coq.Lists.List.list
R894 Linear.instruction
R955 AST.signature
R982 Coq.ZArith.BinInt.Z
R996 Linear.code
R1027 AST.program
R1039 Linear.function
R1069 Globalenvs.t
R1076 Linear.function
R1107 Locations.t
R1203 Coq.Init.Datatypes.bool
R1234 Linear.Llabel
R1252 Coqlib.peq
R1280 Coq.Init.Datatypes.false
R1270 Coq.Init.Datatypes.true
R1295 Coq.Init.Datatypes.false
R1188 Linear.instruction
R1173 Linear.label
R1358 Linear.is_label
R1412 Coq.Init.Logic "x <> y" type_scope
R1415 Linear.Llabel
R1388 Coq.Init.Logic "x = y" type_scope
R1390 Linear.Llabel
R1494 Coqlib.peq
R1494 Coqlib.peq
R1587 Coq.Init.Datatypes.option
R1594 Linear.code
R1568 Linear.code
R1557 Linear.label
R1621 Coq.Lists.List.nil
R1628 Coq.Init.Datatypes.None
R1640 Coq.Lists.List "x :: y" list_scope
R1652 Linear.is_label
R1673 Coq.Init.Datatypes.Some
R1568 Linear.code
R1557 Linear.label
R1742 Linear.genv
R1809 Coq.Init.Datatypes.option
R1816 Linear.function
R1849 Coq.Init.Datatypes.inl
R1858 Globalenvs.find_funct
R1882 Locations.R
R1892 Coq.Init.Datatypes.inr
R1916 Globalenvs.find_symbol
R1954 Coq.Init.Datatypes.None
R1962 Coq.Init.Datatypes.None
R1975 Coq.Init.Datatypes.Some
R1985 Globalenvs.find_funct_ptr
R1799 Linear.locset
R1785 Coq.Init.Datatypes "x + y" type_scope
R1780 Locations.mreg
R1787 AST.ident
R2156 Mem.mem
R2146 Linear.locset
R2138 Linear.code
R2109 Mem.mem
R2099 Linear.locset
R2091 Linear.code
R2062 Values.val
R2050 Linear.function
R4380 Mem.mem
R4370 Linear.locset
R4362 Linear.code
R4337 Mem.mem
R4327 Linear.locset
R4319 Linear.code
R4294 Values.val
R4282 Linear.function
R4874 Mem.mem
R4864 Linear.locset
R4857 Mem.mem
R4847 Linear.locset
R4835 Linear.function
R2297 Locations.set
R2319 Locations.S
R2309 Locations.R
R2260 Coq.Lists.List "x :: y" list_scope
R2245 Linear.Lgetstack
R2457 Locations.set
R2480 Locations.R
R2469 Locations.S
R2421 Coq.Lists.List "x :: y" list_scope
R2406 Linear.Lsetstack
R2681 Locations.set
R2693 Locations.R
R2645 Coq.Lists.List "x :: y" list_scope
R2629 Linear.Lop
R2594 Coq.Init.Logic "x = y" type_scope
R2552 Op.eval_operation
R2577 LTL.reglist
R2596 Coq.Init.Datatypes.Some
R2956 Locations.set
R2968 Locations.R
R2920 Coq.Lists.List "x :: y" list_scope
R2894 Linear.Lload
R2859 Coq.Init.Logic "x = y" type_scope
R2843 Mem.loadv
R2861 Coq.Init.Datatypes.Some
R2825 Coq.Init.Logic "x = y" type_scope
R2780 Op.eval_addressing
R2808 LTL.reglist
R2827 Coq.Init.Datatypes.Some
R3213 Coq.Lists.List "x :: y" list_scope
R3186 Linear.Lstore
R3150 Coq.Init.Logic "x = y" type_scope
R3120 Mem.storev
R3142 Locations.R
R3152 Coq.Init.Datatypes.Some
R3102 Coq.Init.Logic "x = y" type_scope
R3057 Op.eval_addressing
R3085 LTL.reglist
R3104 Coq.Init.Datatypes.Some
R3492 LTL.return_regs
R3456 Coq.Lists.List "x :: y" list_scope
R3442 Linear.Lcall
R3364 Coq.Init.Logic "x = y" type_scope
R3370 Linear.fn_sig
R3341 Coq.Init.Logic "x = y" type_scope
R3320 Linear.find_function
R3343 Coq.Init.Datatypes.Some
R3596 Coq.Lists.List "x :: y" list_scope
R3585 Linear.Llabel
R3764 Coq.Lists.List "x :: y" list_scope
R3754 Linear.Lgoto
R3718 Coq.Init.Logic "x = y" type_scope
R3691 Linear.find_label
R3709 Linear.fn_code
R3720 Coq.Init.Datatypes.Some
R4017 Coq.Lists.List "x :: y" list_scope
R3997 Linear.Lcond
R3961 Coq.Init.Logic "x = y" type_scope
R3934 Linear.find_label
R3952 Linear.fn_code
R3963 Coq.Init.Datatypes.Some
R3913 Coq.Init.Logic "x = y" type_scope
R3875 Op.eval_condition
R3896 LTL.reglist
R3915 Coq.Init.Datatypes.Some
R3920 Coq.Init.Datatypes.true
R4223 Coq.Lists.List "x :: y" list_scope
R4203 Linear.Lcond
R4164 Coq.Init.Logic "x = y" type_scope
R4126 Op.eval_condition
R4147 LTL.reglist
R4166 Coq.Init.Datatypes.Some
R4171 Coq.Init.Datatypes.false
R5135 Mem.free
R5087 Coq.Lists.List "x :: y" list_scope
R5079 Linear.Lreturn
R5061 LTL.call_regs
R5051 Linear.fn_code
R5011 Values.Vptr
R5020 Integers.zero
R4975 Coq.Init.Logic "x = y" type_scope
R4948 Mem.alloc
R4961 Linear.fn_stacksize
R4977 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5480 Coq.Init.Logic "'exists' x , p" type_scope
R5490 Coq.Init.Logic "'exists' x , p" type_scope
R5500 Coq.Init.Logic "'exists' x , p" type_scope
R5511 Coq.Init.Logic "'exists' x , p" type_scope
R5566 Coq.Init.Logic "A /\ B" type_scope
R5557 Coq.Init.Logic "x = y" type_scope
R5523 Globalenvs.find_symbol
R5546 AST.prog_main
R5559 Coq.Init.Datatypes.Some
R5605 Coq.Init.Logic "A /\ B" type_scope
R5596 Coq.Init.Logic "x = y" type_scope
R5571 Globalenvs.find_funct_ptr
R5598 Coq.Init.Datatypes.Some
R5651 Coq.Init.Logic "A /\ B" type_scope
R5621 Coq.Init.Logic "x = y" type_scope
R5613 Linear.fn_sig
R5623 AST.mksignature
R5640 Coq.Init.Datatypes.Some
R5645 AST.Tint
R5635 Coq.Lists.List.nil
R5704 Coq.Init.Logic "A /\ B" type_scope
R5656 Linear.exec_function
R5676 Locations.init
R5688 Values.Vundef
R5752 Coq.Init.Logic "x = y" type_scope
R5713 Locations.R
R5716 Conventions.loc_result
R5742 Linear.fn_sig
R5459 Globalenvs.init_mem
R5427 Globalenvs.globalenv
R5400 Values.val
R5387 Linear.program
FLineartyping
R234 Coq.ZArith.BinInt.Z
R258 Coq.ZArith.BinInt.Z
R286 Coq.ZArith.BinInt.Z
R316 Coq.ZArith.BinInt.Z
R337 Coq.ZArith.BinInt.Z
R420 Linear.function
R475 Coq.Lists.List.list
R480 Locations.mreg
R507 Linear.Lgetstack
R526 Coq.Lists.List "x :: y" list_scope
R529 Coq.Lists.List.nil
R537 Linear.Lsetstack
R556 Coq.Lists.List "x :: y" list_scope
R559 Coq.Lists.List.nil
R567 Linear.Lop
R590 Coq.Lists.List "x :: y" list_scope
R602 Linear.Lload
R635 Coq.Lists.List "x :: y" list_scope
R647 Linear.Lstore
R681 Coq.Lists.List "x :: y" list_scope
R693 Linear.Lcall
R704 Coq.Init.Datatypes.inl
R718 Coq.Lists.List "x :: y" list_scope
R721 Coq.Lists.List.nil
R729 Linear.Lcall
R740 Coq.Init.Datatypes.inr
R750 Coq.Lists.List.nil
R758 Linear.Llabel
R772 Coq.Lists.List.nil
R780 Linear.Lgoto
R793 Coq.Lists.List.nil
R801 Linear.Lcond
R833 Linear.Lreturn
R844 Coq.Lists.List.nil
R460 Linear.instruction
R901 Coq.Lists.List.list
R906 Locations.slot
R933 Linear.Lgetstack
R952 Coq.Lists.List "x :: y" list_scope
R955 Coq.Lists.List.nil
R963 Linear.Lsetstack
R982 Coq.Lists.List "x :: y" list_scope
R985 Coq.Lists.List.nil
R998 Coq.Lists.List.nil
R886 Linear.instruction
R1073 Coq.ZArith.BinInt.Z
R1080 Coq.Lists.List.fold_left
R1107 Coq.ZArith.Zmin.Zmax
R1063 Coq.Lists.List.list
R1056 Coq.ZArith.BinInt.Z
R1184 Coq.ZArith.BinInt.Z
R1191 Lineartyping.max_over_list
R1225 Linear.fn_code
R1205 Linear.instruction
R1179 Coq.ZArith.BinInt.Z
R1164 Linear.instruction
R1307 Coq.ZArith.BinInt.Z
R1314 Lineartyping.max_over_list
R1339 Lineartyping.regs_of_instr
R1328 Locations.mreg
R1292 Linear.instruction
R1285 Coq.ZArith.BinInt.Z
R1277 Locations.mreg
R1430 Coq.ZArith.BinInt.Z
R1437 Lineartyping.max_over_list
R1462 Lineartyping.slots_of_instr
R1451 Locations.slot
R1415 Linear.instruction
R1408 Coq.ZArith.BinInt.Z
R1400 Locations.slot
R1536 Coq.ZArith.BinInt.Z
R1543 Lineartyping.max_over_instrs
R1560 Lineartyping.max_over_regs_of_instr
R1531 Coq.ZArith.BinInt.Z
R1523 Locations.mreg
R1646 Coq.ZArith.BinInt.Z
R1653 Lineartyping.max_over_instrs
R1670 Lineartyping.max_over_slots_of_instr
R1641 Coq.ZArith.BinInt.Z
R1633 Locations.slot
R1744 Coq.ZArith.BinInt "x + y" Z_scope
R1746 Conventions.index_int_callee_save
R1733 Locations.mreg
R1816 Coq.ZArith.BinInt "x + y" Z_scope
R1818 Conventions.index_float_callee_save
R1805 Locations.mreg
R1895 Locations.Local
R1905 AST.Tint
R1915 Coq.ZArith.BinInt "x + y" Z_scope
R1871 Locations.slot
R1987 Locations.Local
R1997 AST.Tfloat
R2009 Coq.ZArith.BinInt "x + y" Z_scope
R1963 Locations.slot
R2083 Locations.Outgoing
R2106 Coq.ZArith.BinInt "x + y" Z_scope
R2108 Locations.typesize
R2059 Locations.slot
R2196 Linear.Lcall
R2211 Conventions.size_arguments
R2165 Linear.instruction
R2277 Lineartyping.mkbounds
R2465 Coq.ZArith.Zmin.Zmax
R2483 Coq.ZArith.Zmin.Zmax
R2538 Lineartyping.max_over_slots_of_funct
R2562 Lineartyping.outgoing_slot
R2489 Lineartyping.max_over_instrs
R2505 Lineartyping.outgoing_space
R2418 Lineartyping.max_over_regs_of_funct
R2441 Lineartyping.float_callee_save
R2373 Lineartyping.max_over_regs_of_funct
R2396 Lineartyping.int_callee_save
R2331 Lineartyping.max_over_slots_of_funct
R2355 Lineartyping.float_local
R2291 Lineartyping.max_over_slots_of_funct
R2315 Lineartyping.int_local
R2677 Coq.ZArith.BinInt "x >= y" Z_scope
R2654 Lineartyping.max_over_list
R2643 Coq.Lists.List.list
R2636 Coq.ZArith.BinInt.Z
R2798 Coq.ZArith.BinInt "x >= y" Z_scope
R2755 Coq.Lists.List.fold_left
R2777 Coq.ZArith.Zmin.Zmax
R2798 Coq.ZArith.BinInt "x >= y" Z_scope
R2755 Coq.Lists.List.fold_left
R2777 Coq.ZArith.Zmin.Zmax
R2866 Coq.ZArith.Zmin.Zmax
R2850 Coq.ZArith.Zorder.Zge_trans
R2866 Coq.ZArith.Zmin.Zmax
R2850 Coq.ZArith.Zorder.Zge_trans
R2899 Coq.ZArith.Zorder.Zle_ge
R2899 Coq.ZArith.Zorder.Zle_ge
R2913 Coq.ZArith.Zmin.Zmax1
R2913 Coq.ZArith.Zmin.Zmax1
R3024 Coq.ZArith.BinInt "x >= y" Z_scope
R2995 Lineartyping.max_over_slots_of_funct
R2991 Coq.ZArith.BinInt.Z
R2983 Locations.slot
R3111 Lineartyping.max_over_list_pos
R3111 Lineartyping.max_over_list_pos
R3226 Coq.ZArith.BinInt "x >= y" Z_scope
R3198 Lineartyping.max_over_regs_of_funct
R3194 Coq.ZArith.BinInt.Z
R3186 Locations.mreg
R3312 Lineartyping.max_over_list_pos
R3312 Lineartyping.max_over_list_pos
R3398 Coq.ZArith.BinInt "x >= y" Z_scope
R3366 Lineartyping.bound_int_local
R3382 Lineartyping.function_bounds
R3426 Lineartyping.max_over_slots_of_funct_pos
R3426 Lineartyping.max_over_slots_of_funct_pos
R3526 Coq.ZArith.BinInt "x >= y" Z_scope
R3492 Lineartyping.bound_float_local
R3510 Lineartyping.function_bounds
R3554 Lineartyping.max_over_slots_of_funct_pos
R3554 Lineartyping.max_over_slots_of_funct_pos
R3662 Coq.ZArith.BinInt "x >= y" Z_scope
R3624 Lineartyping.bound_int_callee_save
R3646 Lineartyping.function_bounds
R3690 Lineartyping.max_over_regs_of_funct_pos
R3690 Lineartyping.max_over_regs_of_funct_pos
R3801 Coq.ZArith.BinInt "x >= y" Z_scope
R3761 Lineartyping.bound_float_callee_save
R3785 Lineartyping.function_bounds
R3829 Lineartyping.max_over_regs_of_funct_pos
R3829 Lineartyping.max_over_regs_of_funct_pos
R3922 Coq.ZArith.BinInt "x >= y" Z_scope
R3891 Lineartyping.bound_outgoing
R3906 Lineartyping.function_bounds
R3950 Coq.ZArith.Zorder.Zle_ge
R3950 Coq.ZArith.Zorder.Zle_ge
R3964 Coqlib.Zmax_bound_l
R3964 Coqlib.Zmax_bound_l
R4039 Linear.function
R4058 Lineartyping.function_bounds
R4127 Locations.mreg_type
R4148 AST.Tint
R4180 Coq.ZArith.BinInt "x < y" Z_scope
R4156 Conventions.index_int_callee_save
R4182 Lineartyping.bound_int_callee_save
R4210 AST.Tfloat
R4246 Coq.ZArith.BinInt "x < y" Z_scope
R4220 Conventions.index_float_callee_save
R4248 Lineartyping.bound_float_callee_save
R4110 Locations.mreg
R4338 Locations.Local
R4348 AST.Tint
R4358 Coq.ZArith.BinInt "x <= y < z" Z_scope
R4367 Lineartyping.bound_int_local
R4389 Locations.Local
R4399 AST.Tfloat
R4411 Coq.ZArith.BinInt "x <= y < z" Z_scope
R4420 Lineartyping.bound_float_local
R4444 Locations.Outgoing
R4472 Coq.Init.Logic "A /\ B" type_scope
R4465 Coq.ZArith.BinInt "x <= y" Z_scope
R4493 Coq.ZArith.BinInt "x <= y" Z_scope
R4479 Coq.ZArith.BinInt "x + y" Z_scope
R4481 Locations.typesize
R4496 Lineartyping.bound_outgoing
R4517 Locations.Incoming
R4545 Coq.Init.Logic "A /\ B" type_scope
R4538 Coq.ZArith.BinInt "x <= y" Z_scope
R4566 Coq.ZArith.BinInt "x <= y" Z_scope
R4552 Coq.ZArith.BinInt "x + y" Z_scope
R4554 Locations.typesize
R4569 Conventions.size_arguments
R4591 Linear.fn_sig
R4310 Locations.slot
R4628 Linear.instruction
R4780 Linear.Lgetstack
R4746 Lineartyping.mreg_bounded
R4728 Lineartyping.slot_bounded
R4705 Coq.Init.Logic "x = y" type_scope
R4693 Locations.slot_type
R4707 Locations.mreg_type
R4966 Linear.Lsetstack
R4932 Lineartyping.slot_bounded
R4909 Coq.Init.Logic "x = y" type_scope
R4897 Locations.slot_type
R4911 Locations.mreg_type
R4850 Locations.Incoming
R4866 Coq.Init.Logic.False
R4879 Coq.Init.Logic.True
R5092 Linear.Lop
R5106 Coq.Lists.List "x :: y" list_scope
R5109 Coq.Lists.List.nil
R5096 Op.Omove
R5058 Lineartyping.mreg_bounded
R5035 Coq.Init.Logic "x = y" type_scope
R5022 Locations.mreg_type
R5037 Locations.mreg_type
R5190 Linear.Lop
R5201 Coq.Lists.List.nil
R5194 Op.Oundef
R5156 Lineartyping.mreg_bounded
R5398 Linear.Lop
R5362 Lineartyping.mreg_bounded
R5330 Coq.Init.Logic "x = y" type_scope
R5289 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R5290 Coq.Lists.List.map
R5299 Locations.mreg_type
R5315 Locations.mreg_type
R5332 Op.type_of_operation
R5270 Coq.Init.Logic "x <> y" type_scope
R5273 Op.Oundef
R5255 Coq.Init.Logic "x <> y" type_scope
R5258 Op.Omove
R5609 Linear.Lload
R5573 Lineartyping.mreg_bounded
R5542 Coq.Init.Logic "x = y" type_scope
R5528 Locations.mreg_type
R5544 Op.type_of_chunk
R5493 Coq.Init.Logic "x = y" type_scope
R5469 Coq.Lists.List.map
R5478 Locations.mreg_type
R5495 Op.type_of_addressing
R5805 Linear.Lstore
R5764 Coq.Init.Logic "x = y" type_scope
R5750 Locations.mreg_type
R5766 Op.type_of_chunk
R5715 Coq.Init.Logic "x = y" type_scope
R5691 Coq.Lists.List.map
R5700 Locations.mreg_type
R5717 Op.type_of_addressing
R6001 Linear.Lcall
R5938 Coq.Init.Datatypes.inl
R5959 Coq.Init.Logic "x = y" type_scope
R5947 Locations.mreg_type
R5961 AST.Tint
R5973 Coq.Init.Logic.True
R5894 Coq.ZArith.BinInt "x <= y" Z_scope
R5875 Conventions.size_arguments
R5897 Lineartyping.bound_outgoing
R6065 Linear.Llabel
R6125 Linear.Lgoto
R6252 Linear.Lcond
R6208 Coq.Init.Logic "x = y" type_scope
R6184 Coq.Lists.List.map
R6193 Locations.mreg_type
R6210 Op.type_of_condition
R6306 Linear.Lreturn
R6419 Lineartyping.wt_instr
R6395 Coq.Lists.List.In
R6407 Linear.fn_code
R6359 Linear.function
R6525 Lineartyping.wt_function
R6497 Coq.Lists.List.In
R6508 AST.prog_funct
R6500 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R6464 Linear.program
FLinearize
R366 Coq.Init.Datatypes.bool
R347 Linear.code
R336 Linear.label
R405 Coq.Lists.List "x :: y" list_scope
R393 Linear.Llabel
R417 Coqlib.peq
R435 Coq.Init.Datatypes.true
R473 Coq.Init.Datatypes.false
R347 Linear.code
R336 Linear.label
R679 Linear.code
R660 Linear.code
R649 LTL.block
R706 LTL.Bgetstack
R745 Coq.Lists.List "x :: y" list_scope
R731 Linear.Lgetstack
R772 LTL.Bsetstack
R811 Coq.Lists.List "x :: y" list_scope
R797 Linear.Lsetstack
R838 LTL.Bop
R881 Coq.Lists.List "x :: y" list_scope
R865 Linear.Lop
R908 LTL.Bload
R971 Coq.Lists.List "x :: y" list_scope
R945 Linear.Lload
R998 LTL.Bstore
R1063 Coq.Lists.List "x :: y" list_scope
R1036 Linear.Lstore
R1090 LTL.Bcall
R1129 Coq.Lists.List "x :: y" list_scope
R1115 Linear.Lcall
R1156 LTL.Bgoto
R1181 Coq.Lists.List "x :: y" list_scope
R1173 Linear.Lgoto
R1190 LTL.Bcond
R1224 Linearize.starts_with
R1347 Coq.Lists.List "x :: y" list_scope
R1328 Linear.Lcond
R1359 Coq.Lists.List "x :: y" list_scope
R1350 Linear.Lgoto
R1292 Coq.Lists.List "x :: y" list_scope
R1254 Linear.Lcond
R1261 Op.negate_condition
R1304 Coq.Lists.List "x :: y" list_scope
R1295 Linear.Lgoto
R1368 LTL.Breturn
R1393 Coq.Lists.List "x :: y" list_scope
R1385 Linear.Lreturn
R660 Linear.code
R649 LTL.block
R1585 Linear.code
R1534 Coq.Lists.List.list
R1539 LTL.node
R1513 LTL.function
R1615 Coq.Lists.List.nil
R1622 Coq.Lists.List.nil
R1633 Coq.Lists.List "x :: y" list_scope
R1670 Maps "a ! b"
R1658 LTL.fn_code
R1687 Coq.Init.Datatypes.None
R1724 Coq.Init.Datatypes.Some
R1744 Coq.Lists.List "x :: y" list_scope
R1734 Linear.Llabel
R1747 Linearize.linearize_block
R1534 Coq.Lists.List.list
R1539 LTL.node
R1513 LTL.function
R1925 Coq.Init.Datatypes.option
R1933 Maps.t
R1940 Coq.Init.Datatypes.bool
R1951 Linearize.fixpoint
R2063 Coq.Lists.List "x :: y" list_scope
R2037 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R2041 LTL.fn_entrypoint
R2057 Coq.Init.Datatypes.true
R2066 Coq.Lists.List.nil
R1987 Coq.NArith.BinPos.Psucc
R1996 LTL.fn_entrypoint
R1968 LTL.successors
R1909 LTL.function
R2114 Maps.t
R2121 Coq.Init.Datatypes.bool
R2137 Linearize.reachable_aux
R2164 Coq.Init.Datatypes.None
R2172 Maps.init
R2182 Coq.Init.Datatypes.true
R2191 Coq.Init.Datatypes.Some
R2098 LTL.function
R2325 Coq.Lists.List.list
R2330 LTL.node
R2370 Coqlib.positive_rec
R2467 Coq.NArith.BinPos.Psucc
R2476 LTL.fn_entrypoint
R2428 Maps "a !! b"
R2441 Coq.Lists.List "x :: y" list_scope
R2395 Coq.Lists.List.nil
R2384 Coq.Lists.List.list
R2389 LTL.node
R2353 Linearize.reachable
R2309 LTL.function
R2544 Linear.function
R2565 Linear.mkfunction
R2625 Linearize.linearize_body
R2643 Linearize.enumerate
R2600 LTL.fn_stacksize
R2581 LTL.fn_sig
R2528 LTL.function
R2756 Linear.code
R2737 Linear.code
R2783 Coq.Lists.List.nil
R2790 Coq.Lists.List.nil
R2808 Coq.Lists.List "x :: y" list_scope
R2798 Linear.Lgoto
R2827 Linearize.starts_with
R2894 Coq.Lists.List "x :: y" list_scope
R2884 Linear.Lgoto
R2919 Coq.Lists.List "x :: y" list_scope
R2936 Coq.Lists.List "x :: y" list_scope
R2737 Linear.code
R3014 Linear.function
R3035 Linear.mkfunction
R3087 Linearize.cleanup_code
R3103 Linear.fn_code
R3066 Linear.fn_stacksize
R3051 Linear.fn_sig
R2995 Linear.function
R3547 Linear.function
R3568 Linearize.cleanup_function
R3586 Linearize.linearize_function
R3531 LTL.function
R3655 Linear.program
R3675 AST.transform_program
R3693 Linearize.transf_function
R3640 LTL.program
FLinearizeproof
R337 LTL.program
R363 Linearize.transf_program
R395 Globalenvs.globalenv
R427 Globalenvs.globalenv
R551 Coq.Init.Logic "x = y" type_scope
R529 Globalenvs.find_funct
R553 Coq.Init.Datatypes.Some
R559 Linearize.transf_function
R515 Coq.Init.Logic "x = y" type_scope
R494 Globalenvs.find_funct
R517 Coq.Init.Datatypes.Some
R587 Globalenvs.find_funct_transf
R614 Linearize.transf_function
R750 Coq.Init.Logic "x = y" type_scope
R724 Globalenvs.find_funct_ptr
R752 Coq.Init.Datatypes.Some
R758 Linearize.transf_function
R710 Coq.Init.Logic "x = y" type_scope
R685 Globalenvs.find_funct_ptr
R712 Coq.Init.Datatypes.Some
R786 Globalenvs.find_funct_ptr_transf
R817 Linearize.transf_function
R905 Coq.Init.Logic "x = y" type_scope
R881 Globalenvs.find_symbol
R907 Globalenvs.find_symbol
R939 Globalenvs.find_symbol_transf
R967 Linearize.transf_function
R1109 Coq.Init.Logic "x = y" type_scope
R1086 Maps "a !! b"
R1093 LTL.fn_entrypoint
R1075 Linearize.reachable
R1111 Coq.Init.Datatypes.true
R1162 Linearize.reachable_aux
R1162 Linearize.reachable_aux
R1230 Lattice.ge
R1269 Coq.Init.Datatypes.true
R1247 Maps "a !! b"
R1253 LTL.fn_entrypoint
R1230 Lattice.ge
R1269 Coq.Init.Datatypes.true
R1247 Maps "a !! b"
R1253 LTL.fn_entrypoint
R1285 Linearize.fixpoint_entry
R1285 Linearize.fixpoint_entry
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R1382 Maps.gi
R1382 Maps.gi
R1557 Coq.Init.Logic "x = y" type_scope
R1550 Maps "a !! b"
R1539 Linearize.reachable
R1559 Coq.Init.Datatypes.true
R1526 Coq.Init.Logic "x = y" type_scope
R1520 Maps "a !! b"
R1509 Linearize.reachable
R1528 Coq.Init.Datatypes.true
R1478 Coq.Lists.List.In
R1486 LTL.successors
R1465 Coq.Init.Logic "x <> y" type_scope
R1461 Maps "a ! b"
R1449 LTL.fn_code
R1468 Coq.Init.Datatypes.None
R1611 Linearize.reachable_aux
R1611 Linearize.reachable_aux
R1684 Lattice.ge
R1712 Maps "a !! b"
R1701 Maps "a !! b"
R1684 Lattice.ge
R1712 Maps "a !! b"
R1701 Maps "a !! b"
R1771 Maps "a !! b"
R1734 Maps "a !! b"
R1771 Maps "a !! b"
R1734 Maps "a !! b"
R1788 Linearize.fixpoint_solution
R1788 Linearize.fixpoint_solution
R1828 LTL.fn_code_wf
R1828 LTL.fn_code_wf
R1935 Maps.gi
R1935 Maps.gi
R2144 Coq.Init.Logic "x = y" type_scope
R2137 Maps "a !! b"
R2126 Linearize.reachable
R2146 Coq.Init.Datatypes.true
R2113 Coq.Init.Logic "x = y" type_scope
R2107 Maps "a !! b"
R2096 Linearize.reachable
R2115 Coq.Init.Datatypes.true
R2048 LTL.exec_block
R2073 LTL.Cont
R2034 Coq.Init.Logic "x = y" type_scope
R2030 Maps "a ! b"
R2018 LTL.fn_code
R2036 Coq.Init.Datatypes.Some
R2175 Linearizeproof.reachable_successors
R2175 Linearizeproof.reachable_successors
R2234 LTL.successors_correct
R2234 LTL.successors_correct
R2486 Coq.Init.Logic "x = y" type_scope
R2479 Maps "a !! b"
R2468 Linearize.reachable
R2488 Coq.Init.Datatypes.true
R2455 Coq.Init.Logic "x = y" type_scope
R2449 Maps "a !! b"
R2438 Linearize.reachable
R2457 Coq.Init.Datatypes.true
R2421 Coq.Init.Logic "x = y" type_scope
R2423 LTL.Cont
R2394 Coq.Init.Logic "x = y" type_scope
R2399 LTL.fn_code
R2330 LTL.exec_blocks
R2547 Linearizeproof.reachable_correct_1
R2547 Linearizeproof.reachable_correct_1
R2998 Coq.NArith.BinPos.Psucc
R2938 Coq.NArith.BinPos.positive
R3052 Coq.Init.Wf.well_founded_ind
R3069 Coqlib.Plt_wf
R3052 Coq.Init.Wf.well_founded_ind
R3069 Coqlib.Plt_wf
R3097 Coq.NArith.BinPos.Psucc_pred
R3097 Coq.NArith.BinPos.Psucc_pred
R3157 Coq.NArith.BinPos.Ppred
R3157 Coq.NArith.BinPos.Ppred
R3232 Coqlib.Plt_succ
R3232 Coqlib.Plt_succ
R3356 Coq.Lists.List.In
R3363 Linearize.enumerate
R3344 Coq.Init.Logic "x = y" type_scope
R3338 Maps "a !! b"
R3327 Linearize.reachable
R3346 Coq.Init.Datatypes.true
R3312 Coq.Init.Logic "x = y" type_scope
R3308 Maps "a ! b"
R3296 LTL.fn_code
R3314 Coq.Init.Datatypes.Some
R3490 Coq.Lists.List.In
R3496 Linearize.enumerate
R3476 Coq.Init.Logic "x = y" type_scope
R3471 Maps "a !! b"
R3460 Linearize.reachable
R3478 Coq.Init.Datatypes.true
R3420 Coqlib.Plt
R3427 Coq.NArith.BinPos.Psucc
R3436 LTL.fn_entrypoint
R3490 Coq.Lists.List.In
R3496 Linearize.enumerate
R3476 Coq.Init.Logic "x = y" type_scope
R3471 Maps "a !! b"
R3460 Linearize.reachable
R3478 Coq.Init.Datatypes.true
R3420 Coqlib.Plt
R3427 Coq.NArith.BinPos.Psucc
R3436 LTL.fn_entrypoint
R3540 Coq.NArith.BinPos.Psucc
R3547 LTL.fn_entrypoint
R3540 Coq.NArith.BinPos.Psucc
R3547 LTL.fn_entrypoint
R3574 Linearizeproof.positive_ind
R3574 Linearizeproof.positive_ind
R3659 Coqlib.positive_rec_succ
R3659 Coqlib.positive_rec_succ
R3684 Coqlib.Plt_succ_inv
R3684 Coqlib.Plt_succ_inv
R3732 Maps "a !! b"
R3721 Linearize.reachable
R3732 Maps "a !! b"
R3721 Linearize.reachable
R3744 Coq.Lists.List.in_cons
R3744 Coq.Lists.List.in_cons
R3794 Coq.Lists.List.in_eq
R3794 Coq.Lists.List.in_eq
R3810 LTL.fn_code_wf
R3810 LTL.fn_code_wf
R3898 Coq.Init.Logic "'exists' x , p" type_scope
R3920 Coq.Init.Logic "x = y" type_scope
R3908 Linearize.enumerate
R3944 Coq.Lists.List "x :: y" list_scope
R3925 LTL.fn_entrypoint
R3992 Coqlib.positive_rec_succ
R3992 Coqlib.positive_rec_succ
R4022 Linearizeproof.reachable_entrypoint
R4022 Linearizeproof.reachable_entrypoint
R4054 Coqlib.positive_rec
R4195 LTL.fn_entrypoint
R4152 Maps "a !! b"
R4141 Linearize.reachable
R4168 Coq.Lists.List "x :: y" list_scope
R4117 Coq.Lists.List.list
R4122 LTL.node
R4098 Coq.NArith.BinPos.positive
R4079 Coq.Lists.List.nil
R4068 Coq.Lists.List.list
R4073 LTL.node
R4054 Coqlib.positive_rec
R4195 LTL.fn_entrypoint
R4152 Maps "a !! b"
R4141 Linearize.reachable
R4168 Coq.Lists.List "x :: y" list_scope
R4117 Coq.Lists.List.list
R4122 LTL.node
R4098 Coq.NArith.BinPos.positive
R4079 Coq.Lists.List.nil
R4068 Coq.Lists.List.list
R4073 LTL.node
R4266 Coqlib.list_norepet
R4280 Linearize.enumerate
R4340 Coq.NArith.BinPos.Psucc
R4347 LTL.fn_entrypoint
R4340 Coq.NArith.BinPos.Psucc
R4347 LTL.fn_entrypoint
R4374 Linearizeproof.positive_ind
R4374 Linearizeproof.positive_ind
R4400 Coqlib.positive_rec_base
R4400 Coqlib.positive_rec_base
R4450 Coqlib.positive_rec_succ
R4450 Coqlib.positive_rec_succ
R4488 Maps "a !! b"
R4477 Linearize.reachable
R4488 Maps "a !! b"
R4477 Linearize.reachable
R4697 Coqlib.Plt
R4540 Coq.Lists.List.In
R4546 Coqlib.positive_rec
R4650 Maps "a !! b"
R4639 Linearize.reachable
R4666 Coq.Lists.List "x :: y" list_scope
R4615 Coq.Lists.List.list
R4620 LTL.node
R4596 Coq.NArith.BinPos.positive
R4576 Coq.Lists.List.nil
R4565 Coq.Lists.List.list
R4570 LTL.node
R4697 Coqlib.Plt
R4540 Coq.Lists.List.In
R4546 Coqlib.positive_rec
R4650 Maps "a !! b"
R4639 Linearize.reachable
R4666 Coq.Lists.List "x :: y" list_scope
R4615 Coq.Lists.List.list
R4620 LTL.node
R4596 Coq.NArith.BinPos.positive
R4576 Coq.Lists.List.nil
R4565 Coq.Lists.List.list
R4570 LTL.node
R4728 Linearizeproof.positive_ind
R4728 Linearizeproof.positive_ind
R4755 Coqlib.positive_rec_base
R4755 Coqlib.positive_rec_base
R4819 Coqlib.positive_rec_succ
R4819 Coqlib.positive_rec_succ
R4860 Maps "a !! b"
R4849 Linearize.reachable
R4860 Maps "a !! b"
R4849 Linearize.reachable
R4913 Coqlib.Plt_succ
R4913 Coqlib.Plt_succ
R4933 Coqlib.Plt_trans_succ
R4933 Coqlib.Plt_trans_succ
R4973 Coqlib.Plt_trans_succ
R4973 Coqlib.Plt_trans_succ
R5038 Coqlib.Plt_strict
R5038 Coqlib.Plt_strict
R6125 Linear.code
R6160 Coq.Lists.List.nil
R6167 Coq.Init.Logic.True
R6187 Coq.Lists.List "x :: y" list_scope
R6176 Linear.Llabel
R6216 Coq.Init.Logic "A /\ B" type_scope
R6195 Coq.Init.Logic "~ x" type_scope
R6197 Coq.Lists.List.In
R6201 Linear.Llabel
R6241 Coq.Lists.List "x :: y" list_scope
R6125 Linear.code
R6300 Linear.code
R6292 Linear.code
R6433 Coq.Lists.List "x :: y" list_scope
R6502 Coq.Lists.List.In
R6478 Linearizeproof.is_tail
R6489 Coq.Lists.List "x :: y" list_scope
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R6672 Linearizeproof.is_tail
R6648 Linearizeproof.is_tail
R6659 Coq.Lists.List "x :: y" list_scope
R6928 Coq.Init.Logic "x = y" type_scope
R6910 Coq.Init.Logic "x = y" type_scope
R6892 Linear.find_label
R6912 Coq.Init.Datatypes.Some
R6870 Linearizeproof.unique_labels
R6835 Linearizeproof.is_tail
R6855 Coq.Lists.List "x :: y" list_scope
R6844 Linear.Llabel
R7032 Linear.is_label_correct
R7032 Linear.is_label_correct
R7063 Linear.is_label
R7063 Linear.is_label
R7176 Linearizeproof.is_tail_in
R7176 Linearizeproof.is_tail_in
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R7460 Linear.exec_instrs
R7529 Linearize.cleanup_code
R7482 Linearize.cleanup_code
R7445 Coq.Init.Logic "x = y" type_scope
R7427 Linear.find_label
R7447 Coq.Init.Datatypes.Some
R7415 Coq.Init.Logic "x = y" type_scope
R7396 Linearize.starts_with
R7417 Coq.Init.Datatypes.true
R7374 Linearizeproof.unique_labels
R7355 Linearizeproof.is_tail
R7614 Linearize.starts_with
R7614 Linearize.starts_with
R7700 Linearize.cleanup_code
R7683 Linear.exec_trans
R7700 Linearize.cleanup_code
R7683 Linear.exec_trans
R7774 Coqlib.peq
R7774 Coqlib.peq
R7838 Linearizeproof.find_label_unique
R7838 Linearizeproof.find_label_unique
R7910 Linearizeproof.is_tail_cons_left
R7910 Linearizeproof.is_tail_cons_left
R8058 Coq.Init.Logic "x = y" type_scope
R8026 Linear.find_label
R8042 Linearize.cleanup_code
R8060 Coq.Init.Datatypes.Some
R8066 Linearize.cleanup_code
R8011 Coq.Init.Logic "x = y" type_scope
R7994 Linear.find_label
R8013 Coq.Init.Datatypes.Some
R8153 Linear.is_label_correct
R8153 Linear.is_label_correct
R8187 Linear.find_label
R8187 Linear.find_label
R8205 Linear.is_label
R8205 Linear.is_label
R8297 Coqlib.peq_true
R8297 Coqlib.peq_true
R8359 Coqlib.peq_false
R8359 Coqlib.peq_false
R8399 Linearize.starts_with
R8399 Linearize.starts_with
R8613 Linear.exec_instrs
R8726 Linearize.cleanup_code
R8678 Linearize.cleanup_code
R8630 Linearize.cleanup_function
R8582 Linearizeproof.unique_labels
R8599 Linear.fn_code
R8554 Linearizeproof.is_tail
R8568 Linear.fn_code
R8509 Linear.exec_instr
R8801 Linear.exec_one
R8801 Linear.exec_one
R8801 Linear.exec_one
R8801 Linear.exec_one
R8801 Linear.exec_one
R8801 Linear.exec_one
R8801 Linear.exec_one
R8801 Linear.exec_one
R8801 Linear.exec_one
R8801 Linear.exec_one
R8801 Linear.exec_one
R8862 Linearize.starts_with
R8862 Linearize.starts_with
R8901 Linearizeproof.starts_with_correct
R8901 Linearizeproof.starts_with_correct
R8938 Linearizeproof.is_tail_cons_left
R8938 Linearizeproof.is_tail_cons_left
R9036 Linearizeproof.find_label_cleanup_code
R9036 Linearizeproof.find_label_cleanup_code
R9108 Linear.exec_Lcond_true
R9108 Linear.exec_Lcond_true
R9174 Linearizeproof.find_label_cleanup_code
R9174 Linearizeproof.find_label_cleanup_code
R9250 Linear.exec_Lcond_false
R9250 Linear.exec_Lcond_false
R9360 Linearizeproof.is_tail
R9347 Coq.Init.Logic "x = y" type_scope
R9329 Linear.find_label
R9349 Coq.Init.Datatypes.Some
R9437 Linear.is_label
R9437 Linear.is_label
R9688 Linearizeproof.is_tail
R9702 Linear.fn_code
R9662 Linearizeproof.is_tail
R9676 Linear.fn_code
R9617 Linear.exec_instr
R9756 Linearizeproof.is_tail_cons_left
R9756 Linearizeproof.is_tail_cons_left
R9756 Linearizeproof.is_tail_cons_left
R9756 Linearizeproof.is_tail_cons_left
R9756 Linearizeproof.is_tail_cons_left
R9756 Linearizeproof.is_tail_cons_left
R9756 Linearizeproof.is_tail_cons_left
R9756 Linearizeproof.is_tail_cons_left
R9756 Linearizeproof.is_tail_cons_left
R9756 Linearizeproof.is_tail_cons_left
R9756 Linearizeproof.is_tail_cons_left
R9798 Linearizeproof.is_tail_find_label
R9798 Linearizeproof.is_tail_find_label
R9834 Linearizeproof.is_tail_find_label
R9834 Linearizeproof.is_tail_find_label
R10003 Linearizeproof.is_tail
R10017 Linear.fn_code
R9977 Linearizeproof.is_tail
R9991 Linear.fn_code
R9931 Linear.exec_instrs
R10074 Linearizeproof.is_tail_exec_instr
R10074 Linearizeproof.is_tail_exec_instr
R10287 Linear.exec_instrs
R10400 Linearize.cleanup_code
R10352 Linearize.cleanup_code
R10304 Linearize.cleanup_function
R10256 Linearizeproof.unique_labels
R10273 Linear.fn_code
R10228 Linearizeproof.is_tail
R10242 Linear.fn_code
R10182 Linear.exec_instrs
R10470 Linear.exec_refl
R10470 Linear.exec_refl
R10490 Linearizeproof.cleanup_code_correct_1
R10490 Linearizeproof.cleanup_code_correct_1
R10546 Linearize.cleanup_code
R10529 Linear.exec_trans
R10546 Linearize.cleanup_code
R10529 Linear.exec_trans
R10619 Linearizeproof.is_tail_exec_instrs
R10619 Linearizeproof.is_tail_exec_instrs
R10783 Linear.exec_function
R10802 Linearize.cleanup_function
R10752 Linearizeproof.unique_labels
R10769 Linear.fn_code
R10713 Linear.exec_function
R10881 Linearizeproof.cleanup_code_correct_2
R10924 Linearizeproof.is_tail_refl
R10881 Linearizeproof.cleanup_code_correct_2
R10924 Linearizeproof.is_tail_refl
R11130 Coq.Init.Logic "x = y" type_scope
R11093 Linear.find_label
R11109 Linearize.linearize_block
R11132 Linear.find_label
R11193 Linearize.starts_with
R11193 Linearize.starts_with
R11329 Coq.Init.Logic "'exists' x , p" type_scope
R11379 Coq.Init.Logic "x = y" type_scope
R11341 Linear.find_label
R11356 Linearize.linearize_body
R11381 Coq.Init.Datatypes.Some
R11387 Linearize.linearize_block
R11315 Coq.Init.Logic "x = y" type_scope
R11311 Maps "a ! b"
R11299 LTL.fn_code
R11317 Coq.Init.Datatypes.Some
R11280 Coq.Lists.List.In
R11460 Coqlib.peq
R11460 Coqlib.peq
R11497 Linearize.linearize_body
R11497 Linearize.linearize_body
R11557 Coqlib.peq_true
R11557 Coqlib.peq_true
R11583 Coq.Lists.List.In
R11583 Coq.Lists.List.In
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R11700 Maps "a ! b"
R11687 LTL.fn_code
R11700 Maps "a ! b"
R11687 LTL.fn_code
R11723 Coqlib.peq_false
R11723 Coqlib.peq_false
R11742 Linearizeproof.find_label_lin_block
R11742 Linearizeproof.find_label_lin_block
R11894 Coq.Init.Logic "'exists' x , p" type_scope
R11953 Coq.Init.Logic "x = y" type_scope
R11906 Linear.find_label
R11921 Linear.fn_code
R11930 Linearize.linearize_function
R11955 Coq.Init.Datatypes.Some
R11961 Linearize.linearize_block
R11882 Coq.Init.Logic "x = y" type_scope
R11876 Maps "a !! b"
R11865 Linearize.reachable
R11884 Coq.Init.Datatypes.true
R11850 Coq.Init.Logic "x = y" type_scope
R11846 Maps "a ! b"
R11834 LTL.fn_code
R11852 Coq.Init.Datatypes.Some
R12040 Linearizeproof.find_label_lin_rec
R12040 Linearizeproof.find_label_lin_rec
R12069 Linearizeproof.enumerate_complete
R12069 Linearizeproof.enumerate_complete
R12244 Coq.Lists.List.In
R12248 Linear.Llabel
R12203 Coq.Lists.List.In
R12220 Linearize.linearize_block
R12207 Linear.Llabel
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R12328 Linearize.starts_with
R12328 Linearize.starts_with
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R12471 Coq.Lists.List.In
R12428 Coq.Lists.List.In
R12445 Linearize.linearize_body
R12432 Linear.Llabel
R12556 Maps "a ! b"
R12543 LTL.fn_code
R12556 Maps "a ! b"
R12543 LTL.fn_code
R12634 Linearizeproof.label_in_lin_block
R12634 Linearizeproof.label_in_lin_block
R12755 Linearizeproof.unique_labels
R12770 Linearize.linearize_block
R12736 Linearizeproof.unique_labels
R12835 Linearize.starts_with
R12835 Linearize.starts_with
R12943 Linearizeproof.unique_labels
R12958 Linearize.linearize_body
R12920 Coqlib.list_norepet
R13061 Maps "a ! b"
R13048 LTL.fn_code
R13061 Maps "a ! b"
R13048 LTL.fn_code
R13125 Linearizeproof.label_in_lin_rec
R13125 Linearizeproof.label_in_lin_rec
R13159 Linearizeproof.label_in_lin_block
R13159 Linearizeproof.label_in_lin_block
R13200 Linearizeproof.unique_labels_lin_block
R13200 Linearizeproof.unique_labels_lin_block
R13347 Linearizeproof.unique_labels
R13362 Linear.fn_code
R13371 Linearize.linearize_function
R13454 Linearizeproof.unique_labels_lin_rec
R13454 Linearizeproof.unique_labels_lin_rec
R13483 Linearizeproof.enumerate_norepet
R13483 Linearizeproof.enumerate_norepet
R13636 LTL.Cont
R13676 Coq.Init.Logic "A /\ B" type_scope
R13669 Coq.Init.Logic "x = y" type_scope
R13664 Maps "a !! b"
R13653 Linearize.reachable
R13671 Coq.Init.Datatypes.true
R13679 Coq.Init.Logic "'exists' x , p" type_scope
R13707 Coq.Init.Logic "x = y" type_scope
R13704 Maps "a ! b"
R13692 LTL.fn_code
R13709 Coq.Init.Datatypes.Some
R13720 LTL.Return
R13730 Coq.Init.Logic.True
R13603 LTL.outcome
R13583 LTL.function
R13798 Linear.code
R13787 LTL.outcome
R13771 LTL.function
R13888 Coq.Lists.List "x :: y" list_scope
R13880 Linear.Lreturn
R13872 LTL.Return
R14017 LTL.Cont
R13979 Coq.Init.Logic "x = y" type_scope
R13933 Linear.find_label
R13970 Linear.fn_code
R13947 Linearize.linearize_function
R13981 Coq.Init.Datatypes.Some
R14179 Linear.exec_instr
R14285 Linearize.linearize_block
R14238 Linearize.linearize_block
R14195 Linearize.linearize_function
R14148 Mem.mem
R14135 Linear.locset
R14122 LTL.block
R14100 Mem.mem
R14087 Linear.locset
R14074 LTL.block
R14064 Values.val
R14466 Linear.exec_instrs
R14575 Linearize.linearize_block
R14527 Linearize.linearize_block
R14483 Linearize.linearize_function
R14435 Mem.mem
R14422 Linear.locset
R14409 LTL.block
R14387 Mem.mem
R14374 Linear.locset
R14361 LTL.block
R14351 Values.val
R14782 Coq.Init.Logic "'exists' x , p" type_scope
R14914 Coq.Init.Logic "A /\ B" type_scope
R14795 Linear.exec_instrs
R14856 Linearize.linearize_block
R14812 Linearize.linearize_function
R14917 Linearizeproof.cont_for_outcome
R14757 Linearizeproof.valid_outcome
R14727 Mem.mem
R14714 Linear.locset
R14699 LTL.outcome
R14675 Mem.mem
R14662 Linear.locset
R14649 LTL.block
R14640 Values.val
R15262 Coq.Init.Logic "'exists' x , p" type_scope
R15374 Coq.Init.Logic "A /\ B" type_scope
R15275 Linear.exec_instrs
R15292 Linearize.linearize_function
R15377 Linearizeproof.cont_for_outcome
R15237 Linearizeproof.valid_outcome
R15223 Coq.Init.Logic "x = y" type_scope
R15176 Linear.find_label
R15191 Linear.fn_code
R15200 Linearize.linearize_function
R15225 Coq.Init.Datatypes.Some
R15164 Coq.Init.Logic "x = y" type_scope
R15158 Maps "a !! b"
R15147 Linearize.reachable
R15166 Coq.Init.Datatypes.true
R15123 Coq.Init.Logic "x = y" type_scope
R15128 LTL.fn_code
R15091 Mem.mem
R15078 Linear.locset
R15063 LTL.outcome
R15029 Mem.mem
R15016 Linear.locset
R15004 LTL.node
R14994 Values.val
R14979 LTL.code
R15514 Linear.exec_function
R15533 Linearize.transf_function
R15498 Mem.mem
R15485 Linear.locset
R15474 Mem.mem
R15461 Linear.locset
R15441 LTL.function
R16119 Linearizeproof.valid_outcome
R16136 LTL.Cont
R16094 Linearizeproof.valid_outcome
R16082 Coq.Init.Logic "x = y" type_scope
R16076 Maps "a !! b"
R16065 Linearize.reachable
R16084 Coq.Init.Datatypes.true
R16041 Coq.Init.Logic "x = y" type_scope
R16046 LTL.fn_code
R15981 LTL.exec_blocks
R16313 Linearizeproof.reachable_correct_2
R16313 Linearizeproof.reachable_correct_2
R16477 Linearizeproof.exec_function_prop
R16435 LTL.exec_function
R16529 Linearizeproof.exec_function_ind5
R16672 Linearizeproof.exec_function_prop
R16644 Linearizeproof.exec_blocks_prop
R16617 Linearizeproof.exec_block_prop
R16589 Linearizeproof.exec_instrs_prop
R16562 Linearizeproof.exec_instr_prop
R16529 Linearizeproof.exec_function_ind5
R16672 Linearizeproof.exec_function_prop
R16644 Linearizeproof.exec_blocks_prop
R16617 Linearizeproof.exec_block_prop
R16589 Linearizeproof.exec_instrs_prop
R16562 Linearizeproof.exec_instr_prop
R16833 Op.eval_operation_preserved
R16833 Op.eval_operation_preserved
R16867 Linearizeproof.symbols_preserved
R16867 Linearizeproof.symbols_preserved
R16907 Linear.exec_Lload
R16907 Linear.exec_Lload
R16949 Op.eval_addressing_preserved
R16949 Op.eval_addressing_preserved
R16984 Linearizeproof.symbols_preserved
R16984 Linearizeproof.symbols_preserved
R17033 Linear.exec_Lstore
R17033 Linear.exec_Lstore
R17075 Op.eval_addressing_preserved
R17075 Op.eval_addressing_preserved
R17110 Linearizeproof.symbols_preserved
R17110 Linearizeproof.symbols_preserved
R17175 Linearize.transf_function
R17158 Linear.exec_Lcall
R17175 Linearize.transf_function
R17158 Linear.exec_Lcall
R17247 Linearizeproof.functions_translated
R17247 Linearizeproof.functions_translated
R17285 Linearizeproof.symbols_preserved
R17285 Linearizeproof.symbols_preserved
R17314 Globalenvs.find_symbol
R17314 Globalenvs.find_symbol
R17353 Linearizeproof.function_ptr_translated
R17353 Linearizeproof.function_ptr_translated
R17463 Linear.exec_refl
R17463 Linear.exec_refl
R17500 Linear.exec_one
R17500 Linear.exec_one
R17566 Linearize.linearize_block
R17549 Linear.exec_trans
R17566 Linearize.linearize_block
R17549 Linear.exec_trans
R17711 Linearizeproof.find_label_lin
R17711 Linearizeproof.find_label_lin
R17771 Linearize.linearize_block
R17771 Linearize.linearize_block
R17814 Linear.exec_trans
R17814 Linear.exec_trans
R17953 Linearizeproof.find_label_lin
R17953 Linearizeproof.find_label_lin
R18016 Linearize.linearize_block
R18016 Linearize.linearize_block
R18088 Linearize.starts_with
R18088 Linearize.starts_with
R18125 Linear.exec_trans
R18125 Linear.exec_trans
R18158 Linear.exec_trans
R18158 Linear.exec_trans
R18176 Linear.exec_one
R18176 Linear.exec_one
R18192 Linear.exec_Lcond_false
R18192 Linear.exec_Lcond_false
R18231 Coq.Bool.Bool.negb
R18236 Coq.Init.Datatypes.true
R18219 Coq.Init.Datatypes.false
R18231 Coq.Bool.Bool.negb
R18236 Coq.Init.Datatypes.true
R18219 Coq.Init.Datatypes.false
R18249 Op.eval_negate_condition
R18249 Op.eval_negate_condition
R18286 Linear.exec_one
R18286 Linear.exec_one
R18302 Linear.exec_Lgoto
R18302 Linear.exec_Lgoto
R18330 Linear.exec_trans
R18330 Linear.exec_trans
R18362 Linear.exec_one
R18362 Linear.exec_one
R18378 Linear.exec_Lcond_true
R18378 Linear.exec_Lcond_true
R18494 Linearizeproof.find_label_lin
R18494 Linearizeproof.find_label_lin
R18558 Linearize.linearize_block
R18558 Linearize.linearize_block
R18630 Linearize.starts_with
R18630 Linearize.starts_with
R18667 Linear.exec_trans
R18667 Linear.exec_trans
R18699 Linear.exec_one
R18699 Linear.exec_one
R18715 Linear.exec_Lcond_true
R18715 Linear.exec_Lcond_true
R18753 Coq.Bool.Bool.negb
R18758 Coq.Init.Datatypes.false
R18742 Coq.Init.Datatypes.true
R18753 Coq.Bool.Bool.negb
R18758 Coq.Init.Datatypes.false
R18742 Coq.Init.Datatypes.true
R18772 Op.eval_negate_condition
R18772 Op.eval_negate_condition
R18819 Linear.exec_trans
R18819 Linear.exec_trans
R18851 Linear.exec_trans
R18851 Linear.exec_trans
R18869 Linear.exec_one
R18869 Linear.exec_one
R18885 Linear.exec_Lcond_false
R18885 Linear.exec_Lcond_false
R18917 Linear.exec_one
R18917 Linear.exec_one
R18933 Linear.exec_Lgoto
R18933 Linear.exec_Lgoto
R19006 Coq.Lists.List "x :: y" list_scope
R18998 Linear.Lreturn
R19006 Coq.Lists.List "x :: y" list_scope
R18998 Linear.Lreturn
R19097 Linear.exec_refl
R19097 Linear.exec_refl
R19163 Linearizeproof.find_label_lin
R19163 Linearizeproof.find_label_lin
R19220 Coq.Init.Logic "x = y" type_scope
R19222 Linearize.linearize_block
R19220 Coq.Init.Logic "x = y" type_scope
R19222 Linearize.linearize_block
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R19381 Coq.Init.Logic "x = y" type_scope
R19374 Maps "a !! b"
R19363 Linearize.reachable
R19383 Coq.Init.Datatypes.true
R19381 Coq.Init.Logic "x = y" type_scope
R19374 Maps "a !! b"
R19363 Linearize.reachable
R19383 Coq.Init.Datatypes.true
R19401 Linearizeproof.reachable_correct_2
R19401 Linearizeproof.reachable_correct_2
R19460 Linearizeproof.valid_outcome
R19477 LTL.Cont
R19460 Linearizeproof.valid_outcome
R19477 LTL.Cont
R19500 Linearizeproof.exec_blocks_valid_outcome
R19500 Linearizeproof.exec_blocks_valid_outcome
R19700 Linear.exec_trans
R19700 Linear.exec_trans
R19803 Coq.Init.Logic "x = y" type_scope
R19782 Maps "a !! b"
R19786 LTL.fn_entrypoint
R19771 Linearize.reachable
R19805 Coq.Init.Datatypes.true
R19803 Coq.Init.Logic "x = y" type_scope
R19782 Maps "a !! b"
R19786 LTL.fn_entrypoint
R19771 Linearize.reachable
R19805 Coq.Init.Datatypes.true
R19822 Linearizeproof.reachable_entrypoint
R19822 Linearizeproof.reachable_entrypoint
R19859 Linearizeproof.valid_outcome
R19875 LTL.Return
R19859 Linearizeproof.valid_outcome
R19875 LTL.Return
R19912 Linearizeproof.valid_outcome
R19929 LTL.Cont
R19935 LTL.fn_entrypoint
R19912 Linearizeproof.valid_outcome
R19929 LTL.Cont
R19935 LTL.fn_entrypoint
R19966 Linearizeproof.exec_blocks_valid_outcome
R19966 Linearizeproof.exec_blocks_valid_outcome
R20010 Coq.Init.Logic "'exists' x , p" type_scope
R20051 Coq.Init.Logic "x = y" type_scope
R20020 Linear.fn_code
R20029 Linearize.linearize_function
R20078 Coq.Lists.List "x :: y" list_scope
R20053 Linear.Llabel
R20063 LTL.fn_entrypoint
R20010 Coq.Init.Logic "'exists' x , p" type_scope
R20051 Coq.Init.Logic "x = y" type_scope
R20020 Linear.fn_code
R20029 Linearize.linearize_function
R20078 Coq.Lists.List "x :: y" list_scope
R20053 Linear.Llabel
R20063 LTL.fn_entrypoint
R20134 Linearizeproof.enumerate_head
R20134 Linearizeproof.enumerate_head
R20247 Linearize.linearize_block
R20266 Linearize.linearize_body
R20247 Linearize.linearize_block
R20266 Linearize.linearize_body
R20391 Coq.Init.Logic "x = y" type_scope
R20329 Linear.find_label
R20359 Linear.fn_code
R20368 Linearize.linearize_function
R20341 LTL.fn_entrypoint
R20405 Coq.Init.Datatypes.Some
R20391 Coq.Init.Logic "x = y" type_scope
R20329 Linear.find_label
R20359 Linear.fn_code
R20368 Linearize.linearize_function
R20341 LTL.fn_entrypoint
R20405 Coq.Init.Datatypes.Some
R20445 Coqlib.peq_true
R20445 Coqlib.peq_true
R20483 Coq.Init.Logic.refl_equal
R20483 Coq.Init.Logic.refl_equal
R20596 Linearizeproof.cleanup_function_correct
R20596 Linearizeproof.cleanup_function_correct
R20664 Linear.exec_trans
R20664 Linear.exec_trans
R20684 Linear.exec_one
R20684 Linear.exec_one
R20722 Linearizeproof.unique_labels_lin_function
R20722 Linearizeproof.unique_labels_lin_function
R20872 Linear.exec_program
R20893 Linearize.transf_program
R20846 LTL.exec_program
R20838 Values.val
R20821 LTL.program
R21008 Linearize.transf_function
R21008 Linearize.transf_function
R21102 AST.prog_main
R21066 AST.prog_main
R21077 Linearize.transf_program
R21102 AST.prog_main
R21066 AST.prog_main
R21077 Linearize.transf_program
R21126 Linearizeproof.symbols_preserved
R21126 Linearizeproof.symbols_preserved
R21166 Linearizeproof.function_ptr_translated
R21166 Linearizeproof.function_ptr_translated
R21227 Linearizeproof.transf_function_correct
R21227 Linearizeproof.transf_function_correct
R21286 Globalenvs.init_mem_transf
R21286 Globalenvs.init_mem_transf
FLinearizetyping
R368 Linear.function
R394 Lineartyping.function_bounds
R513 Coq.ZArith.BinInt "x <= y" Z_scope
R516 Lineartyping.max_over_list
R496 Coq.Lists.List.In
R478 Coq.Lists.List.list
R471 Coq.ZArith.BinInt.Z
R695 Coq.Init.Logic "A /\ B" type_scope
R690 Coq.ZArith.BinInt "x <= y" Z_scope
R716 Coq.ZArith.BinInt "x <= y" Z_scope
R699 Coq.Lists.List.In
R630 Coq.Lists.List.fold_left
R652 Coq.ZArith.Zmin.Zmax
R695 Coq.Init.Logic "A /\ B" type_scope
R690 Coq.ZArith.BinInt "x <= y" Z_scope
R716 Coq.ZArith.BinInt "x <= y" Z_scope
R699 Coq.Lists.List.In
R630 Coq.Lists.List.fold_left
R652 Coq.ZArith.Zmin.Zmax
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R796 Coq.ZArith.Zmin.Zmax
R796 Coq.ZArith.Zmin.Zmax
R857 Coq.ZArith.Zmin.Zmax
R841 Coq.ZArith.Zorder.Zle_trans
R857 Coq.ZArith.Zmin.Zmax
R841 Coq.ZArith.Zorder.Zle_trans
R881 Coq.ZArith.Zmin.Zmax1
R881 Coq.ZArith.Zmin.Zmax1
R961 Coq.ZArith.Zmin.Zmax
R945 Coq.ZArith.Zorder.Zle_trans
R961 Coq.ZArith.Zmin.Zmax
R945 Coq.ZArith.Zorder.Zle_trans
R990 Coq.ZArith.Zmin.Zmax2
R990 Coq.ZArith.Zmin.Zmax2
R1147 Coq.ZArith.BinInt "x <= y" Z_scope
R1150 Lineartyping.max_over_instrs
R1120 Coq.Lists.List.In
R1128 Linear.fn_code
R1112 Coq.ZArith.BinInt.Z
R1097 Linear.instruction
R1221 Linearizetyping.max_over_list_bound
R1221 Linearizetyping.max_over_list_bound
R1379 Coq.ZArith.BinInt "x <= y" Z_scope
R1382 Lineartyping.max_over_regs_of_funct
R1344 Coq.Lists.List.In
R1350 Lineartyping.regs_of_instr
R1324 Coq.Lists.List.In
R1332 Linear.fn_code
R1314 Coq.ZArith.BinInt.Z
R1306 Locations.mreg
R1486 Lineartyping.max_over_regs_of_instr
R1470 Coq.ZArith.Zorder.Zle_trans
R1486 Lineartyping.max_over_regs_of_instr
R1470 Coq.ZArith.Zorder.Zle_trans
R1557 Linearizetyping.max_over_list_bound
R1557 Linearizetyping.max_over_list_bound
R1592 Linearizetyping.max_over_instrs_bound
R1592 Linearizetyping.max_over_instrs_bound
R1754 Coq.ZArith.BinInt "x <= y" Z_scope
R1757 Lineartyping.max_over_slots_of_funct
R1718 Coq.Lists.List.In
R1724 Lineartyping.slots_of_instr
R1698 Coq.Lists.List.In
R1706 Linear.fn_code
R1688 Coq.ZArith.BinInt.Z
R1680 Locations.slot
R1863 Lineartyping.max_over_slots_of_instr
R1847 Coq.ZArith.Zorder.Zle_trans
R1863 Lineartyping.max_over_slots_of_instr
R1847 Coq.ZArith.Zorder.Zle_trans
R1936 Linearizetyping.max_over_list_bound
R1936 Linearizetyping.max_over_list_bound
R1971 Linearizetyping.max_over_instrs_bound
R1971 Linearizetyping.max_over_instrs_bound
R2123 Coq.ZArith.BinInt "x < y" Z_scope
R2099 Conventions.index_int_callee_save
R2125 Lineartyping.bound_int_callee_save
R2071 Coq.Lists.List.In
R2077 Lineartyping.regs_of_instr
R2051 Coq.Lists.List.In
R2059 Linear.fn_code
R2192 Lineartyping.int_callee_save
R2173 Coq.ZArith.Zorder.Zlt_le_trans
R2192 Lineartyping.int_callee_save
R2173 Coq.ZArith.Zorder.Zlt_le_trans
R2307 Linearizetyping.max_over_regs_of_funct_bound
R2307 Linearizetyping.max_over_regs_of_funct_bound
R2471 Coq.ZArith.BinInt "x < y" Z_scope
R2445 Conventions.index_float_callee_save
R2473 Lineartyping.bound_float_callee_save
R2417 Coq.Lists.List.In
R2423 Lineartyping.regs_of_instr
R2397 Coq.Lists.List.In
R2405 Linear.fn_code
R2542 Lineartyping.float_callee_save
R2523 Coq.ZArith.Zorder.Zlt_le_trans
R2542 Lineartyping.float_callee_save
R2523 Coq.ZArith.Zorder.Zlt_le_trans
R2663 Linearizetyping.max_over_regs_of_funct_bound
R2663 Linearizetyping.max_over_regs_of_funct_bound
R2820 Coq.ZArith.BinInt "x < y" Z_scope
R2822 Lineartyping.bound_int_local
R2772 Coq.Lists.List.In
R2793 Lineartyping.slots_of_instr
R2776 Locations.Local
R2786 AST.Tint
R2752 Coq.Lists.List.In
R2760 Linear.fn_code
R2883 Lineartyping.int_local
R2894 Locations.Local
R2904 AST.Tint
R2864 Coq.ZArith.Zorder.Zlt_le_trans
R2883 Lineartyping.int_local
R2894 Locations.Local
R2904 AST.Tint
R2864 Coq.ZArith.Zorder.Zlt_le_trans
R2994 Linearizetyping.max_over_slots_of_funct_bound
R2994 Linearizetyping.max_over_slots_of_funct_bound
R3156 Coq.ZArith.BinInt "x < y" Z_scope
R3158 Lineartyping.bound_float_local
R3106 Coq.Lists.List.In
R3129 Lineartyping.slots_of_instr
R3110 Locations.Local
R3120 AST.Tfloat
R3086 Coq.Lists.List.In
R3094 Linear.fn_code
R3221 Lineartyping.float_local
R3234 Locations.Local
R3244 AST.Tfloat
R3202 Coq.ZArith.Zorder.Zlt_le_trans
R3221 Lineartyping.float_local
R3234 Locations.Local
R3244 AST.Tfloat
R3202 Coq.ZArith.Zorder.Zlt_le_trans
R3340 Linearizetyping.max_over_slots_of_funct_bound
R3340 Linearizetyping.max_over_slots_of_funct_bound
R3515 Coq.ZArith.BinInt "x <= y" Z_scope
R3501 Coq.ZArith.BinInt "x + y" Z_scope
R3503 Locations.typesize
R3518 Lineartyping.bound_outgoing
R3452 Coq.Lists.List.In
R3474 Lineartyping.slots_of_instr
R3456 Locations.Outgoing
R3432 Coq.Lists.List.In
R3440 Linear.fn_code
R3586 Lineartyping.outgoing_slot
R3601 Locations.Outgoing
R3565 Coq.ZArith.BinInt "x + y" Z_scope
R3567 Locations.typesize
R3586 Lineartyping.outgoing_slot
R3601 Locations.Outgoing
R3565 Coq.ZArith.BinInt "x + y" Z_scope
R3567 Locations.typesize
R3673 Coqlib.Zmax_bound_r
R3673 Coqlib.Zmax_bound_r
R3693 Coqlib.Zmax_bound_r
R3693 Coqlib.Zmax_bound_r
R3717 Linearizetyping.max_over_slots_of_funct_bound
R3717 Linearizetyping.max_over_slots_of_funct_bound
R3864 Coq.ZArith.BinInt "x <= y" Z_scope
R3845 Conventions.size_arguments
R3867 Lineartyping.bound_outgoing
R3809 Coq.Lists.List.In
R3831 Linear.fn_code
R3813 Linear.Lcall
R3936 Lineartyping.outgoing_space
R3952 Linear.Lcall
R3910 Conventions.size_arguments
R3936 Lineartyping.outgoing_space
R3952 Linear.Lcall
R3910 Conventions.size_arguments
R4022 Coqlib.Zmax_bound_r
R4022 Coqlib.Zmax_bound_r
R4042 Coqlib.Zmax_bound_l
R4042 Coqlib.Zmax_bound_l
R4064 Linearizetyping.max_over_instrs_bound
R4064 Linearizetyping.max_over_instrs_bound
R4201 Lineartyping.mreg_bounded
R4173 Coq.Lists.List.In
R4179 Lineartyping.regs_of_instr
R4153 Coq.Lists.List.In
R4161 Linear.fn_code
R4266 Locations.mreg_type
R4266 Locations.mreg_type
R4289 Linearizetyping.int_callee_save_bound
R4289 Linearizetyping.int_callee_save_bound
R4328 Linearizetyping.float_callee_save_bound
R4328 Linearizetyping.float_callee_save_bound
R4506 Lineartyping.slot_bounded
R4520 Linearize.transf_function
R4474 LTLtyping.slot_bounded
R4445 Coq.Lists.List.In
R4451 Lineartyping.slots_of_instr
R4407 Coq.Lists.List.In
R4433 Linear.fn_code
R4413 Linearize.transf_function
R4635 Linearizetyping.int_local_slot_bound
R4635 Linearizetyping.int_local_slot_bound
R4690 Linearizetyping.float_local_slot_bound
R4690 Linearizetyping.float_local_slot_bound
R4793 Linearizetyping.outgoing_slot_bound
R4793 Linearizetyping.outgoing_slot_bound
R4998 Coq.Lists.List.In
R5004 Linearize.cleanup_code
R4988 Coq.Lists.List.In
R4938 Linear.Lgoto
R4949 Coq.Init.Logic.False
R4962 Coq.Init.Logic.True
R5077 Coq.Lists.List.In
R5085 Coq.Lists.List "x :: y" list_scope
R5088 Linearize.cleanup_code
R5077 Coq.Lists.List.In
R5085 Coq.Lists.List "x :: y" list_scope
R5088 Linearize.cleanup_code
R5163 Coq.Lists.List.in_cons
R5163 Coq.Lists.List.in_cons
R5209 Coq.Lists.List.In
R5215 Linearize.cleanup_code
R5209 Coq.Lists.List.In
R5215 Linearize.cleanup_code
R5291 Linearize.starts_with
R5291 Linearize.starts_with
R5321 Coq.Lists.List.in_cons
R5321 Coq.Lists.List.in_cons
R5490 Coq.Lists.List.In
R5516 Linear.fn_code
R5496 Linearize.transf_function
R5452 Linear.Lgoto
R5463 Coq.Init.Logic.False
R5476 Coq.Init.Logic.True
R5396 Coq.Lists.List.In
R5425 Linear.fn_code
R5402 Linearize.linearize_function
R5621 Linearizetyping.cleanup_code_conservation
R5621 Linearizetyping.cleanup_code_conservation
R5735 Coq.Lists.List.In
R5710 Coq.Lists.List.In
R5716 Linearize.cleanup_code
R5826 Coq.Init.Logic "A \/ B" type_scope
R5822 Coq.Init.Logic "x = y" type_scope
R5829 Coq.Lists.List.In
R5790 Coq.Lists.List.In
R5798 Coq.Lists.List "x :: y" list_scope
R5801 Linearize.cleanup_code
R5826 Coq.Init.Logic "A \/ B" type_scope
R5822 Coq.Init.Logic "x = y" type_scope
R5829 Coq.Lists.List.In
R5790 Coq.Lists.List.In
R5798 Coq.Lists.List "x :: y" list_scope
R5801 Linearize.cleanup_code
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R5892 Linearize.starts_with
R5892 Linearize.starts_with
R6024 Coq.Lists.List.In
R6053 Linear.fn_code
R6030 Linearize.linearize_function
R5984 Coq.Lists.List.In
R6010 Linear.fn_code
R5990 Linearize.transf_function
R6094 Linearizetyping.cleanup_code_conservation_2
R6094 Linearizetyping.cleanup_code_conservation_2
R6217 Coq.Lists.List.incl_tl
R6225 Coq.Lists.List.incl_refl
R6330 Coq.Lists.List.incl
R6316 Coq.Lists.List.incl
R6302 Coq.Lists.List.incl
R6291 Coq.Lists.List.list
R6291 Coq.Lists.List.list
R6291 Coq.Lists.List.list
R6418 Coq.Lists.List.incl
R6426 Linearize.linearize_block
R6503 Linearize.starts_with
R6503 Linearize.starts_with
R6772 Lineartyping.wt_instr
R6782 Linearize.transf_function
R6742 Coq.Lists.List.In
R6748 Linearize.linearize_block
R6677 Coq.Lists.List.incl
R6728 Linear.fn_code
R6705 Linearize.linearize_function
R6683 Linearize.linearize_block
R6659 LTLtyping.wt_block
R6608 Lineartyping.wt_instr
R6618 Linearize.transf_function
R6598 Coq.Lists.List.In
R6860 Linearizetyping.cleanup_function_conservation
R6935 Coq.Init.Logic.I
R6923 Coq.Lists.List.in_eq
R6860 Linearizetyping.cleanup_function_conservation
R6935 Coq.Init.Logic.I
R6923 Coq.Lists.List.in_eq
R6860 Linearizetyping.cleanup_function_conservation
R6935 Coq.Init.Logic.I
R6923 Coq.Lists.List.in_eq
R6860 Linearizetyping.cleanup_function_conservation
R6935 Coq.Init.Logic.I
R6923 Coq.Lists.List.in_eq
R6860 Linearizetyping.cleanup_function_conservation
R6935 Coq.Init.Logic.I
R6923 Coq.Lists.List.in_eq
R6860 Linearizetyping.cleanup_function_conservation
R6935 Coq.Init.Logic.I
R6923 Coq.Lists.List.in_eq
R6860 Linearizetyping.cleanup_function_conservation
R6935 Coq.Init.Logic.I
R6923 Coq.Lists.List.in_eq
R6860 Linearizetyping.cleanup_function_conservation
R6935 Coq.Init.Logic.I
R6923 Coq.Lists.List.in_eq
R6860 Linearizetyping.cleanup_function_conservation
R6935 Coq.Init.Logic.I
R6923 Coq.Lists.List.in_eq
R6860 Linearizetyping.cleanup_function_conservation
R6935 Coq.Init.Logic.I
R6923 Coq.Lists.List.in_eq
R7064 Linearizetyping.slot_is_bounded
R7064 Linearizetyping.slot_is_bounded
R7125 Linearizetyping.mreg_is_bounded
R7125 Linearizetyping.mreg_is_bounded
R7231 Linearizetyping.slot_is_bounded
R7231 Linearizetyping.slot_is_bounded
R7346 Linearizetyping.mreg_is_bounded
R7346 Linearizetyping.mreg_is_bounded
R7455 Linearizetyping.mreg_is_bounded
R7455 Linearizetyping.mreg_is_bounded
R7556 Linearizetyping.mreg_is_bounded
R7556 Linearizetyping.mreg_is_bounded
R7651 Linearizetyping.mreg_is_bounded
R7651 Linearizetyping.mreg_is_bounded
R7782 Linearizetyping.size_arguments_bound
R7782 Linearizetyping.size_arguments_bound
R7865 Linearize.starts_with
R7865 Linearize.starts_with
R8359 Lineartyping.wt_instr
R8369 Linearize.transf_function
R8327 Coq.Lists.List.In
R8333 Linearize.linearize_body
R8260 Coq.Lists.List.incl
R8313 Linear.fn_code
R8290 Linearize.linearize_function
R8266 Linearize.linearize_body
R8214 LTLtyping.wt_function
R8489 Maps "a ! b"
R8476 LTL.fn_code
R8489 Maps "a ! b"
R8476 LTL.fn_code
R8589 Linearize.linearize_body
R8564 Linearizetyping.wt_linearize_block
R8589 Linearize.linearize_body
R8564 Linearizetyping.wt_linearize_block
R8665 Linearize.linearize_block
R8684 Linearize.linearize_body
R8648 Linearizetyping.incl_trans
R8665 Linearize.linearize_block
R8684 Linearize.linearize_body
R8648 Linearizetyping.incl_trans
R8717 Linearizetyping.linearize_block_incl
R8717 Linearizetyping.linearize_block_incl
R8945 Lineartyping.wt_function
R8958 Linearize.transf_function
R8916 LTLtyping.wt_function
R9041 Linearize.enumerate
R9017 Linearizetyping.wt_linearize_body
R9041 Linearize.enumerate
R9017 Linearizetyping.wt_linearize_body
R9076 Coq.Lists.List.incl_refl
R9076 Coq.Lists.List.incl_refl
R9095 Linearizetyping.cleanup_function_conservation_2
R9095 Linearizetyping.cleanup_function_conservation_2
R9229 Lineartyping.wt_program
R9254 Linearize.transf_program
R9201 LTLtyping.wt_program
R9185 LTL.program
R9317 AST.transform_program_function
R9344 Linearize.transf_function
R9317 AST.transform_program_function
R9344 Linearize.transf_function
R9411 Linearizetyping.wt_transf_function
R9411 Linearizetyping.wt_transf_function
FMach
R303 Coq.NArith.BinPos.positive
R373 Locations.mreg
R366 AST.typ
R359 Integers.int
R423 AST.typ
R416 Integers.int
R408 Locations.mreg
R471 Locations.mreg
R464 AST.typ
R457 Integers.int
R526 Locations.mreg
R513 Coq.Lists.List.list
R518 Locations.mreg
R500 Op.operation
R600 Locations.mreg
R587 Coq.Lists.List.list
R592 Locations.mreg
R573 Op.addressing
R557 AST.memory_chunk
R675 Locations.mreg
R662 Coq.Lists.List.list
R667 Locations.mreg
R648 Op.addressing
R632 AST.memory_chunk
R724 Coq.Init.Datatypes "x + y" type_scope
R719 Locations.mreg
R726 AST.ident
R706 AST.signature
R759 Mach.label
R791 Mach.label
R849 Mach.label
R836 Coq.Lists.List.list
R841 Locations.mreg
R823 Op.condition
R916 Coq.Lists.List.list
R921 Mach.instruction
R982 AST.signature
R1006 Mach.code
R1030 Coq.ZArith.BinInt.Z
R1051 Coq.ZArith.BinInt.Z
R1079 AST.program
R1091 Mach.function
R1121 Globalenvs.t
R1128 Mach.function
R1200 Locations.mreg
R1225 Locations.mreg_eq
R1330 Mem.block_contents
R1373 Mem.empty_block
R1440 AST.Tint
R1448 Mem.Size32
R1457 AST.Tfloat
R1467 Mem.Size64
R1416 AST.typ
R1521 Values.val
R1516 Coq.ZArith.BinInt.Z
R1509 AST.typ
R1500 Mach.frame
R1655 Coq.Init.Logic "x = y" type_scope
R1657 Mem.load_contents
R1709 Coq.ZArith.BinInt "x + y" Z_scope
R1704 Mem.low
R1689 Mem.contents
R1672 Mach.mem_type
R1639 Coq.ZArith.BinInt "x <= y" Z_scope
R1621 Coq.ZArith.BinInt "x + y" Z_scope
R1615 Coq.ZArith.BinInt "x + y" Z_scope
R1610 Mem.low
R1625 Coq.ZArith.BinInt "x * y" Z_scope
R1627 Locations.typesize
R1590 Coq.ZArith.BinInt "x <= y" Z_scope
R1807 Coq.Init.Logic "x = y" type_scope
R1784 Mem.size_mem
R1794 Mach.mem_type
R1811 Coq.ZArith.BinInt "x * y" Z_scope
R1813 Locations.typesize
R2187 Coq.Init.Logic "x = y" type_scope
R2123 Mem.store_contents
R2176 Coq.ZArith.BinInt "x + y" Z_scope
R2171 Mem.low
R2156 Mem.contents
R2139 Mach.mem_type
R2189 Mem.Undef
R2097 Coq.Init.Logic "A \/ B" type_scope
R2086 Coq.ZArith.BinInt "x < y" Z_scope
R2092 Mem.low
R2102 Coq.ZArith.BinInt "x >= y" Z_scope
R2109 Mem.high
R2059 Coq.Init.Logic "x = y" type_scope
R2047 Mem.contents
R2061 Mem.Undef
R2022 Coq.Init.Logic "A \/ B" type_scope
R2011 Coq.ZArith.BinInt "x < y" Z_scope
R2017 Mem.low
R2027 Coq.ZArith.BinInt "x >= y" Z_scope
R2034 Mem.high
R1988 Coq.ZArith.BinInt "x <= y" Z_scope
R1970 Coq.ZArith.BinInt "x + y" Z_scope
R1964 Coq.ZArith.BinInt "x + y" Z_scope
R1959 Mem.low
R1974 Coq.ZArith.BinInt "x * y" Z_scope
R1976 Locations.typesize
R1943 Coq.ZArith.BinInt "x <= y" Z_scope
R1932 Coq.Init.Logic "x = y" type_scope
R1926 Mem.high
R2258 Mem.low
R2267 Mem.high
R2220 Mem.store_contents_undef_outside
R2258 Mem.low
R2267 Mem.high
R2220 Mem.store_contents_undef_outside
R2287 Mach.size_mem_type
R2287 Mach.size_mem_type
R2395 Mach.frame
R2388 Values.val
R2383 Coq.ZArith.BinInt.Z
R2376 AST.typ
R2367 Mach.frame
R2588 Mem.mkblock
R2700 Mach.set_slot_undef_outside
R2745 Mem.undef_outside
R2626 Mem.store_contents
R2679 Coq.ZArith.BinInt "x + y" Z_scope
R2674 Mem.low
R2659 Mem.contents
R2642 Mach.mem_type
R2609 Mem.high
R2600 Mem.low
R2545 Coq.ZArith.BinInt "x <= y" Z_scope
R2527 Coq.ZArith.BinInt "x + y" Z_scope
R2521 Coq.ZArith.BinInt "x + y" Z_scope
R2516 Mem.low
R2531 Coq.ZArith.BinInt "x * y" Z_scope
R2533 Locations.typesize
R2494 Coq.ZArith.BinInt "x <= y" Z_scope
R2477 Coq.Init.Logic "x = y" type_scope
R2471 Mem.high
R2805 Mem.empty_block
R2818 Coq.ZArith.BinInt "- x" Z_scope
R2823 Mach.fn_framesize
R2790 Mach.function
R2863 Mach.t
R2872 Values.val
R2900 Coq.Lists.List.map
R2954 Mach.set
R3060 Coq.Init.Datatypes.bool
R3091 Mach.Mlabel
R3109 Coqlib.peq
R3137 Coq.Init.Datatypes.false
R3127 Coq.Init.Datatypes.true
R3152 Coq.Init.Datatypes.false
R3045 Mach.instruction
R3030 Mach.label
R3215 Mach.is_label
R3269 Coq.Init.Logic "x <> y" type_scope
R3272 Mach.Mlabel
R3245 Coq.Init.Logic "x = y" type_scope
R3247 Mach.Mlabel
R3351 Coqlib.peq
R3351 Coqlib.peq
R3444 Coq.Init.Datatypes.option
R3451 Mach.code
R3425 Mach.code
R3414 Mach.label
R3478 Coq.Lists.List.nil
R3485 Coq.Init.Datatypes.None
R3497 Coq.Lists.List "x :: y" list_scope
R3509 Mach.is_label
R3530 Coq.Init.Datatypes.Some
R3425 Mach.code
R3414 Mach.label
R3599 Mach.genv
R3666 Coq.Init.Datatypes.option
R3673 Mach.function
R3706 Coq.Init.Datatypes.inl
R3715 Globalenvs.find_funct
R3745 Coq.Init.Datatypes.inr
R3769 Globalenvs.find_symbol
R3807 Coq.Init.Datatypes.None
R3815 Coq.Init.Datatypes.None
R3828 Coq.Init.Datatypes.Some
R3838 Globalenvs.find_funct_ptr
R3656 Mach.regset
R3642 Coq.Init.Datatypes "x + y" type_scope
R3637 Locations.mreg
R3644 AST.ident
R4010 Mem.mem
R4001 Mach.frame
R3991 Mach.regset
R3983 Mach.code
R3970 Mem.mem
R3961 Mach.frame
R3951 Mach.regset
R3943 Mach.code
R3928 Mach.frame
R3921 Values.val
R3909 Mach.function
R6798 Mem.mem
R6789 Mach.frame
R6779 Mach.regset
R6771 Mach.code
R6758 Mem.mem
R6749 Mach.frame
R6739 Mach.regset
R6731 Mach.code
R6716 Mach.frame
R6709 Values.val
R6697 Mach.function
R7464 Mem.mem
R7454 Mach.regset
R7447 Mem.mem
R7437 Mach.regset
R7424 Values.val
R7417 Values.val
R7408 Mach.frame
R7396 Mach.function
R8001 Mem.mem
R7991 Mach.regset
R7984 Mem.mem
R7974 Mach.regset
R7965 Mach.frame
R7953 Mach.function
R4140 Coq.Lists.List "x :: y" list_scope
R4129 Mach.Mlabel
R4397 Mach "a # b <- c"
R4361 Coq.Lists.List "x :: y" list_scope
R4340 Mach.Mgetstack
R4256 Mach.get_slot
R4272 Integers.signed
R4605 Coq.Lists.List "x :: y" list_scope
R4584 Mach.Msetstack
R4489 Mach.set_slot
R4505 Integers.signed
R4867 Mach "a # b <- c"
R4831 Coq.Lists.List "x :: y" list_scope
R4810 Mach.Mgetparam
R4722 Mach.get_slot
R4742 Integers.signed
R5097 Mach "a # b <- c"
R5061 Coq.Lists.List "x :: y" list_scope
R5045 Mach.Mop
R4986 Coq.Init.Logic "x = y" type_scope
R4953 Op.eval_operation
R4979 Mach "a ## b"
R4988 Coq.Init.Datatypes.Some
R5390 Mach "a # b <- c"
R5354 Coq.Lists.List "x :: y" list_scope
R5328 Mach.Mload
R5269 Coq.Init.Logic "x = y" type_scope
R5249 Mem.loadv
R5271 Coq.Init.Datatypes.Some
R5231 Coq.Init.Logic "x = y" type_scope
R5195 Op.eval_addressing
R5224 Mach "a ## b"
R5233 Coq.Init.Datatypes.Some
R5661 Coq.Lists.List "x :: y" list_scope
R5634 Mach.Mstore
R5574 Coq.Init.Logic "x = y" type_scope
R5544 Mem.storev
R5576 Coq.Init.Datatypes.Some
R5526 Coq.Init.Logic "x = y" type_scope
R5490 Op.eval_addressing
R5519 Mach "a ## b"
R5528 Coq.Init.Datatypes.Some
R5915 Coq.Lists.List "x :: y" list_scope
R5901 Mach.Mcall
R5800 Coq.Init.Logic "x = y" type_scope
R5779 Mach.find_function
R5802 Coq.Init.Datatypes.Some
R6120 Coq.Lists.List "x :: y" list_scope
R6110 Mach.Mgoto
R6050 Coq.Init.Logic "x = y" type_scope
R6023 Mach.find_label
R6041 Mach.fn_code
R6052 Coq.Init.Datatypes.Some
R6399 Coq.Lists.List "x :: y" list_scope
R6379 Mach.Mcond
R6319 Coq.Init.Logic "x = y" type_scope
R6292 Mach.find_label
R6310 Mach.fn_code
R6321 Coq.Init.Datatypes.Some
R6271 Coq.Init.Logic "x = y" type_scope
R6242 Op.eval_condition
R6264 Mach "a ## b"
R6273 Coq.Init.Datatypes.Some
R6278 Coq.Init.Datatypes.true
R6631 Coq.Lists.List "x :: y" list_scope
R6611 Mach.Mcond
R6548 Coq.Init.Logic "x = y" type_scope
R6519 Op.eval_condition
R6541 Mach "a ## b"
R6550 Coq.Init.Datatypes.Some
R6555 Coq.Init.Datatypes.false
R7909 Mem.free
R7837 Coq.Lists.List "x :: y" list_scope
R7829 Mach.Mreturn
R7791 Mach.fn_code
R7722 Values.Vptr
R7732 Integers.repr
R7742 Coq.ZArith.BinInt "- x" Z_scope
R7746 Mach.fn_framesize
R7671 Mach.set_slot
R7684 AST.Tint
R7622 Mach.set_slot
R7646 AST.Tint
R7632 Mach.init_frame
R7601 Coq.Init.Logic "x = y" type_scope
R7570 Mem.alloc
R7587 Mach.fn_stacksize
R7603 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R8135 Values.has_type
R8151 AST.Tint
R8100 Values.has_type
R8118 AST.Tint
R15099 Coq.Init.Logic "A /\ B" type_scope
R15009 Mach.exec_instr
R14996 Mem.mem
R14983 Mach.frame
R14959 Mach.regset
R14947 Mach.code
R14936 Mem.mem
R14924 Mach.frame
R14909 Mach.regset
R14889 Mach.code
R14877 Mach.frame
R14865 Values.val
R14849 Mach.function
R15375 Coq.Init.Logic "A /\ B" type_scope
R15283 Mach.exec_instrs
R15270 Mem.mem
R15257 Mach.frame
R15233 Mach.regset
R15221 Mach.code
R15210 Mem.mem
R15198 Mach.frame
R15183 Mach.regset
R15163 Mach.code
R15151 Mach.frame
R15139 Values.val
R15123 Mach.function
R15574 Coq.Init.Logic "A /\ B" type_scope
R15502 Mach.exec_function_body
R15489 Mem.mem
R15475 Mach.regset
R15455 Mem.mem
R15442 Mach.regset
R15432 Values.val
R15432 Values.val
R15416 Mach.frame
R15399 Mach.function
R15687 Mach.exec_function
R15674 Mem.mem
R15660 Mach.regset
R15640 Mem.mem
R15627 Mach.regset
R15615 Mach.frame
R15598 Mach.function
R14731 Values.has_type
R14747 AST.Tint
R14696 Values.has_type
R14714 AST.Tint
R14682 Values.val
R14682 Values.val
R14604 Mach.exec_function_body
R14571 Values.has_type
R14587 AST.Tint
R14536 Values.has_type
R14554 AST.Tint
R14522 Values.val
R14522 Values.val
R14490 Mem.mem
R14476 Mach.regset
R14454 Mem.mem
R14441 Mach.regset
R14428 Mach.frame
R14408 Mach.function
R14371 Mem.free
R14313 Coq.Lists.List "x :: y" list_scope
R14305 Mach.Mreturn
R14283 Mach.fn_code
R14234 Values.Vptr
R14244 Integers.repr
R14254 Coq.ZArith.BinInt "- x" Z_scope
R14258 Mach.fn_framesize
R14096 Mach.exec_instrs
R14190 Coq.Lists.List "x :: y" list_scope
R14182 Mach.Mreturn
R14160 Mach.fn_code
R14111 Values.Vptr
R14121 Integers.repr
R14131 Coq.ZArith.BinInt "- x" Z_scope
R14135 Mach.fn_framesize
R14058 Mach.set_slot
R14071 AST.Tint
R14007 Mach.set_slot
R14031 AST.Tint
R14017 Mach.init_frame
R13984 Coq.Init.Logic "x = y" type_scope
R13957 Mem.alloc
R13968 Mach.fn_stacksize
R13986 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R13930 Coq.Lists.List.list
R13935 Mach.instruction
R13918 Mach.frame
R13918 Mach.frame
R13918 Mach.frame
R13886 Values.block
R13874 Mem.mem
R13874 Mem.mem
R13857 Mach.regset
R13845 Mem.mem
R13822 Mach.regset
R13811 Values.val
R13811 Values.val
R13793 Mach.frame
R13773 Mach.function
R13589 Mach.exec_instrs
R13472 Mach.exec_instrs
R13458 Mem.mem
R13435 Mach.frame
R13420 Mach.regset
R13407 Mach.code
R13396 Mem.mem
R13383 Mach.frame
R13358 Mach.regset
R13345 Mach.code
R13334 Mem.mem
R13321 Mach.frame
R13306 Mach.regset
R13283 Mach.code
R13270 Mach.frame
R13255 Values.val
R13239 Mach.function
R13069 Mach.exec_instr
R13055 Mem.mem
R13042 Mach.frame
R13017 Mach.regset
R13004 Mach.code
R12993 Mem.mem
R12981 Mach.frame
R12967 Mach.regset
R12945 Mach.code
R12933 Mach.frame
R12918 Values.val
R12902 Mach.function
R12829 Mem.mem
R12817 Mach.frame
R12803 Mach.regset
R12781 Mach.code
R12769 Mach.frame
R12754 Values.val
R12738 Mach.function
R12690 Coq.Lists.List "x :: y" list_scope
R12670 Mach.Mcond
R12631 Coq.Init.Logic "x = y" type_scope
R12600 Op.eval_condition
R12623 Mach "a ## b"
R12633 Coq.Init.Datatypes.Some
R12638 Coq.Init.Datatypes.false
R12586 Mem.mem
R12574 Mach.frame
R12563 Values.val
R12555 Locations.mreg
R12531 Coq.Lists.List.list
R12536 Mach.instruction
R12509 Mach.label
R12491 Coq.Lists.List.list
R12496 Locations.mreg
R12472 Op.condition
R12447 Mach.frame
R12432 Values.val
R12416 Mach.function
R12367 Coq.Lists.List "x :: y" list_scope
R12347 Mach.Mcond
R12311 Coq.Init.Logic "x = y" type_scope
R12284 Mach.find_label
R12300 Mach.fn_code
R12313 Coq.Init.Datatypes.Some
R12261 Coq.Init.Logic "x = y" type_scope
R12230 Op.eval_condition
R12253 Mach "a ## b"
R12263 Coq.Init.Datatypes.Some
R12268 Coq.Init.Datatypes.true
R12215 Mach.code
R12194 Mem.mem
R12182 Mach.frame
R12171 Values.val
R12163 Locations.mreg
R12139 Coq.Lists.List.list
R12144 Mach.instruction
R12117 Mach.label
R12099 Coq.Lists.List.list
R12104 Locations.mreg
R12080 Op.condition
R12055 Mach.frame
R12040 Values.val
R12024 Mach.function
R11975 Coq.Lists.List "x :: y" list_scope
R11965 Mach.Mgoto
R11929 Coq.Init.Logic "x = y" type_scope
R11902 Mach.find_label
R11918 Mach.fn_code
R11931 Coq.Init.Datatypes.Some
R11887 Mach.code
R11866 Mem.mem
R11854 Mach.frame
R11840 Mach.regset
R11816 Coq.Lists.List.list
R11821 Mach.instruction
R11794 Mach.label
R11780 Mach.frame
R11765 Values.val
R11749 Mach.function
R11699 Coq.Lists.List "x :: y" list_scope
R11685 Mach.Mcall
R11595 Mach.exec_function
R11574 Coq.Init.Logic "x = y" type_scope
R11553 Mach.find_function
R11576 Coq.Init.Datatypes.Some
R11539 Mem.mem
R11525 Mach.regset
R11508 Mach.function
R11497 Mem.mem
R11485 Mach.frame
R11461 Mach.regset
R11437 Coq.Lists.List.list
R11442 Mach.instruction
R11423 Coq.Init.Datatypes "x + y" type_scope
R11418 Locations.mreg
R11425 AST.ident
R11390 AST.signature
R11376 Mach.frame
R11361 Values.val
R11345 Mach.function
R11296 Coq.Lists.List "x :: y" list_scope
R11269 Mach.Mstore
R11233 Coq.Init.Logic "x = y" type_scope
R11207 Mem.storev
R11235 Coq.Init.Datatypes.Some
R11187 Coq.Init.Logic "x = y" type_scope
R11149 Op.eval_addressing
R11179 Mach "a ## b"
R11189 Coq.Init.Datatypes.Some
R11135 Values.val
R11125 Mem.mem
R11125 Mem.mem
R11100 Mach.frame
R11089 Values.val
R11081 Locations.mreg
R11057 Coq.Lists.List.list
R11062 Mach.instruction
R11046 Locations.mreg
R11018 Coq.Lists.List.list
R11023 Locations.mreg
R10998 Op.addressing
R10976 AST.memory_chunk
R10950 Mach.frame
R10935 Values.val
R10919 Mach.function
R10879 Mach "a # b <- c"
R10850 Coq.Lists.List "x :: y" list_scope
R10824 Mach.Mload
R10789 Coq.Init.Logic "x = y" type_scope
R10773 Mem.loadv
R10791 Coq.Init.Datatypes.Some
R10753 Coq.Init.Logic "x = y" type_scope
R10715 Op.eval_addressing
R10745 Mach "a ## b"
R10755 Coq.Init.Datatypes.Some
R10701 Values.val
R10701 Values.val
R10689 Mem.mem
R10667 Mach.frame
R10656 Values.val
R10648 Locations.mreg
R10624 Coq.Lists.List.list
R10629 Mach.instruction
R10613 Locations.mreg
R10585 Coq.Lists.List.list
R10590 Locations.mreg
R10565 Op.addressing
R10543 AST.memory_chunk
R10517 Mach.frame
R10502 Values.val
R10486 Mach.function
R10446 Mach "a # b <- c"
R10427 Coq.Lists.List "x :: y" list_scope
R10411 Mach.Mop
R10376 Coq.Init.Logic "x = y" type_scope
R10341 Op.eval_operation
R10368 Mach "a ## b"
R10378 Coq.Init.Datatypes.Some
R10327 Values.val
R10317 Mem.mem
R10305 Mach.frame
R10294 Values.val
R10286 Locations.mreg
R10252 Coq.Lists.List.list
R10257 Mach.instruction
R10241 Locations.mreg
R10223 Coq.Lists.List.list
R10228 Locations.mreg
R10194 Op.operation
R10181 Mach.frame
R10166 Values.val
R10150 Mach.function
R10100 Mach "a # b <- c"
R10081 Coq.Lists.List "x :: y" list_scope
R10060 Mach.Mgetparam
R9996 Mach.get_slot
R10016 Integers.signed
R9982 Values.val
R9972 Mem.mem
R9960 Mach.frame
R9936 Mach.regset
R9912 Coq.Lists.List.list
R9917 Mach.instruction
R9901 Locations.mreg
R9889 AST.typ
R9868 Integers.int
R9854 Mach.frame
R9839 Values.val
R9823 Mach.function
R9774 Coq.Lists.List "x :: y" list_scope
R9753 Mach.Msetstack
R9682 Mach.set_slot
R9698 Integers.signed
R9666 Mach.frame
R9654 Mem.mem
R9642 Mach.frame
R9621 Values.val
R9613 Locations.mreg
R9589 Coq.Lists.List.list
R9594 Mach.instruction
R9579 AST.typ
R9568 Integers.int
R9545 Locations.mreg
R9531 Mach.frame
R9516 Values.val
R9500 Mach.function
R9450 Mach "a # b <- c"
R9431 Coq.Lists.List "x :: y" list_scope
R9410 Mach.Mgetstack
R9350 Mach.get_slot
R9366 Integers.signed
R9336 Values.val
R9326 Mem.mem
R9314 Mach.frame
R9290 Mach.regset
R9266 Coq.Lists.List.list
R9271 Mach.instruction
R9255 Locations.mreg
R9243 AST.typ
R9222 Integers.int
R9208 Mach.frame
R9193 Values.val
R9177 Mach.function
R9129 Coq.Lists.List "x :: y" list_scope
R9118 Mach.Mlabel
R9089 Mem.mem
R9077 Mach.frame
R9063 Mach.regset
R9039 Coq.Lists.List.list
R9044 Mach.instruction
R9017 Mach.label
R9003 Mach.frame
R8988 Values.val
R8972 Mach.function
R8938 Mem.mem
R8928 Mach.regset
R8921 Mem.mem
R8911 Mach.regset
R8902 Mach.frame
R8890 Mach.function
R8862 Mem.mem
R8852 Mach.regset
R8845 Mem.mem
R8835 Mach.regset
R8828 Values.val
R8821 Values.val
R8812 Mach.frame
R8785 Mach.function
R8757 Mem.mem
R8748 Mach.frame
R8738 Mach.regset
R8730 Mach.code
R8723 Mem.mem
R8714 Mach.frame
R8689 Mach.regset
R8666 Mach.code
R8642 Mach.frame
R8620 Values.val
R8593 Mach.function
R8757 Mem.mem
R8748 Mach.frame
R8738 Mach.regset
R8730 Mach.code
R8723 Mem.mem
R8714 Mach.frame
R8689 Mach.regset
R8666 Mach.code
R8642 Mach.frame
R8620 Values.val
R8593 Mach.function
R15776 Mach.exec_instr_ind4
R15776 Mach.exec_instr_ind4
R15833 Mach.exec_instrs_ind4
R15833 Mach.exec_instrs_ind4
R15891 Mach.exec_function_body_ind4
R15891 Mach.exec_function_body_ind4
R15949 Mach.exec_function_ind4
R15949 Mach.exec_function_ind4
R16133 Coq.Init.Logic "'exists' x , p" type_scope
R16143 Coq.Init.Logic "'exists' x , p" type_scope
R16153 Coq.Init.Logic "'exists' x , p" type_scope
R16164 Coq.Init.Logic "'exists' x , p" type_scope
R16219 Coq.Init.Logic "A /\ B" type_scope
R16210 Coq.Init.Logic "x = y" type_scope
R16176 Globalenvs.find_symbol
R16199 AST.prog_main
R16212 Coq.Init.Datatypes.Some
R16258 Coq.Init.Logic "A /\ B" type_scope
R16249 Coq.Init.Logic "x = y" type_scope
R16224 Globalenvs.find_funct_ptr
R16251 Coq.Init.Datatypes.Some
R16304 Coq.Init.Logic "A /\ B" type_scope
R16274 Coq.Init.Logic "x = y" type_scope
R16266 Mach.fn_sig
R16276 AST.mksignature
R16293 Coq.Init.Datatypes.Some
R16298 AST.Tint
R16288 Coq.Lists.List.nil
R16369 Coq.Init.Logic "A /\ B" type_scope
R16309 Mach.exec_function
R16341 Mach.init
R16353 Values.Vundef
R16328 Mach.empty_frame
R16413 Coq.Init.Logic "x = y" type_scope
R16378 Conventions.loc_result
R16404 Mach.fn_sig
R16112 Globalenvs.init_mem
R16080 Globalenvs.globalenv
R16053 Values.val
R16040 Mach.program
R16459 Mach.instruction
R16529 Mach.Mlabel
R16621 Mach.Mgetstack
R16598 Coq.Init.Logic "x = y" type_scope
R16586 Locations.mreg_type
R16745 Mach.Msetstack
R16709 Coq.ZArith.BinInt "x <= y" Z_scope
R16712 Integers.signed
R16698 Coq.Init.Logic "x = y" type_scope
R16686 Locations.mreg_type
R16845 Mach.Mgetparam
R16822 Coq.Init.Logic "x = y" type_scope
R16810 Locations.mreg_type
R16949 Mach.Mop
R16963 Coq.Lists.List "x :: y" list_scope
R16966 Coq.Lists.List.nil
R16953 Op.Omove
R16917 Coq.Init.Logic "x = y" type_scope
R16904 Locations.mreg_type
R16919 Locations.mreg_type
R17021 Mach.Mop
R17032 Coq.Lists.List.nil
R17025 Op.Oundef
R17202 Mach.Mop
R17160 Coq.Init.Logic "x = y" type_scope
R17119 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R17120 Coq.Lists.List.map
R17129 Locations.mreg_type
R17145 Locations.mreg_type
R17162 Op.type_of_operation
R17100 Coq.Init.Logic "x <> y" type_scope
R17103 Op.Oundef
R17085 Coq.Init.Logic "x <> y" type_scope
R17088 Op.Omove
R17387 Mach.Mload
R17346 Coq.Init.Logic "x = y" type_scope
R17332 Locations.mreg_type
R17348 Op.type_of_chunk
R17297 Coq.Init.Logic "x = y" type_scope
R17273 Coq.Lists.List.map
R17282 Locations.mreg_type
R17299 Op.type_of_addressing
R17583 Mach.Mstore
R17542 Coq.Init.Logic "x = y" type_scope
R17528 Locations.mreg_type
R17544 Op.type_of_chunk
R17493 Coq.Init.Logic "x = y" type_scope
R17469 Coq.Lists.List.map
R17478 Locations.mreg_type
R17495 Op.type_of_addressing
R17735 Mach.Mcall
R17668 Coq.Init.Datatypes.inl
R17689 Coq.Init.Logic "x = y" type_scope
R17677 Locations.mreg_type
R17691 AST.Tint
R17698 Coq.Init.Datatypes.inr
R17707 Coq.Init.Logic.True
R17798 Mach.Mgoto
R17925 Mach.Mcond
R17881 Coq.Init.Logic "x = y" type_scope
R17857 Coq.Lists.List.map
R17866 Locations.mreg_type
R17883 Op.type_of_condition
R17978 Mach.Mreturn
R18011 Mach.function
R18112 Mach.wt_instr
R18088 Coq.Lists.List.In
R18100 Mach.fn_code
R18174 Coq.ZArith.BinInt "x >= y" Z_scope
R18160 Mach.fn_stacksize
R18226 Coq.ZArith.BinInt "x >= y" Z_scope
R18212 Mach.fn_framesize
R18281 Coq.ZArith.BinInt "x <= y" Z_scope
R18267 Mach.fn_framesize
R18284 Coq.ZArith.BinInt "- x" Z_scope
R18285 Integers.min_signed
R18391 Mach.wt_function
R18363 Coq.Lists.List.In
R18374 AST.prog_funct
R18366 Coq.Init.Datatypes "( x , y , .. , z )" core_scope
R18330 Mach.program
R18485 Values.has_type
R18506 Locations.mreg_type
R18455 Mach.regset
R18585 Mem.Datum32
R18598 Values.has_type
R18613 AST.Tint
R18622 Mem.Datum64
R18635 Values.has_type
R18650 AST.Tfloat
R18666 Coq.Init.Logic.True
R18547 Mem.content
R18735 Mach.wt_content
R18751 Mem.contents
R18704 Mach.frame
R18879 Mach.wt_regset
R18892 Mach "a # b <- c"
R18863 Mach.wt_regset
R18829 Values.has_type
R18845 Locations.mreg_type
R18821 Values.val
R18811 Locations.mreg
R18799 Mach.regset
R18960 Mach.eq
R18960 Mach.eq
R19111 Values.has_type
R19094 Mach.wt_frame
R19068 Mach.get_slot
R19191 Coq.ZArith.BinInt "x + y" Z_scope
R19184 Mem.low
R19191 Coq.ZArith.BinInt "x + y" Z_scope
R19184 Mem.low
R19238 Mem.check_cont
R19262 Mem.contents
R19256 Coq.ZArith.BinInt "x + y" Z_scope
R19238 Mem.check_cont
R19262 Mem.contents
R19256 Coq.ZArith.BinInt "x + y" Z_scope
R19331 Mem.contents
R19331 Mem.contents
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R19399 Mem.check_cont
R19423 Mem.contents
R19417 Coq.ZArith.BinInt "x + y" Z_scope
R19399 Mem.check_cont
R19423 Mem.contents
R19417 Coq.ZArith.BinInt "x + y" Z_scope
R19492 Mem.contents
R19492 Mem.contents
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R19662 Mach.wt_frame
R19639 Values.has_type
R19622 Mach.wt_frame
R19592 Mach.set_slot
R19726 Coq.ZArith.BinInt "x + y" Z_scope
R19719 Mem.low
R19726 Coq.ZArith.BinInt "x + y" Z_scope
R19719 Mem.low
R19859 Coq.Init.Logic "A \/ B" type_scope
R19853 Coq.Init.Logic "x = y" type_scope
R19867 Coq.Init.Logic "x = y" type_scope
R19869 Mem.Cont
R19806 Mem.set_cont
R19859 Coq.Init.Logic "A \/ B" type_scope
R19853 Coq.Init.Logic "x = y" type_scope
R19867 Coq.Init.Logic "x = y" type_scope
R19869 Mem.Cont
R19806 Mem.set_cont
R19949 Coqlib.zeq
R19949 Coqlib.zeq
R20082 Coqlib.zeq
R20082 Coqlib.zeq
R20082 Coqlib.zeq
R20143 Mem.contents
R20137 Coq.ZArith.BinInt "x + y" Z_scope
R20143 Mem.contents
R20137 Coq.ZArith.BinInt "x + y" Z_scope
R20247 Mem.contents
R20241 Coq.ZArith.BinInt "x + y" Z_scope
R20247 Mem.contents
R20241 Coq.ZArith.BinInt "x + y" Z_scope
R20348 Mach.wt_frame
R20358 Mach.init_frame
R20438 Coq.Init.Logic.I
R20438 Coq.Init.Logic.I
R20519 Coq.Lists.List.incl
R20506 Coq.Init.Logic "x = y" type_scope
R20489 Mach.find_label
R20508 Coq.Init.Datatypes.Some
R20591 Mach.is_label
R20591 Mach.is_label
R20654 Coq.Lists.List.incl_tl
R20669 Coq.Lists.List.incl_refl
R20654 Coq.Lists.List.incl_tl
R20669 Coq.Lists.List.incl_refl
R20688 Coq.Lists.List.incl_tl
R20688 Coq.Lists.List.incl_tl
R20749 Mach.program
R20775 Mach.wt_program
R20799 Globalenvs.globalenv
R21187 Coq.Init.Logic "A /\ B" type_scope
R21167 Coq.Lists.List.incl
R21178 Mach.fn_code
R21204 Coq.Init.Logic "A /\ B" type_scope
R21190 Mach.wt_regset
R21207 Mach.wt_frame
R21145 Mach.wt_frame
R21113 Mach.wt_frame
R21080 Mach.wt_regset
R21041 Coq.Lists.List.incl
R21052 Mach.fn_code
R21008 Mach.wt_function
R20983 Mem.mem
R20971 Mach.frame
R20957 Mach.regset
R20945 Mach.code
R20933 Mem.mem
R20921 Mach.frame
R20907 Mach.regset
R20895 Mach.code
R20881 Mach.frame
R20867 Values.val
R20852 Mach.function
R21545 Mach.wt_regset
R21518 Values.has_type
R21534 AST.Tint
R21476 Values.has_type
R21494 AST.Tint
R21439 Mach.wt_frame
R21406 Mach.wt_regset
R21373 Mach.wt_function
R21348 Mem.mem
R21335 Mach.regset
R21324 Mem.mem
R21311 Mach.regset
R21298 Values.val
R21298 Values.val
R21281 Mach.frame
R21262 Mach.function
R21780 Mach.wt_regset
R21758 Mach.wt_frame
R21725 Mach.wt_regset
R21692 Mach.wt_function
R21667 Mem.mem
R21654 Mach.regset
R21643 Mem.mem
R21630 Mach.regset
R21615 Mach.frame
R21596 Mach.function
R21997 Coq.Init.Logic "A /\ B" type_scope
R21942 Mach.exec_instr_prop
R21879 Mach.exec_instr
R22176 Coq.Init.Logic "A /\ B" type_scope
R22121 Mach.exec_instr_prop
R22057 Mach.exec_instrs
R22343 Coq.Init.Logic "A /\ B" type_scope
R22289 Mach.exec_function_body_prop
R22227 Mach.exec_function_body
R22435 Mach.exec_function_prop
R22386 Mach.exec_function
R22494 Mach.exec_mutual_induction
R22550 Mach.wt_function_instrs
R22586 Coq.Lists.List.in_eq
R22494 Mach.exec_mutual_induction
R22550 Mach.wt_function_instrs
R22586 Coq.Lists.List.in_eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R22550 Mach.wt_function_instrs
R22586 Coq.Lists.List.in_eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R22550 Mach.wt_function_instrs
R22586 Coq.Lists.List.in_eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R22550 Mach.wt_function_instrs
R22586 Coq.Lists.List.in_eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R22550 Mach.wt_function_instrs
R22586 Coq.Lists.List.in_eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R22550 Mach.wt_function_instrs
R22586 Coq.Lists.List.in_eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R22550 Mach.wt_function_instrs
R22586 Coq.Lists.List.in_eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R22550 Mach.wt_function_instrs
R22586 Coq.Lists.List.in_eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R22550 Mach.wt_function_instrs
R22586 Coq.Lists.List.in_eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R22550 Mach.wt_function_instrs
R22586 Coq.Lists.List.in_eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R22550 Mach.wt_function_instrs
R22586 Coq.Lists.List.in_eq
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R22550 Mach.wt_function_instrs
R22586 Coq.Lists.List.in_eq
R22550 Mach.wt_function_instrs
R22586 Coq.Lists.List.in_eq
R22550 Mach.wt_function_instrs
R22586 Coq.Lists.List.in_eq
R22550 Mach.wt_function_instrs
R22550 Mach.wt_function_instrs
R22653 Mach.wt_setreg
R22653 Mach.wt_setreg
R22726 Integers.signed
R22705 Mach.wt_get_slot
R22726 Integers.signed
R22705 Mach.wt_get_slot
R22773 Mach.wt_set_slot
R22773 Mach.wt_set_slot
R22846 Mach.wt_setreg
R22846 Mach.wt_setreg
R22908 Integers.signed
R22883 Mach.wt_get_slot
R22908 Integers.signed
R22883 Mach.wt_get_slot
R22940 Mach.wt_setreg
R22940 Mach.wt_setreg
R23142 Values.Vundef
R23142 Values.Vundef
R23188 Locations.mreg_type
R23209 Coq.Init.Datatypes.snd
R23214 Op.type_of_operation
R23188 Locations.mreg_type
R23209 Coq.Init.Datatypes.snd
R23214 Op.type_of_operation
R23277 Mach.function
R23291 Mach "a ## b"
R23248 Op.type_of_operation_sound
R23277 Mach.function
R23291 Mach "a ## b"
R23248 Op.type_of_operation_sound
R23349 Mach.wt_setreg
R23349 Mach.wt_setreg
R23401 Op.type_of_chunk_correct
R23401 Op.type_of_chunk_correct
R23488 Globalenvs.find_funct_prop
R23509 Mach.wt_function
R23488 Globalenvs.find_funct_prop
R23509 Mach.wt_function
R23542 Globalenvs.find_symbol
R23542 Globalenvs.find_symbol
R23576 Globalenvs.find_funct_ptr_prop
R23601 Mach.wt_function
R23576 Globalenvs.find_funct_ptr_prop
R23601 Mach.wt_function
R23647 Mach.incl_find_label
R23647 Mach.incl_find_label
R23688 Mach.incl_find_label
R23688 Mach.incl_find_label
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R23846 Mach.wt_frame
R23846 Mach.wt_frame
R23872 Mach.wt_set_slot
R23872 Mach.wt_set_slot
R23904 Mach.wt_set_slot
R23904 Mach.wt_set_slot
R23934 Mach.wt_init_frame
R23934 Mach.wt_init_frame
R23971 Coq.Lists.List.incl_refl
R23971 Coq.Lists.List.incl_refl
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R-1 Coq.Init.Logic.iff
R-1 Coq.Init.Logic.not
R24030 Values.Vzero
R24024 Values.Vzero
R24030 Values.Vzero
R24024 Values.Vzero
R24044 Coq.Init.Logic.I
R24044 Coq.Init.Logic.I
R24053 Coq.Init.Logic.I
R24053 Coq.Init.Logic.I
R24083 Coq.Init.Logic.I
R24083 Coq.Init.Logic.I
R24092 Coq.Init.Logic.I
R24092 Coq.Init.Logic.I
R24252 Mach.exec_instr_prop
R24189 Mach.exec_instr
R24316 Coq.Init.Logic.proj1
R24322 Mach.subject_reduction
R24496 Mach.exec_instr_prop
R24432 Mach.exec_instrs
R24560 Coq.Init.Logic.proj1
R24567 Coq.Init.Logic.proj2
R24573 Mach.subject_reduction
R24717 Mach.exec_function_prop
R24668 Mach.exec_function
R24767 Coq.Init.Logic.proj2
R24774 Coq.Init.Logic.proj2
R24781 Coq.Init.Logic.proj2
R24787 Mach.subject_reduction
R25023 Mach.get_slot
R25036 AST.Tint
R24996 Mach.get_slot
R25009 AST.Tint
R24979 Coq.ZArith.BinInt "x <= y < z" Z_scope
R24942 Mach.frame
R24942 Mach.frame
R25090 Mach.link_invariant
R25250 Mach.link_invariant
R25238 Coq.ZArith.BinInt "x <= y" Z_scope
R25205 Mach.set_slot
R25370 Mem.contents
R25370 Mem.contents
R25386 Mem.low
R25386 Mem.low
R25422 Mem.load_store_contents_other
R25422 Mem.load_store_contents_other
R25695 Coq.Init.Logic "A /\ B" type_scope
R25675 Coq.Lists.List.incl
R25686 Mach.fn_code
R25698 Mach.link_invariant
R25650 Coq.Lists.List.incl
R25661 Mach.fn_code
R25631 Mach.wt_function
R25572 Mach.exec_instr
R25795 Mach.link_invariant_refl
R25795 Mach.link_invariant_refl
R25795 Mach.link_invariant_refl
R25795 Mach.link_invariant_refl
R25795 Mach.link_invariant_refl
R25795 Mach.link_invariant_refl
R25795 Mach.link_invariant_refl
R25795 Mach.link_invariant_refl
R25795 Mach.link_invariant_refl
R25795 Mach.link_invariant_refl
R25795 Mach.link_invariant_refl
R25795 Mach.link_invariant_refl
R25828 Mach.set_slot_link_invariant
R25828 Mach.set_slot_link_invariant
R25874 Mach.wt_function_instrs
R25907 Coq.Lists.List.in_eq
R25874 Mach.wt_function_instrs
R25907 Coq.Lists.List.in_eq
R25959 Mach.incl_find_label
R25959 Mach.incl_find_label
R25992 Mach.incl_find_label
R25992 Mach.incl_find_label
R26235 Coq.Init.Logic "A /\ B" type_scope
R26215 Coq.Lists.List.incl
R26226 Mach.fn_code
R26238 Mach.link_invariant
R26190 Coq.Lists.List.incl
R26201 Mach.fn_code
R26171 Mach.wt_function
R26111 Mach.exec_instrs
R26313 Mach.link_invariant_refl
R26313 Mach.link_invariant_refl
R26343 Mach.exec_instr_link_invariant
R26343 Mach.exec_instr_link_invariant
